[{"history": {"proof": "", "repairs": [], "exceptions": []}, "chat": [], "original": "intros Phi1 Phi2 xs y H H0. induction xs as [|x xs IH]. -- simpl in *. exists nil. exists nil. split. apply Forall_nil. split. apply Forall_nil. simpl. auto. -- simpl in *. apply Forall_inv_tail in H as H1. specialize (IH H1) as [xs1 [xs2 [H11 [H12 H13]]]]. destruct (H x). - exists (x :: xs1). exists xs2. repeat split. apply Forall_cons; auto. auto. simpl. apply provable_multi_imp_shrink. apply provable_multi_imp_arg_switch2 with (x := x). auto. auto. - exists xs1. exists (x :: xs2). repeat split. auto. apply Forall_cons; auto. simpl. apply provable_multi_imp_weaken with (x := x). auto.", "back_times": 1, "succ": false, "time": 196.10981726646423}]