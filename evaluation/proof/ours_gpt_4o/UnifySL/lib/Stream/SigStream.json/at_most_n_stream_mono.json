[{"history": {"proof": "srun best use: @at_most_n_stream_spec, @at_most_n_stream_Sn, @stream_sound1, inj_lt, fast_Zopp_eq_mult_neg_1, @at_most_n_stream_0 unfold: Z.lt, is_at_most_n_stream, stream_get, is_n_stream.", "repairs": ["hammer"], "exceptions": []}, "chat": [], "original": "intros h n m n_le_m n_h. induction m using le_ind. - apply n_h. - destruct (eq_nat_dec n0 m). ++ subst. apply n_h. ++ apply at_most_n_stream_Sn in n_h. destruct n_h as [h_n | h_m]. -- apply IHm. ** apply le_trans with n0. --- apply le_Sn_le. apply n_le_m. --- apply lt_le_S. omega. ** apply h_n. -- exfalso. eapply n_stream_inf_stream_conflict. --- apply h_m. --- intros contra. right. apply is_inf_stream_construct with n0. apply contra. ++ apply stream_sound1 with n0. -- apply IHm. ** apply le_S. apply n_le_m. ** apply h_n. -- apply at_most_n_stream_Sn in n. destruct n as [h_n1 | h_m1]. -- eapply IHm. apply h_n1. apply le_S. apply n_le_m. -- contradiction.", "back_times": 0, "succ": true, "time": 55.35094332695007}]