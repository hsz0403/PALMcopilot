[{"history": {"proof": "intros A P Q R. split. - intros x H. apply Union_inv in H. destruct H as [H1 | H2]. + apply Union_inv in H1. destruct H1 as [H1 | H1]. * apply Union_introl. apply H1. * apply Union_intror. apply Union_introl. apply H1. + apply Union_intror. apply Union_intror. apply H2. - intros x H. apply Union_inv in H. destruct H as [H1 | H2]. + apply Union_introl. apply Union_introl. apply H1. + apply Union_inv in H2. destruct H2 as [H2 | H2]. * apply Union_introl. apply Union_intror. apply H2. * apply Union_intror. apply H2.", "repairs": ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""], "exceptions": []}, "chat": [], "original": "intros A P Q R. split. - intros x H. apply Union_inv in H. destruct H as [H1 | H2]. + apply Union_inv in H1. destruct H1 as [H1 | H1]. * apply Union_introl. apply H1. * apply Union_intror. apply Union_introl. apply H1. + apply Union_intror. apply Union_intror. apply H2. - intros x H. apply Union_inv in H. destruct H as [H1 | H2]. + apply Union_introl. apply Union_introl. apply H1. + apply Union_inv in H2. destruct H2 as [H2 | H2]. * apply Union_introl. apply Union_intror. apply H2. * apply Union_intror. apply H2.", "back_times": 0, "succ": true, "time": 1.1278278827667236}]