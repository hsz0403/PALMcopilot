[{"history": {"proof": "qsimpl time: 1 use: option_ord_dSA,THeap_order,THeap. qsimpl time: 1 use: option_ord_dSA,THeap_order,THeap_preorder,THeap. qsimpl time: 1 use: THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join. qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join. qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join,option_disj_dSA. qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join,option_disj_dSA. qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_dSA',THeap_preorder,THeap_order,THeap_Join,option_disj_dSA. qsimpl time: 1 use: fun_dSA,THeap_SA,THeap,option_ord_dSA,THeap_dSA',THeap_preorder,THeap_order,THeap_Join,option_disj_dSA. qsimpl time: 1 use: fun_dSA,THeap_SA,THeap,option_ord_dSA,THeap_dSA',THeap_preorder,prod_dSA,THeap_order,THeap_Join,option_disj_dSA. qsimpl time: 1 use: fun_dSA,THeap_SA,THeap,option_ord_dSA,THeap_dSA',THeap_preorder,prod_dSA,THeap_order,THeap_Join,sumAlg_dSA,option_disj_dSA. qsimpl time: 1 use: fun_dSA,THeap_SA,THeap,UpwardsClosure_SA,option_ord_dSA,THeap_dSA',THeap_preorder,prod_dSA,THeap_order,THeap_Join,sumAlg_dSA,option_disj_dSA. qsimpl time: 1 use: fun_dSA,THeap_SA,THeap,UpwardsClosure_SA,option_ord_dSA,THeap_dSA',THeap_preorder,prod_dSA,THeap_order,THeap_Join,sumAlg_dSA,option_disj_dSA. qsimpl time: 1 use: fun_dSA,THeap_SA,THeap,UpwardsClosure_SA,option_ord_dSA,THeap_dSA',THeap_preorder,prod_dSA,THeap_order,THeap_Join,sumAlg_dSA,option_disj_dSA. qsimpl time: 1 use: fun_dSA,THeap_SA,THeap,UpwardsClosure_SA,option_ord_dSA,THeap_dSA',THeap_preorder,prod_dSA,THeap_order,THeap_Join,sumAlg_dSA,UpwardsClosure_DownwardsClosed,option_disj_dSA. qsimpl time: 1 use: fun_dSA,THeap_SA,THeap,UpwardsClosure_SA,option_ord_dSA,THeap_dSA',THeap_preorder,prod_dSA,THeap_order,THeap_Join,sumAlg_dSA,UpwardsClosure_DownwardsClosed,option_disj_dSA. qsimpl time: 1 use: fun_dSA,THeap_SA,unit_dSA,THeap,UpwardsClosure_SA,option_ord_dSA,THeap_dSA',THeap_preorder,prod_dSA,THeap_order,THeap_Join,sumAlg_dSA,UpwardsClosure_DownwardsClosed,option_disj_dSA.", "repairs": ["wrong_type", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify"], "exceptions": [{"ctx": [], "tactic": "apply (option_ord_dSA THeap THeap_order).", "exn": "The term \"THeap_order\" has type \"THeap -> THeap -> Prop\" while it is expected to have type \"DownwardsClosedSeparationAlgebra THeap\".", "type": "wrong_type", "handled": true}, {"ctx": ["qsimpl time: 1 use: option_ord_dSA,THeap_order,THeap."], "tactic": "apply THeap_preorder.", "exn": "In environment H : forall (worlds : Type) (R : Relation worlds), PreOrder Krelation -> forall J : Join worlds, SeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra worlds -> IncreasingSeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra (option worlds) H0 : THeap -> Prop Unable to unify \"PreOrder THeap_order\" with \"DownwardsClosedSeparationAlgebra THeap\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: option_ord_dSA,THeap_order,THeap.", "qsimpl time: 1 use: option_ord_dSA,THeap_order,THeap_preorder,THeap."], "tactic": "apply THeap_Join.", "exn": "In environment P : THeap -> THeap -> Prop H1 : forall (worlds : Type) (R : Relation worlds), PreOrder Krelation -> forall J : Join worlds, SeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra worlds -> IncreasingSeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra (option worlds) H0 : THeap -> Prop PreOrder_Reflexive : Reflexive P PreOrder_Transitive : Transitive P Unable to unify \"Join THeap\" with \"DownwardsClosedSeparationAlgebra THeap\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: option_ord_dSA,THeap_order,THeap.", "qsimpl time: 1 use: option_ord_dSA,THeap_order,THeap_preorder,THeap.", "qsimpl time: 1 use: THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join."], "tactic": "apply THeap_SA.", "exn": "In environment H : forall (worlds : Type) (R : Relation worlds), PreOrder Krelation -> forall J : Join worlds, SeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra worlds -> IncreasingSeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra (option worlds) P : THeap -> THeap -> Prop H0 : THeap -> Prop PreOrder_Reflexive : Reflexive P PreOrder_Transitive : Transitive P PreOrder_Reflexive0 : Reflexive THeap_order PreOrder_Transitive0 : Transitive THeap_order Unable to unify \"SeparationAlgebra THeap\" with \"DownwardsClosedSeparationAlgebra THeap\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: option_ord_dSA,THeap_order,THeap.", "qsimpl time: 1 use: option_ord_dSA,THeap_order,THeap_preorder,THeap.", "qsimpl time: 1 use: THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join.", "qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join."], "tactic": "apply option_disj_dSA.", "exn": "In environment H2 : forall (worlds : Type) (R : Relation worlds), PreOrder Krelation -> forall J : Join worlds, SeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra worlds -> IncreasingSeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra (option worlds) P : THeap -> THeap -> Prop H0 : THeap -> Prop PreOrder_Reflexive : Reflexive P PreOrder_Transitive : Transitive P PreOrder_Reflexive0 : Reflexive THeap_order PreOrder_Transitive0 : Transitive THeap_order join_comm : forall m1 m2 m : THeap, join m1 m2 m -> join m2 m1 m join_assoc : forall mx my mz mxy mxyz : THeap, join mx my mxy -> join mxy mz mxyz -> exists myz : THeap, join my mz myz /\\\\ join mx myz mxyz Unable to unify \"option ?M9907\" with \"THeap\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: option_ord_dSA,THeap_order,THeap.", "qsimpl time: 1 use: option_ord_dSA,THeap_order,THeap_preorder,THeap.", "qsimpl time: 1 use: THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join.", "qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join.", "qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join,option_disj_dSA."], "tactic": "apply THeap_SA.", "exn": "In environment H4 : forall (worlds : Type) (R : Relation worlds) (J : Join worlds), SeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra (option worlds) H1 : forall (worlds : Type) (R : Relation worlds), PreOrder Krelation -> forall J : Join worlds, SeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra worlds -> IncreasingSeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra (option worlds) P : THeap -> THeap -> Prop H0 : THeap -> Prop PreOrder_Reflexive : Reflexive P PreOrder_Transitive : Transitive P PreOrder_Reflexive0 : Reflexive THeap_order PreOrder_Transitive0 : Transitive THeap_order join_comm : forall m1 m2 m : THeap, join m1 m2 m -> join m2 m1 m join_assoc : forall mx my mz mxy mxyz : THeap, join mx my mxy -> join mxy mz mxyz -> exists myz : THeap, join my mz myz /\\\\ join mx myz mxyz Unable to unify \"SeparationAlgebra THeap\" with \"DownwardsClosedSeparationAlgebra THeap\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: option_ord_dSA,THeap_order,THeap.", "qsimpl time: 1 use: option_ord_dSA,THeap_order,THeap_preorder,THeap.", "qsimpl time: 1 use: THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join.", "qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join.", "qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join,option_disj_dSA.", "qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join,option_disj_dSA."], "tactic": "apply THeap_dSA'.", "exn": "In environment H5 : forall (worlds : Type) (R : Relation worlds) (J : Join worlds), SeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra (option worlds) H2 : forall (worlds : Type) (R : Relation worlds), PreOrder Krelation -> forall J : Join worlds, SeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra worlds -> IncreasingSeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra (option worlds) P : THeap -> THeap -> Prop H0 : THeap -> Prop PreOrder_Reflexive : Reflexive P PreOrder_Transitive : Transitive P PreOrder_Reflexive0 : Reflexive THeap_order PreOrder_Transitive0 : Transitive THeap_order join_comm : forall m1 m2 m : THeap, join m1 m2 m -> join m2 m1 m join_assoc : forall mx my mz mxy mxyz : THeap, join mx my mxy -> join mxy mz mxyz -> exists myz : THeap, join my mz myz /\\\\ join mx myz mxyz Unable to unify \"DownwardsClosedSeparationAlgebra THeap'\" with \"DownwardsClosedSeparationAlgebra THeap\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: option_ord_dSA,THeap_order,THeap.", "qsimpl time: 1 use: option_ord_dSA,THeap_order,THeap_preorder,THeap.", "qsimpl time: 1 use: THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join.", "qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join.", "qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join,option_disj_dSA.", "qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join,option_disj_dSA.", "qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_dSA',THeap_preorder,THeap_order,THeap_Join,option_disj_dSA."], "tactic": "apply fun_dSA.", "exn": "In environment H6 : forall (worlds : Type) (R : Relation worlds) (J : Join worlds), SeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra (option worlds) H3 : DownwardsClosedSeparationAlgebra THeap' H1 : forall (worlds : Type) (R : Relation worlds), PreOrder Krelation -> forall J : Join worlds, SeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra worlds -> IncreasingSeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra (option worlds) P : THeap -> THeap -> Prop H0 : THeap -> Prop PreOrder_Reflexive : Reflexive P PreOrder_Transitive : Transitive P PreOrder_Reflexive0 : Reflexive THeap_order PreOrder_Transitive0 : Transitive THeap_order join_comm : forall m1 m2 m : THeap, join m1 m2 m -> join m2 m1 m join_assoc : forall mx my mz mxy mxyz : THeap, join mx my mxy -> join mxy mz mxyz -> exists myz : THeap, join my mz myz /\\\\ join mx myz mxyz Unable to unify \"?M22919 -> ?M22920\" with \"THeap\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: option_ord_dSA,THeap_order,THeap.", "qsimpl time: 1 use: option_ord_dSA,THeap_order,THeap_preorder,THeap.", "qsimpl time: 1 use: THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join.", "qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join.", "qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join,option_disj_dSA.", "qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join,option_disj_dSA.", "qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_dSA',THeap_preorder,THeap_order,THeap_Join,option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,THeap_SA,THeap,option_ord_dSA,THeap_dSA',THeap_preorder,THeap_order,THeap_Join,option_disj_dSA."], "tactic": "apply (discHeap_dSA addr val).", "exn": "The reference val was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["qsimpl time: 1 use: option_ord_dSA,THeap_order,THeap.", "qsimpl time: 1 use: option_ord_dSA,THeap_order,THeap_preorder,THeap.", "qsimpl time: 1 use: THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join.", "qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join.", "qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join,option_disj_dSA.", "qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join,option_disj_dSA.", "qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_dSA',THeap_preorder,THeap_order,THeap_Join,option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,THeap_SA,THeap,option_ord_dSA,THeap_dSA',THeap_preorder,THeap_order,THeap_Join,option_disj_dSA."], "tactic": "apply prod_dSA.", "exn": "In environment H8 : forall (worlds : Type) (R : Relation worlds) (J : Join worlds), SeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra (option worlds) H5 : DownwardsClosedSeparationAlgebra THeap' H4 : forall (worlds : Type) (R : Relation worlds), PreOrder Krelation -> forall J : Join worlds, SeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra worlds -> IncreasingSeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra (option worlds) H : forall (A B : Type) (R_B : Relation B) (J_B : Join B), DownwardsClosedSeparationAlgebra B -> DownwardsClosedSeparationAlgebra (A -> B) P : THeap -> THeap -> Prop H0 : THeap -> Prop PreOrder_Reflexive : Reflexive P PreOrder_Transitive : Transitive P PreOrder_Reflexive0 : Reflexive THeap_order PreOrder_Transitive0 : Transitive THeap_order join_comm : forall m1 m2 m : THeap, join m1 m2 m -> join m2 m1 m join_assoc : forall mx my mz mxy mxyz : THeap, join mx my mxy -> join mxy mz mxyz -> exists myz : THeap, join my mz myz /\\\\ join mx myz mxyz Unable to unify \"(?M28269 * ?M28270)%type\" with \"THeap\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: option_ord_dSA,THeap_order,THeap.", "qsimpl time: 1 use: option_ord_dSA,THeap_order,THeap_preorder,THeap.", "qsimpl time: 1 use: THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join.", "qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join.", "qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join,option_disj_dSA.", "qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join,option_disj_dSA.", "qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_dSA',THeap_preorder,THeap_order,THeap_Join,option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,THeap_SA,THeap,option_ord_dSA,THeap_dSA',THeap_preorder,THeap_order,THeap_Join,option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,THeap_SA,THeap,option_ord_dSA,THeap_dSA',THeap_preorder,prod_dSA,THeap_order,THeap_Join,option_disj_dSA."], "tactic": "apply (monHeap_dSA addr val).", "exn": "The reference val was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["qsimpl time: 1 use: option_ord_dSA,THeap_order,THeap.", "qsimpl time: 1 use: option_ord_dSA,THeap_order,THeap_preorder,THeap.", "qsimpl time: 1 use: THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join.", "qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join.", "qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join,option_disj_dSA.", "qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join,option_disj_dSA.", "qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_dSA',THeap_preorder,THeap_order,THeap_Join,option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,THeap_SA,THeap,option_ord_dSA,THeap_dSA',THeap_preorder,THeap_order,THeap_Join,option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,THeap_SA,THeap,option_ord_dSA,THeap_dSA',THeap_preorder,prod_dSA,THeap_order,THeap_Join,option_disj_dSA."], "tactic": "apply sumAlg_dSA.", "exn": "In environment H10 : forall (worlds : Type) (R : Relation worlds) (J : Join worlds), SeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra (option worlds) H9 : forall (A B : Type) (R_A : Relation A) (R_B : Relation B) (Join_A : Join A) (Join_B : Join B), DownwardsClosedSeparationAlgebra A -> DownwardsClosedSeparationAlgebra B -> DownwardsClosedSeparationAlgebra (A * B) H6 : DownwardsClosedSeparationAlgebra THeap' H3 : forall (worlds : Type) (R : Relation worlds), PreOrder Krelation -> forall J : Join worlds, SeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra worlds -> IncreasingSeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra (option worlds) H1 : forall (A B : Type) (R_B : Relation B) (J_B : Join B), DownwardsClosedSeparationAlgebra B -> DownwardsClosedSeparationAlgebra (A -> B) P : THeap -> THeap -> Prop H0 : THeap -> Prop PreOrder_Reflexive : Reflexive P PreOrder_Transitive : Transitive P PreOrder_Reflexive0 : Reflexive THeap_order PreOrder_Transitive0 : Transitive THeap_order join_comm : forall m1 m2 m : THeap, join m1 m2 m -> join m2 m1 m join_assoc : forall mx my mz mxy mxyz : THeap, join mx my mxy -> join mxy mz mxyz -> exists myz : THeap, join my mz myz /\\\\ join mx myz mxyz Unable to unify \"DownwardsClosedSeparationAlgebra nat\" with \"DownwardsClosedSeparationAlgebra THeap\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: option_ord_dSA,THeap_order,THeap.", "qsimpl time: 1 use: option_ord_dSA,THeap_order,THeap_preorder,THeap.", "qsimpl time: 1 use: THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join.", "qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join.", "qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join,option_disj_dSA.", "qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join,option_disj_dSA.", "qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_dSA',THeap_preorder,THeap_order,THeap_Join,option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,THeap_SA,THeap,option_ord_dSA,THeap_dSA',THeap_preorder,THeap_order,THeap_Join,option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,THeap_SA,THeap,option_ord_dSA,THeap_dSA',THeap_preorder,prod_dSA,THeap_order,THeap_Join,option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,THeap_SA,THeap,option_ord_dSA,THeap_dSA',THeap_preorder,prod_dSA,THeap_order,THeap_Join,sumAlg_dSA,option_disj_dSA."], "tactic": "apply UpwardsClosure_SA.", "exn": "In environment H12 : forall (worlds : Type) (R : Relation worlds) (J : Join worlds), SeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra (option worlds) H11 : DownwardsClosedSeparationAlgebra nat H8 : forall (A B : Type) (R_A : Relation A) (R_B : Relation B) (Join_A : Join A) (Join_B : Join B), DownwardsClosedSeparationAlgebra A -> DownwardsClosedSeparationAlgebra B -> DownwardsClosedSeparationAlgebra (A * B) H5 : DownwardsClosedSeparationAlgebra THeap' H4 : forall (worlds : Type) (R : Relation worlds), PreOrder Krelation -> forall J : Join worlds, SeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra worlds -> IncreasingSeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra (option worlds) H : forall (A B : Type) (R_B : Relation B) (J_B : Join B), DownwardsClosedSeparationAlgebra B -> DownwardsClosedSeparationAlgebra (A -> B) P : THeap -> THeap -> Prop H0 : THeap -> Prop PreOrder_Reflexive : Reflexive P PreOrder_Transitive : Transitive P PreOrder_Reflexive0 : Reflexive THeap_order PreOrder_Transitive0 : Transitive THeap_order join_comm : forall m1 m2 m : THeap, join m1 m2 m -> join m2 m1 m join_assoc : forall mx my mz mxy mxyz : THeap, join mx my mxy -> join mxy mz mxyz -> exists myz : THeap, join my mz myz /\\\\ join mx myz mxyz Unable to unify \"SeparationAlgebra ?worlds\" with \"forall m1 m2 m n1 n2 : THeap, join m1 m2 m -> Krelation n1 m1 -> Krelation n2 m2 -> exists n : THeap, join n1 n2 n /\\\\ Krelation n m\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: option_ord_dSA,THeap_order,THeap.", "qsimpl time: 1 use: option_ord_dSA,THeap_order,THeap_preorder,THeap.", "qsimpl time: 1 use: THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join.", "qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join.", "qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join,option_disj_dSA.", "qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join,option_disj_dSA.", "qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_dSA',THeap_preorder,THeap_order,THeap_Join,option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,THeap_SA,THeap,option_ord_dSA,THeap_dSA',THeap_preorder,THeap_order,THeap_Join,option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,THeap_SA,THeap,option_ord_dSA,THeap_dSA',THeap_preorder,prod_dSA,THeap_order,THeap_Join,option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,THeap_SA,THeap,option_ord_dSA,THeap_dSA',THeap_preorder,prod_dSA,THeap_order,THeap_Join,sumAlg_dSA,option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,THeap_SA,THeap,UpwardsClosure_SA,option_ord_dSA,THeap_dSA',THeap_preorder,prod_dSA,THeap_order,THeap_Join,sumAlg_dSA,option_disj_dSA."], "tactic": "apply THeap_preorder.", "exn": "In environment H14 : forall (worlds : Type) (R : Relation worlds) (J : Join worlds), SeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra (option worlds) H13 : DownwardsClosedSeparationAlgebra nat H10 : forall (A B : Type) (R_A : Relation A) (R_B : Relation B) (Join_A : Join A) (Join_B : Join B), DownwardsClosedSeparationAlgebra A -> DownwardsClosedSeparationAlgebra B -> DownwardsClosedSeparationAlgebra (A * B) H7 : DownwardsClosedSeparationAlgebra THeap' H6 : forall (worlds : Type) (R : Relation worlds), PreOrder Krelation -> forall J : Join worlds, SeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra worlds -> IncreasingSeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra (option worlds) H1 : forall (A B : Type) (R_B : Relation B) (J_B : Join B), DownwardsClosedSeparationAlgebra B -> DownwardsClosedSeparationAlgebra (A -> B) P : THeap -> THeap -> Prop H0 : THeap -> Prop PreOrder_Reflexive : Reflexive P PreOrder_Transitive : Transitive P PreOrder_Reflexive0 : Reflexive THeap_order PreOrder_Transitive0 : Transitive THeap_order join_comm : forall m1 m2 m : THeap, join m1 m2 m -> join m2 m1 m join_assoc : forall mx my mz mxy mxyz : THeap, join mx my mxy -> join mxy mz mxyz -> exists myz : THeap, join my mz myz /\\\\ join mx myz mxyz join_comm1 : forall m1 m2 m : THeap', join m1 m2 m -> join m2 m1 m join_assoc1 : forall mx my mz mxy mxyz : THeap', join mx my mxy -> join mxy mz mxyz -> exists myz : THeap', join my mz myz /\\\\ join mx myz mxyz Unable to unify \"PreOrder THeap_order\" with \"DownwardsClosedSeparationAlgebra THeap\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: option_ord_dSA,THeap_order,THeap.", "qsimpl time: 1 use: option_ord_dSA,THeap_order,THeap_preorder,THeap.", "qsimpl time: 1 use: THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join.", "qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join.", "qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join,option_disj_dSA.", "qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join,option_disj_dSA.", "qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_dSA',THeap_preorder,THeap_order,THeap_Join,option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,THeap_SA,THeap,option_ord_dSA,THeap_dSA',THeap_preorder,THeap_order,THeap_Join,option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,THeap_SA,THeap,option_ord_dSA,THeap_dSA',THeap_preorder,prod_dSA,THeap_order,THeap_Join,option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,THeap_SA,THeap,option_ord_dSA,THeap_dSA',THeap_preorder,prod_dSA,THeap_order,THeap_Join,sumAlg_dSA,option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,THeap_SA,THeap,UpwardsClosure_SA,option_ord_dSA,THeap_dSA',THeap_preorder,prod_dSA,THeap_order,THeap_Join,sumAlg_dSA,option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,THeap_SA,THeap,UpwardsClosure_SA,option_ord_dSA,THeap_dSA',THeap_preorder,prod_dSA,THeap_order,THeap_Join,sumAlg_dSA,option_disj_dSA."], "tactic": "apply THeap_Join.", "exn": "In environment H12 : forall (worlds : Type) (R : Relation worlds) (J : Join worlds), SeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra (option worlds) H11 : DownwardsClosedSeparationAlgebra nat H9 : forall (A B : Type) (R_A : Relation A) (R_B : Relation B) (Join_A : Join A) (Join_B : Join B), DownwardsClosedSeparationAlgebra A -> DownwardsClosedSeparationAlgebra B -> DownwardsClosedSeparationAlgebra (A * B) H5 : DownwardsClosedSeparationAlgebra THeap' H4 : forall (worlds : Type) (R : Relation worlds), PreOrder Krelation -> forall J : Join worlds, SeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra worlds -> IncreasingSeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra (option worlds) H : forall (A B : Type) (R_B : Relation B) (J_B : Join B), DownwardsClosedSeparationAlgebra B -> DownwardsClosedSeparationAlgebra (A -> B) P : THeap -> THeap -> Prop H0 : THeap -> Prop PreOrder_Reflexive : Reflexive P PreOrder_Transitive : Transitive P PreOrder_Reflexive0 : Reflexive THeap_order PreOrder_Transitive0 : Transitive THeap_order join_comm : forall m1 m2 m : THeap, join m1 m2 m -> join m2 m1 m join_assoc : forall mx my mz mxy mxyz : THeap, join mx my mxy -> join mxy mz mxyz -> exists myz : THeap, join my mz myz /\\\\ join mx myz mxyz join_comm1 : forall m1 m2 m : THeap', join m1 m2 m -> join m2 m1 m join_assoc1 : forall mx my mz mxy mxyz : THeap', join mx my mxy -> join mxy mz mxyz -> exists myz : THeap', join my mz myz /\\\\ join mx myz mxyz Unable to unify \"Join THeap\" with \"DownwardsClosedSeparationAlgebra THeap\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: option_ord_dSA,THeap_order,THeap.", "qsimpl time: 1 use: option_ord_dSA,THeap_order,THeap_preorder,THeap.", "qsimpl time: 1 use: THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join.", "qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join.", "qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join,option_disj_dSA.", "qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join,option_disj_dSA.", "qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_dSA',THeap_preorder,THeap_order,THeap_Join,option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,THeap_SA,THeap,option_ord_dSA,THeap_dSA',THeap_preorder,THeap_order,THeap_Join,option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,THeap_SA,THeap,option_ord_dSA,THeap_dSA',THeap_preorder,prod_dSA,THeap_order,THeap_Join,option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,THeap_SA,THeap,option_ord_dSA,THeap_dSA',THeap_preorder,prod_dSA,THeap_order,THeap_Join,sumAlg_dSA,option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,THeap_SA,THeap,UpwardsClosure_SA,option_ord_dSA,THeap_dSA',THeap_preorder,prod_dSA,THeap_order,THeap_Join,sumAlg_dSA,option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,THeap_SA,THeap,UpwardsClosure_SA,option_ord_dSA,THeap_dSA',THeap_preorder,prod_dSA,THeap_order,THeap_Join,sumAlg_dSA,option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,THeap_SA,THeap,UpwardsClosure_SA,option_ord_dSA,THeap_dSA',THeap_preorder,prod_dSA,THeap_order,THeap_Join,sumAlg_dSA,option_disj_dSA."], "tactic": "apply UpwardsClosure_DownwardsClosed.", "exn": "In environment H14 : forall (worlds : Type) (R : Relation worlds) (J : Join worlds), SeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra (option worlds) H13 : DownwardsClosedSeparationAlgebra nat H10 : forall (A B : Type) (R_A : Relation A) (R_B : Relation B) (Join_A : Join A) (Join_B : Join B), DownwardsClosedSeparationAlgebra A -> DownwardsClosedSeparationAlgebra B -> DownwardsClosedSeparationAlgebra (A * B) H7 : DownwardsClosedSeparationAlgebra THeap' H6 : forall (worlds : Type) (R : Relation worlds), PreOrder Krelation -> forall J : Join worlds, SeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra worlds -> IncreasingSeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra (option worlds) H1 : forall (A B : Type) (R_B : Relation B) (J_B : Join B), DownwardsClosedSeparationAlgebra B -> DownwardsClosedSeparationAlgebra (A -> B) P : THeap -> THeap -> Prop H0 : THeap -> Prop PreOrder_Reflexive : Reflexive P PreOrder_Transitive : Transitive P PreOrder_Reflexive0 : Reflexive THeap_order PreOrder_Transitive0 : Transitive THeap_order join_comm : forall m1 m2 m : THeap, join m1 m2 m -> join m2 m1 m join_assoc : forall mx my mz mxy mxyz : THeap, join mx my mxy -> join mxy mz mxyz -> exists myz : THeap, join my mz myz /\\\\ join mx myz mxyz join_comm1 : forall m1 m2 m : THeap', join m1 m2 m -> join m2 m1 m join_assoc1 : forall mx my mz mxy mxyz : THeap', join mx my mxy -> join mxy mz mxyz -> exists myz : THeap', join my mz myz /\\\\ join mx myz mxyz m1 : ?worlds m2 : ?worlds m : ?worlds n1 : ?worlds n2 : ?worlds Unable to unify \"exists n : ?worlds, Krelation n m /\\\\ join m1 m2 n\" with \"THeap_Join m1 m2 m\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: option_ord_dSA,THeap_order,THeap.", "qsimpl time: 1 use: option_ord_dSA,THeap_order,THeap_preorder,THeap.", "qsimpl time: 1 use: THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join.", "qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join.", "qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join,option_disj_dSA.", "qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join,option_disj_dSA.", "qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_dSA',THeap_preorder,THeap_order,THeap_Join,option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,THeap_SA,THeap,option_ord_dSA,THeap_dSA',THeap_preorder,THeap_order,THeap_Join,option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,THeap_SA,THeap,option_ord_dSA,THeap_dSA',THeap_preorder,prod_dSA,THeap_order,THeap_Join,option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,THeap_SA,THeap,option_ord_dSA,THeap_dSA',THeap_preorder,prod_dSA,THeap_order,THeap_Join,sumAlg_dSA,option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,THeap_SA,THeap,UpwardsClosure_SA,option_ord_dSA,THeap_dSA',THeap_preorder,prod_dSA,THeap_order,THeap_Join,sumAlg_dSA,option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,THeap_SA,THeap,UpwardsClosure_SA,option_ord_dSA,THeap_dSA',THeap_preorder,prod_dSA,THeap_order,THeap_Join,sumAlg_dSA,option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,THeap_SA,THeap,UpwardsClosure_SA,option_ord_dSA,THeap_dSA',THeap_preorder,prod_dSA,THeap_order,THeap_Join,sumAlg_dSA,option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,THeap_SA,THeap,UpwardsClosure_SA,option_ord_dSA,THeap_dSA',THeap_preorder,prod_dSA,THeap_order,THeap_Join,sumAlg_dSA,UpwardsClosure_DownwardsClosed,option_disj_dSA."], "tactic": "apply THeap_Join.", "exn": "In environment H15 : forall (worlds : Type) (R : Relation worlds) (J : Join worlds), SeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra (option worlds) H12 : DownwardsClosedSeparationAlgebra THeap' H11 : DownwardsClosedSeparationAlgebra nat H9 : forall (A B : Type) (R_A : Relation A) (R_B : Relation B) (Join_A : Join A) (Join_B : Join B), DownwardsClosedSeparationAlgebra A -> DownwardsClosedSeparationAlgebra B -> DownwardsClosedSeparationAlgebra (A * B) H5 : DownwardsClosedSeparationAlgebra THeap' H4 : forall (worlds : Type) (R : Relation worlds), PreOrder Krelation -> forall J : Join worlds, SeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra worlds -> IncreasingSeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra (option worlds) H : forall (A B : Type) (R_B : Relation B) (J_B : Join B), DownwardsClosedSeparationAlgebra B -> DownwardsClosedSeparationAlgebra (A -> B) P : THeap -> THeap -> Prop H0 : THeap -> Prop PreOrder_Reflexive : Reflexive P PreOrder_Transitive : Transitive P PreOrder_Reflexive0 : Reflexive THeap_order PreOrder_Transitive0 : Transitive THeap_order join_comm : forall m1 m2 m : THeap, join m1 m2 m -> join m2 m1 m join_assoc : forall mx my mz mxy mxyz : THeap, join mx my mxy -> join mxy mz mxyz -> exists myz : THeap, join my mz myz /\\\\ join mx myz mxyz join_comm1 : forall m1 m2 m : THeap', join m1 m2 m -> join m2 m1 m join_assoc1 : forall mx my mz mxy mxyz : THeap', join mx my mxy -> join mxy mz mxyz -> exists myz : THeap', join my mz myz /\\\\ join mx myz mxyz Unable to unify \"Join THeap\" with \"DownwardsClosedSeparationAlgebra THeap\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: option_ord_dSA,THeap_order,THeap.", "qsimpl time: 1 use: option_ord_dSA,THeap_order,THeap_preorder,THeap.", "qsimpl time: 1 use: THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join.", "qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join.", "qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join,option_disj_dSA.", "qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_preorder,THeap_order,THeap_Join,option_disj_dSA.", "qsimpl time: 1 use: THeap_SA,THeap,option_ord_dSA,THeap_dSA',THeap_preorder,THeap_order,THeap_Join,option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,THeap_SA,THeap,option_ord_dSA,THeap_dSA',THeap_preorder,THeap_order,THeap_Join,option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,THeap_SA,THeap,option_ord_dSA,THeap_dSA',THeap_preorder,prod_dSA,THeap_order,THeap_Join,option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,THeap_SA,THeap,option_ord_dSA,THeap_dSA',THeap_preorder,prod_dSA,THeap_order,THeap_Join,sumAlg_dSA,option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,THeap_SA,THeap,UpwardsClosure_SA,option_ord_dSA,THeap_dSA',THeap_preorder,prod_dSA,THeap_order,THeap_Join,sumAlg_dSA,option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,THeap_SA,THeap,UpwardsClosure_SA,option_ord_dSA,THeap_dSA',THeap_preorder,prod_dSA,THeap_order,THeap_Join,sumAlg_dSA,option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,THeap_SA,THeap,UpwardsClosure_SA,option_ord_dSA,THeap_dSA',THeap_preorder,prod_dSA,THeap_order,THeap_Join,sumAlg_dSA,option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,THeap_SA,THeap,UpwardsClosure_SA,option_ord_dSA,THeap_dSA',THeap_preorder,prod_dSA,THeap_order,THeap_Join,sumAlg_dSA,UpwardsClosure_DownwardsClosed,option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,THeap_SA,THeap,UpwardsClosure_SA,option_ord_dSA,THeap_dSA',THeap_preorder,prod_dSA,THeap_order,THeap_Join,sumAlg_dSA,UpwardsClosure_DownwardsClosed,option_disj_dSA."], "tactic": "apply unit_dSA.", "exn": "In environment H16 : forall (worlds : Type) (R : Relation worlds) (J : Join worlds), SeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra (option worlds) H14 : DownwardsClosedSeparationAlgebra THeap' H13 : DownwardsClosedSeparationAlgebra nat H10 : forall (A B : Type) (R_A : Relation A) (R_B : Relation B) (Join_A : Join A) (Join_B : Join B), DownwardsClosedSeparationAlgebra A -> DownwardsClosedSeparationAlgebra B -> DownwardsClosedSeparationAlgebra (A * B) H7 : DownwardsClosedSeparationAlgebra THeap' H6 : forall (worlds : Type) (R : Relation worlds), PreOrder Krelation -> forall J : Join worlds, SeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra worlds -> IncreasingSeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra (option worlds) H1 : forall (A B : Type) (R_B : Relation B) (J_B : Join B), DownwardsClosedSeparationAlgebra B -> DownwardsClosedSeparationAlgebra (A -> B) P : THeap -> THeap -> Prop H0 : THeap -> Prop PreOrder_Reflexive : Reflexive P PreOrder_Transitive : Transitive P PreOrder_Reflexive0 : Reflexive THeap_order PreOrder_Transitive0 : Transitive THeap_order join_comm : forall m1 m2 m : THeap, join m1 m2 m -> join m2 m1 m join_assoc : forall mx my mz mxy mxyz : THeap, join mx my mxy -> join mxy mz mxyz -> exists myz : THeap, join my mz myz /\\\\ join mx myz mxyz join_comm1 : forall m1 m2 m : THeap', join m1 m2 m -> join m2 m1 m join_assoc1 : forall mx my mz mxy mxyz : THeap', join mx my mxy -> join mxy mz mxyz -> exists myz : THeap', join my mz myz /\\\\ join mx myz mxyz Unable to unify \"DownwardsClosedSeparationAlgebra Datatypes.unit\" with \"DownwardsClosedSeparationAlgebra THeap\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "apply (option_ord_dSA THeap THeap_order). - apply THeap_preorder. - apply THeap_Join. - apply THeap_SA. - apply option_disj_dSA. + apply THeap_SA. + apply THeap_dSA'. + apply fun_dSA. * apply (discHeap_dSA addr val). * apply prod_dSA. -- apply (monHeap_dSA addr val). -- apply sumAlg_dSA. + apply UpwardsClosure_SA. * apply THeap_preorder. * apply THeap_Join. * apply UpwardsClosure_DownwardsClosed. -- apply THeap_Join. -- apply unit_dSA.", "back_times": 0, "succ": false, "time": 42.518550395965576}]