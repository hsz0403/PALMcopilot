[{"history": {"proof": "qsimpl time: 1 use: fun_dSA. qsimpl time: 1 use: fun_dSA,option_disj_dSA. qsimpl time: 1 use: fun_dSA,THeap_SA',option_disj_dSA. qsimpl time: 1 use: prod_dSA,fun_dSA,THeap_SA',option_disj_dSA. qsimpl time: 1 use: fun_dSA,prod_dSA,discHeap_dSA,THeap_SA',option_disj_dSA. qsimpl time: 1 use: fun_dSA,prod_dSA,discHeap_dSA,THeap_SA',option_disj_dSA. qsimpl time: 1 use: fun_dSA,option_ord_dSA,prod_dSA,discHeap_dSA,THeap_SA',option_disj_dSA. qsimpl time: 1 use: fun_dSA,option_ord_dSA,prod_dSA,THeap_preorder',discHeap_dSA,THeap_SA',option_disj_dSA. qsimpl time: 1 use: fun_dSA,option_ord_dSA,THeap_Join',prod_dSA,THeap_preorder',discHeap_dSA,THeap_SA',option_disj_dSA. qsimpl time: 1 use: fun_dSA,option_ord_dSA,THeap_Join',prod_dSA,THeap_preorder',discHeap_dSA,THeap_SA',option_disj_dSA.", "repairs": ["cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify"], "exceptions": [{"ctx": [], "tactic": "apply fun_dSA.", "exn": "In environment m1 : ?M2113 -> ?M2114 m2 : ?M2113 -> ?M2114 m : ?M2113 -> ?M2114 n1 : ?M2113 -> ?M2114 n2 : ?M2113 -> ?M2114 j : join m1 m2 m Unable to unify \"forall a : ?M2113, ?M2115 (n1 a) (m1 a)\" with \"THeap_order' n1 m1\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: fun_dSA."], "tactic": "apply option_disj_dSA.", "exn": "In environment H : forall (A B : Type) (R_B : Relation B) (J_B : Join B), DownwardsClosedSeparationAlgebra B -> DownwardsClosedSeparationAlgebra (A -> B) Unable to unify \"option ?M2777\" with \"THeap'\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: fun_dSA.", "qsimpl time: 1 use: fun_dSA,option_disj_dSA."], "tactic": "apply THeap_SA'.", "exn": "In environment H1 : forall (worlds : Type) (R : Relation worlds) (J : Join worlds), SeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra (option worlds) H0 : forall (A B : Type) (R_B : Relation B) (J_B : Join B), DownwardsClosedSeparationAlgebra B -> DownwardsClosedSeparationAlgebra (A -> B) Unable to unify \"SeparationAlgebra THeap'\" with \"DownwardsClosedSeparationAlgebra THeap'\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: fun_dSA.", "qsimpl time: 1 use: fun_dSA,option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,THeap_SA',option_disj_dSA."], "tactic": "eapply prod_dSA.", "exn": "In environment H3 : forall (worlds : Type) (R : Relation worlds) (J : Join worlds), SeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra (option worlds) H : forall (A B : Type) (R_B : Relation B) (J_B : Join B), DownwardsClosedSeparationAlgebra B -> DownwardsClosedSeparationAlgebra (A -> B) join_comm : forall m1 m2 m : THeap', join m1 m2 m -> join m2 m1 m join_assoc : forall mx my mz mxy mxyz : THeap', join mx my mxy -> join mxy mz mxyz -> exists myz : THeap', join my mz myz /\\\\ join mx myz mxyz Unable to unify \"(?M5882 * ?M5883)%type\" with \"THeap'\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: fun_dSA.", "qsimpl time: 1 use: fun_dSA,option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: prod_dSA,fun_dSA,THeap_SA',option_disj_dSA."], "tactic": "apply discHeap_dSA.", "exn": "In environment H4 : forall (worlds : Type) (R : Relation worlds) (J : Join worlds), SeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra (option worlds) H1 : forall (A B : Type) (R_B : Relation B) (J_B : Join B), DownwardsClosedSeparationAlgebra B -> DownwardsClosedSeparationAlgebra (A -> B) H0 : forall (A B : Type) (R_A : Relation A) (R_B : Relation B) (Join_A : Join A) (Join_B : Join B), DownwardsClosedSeparationAlgebra A -> DownwardsClosedSeparationAlgebra B -> DownwardsClosedSeparationAlgebra (A * B) join_comm : forall m1 m2 m : THeap', join m1 m2 m -> join m2 m1 m join_assoc : forall mx my mz mxy mxyz : THeap', join mx my mxy -> join mxy mz mxyz -> exists myz : THeap', join my mz myz /\\\\ join mx myz mxyz m1 : Heap ?M9137 ?M9138 m2 : Heap ?M9137 ?M9138 m : Heap ?M9137 ?M9138 n1 : Heap ?M9137 ?M9138 n2 : Heap ?M9137 ?M9138 j : join m1 m2 m Unable to unify \"@Krelation (Heap ?M9137 ?M9138) (discHeap_R ?M9137 ?M9138) n1 m1\" with \"@Krelation THeap' THeap_R' n1 m1\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: fun_dSA.", "qsimpl time: 1 use: fun_dSA,option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: prod_dSA,fun_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,prod_dSA,discHeap_dSA,THeap_SA',option_disj_dSA."], "tactic": "apply discHeap_dSA.", "exn": "In environment H6 : forall (worlds : Type) (R : Relation worlds) (J : Join worlds), SeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra (option worlds) H3 : forall addr val : Type, DownwardsClosedSeparationAlgebra (Heap addr val) H2 : forall (A B : Type) (R_A : Relation A) (R_B : Relation B) (Join_A : Join A) (Join_B : Join B), DownwardsClosedSeparationAlgebra A -> DownwardsClosedSeparationAlgebra B -> DownwardsClosedSeparationAlgebra (A * B) H : forall (A B : Type) (R_B : Relation B) (J_B : Join B), DownwardsClosedSeparationAlgebra B -> DownwardsClosedSeparationAlgebra (A -> B) join_comm : forall m1 m2 m : THeap', join m1 m2 m -> join m2 m1 m join_assoc : forall mx my mz mxy mxyz : THeap', join mx my mxy -> join mxy mz mxyz -> exists myz : THeap', join my mz myz /\\\\ join mx myz mxyz m1 : Heap ?M12572 ?M12573 m2 : Heap ?M12572 ?M12573 m : Heap ?M12572 ?M12573 n1 : Heap ?M12572 ?M12573 n2 : Heap ?M12572 ?M12573 j : join m1 m2 m Unable to unify \"@Krelation (Heap ?M12572 ?M12573) (discHeap_R ?M12572 ?M12573) n1 m1\" with \"@Krelation THeap' THeap_R' n1 m1\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: fun_dSA.", "qsimpl time: 1 use: fun_dSA,option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: prod_dSA,fun_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,prod_dSA,discHeap_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,prod_dSA,discHeap_dSA,THeap_SA',option_disj_dSA."], "tactic": "apply option_ord_dSA.", "exn": "In environment H7 : forall (worlds : Type) (R : Relation worlds) (J : Join worlds), SeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra (option worlds) H4 : forall addr val : Type, DownwardsClosedSeparationAlgebra (Heap addr val) H1 : forall (A B : Type) (R_A : Relation A) (R_B : Relation B) (Join_A : Join A) (Join_B : Join B), DownwardsClosedSeparationAlgebra A -> DownwardsClosedSeparationAlgebra B -> DownwardsClosedSeparationAlgebra (A * B) H0 : forall (A B : Type) (R_B : Relation B) (J_B : Join B), DownwardsClosedSeparationAlgebra B -> DownwardsClosedSeparationAlgebra (A -> B) join_comm : forall m1 m2 m : THeap', join m1 m2 m -> join m2 m1 m join_assoc : forall mx my mz mxy mxyz : THeap', join mx my mxy -> join mxy mz mxyz -> exists myz : THeap', join my mz myz /\\\\ join mx myz mxyz Unable to unify \"option ?M16007\" with \"THeap'\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: fun_dSA.", "qsimpl time: 1 use: fun_dSA,option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: prod_dSA,fun_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,prod_dSA,discHeap_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,prod_dSA,discHeap_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,option_ord_dSA,prod_dSA,discHeap_dSA,THeap_SA',option_disj_dSA."], "tactic": "apply THeap_preorder'.", "exn": "In environment H8 : forall (worlds : Type) (R : Relation worlds) (J : Join worlds), SeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra (option worlds) H5 : forall addr val : Type, DownwardsClosedSeparationAlgebra (Heap addr val) H3 : forall (A B : Type) (R_A : Relation A) (R_B : Relation B) (Join_A : Join A) (Join_B : Join B), DownwardsClosedSeparationAlgebra A -> DownwardsClosedSeparationAlgebra B -> DownwardsClosedSeparationAlgebra (A * B) H2 : forall (worlds : Type) (R : Relation worlds), PreOrder Krelation -> forall J : Join worlds, SeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra worlds -> IncreasingSeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra (option worlds) H : forall (A B : Type) (R_B : Relation B) (J_B : Join B), DownwardsClosedSeparationAlgebra B -> DownwardsClosedSeparationAlgebra (A -> B) join_comm : forall m1 m2 m : THeap', join m1 m2 m -> join m2 m1 m join_assoc : forall mx my mz mxy mxyz : THeap', join mx my mxy -> join mxy mz mxyz -> exists myz : THeap', join my mz myz /\\\\ join mx myz mxyz Unable to unify \"PreOrder THeap_order'\" with \"DownwardsClosedSeparationAlgebra THeap'\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: fun_dSA.", "qsimpl time: 1 use: fun_dSA,option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: prod_dSA,fun_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,prod_dSA,discHeap_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,prod_dSA,discHeap_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,option_ord_dSA,prod_dSA,discHeap_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,option_ord_dSA,prod_dSA,THeap_preorder',discHeap_dSA,THeap_SA',option_disj_dSA."], "tactic": "apply THeap_Join'.", "exn": "In environment H10 : forall (worlds : Type) (R : Relation worlds) (J : Join worlds), SeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra (option worlds) H7 : forall addr val : Type, DownwardsClosedSeparationAlgebra (Heap addr val) H4 : forall (A B : Type) (R_A : Relation A) (R_B : Relation B) (Join_A : Join A) (Join_B : Join B), DownwardsClosedSeparationAlgebra A -> DownwardsClosedSeparationAlgebra B -> DownwardsClosedSeparationAlgebra (A * B) H1 : forall (worlds : Type) (R : Relation worlds), PreOrder Krelation -> forall J : Join worlds, SeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra worlds -> IncreasingSeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra (option worlds) H0 : forall (A B : Type) (R_B : Relation B) (J_B : Join B), DownwardsClosedSeparationAlgebra B -> DownwardsClosedSeparationAlgebra (A -> B) join_comm : forall m1 m2 m : THeap', join m1 m2 m -> join m2 m1 m join_assoc : forall mx my mz mxy mxyz : THeap', join mx my mxy -> join mxy mz mxyz -> exists myz : THeap', join my mz myz /\\\\ join mx myz mxyz PreOrder_Reflexive : Reflexive THeap_order' PreOrder_Transitive : Transitive THeap_order' Unable to unify \"Join THeap'\" with \"DownwardsClosedSeparationAlgebra THeap'\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: fun_dSA.", "qsimpl time: 1 use: fun_dSA,option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: prod_dSA,fun_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,prod_dSA,discHeap_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,prod_dSA,discHeap_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,option_ord_dSA,prod_dSA,discHeap_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,option_ord_dSA,prod_dSA,THeap_preorder',discHeap_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,option_ord_dSA,THeap_Join',prod_dSA,THeap_preorder',discHeap_dSA,THeap_SA',option_disj_dSA."], "tactic": "apply THeap_SA'.", "exn": "In environment H9 : forall (worlds : Type) (R : Relation worlds) (J : Join worlds), SeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra (option worlds) j : Join THeap' H6 : forall addr val : Type, DownwardsClosedSeparationAlgebra (Heap addr val) H3 : forall (A B : Type) (R_A : Relation A) (R_B : Relation B) (Join_A : Join A) (Join_B : Join B), DownwardsClosedSeparationAlgebra A -> DownwardsClosedSeparationAlgebra B -> DownwardsClosedSeparationAlgebra (A * B) H2 : forall (worlds : Type) (R : Relation worlds), PreOrder Krelation -> forall J : Join worlds, SeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra worlds -> IncreasingSeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra (option worlds) H : forall (A B : Type) (R_B : Relation B) (J_B : Join B), DownwardsClosedSeparationAlgebra B -> DownwardsClosedSeparationAlgebra (A -> B) join_comm : forall m1 m2 m : THeap', join m1 m2 m -> join m2 m1 m join_assoc : forall mx my mz mxy mxyz : THeap', join mx my mxy -> join mxy mz mxyz -> exists myz : THeap', join my mz myz /\\\\ join mx myz mxyz PreOrder_Reflexive : Reflexive THeap_order' PreOrder_Transitive : Transitive THeap_order' join_comm0 : forall m1 m2 m : THeap', join m1 m2 m -> join m2 m1 m join_assoc0 : forall mx my mz mxy mxyz : THeap', join mx my mxy -> join mxy mz mxyz -> exists myz : THeap', join my mz myz /\\\\ join mx myz mxyz Unable to unify \"SeparationAlgebra THeap'\" with \"DownwardsClosedSeparationAlgebra THeap'\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: fun_dSA.", "qsimpl time: 1 use: fun_dSA,option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: prod_dSA,fun_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,prod_dSA,discHeap_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,prod_dSA,discHeap_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,option_ord_dSA,prod_dSA,discHeap_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,option_ord_dSA,prod_dSA,THeap_preorder',discHeap_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,option_ord_dSA,THeap_Join',prod_dSA,THeap_preorder',discHeap_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,option_ord_dSA,THeap_Join',prod_dSA,THeap_preorder',discHeap_dSA,THeap_SA',option_disj_dSA."], "tactic": "eapply UpwardsClosure_DownwardsClosed.", "exn": "In environment H10 : forall (worlds : Type) (R : Relation worlds) (J : Join worlds), SeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra (option worlds) j0 : Join THeap' H7 : forall addr val : Type, DownwardsClosedSeparationAlgebra (Heap addr val) H4 : forall (A B : Type) (R_A : Relation A) (R_B : Relation B) (Join_A : Join A) (Join_B : Join B), DownwardsClosedSeparationAlgebra A -> DownwardsClosedSeparationAlgebra B -> DownwardsClosedSeparationAlgebra (A * B) H1 : forall (worlds : Type) (R : Relation worlds), PreOrder Krelation -> forall J : Join worlds, SeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra worlds -> IncreasingSeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra (option worlds) H0 : forall (A B : Type) (R_B : Relation B) (J_B : Join B), DownwardsClosedSeparationAlgebra B -> DownwardsClosedSeparationAlgebra (A -> B) j : Join THeap' join_comm : forall m1 m2 m : THeap', join m1 m2 m -> join m2 m1 m join_assoc : forall mx my mz mxy mxyz : THeap', join mx my mxy -> join mxy mz mxyz -> exists myz : THeap', join my mz myz /\\\\ join mx myz mxyz PreOrder_Reflexive : Reflexive THeap_order' PreOrder_Transitive : Transitive THeap_order' join_comm0 : forall m1 m2 m : THeap', join m1 m2 m -> join m2 m1 m join_assoc0 : forall mx my mz mxy mxyz : THeap', join mx my mxy -> join mxy mz mxyz -> exists myz : THeap', join my mz myz /\\\\ join mx myz mxyz join_comm1 : forall m1 m2 m : THeap', join m1 m2 m -> join m2 m1 m join_assoc1 : forall mx my mz mxy mxyz : THeap', join mx my mxy -> join mxy mz mxyz -> exists myz : THeap', join my mz myz /\\\\ join mx myz mxyz m1 : ?worlds m2 : ?worlds m : ?worlds n1 : ?worlds n2 : ?worlds Unable to unify \"exists n : ?worlds, Krelation n m /\\\\ join m1 m2 n\" with \"j m1 m2 m\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: fun_dSA.", "qsimpl time: 1 use: fun_dSA,option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: prod_dSA,fun_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,prod_dSA,discHeap_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,prod_dSA,discHeap_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,option_ord_dSA,prod_dSA,discHeap_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,option_ord_dSA,prod_dSA,THeap_preorder',discHeap_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,option_ord_dSA,THeap_Join',prod_dSA,THeap_preorder',discHeap_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,option_ord_dSA,THeap_Join',prod_dSA,THeap_preorder',discHeap_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,option_ord_dSA,THeap_Join',prod_dSA,THeap_preorder',discHeap_dSA,UpwardsClosure_DownwardsClosed,THeap_SA',option_disj_dSA.", "---"], "tactic": "apply join_Korder_down.", "exn": "In environment H11 : forall (worlds : Type) (R : Relation worlds) (J : Join worlds), SeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra (option worlds) j1, j0 : Join THeap' H7 : forall addr val : Type, DownwardsClosedSeparationAlgebra (Heap addr val) H4 : forall (A B : Type) (R_A : Relation A) (R_B : Relation B) (Join_A : Join A) (Join_B : Join B), DownwardsClosedSeparationAlgebra A -> DownwardsClosedSeparationAlgebra B -> DownwardsClosedSeparationAlgebra (A * B) H1 : forall (worlds : Type) (R : Relation worlds), PreOrder Krelation -> forall J : Join worlds, SeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra worlds -> IncreasingSeparationAlgebra worlds -> DownwardsClosedSeparationAlgebra (option worlds) H0 : forall (A B : Type) (R_B : Relation B) (J_B : Join B), DownwardsClosedSeparationAlgebra B -> DownwardsClosedSeparationAlgebra (A -> B) j : Join THeap' join_comm : forall m1 m2 m : THeap', join m1 m2 m -> join m2 m1 m join_assoc : forall mx my mz mxy mxyz : THeap', join mx my mxy -> join mxy mz mxyz -> exists myz : THeap', join my mz myz /\\\\ join mx myz mxyz PreOrder_Reflexive : Reflexive THeap_order' PreOrder_Transitive : Transitive THeap_order' join_comm0 : forall m1 m2 m : THeap', join m1 m2 m -> join m2 m1 m join_assoc0 : forall mx my mz mxy mxyz : THeap', join mx my mxy -> join mxy mz mxyz -> exists myz : THeap', join my mz myz /\\\\ join mx myz mxyz join_comm1 : forall m1 m2 m : THeap', join m1 m2 m -> join m2 m1 m join_assoc1 : forall mx my mz mxy mxyz : THeap', join mx my mxy -> join mxy mz mxyz -> exists myz : THeap', join my mz myz /\\\\ join mx myz mxyz H8 : DownwardsClosedSeparationAlgebra (Heap ?addr ?val) join_comm2 : forall m1 m2 m : THeap', join m1 m2 m -> join m2 m1 m join_assoc2 : forall mx my mz mxy mxyz : THeap', join mx my mxy -> join mxy mz mxyz -> exists myz : THeap', join my mz myz /\\\\ join mx myz mxyz Unable to unify \"exists n : ?worlds, join ?M45593 ?M45594 n /\\\\ Krelation n ?M45592\" with \"forall m1 m2 m n1 n2 : THeap', join m1 m2 m -> Krelation n1 m1 -> Krelation n2 m2 -> exists n : THeap', join n1 n2 n /\\\\ Krelation n m\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: fun_dSA.", "qsimpl time: 1 use: fun_dSA,option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: prod_dSA,fun_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,prod_dSA,discHeap_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,prod_dSA,discHeap_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,option_ord_dSA,prod_dSA,discHeap_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,option_ord_dSA,prod_dSA,THeap_preorder',discHeap_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,option_ord_dSA,THeap_Join',prod_dSA,THeap_preorder',discHeap_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,option_ord_dSA,THeap_Join',prod_dSA,THeap_preorder',discHeap_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,option_ord_dSA,THeap_Join',prod_dSA,THeap_preorder',discHeap_dSA,UpwardsClosure_DownwardsClosed,THeap_SA',option_disj_dSA.", "---", "qsimpl time: 1 use: fun_dSA,option_ord_dSA,THeap_Join',join_Korder_down,prod_dSA,THeap_preorder',discHeap_dSA,UpwardsClosure_DownwardsClosed,THeap_SA',option_disj_dSA."], "tactic": "---", "exn": "Wrong bullet ---: Current bullet --- is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["qsimpl time: 1 use: fun_dSA.", "qsimpl time: 1 use: fun_dSA,option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: prod_dSA,fun_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,prod_dSA,discHeap_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,prod_dSA,discHeap_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,option_ord_dSA,prod_dSA,discHeap_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,option_ord_dSA,prod_dSA,THeap_preorder',discHeap_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,option_ord_dSA,THeap_Join',prod_dSA,THeap_preorder',discHeap_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,option_ord_dSA,THeap_Join',prod_dSA,THeap_preorder',discHeap_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,option_ord_dSA,THeap_Join',prod_dSA,THeap_preorder',discHeap_dSA,UpwardsClosure_DownwardsClosed,THeap_SA',option_disj_dSA.", "---", "qsimpl time: 1 use: fun_dSA,option_ord_dSA,THeap_Join',join_Korder_down,prod_dSA,THeap_preorder',discHeap_dSA,UpwardsClosure_DownwardsClosed,THeap_SA',option_disj_dSA.", "shelve.", "---"], "tactic": "apply some_heap_order.", "exn": "The reference some_heap_order was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["qsimpl time: 1 use: fun_dSA.", "qsimpl time: 1 use: fun_dSA,option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: prod_dSA,fun_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,prod_dSA,discHeap_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,prod_dSA,discHeap_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,option_ord_dSA,prod_dSA,discHeap_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,option_ord_dSA,prod_dSA,THeap_preorder',discHeap_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,option_ord_dSA,THeap_Join',prod_dSA,THeap_preorder',discHeap_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,option_ord_dSA,THeap_Join',prod_dSA,THeap_preorder',discHeap_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,option_ord_dSA,THeap_Join',prod_dSA,THeap_preorder',discHeap_dSA,UpwardsClosure_DownwardsClosed,THeap_SA',option_disj_dSA.", "---", "qsimpl time: 1 use: fun_dSA,option_ord_dSA,THeap_Join',join_Korder_down,prod_dSA,THeap_preorder',discHeap_dSA,UpwardsClosure_DownwardsClosed,THeap_SA',option_disj_dSA.", "shelve.", "---", "apply THeap_order."], "tactic": "---", "exn": "Wrong bullet ---: Current bullet --- is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["qsimpl time: 1 use: fun_dSA.", "qsimpl time: 1 use: fun_dSA,option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: prod_dSA,fun_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,prod_dSA,discHeap_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,prod_dSA,discHeap_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,option_ord_dSA,prod_dSA,discHeap_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,option_ord_dSA,prod_dSA,THeap_preorder',discHeap_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,option_ord_dSA,THeap_Join',prod_dSA,THeap_preorder',discHeap_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,option_ord_dSA,THeap_Join',prod_dSA,THeap_preorder',discHeap_dSA,THeap_SA',option_disj_dSA.", "qsimpl time: 1 use: fun_dSA,option_ord_dSA,THeap_Join',prod_dSA,THeap_preorder',discHeap_dSA,UpwardsClosure_DownwardsClosed,THeap_SA',option_disj_dSA.", "---", "qsimpl time: 1 use: fun_dSA,option_ord_dSA,THeap_Join',join_Korder_down,prod_dSA,THeap_preorder',discHeap_dSA,UpwardsClosure_DownwardsClosed,THeap_SA',option_disj_dSA.", "shelve.", "---", "apply THeap_order.", "+++", "shelve.", "+++", "shelve.", "---"], "tactic": "apply some_heap_order.", "exn": "The reference some_heap_order was not found in the current environment.", "type": "ref_not_found", "handled": true}]}, "chat": [], "original": "apply fun_dSA. apply option_disj_dSA. - apply THeap_SA'. - eapply prod_dSA. -- apply discHeap_dSA. -- apply discHeap_dSA. - apply option_ord_dSA. -- apply THeap_preorder'. -- apply THeap_Join'. -- apply THeap_SA'. -- eapply UpwardsClosure_DownwardsClosed. --- apply join_Korder_down. --- apply some_heap_order. --- apply some_heap_order.", "back_times": 0, "succ": false, "time": 103.63485383987427}]