[{"history": {"proof": "qsimpl time: 1 use: Build_IncreasingSeparationAlgebra.", "repairs": ["cannot_unify"], "exceptions": [{"ctx": [], "tactic": "apply Build_IncreasingSeparationAlgebra.", "exn": "In environment worlds : Type R : Relation worlds Unable to unify \"IncreasingSeparationAlgebra ?M2113\" with \"forall m n m1 m2 : worlds, join m1 m2 m -> Krelation m n -> exists n1 n2 : worlds, join n1 n2 n /\\\\ Krelation m1 n1 /\\\\ Krelation m2 n2\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: Build_IncreasingSeparationAlgebra."], "tactic": "intros x.", "exn": "No such goal.", "type": "no_goal", "handled": true}]}, "chat": [], "original": "apply Build_IncreasingSeparationAlgebra. intros x. unfold increasing. intros n n' H. destruct (residue_exists n) as [m RES]. destruct RES as [n0 [Hjoin Hrel]]. apply join_Korder_up with (m1 := n) (m2 := n0). - apply H. - apply Korder_identity. apply Hrel. - apply Korder_identity. apply Hrel. - intros n1 n2 [Hjoin' [Hrel1 Hrel2]]. exists n1, n2. repeat split. + apply Hjoin'. + apply Korder_identity. apply Hrel1. + apply Korder_identity. apply Hrel2.", "back_times": 0, "succ": true, "time": 0.6165974140167236}]