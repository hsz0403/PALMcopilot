[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros Phi Psi H_closed H_ow."], "tactic": "apply Lindenbaum_preserves_by_finiteness.", "exn": "In environment L : Language minL : MinimumLanguage L pL : PropositionalLanguage L sepconL : SepconLanguage L wandL : WandLanguage L GammaP : Provable L GammaD : Derivable L SC : NormalSequentCalculus L GammaP GammaD bSC : BasicSequentCalculus L GammaD fwSC : FiniteWitnessedSequentCalculus L GammaD minSC : MinimumSequentCalculus L GammaD ipSC : IntuitionisticPropositionalSequentCalculus L GammaD AX : NormalAxiomatization L GammaP GammaD minAX : MinimumAxiomatization L GammaP ipAX : IntuitionisticPropositionalLogic L GammaP sepconAX : SepconAxiomatization L GammaP wandAX : WandAxiomatization L GammaP sepcon_orp_AX : SepconOrAxiomatization L GammaP sepcon_falsep_AX : SepconFalseAxiomatization L GammaP Phi, Psi : context H_closed : derivable_closed Psi H_ow : orp_witnessed Psi Unable to unify \"context_sepcon_included_l Phi Psi\" with \"orp_witnessed\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros Phi Psi H_closed H_ow.", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness.", "-"], "tactic": "eapply not_finite_witnessed_finite_captured.", "exn": "In environment L : Language minL : MinimumLanguage L pL : PropositionalLanguage L sepconL : SepconLanguage L wandL : WandLanguage L GammaP : Provable L GammaD : Derivable L Phi, Psi : context H_closed : derivable_closed Psi H_ow : orp_witnessed Psi H : forall P : Ensemble ?A -> Prop, finite_captured P -> subset_preserved P -> Lindenbaum_preserves P falsep_sepcon_left : forall x : expr, |-- FF * x --> FF orp_sepcon_left : forall x y z : expr, |-- (x || y) * z --> x * z || y * z sepcon_comm_impp : forall x y : expr, |-- x * y --> y * x sepcon_assoc1 : forall x y z : expr, |-- x * (y * z) --> x * y * z sepcon_mono : forall x1 x2 y1 y2 : expr, |-- x1 --> x2 -> |-- y1 --> y2 -> |-- x1 * y1 --> x2 * y2 andp_intros : forall x y : expr, |-- x --> y --> x && y andp_elim1 : forall x y : expr, |-- x && y --> x andp_elim2 : forall x y : expr, |-- x && y --> y orp_intros1 : forall x y : expr, |-- x --> x || y orp_intros2 : forall x y : expr, |-- y --> x || y orp_elim : forall x y z : expr, |-- (x --> z) --> (y --> z) --> x || y --> z falsep_elim : forall x : expr, |-- FF --> x modus_ponens : forall x y : expr, |-- x --> y -> |-- x -> |-- y axiom1 : forall x y : expr, |-- x --> y --> x axiom2 : forall x y z : expr, |-- (x --> y --> z) --> (x --> y) --> x --> z deduction_andp_intros : forall (Phi : context) (x y : expr), Phi |-- x -> Phi |-- y -> Phi |-- x && y deduction_andp_elim1 : forall (Phi : context) (x y : expr), Phi |-- x && y -> Phi |-- x deduction_andp_elim2 : forall (Phi : context) (x y : expr), Phi |-- x && y -> Phi |-- y deduction_orp_intros1 : forall (Phi : context) (x y : expr), Phi |-- x -> Phi |-- x || y deduction_orp_intros2 : forall (Phi : context) (x y : expr), Phi |-- y -> Phi |-- x || y deduction_orp_elim : forall (Phi : Ensemble expr) (x y z : expr), Phi;; x |-- z -> Phi;; y |-- z -> Phi;; x || y |-- z deduction_falsep_elim : forall (Phi : context) (x : expr), Phi |-- FF -> Phi |-- x deduction_modus_ponens : forall (Phi : context) (x y : expr), Phi |-- x -> Phi |-- x --> y -> Phi |-- y deduction_impp_intros : forall (Phi : Ensemble expr) (x y : expr), Phi;; x |-- y -> Phi |-- x --> y derivable_finite_witnessed : forall (Phi : context) (y : expr), Phi |-- y -> exists xs : list expr, Forall Phi xs /\\\\ (fun x : expr => In x xs) |-- y deduction_weaken : forall (Phi Psi : Ensemble expr) (x : expr), Included expr Phi Psi -> Phi |-- x -> Psi |-- x derivable_assum : forall (Phi : Ensemble expr) (x : expr), Ensembles.In expr Phi x -> Phi |-- x deduction_subst : forall (Phi Psi : context) (y : expr), (forall x : expr, Psi x -> Phi |-- x) -> Union expr Phi Psi |-- y -> Phi |-- y H0 : forall x : expr, empty_context |-- x -> |-- x H1 : forall x : expr, |-- x -> empty_context |-- x H2 : forall (Phi : context) (y : expr), (exists xs : list expr, Forall (fun x : expr => Phi x) xs /\\\\ |-- multi_imp xs y) -> Phi |-- y H3 : forall (Phi : context) (y : expr), Phi |-- y -> exists xs : list expr, Forall (fun x : expr => Phi x) xs /\\\\ |-- multi_imp xs y H4 : forall x y z : expr, |-- x --> y -* z -> |-- x * y --> z H5 : forall x y z : expr, |-- x * y --> z -> |-- x --> y -* z Unable to unify \"?A0 -> Prop\" with \"injection expr nat\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros Phi Psi H_closed H_ow.", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness.", "-", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,not_finite_witnessed_finite_captured.", "+"], "tactic": "apply context_sepcon_included_l_context_orp_captured.", "exn": "In environment L : Language minL : MinimumLanguage L pL : PropositionalLanguage L sepconL : SepconLanguage L wandL : WandLanguage L GammaP : Provable L GammaD : Derivable L Phi, Psi : context H_closed : derivable_closed Psi H_ow : orp_witnessed Psi H : forall P : Ensemble ?A -> Prop, finite_captured P -> subset_preserved P -> Lindenbaum_preserves P falsep_sepcon_left : forall x : expr, |-- FF * x --> FF orp_sepcon_left : forall x y z : expr, |-- (x || y) * z --> x * z || y * z sepcon_comm_impp : forall x y : expr, |-- x * y --> y * x sepcon_assoc1 : forall x y z : expr, |-- x * (y * z) --> x * y * z sepcon_mono : forall x1 x2 y1 y2 : expr, |-- x1 --> x2 -> |-- y1 --> y2 -> |-- x1 * y1 --> x2 * y2 andp_intros : forall x y : expr, |-- x --> y --> x && y andp_elim1 : forall x y : expr, |-- x && y --> x andp_elim2 : forall x y : expr, |-- x && y --> y orp_intros1 : forall x y : expr, |-- x --> x || y orp_intros2 : forall x y : expr, |-- y --> x || y orp_elim : forall x y z : expr, |-- (x --> z) --> (y --> z) --> x || y --> z falsep_elim : forall x : expr, |-- FF --> x modus_ponens : forall x y : expr, |-- x --> y -> |-- x -> |-- y axiom1 : forall x y : expr, |-- x --> y --> x axiom2 : forall x y z : expr, |-- (x --> y --> z) --> (x --> y) --> x --> z deduction_andp_intros : forall (Phi : context) (x y : expr), Phi |-- x -> Phi |-- y -> Phi |-- x && y deduction_andp_elim1 : forall (Phi : context) (x y : expr), Phi |-- x && y -> Phi |-- x deduction_andp_elim2 : forall (Phi : context) (x y : expr), Phi |-- x && y -> Phi |-- y deduction_orp_intros1 : forall (Phi : context) (x y : expr), Phi |-- x -> Phi |-- x || y deduction_orp_intros2 : forall (Phi : context) (x y : expr), Phi |-- y -> Phi |-- x || y deduction_orp_elim : forall (Phi : Ensemble expr) (x y z : expr), Phi;; x |-- z -> Phi;; y |-- z -> Phi;; x || y |-- z deduction_falsep_elim : forall (Phi : context) (x : expr), Phi |-- FF -> Phi |-- x deduction_modus_ponens : forall (Phi : context) (x y : expr), Phi |-- x -> Phi |-- x --> y -> Phi |-- y deduction_impp_intros : forall (Phi : Ensemble expr) (x y : expr), Phi;; x |-- y -> Phi |-- x --> y derivable_finite_witnessed : forall (Phi : context) (y : expr), Phi |-- y -> exists xs : list expr, Forall Phi xs /\\\\ (fun x : expr => In x xs) |-- y deduction_weaken : forall (Phi Psi : Ensemble expr) (x : expr), Included expr Phi Psi -> Phi |-- x -> Psi |-- x derivable_assum : forall (Phi : Ensemble expr) (x : expr), Ensembles.In expr Phi x -> Phi |-- x deduction_subst : forall (Phi Psi : context) (y : expr), (forall x : expr, Psi x -> Phi |-- x) -> Union expr Phi Psi |-- y -> Phi |-- y H0 : forall x : expr, empty_context |-- x -> |-- x H1 : forall x : expr, |-- x -> empty_context |-- x H2 : forall (Phi : context) (y : expr), (exists xs : list expr, Forall (fun x : expr => Phi x) xs /\\\\ |-- multi_imp xs y) -> Phi |-- y H3 : forall (Phi : context) (y : expr), Phi |-- y -> exists xs : list expr, Forall (fun x : expr => Phi x) xs /\\\\ |-- multi_imp xs y H4 : forall x y z : expr, |-- x --> y -* z -> |-- x * y --> z H5 : forall x y z : expr, |-- x * y --> z -> |-- x --> y -* z H7 : forall P : Ensemble ?A1 -> Prop, finite_witnessed P -> finite_captured (fun X : Ensemble ?A1 => P X -> False) H6 : forall P : Ensemble ?A0 -> Prop, finite_captured P -> subset_preserved P -> Lindenbaum_preserves P Unable to unify \"expr -> Prop\" with \"injection expr nat\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros Phi Psi H_closed H_ow.", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness.", "-", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,not_finite_witnessed_finite_captured.", "+", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,context_sepcon_included_l_context_orp_captured,not_finite_witnessed_finite_captured.", "*"], "tactic": "apply H_closed.", "exn": "In environment L : Language minL : MinimumLanguage L pL : PropositionalLanguage L sepconL : SepconLanguage L wandL : WandLanguage L GammaP : Provable L GammaD : Derivable L Phi, Psi : context H_closed : derivable_closed Psi H_ow : orp_witnessed Psi H : forall P : Ensemble ?A -> Prop, finite_captured P -> subset_preserved P -> Lindenbaum_preserves P falsep_sepcon_left : forall x : expr, |-- FF * x --> FF orp_sepcon_left : forall x y z : expr, |-- (x || y) * z --> x * z || y * z sepcon_comm_impp : forall x y : expr, |-- x * y --> y * x sepcon_assoc1 : forall x y z : expr, |-- x * (y * z) --> x * y * z sepcon_mono : forall x1 x2 y1 y2 : expr, |-- x1 --> x2 -> |-- y1 --> y2 -> |-- x1 * y1 --> x2 * y2 andp_intros : forall x y : expr, |-- x --> y --> x && y andp_elim1 : forall x y : expr, |-- x && y --> x andp_elim2 : forall x y : expr, |-- x && y --> y orp_intros1 : forall x y : expr, |-- x --> x || y orp_intros2 : forall x y : expr, |-- y --> x || y orp_elim : forall x y z : expr, |-- (x --> z) --> (y --> z) --> x || y --> z falsep_elim : forall x : expr, |-- FF --> x modus_ponens : forall x y : expr, |-- x --> y -> |-- x -> |-- y axiom1 : forall x y : expr, |-- x --> y --> x axiom2 : forall x y z : expr, |-- (x --> y --> z) --> (x --> y) --> x --> z deduction_andp_intros : forall (Phi : context) (x y : expr), Phi |-- x -> Phi |-- y -> Phi |-- x && y deduction_andp_elim1 : forall (Phi : context) (x y : expr), Phi |-- x && y -> Phi |-- x deduction_andp_elim2 : forall (Phi : context) (x y : expr), Phi |-- x && y -> Phi |-- y deduction_orp_intros1 : forall (Phi : context) (x y : expr), Phi |-- x -> Phi |-- x || y deduction_orp_intros2 : forall (Phi : context) (x y : expr), Phi |-- y -> Phi |-- x || y deduction_orp_elim : forall (Phi : Ensemble expr) (x y z : expr), Phi;; x |-- z -> Phi;; y |-- z -> Phi;; x || y |-- z deduction_falsep_elim : forall (Phi : context) (x : expr), Phi |-- FF -> Phi |-- x deduction_modus_ponens : forall (Phi : context) (x y : expr), Phi |-- x -> Phi |-- x --> y -> Phi |-- y deduction_impp_intros : forall (Phi : Ensemble expr) (x y : expr), Phi;; x |-- y -> Phi |-- x --> y derivable_finite_witnessed : forall (Phi : context) (y : expr), Phi |-- y -> exists xs : list expr, Forall Phi xs /\\\\ (fun x : expr => In x xs) |-- y deduction_weaken : forall (Phi Psi : Ensemble expr) (x : expr), Included expr Phi Psi -> Phi |-- x -> Psi |-- x derivable_assum : forall (Phi : Ensemble expr) (x : expr), Ensembles.In expr Phi x -> Phi |-- x deduction_subst : forall (Phi Psi : context) (y : expr), (forall x : expr, Psi x -> Phi |-- x) -> Union expr Phi Psi |-- y -> Phi |-- y H0 : forall x : expr, empty_context |-- x -> |-- x H1 : forall x : expr, |-- x -> empty_context |-- x H2 : forall (Phi : context) (y : expr), (exists xs : list expr, Forall (fun x : expr => Phi x) xs /\\\\ |-- multi_imp xs y) -> Phi |-- y H3 : forall (Phi : context) (y : expr), Phi |-- y -> exists xs : list expr, Forall (fun x : expr => Phi x) xs /\\\\ |-- multi_imp xs y H4 : forall x y z : expr, |-- x --> y -* z -> |-- x * y --> z H5 : forall x y z : expr, |-- x * y --> z -> |-- x --> y -* z H7 : forall P : Ensemble ?A1 -> Prop, finite_witnessed P -> finite_captured (fun X : Ensemble ?A1 => P X -> False) H6 : forall P : Ensemble ?A0 -> Prop, finite_captured P -> subset_preserved P -> Lindenbaum_preserves P H10 : forall P : Ensemble ?A3 -> Prop, finite_witnessed P -> finite_captured (fun X : Ensemble ?A3 => P X -> False) H9 : forall Phi2 Psi : context, derivable_closed Psi -> orp_witnessed Psi -> context_orp_captured (context_sepcon_included_l Phi2 Psi) H8 : forall P : Ensemble ?A2 -> Prop, finite_captured P -> subset_preserved P -> Lindenbaum_preserves P Unable to unify \"derivable_closed Psi\" with \"Lindenbaum_ensures (context_sepcon_included_l Phi Psi) orp_witnessed\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros Phi Psi H_closed H_ow.", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness.", "-", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,not_finite_witnessed_finite_captured.", "+", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,context_sepcon_included_l_context_orp_captured,not_finite_witnessed_finite_captured.", "*", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,context_sepcon_included_l_context_orp_captured,not_finite_witnessed_finite_captured."], "tactic": "*", "exn": "Wrong bullet *: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros Phi Psi H_closed H_ow.", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness.", "-", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,not_finite_witnessed_finite_captured.", "+", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,context_sepcon_included_l_context_orp_captured,not_finite_witnessed_finite_captured.", "*", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,context_sepcon_included_l_context_orp_captured,not_finite_witnessed_finite_captured.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*"], "tactic": "apply H_ow.", "exn": "In environment L : Language minL : MinimumLanguage L pL : PropositionalLanguage L sepconL : SepconLanguage L wandL : WandLanguage L GammaP : Provable L GammaD : Derivable L Phi, Psi : context H_closed : derivable_closed Psi H_ow : orp_witnessed Psi H : forall P : Ensemble ?A -> Prop, finite_captured P -> subset_preserved P -> Lindenbaum_preserves P falsep_sepcon_left : forall x : expr, |-- FF * x --> FF orp_sepcon_left : forall x y z : expr, |-- (x || y) * z --> x * z || y * z sepcon_comm_impp : forall x y : expr, |-- x * y --> y * x sepcon_assoc1 : forall x y z : expr, |-- x * (y * z) --> x * y * z sepcon_mono : forall x1 x2 y1 y2 : expr, |-- x1 --> x2 -> |-- y1 --> y2 -> |-- x1 * y1 --> x2 * y2 andp_intros : forall x y : expr, |-- x --> y --> x && y andp_elim1 : forall x y : expr, |-- x && y --> x andp_elim2 : forall x y : expr, |-- x && y --> y orp_intros1 : forall x y : expr, |-- x --> x || y orp_intros2 : forall x y : expr, |-- y --> x || y orp_elim : forall x y z : expr, |-- (x --> z) --> (y --> z) --> x || y --> z falsep_elim : forall x : expr, |-- FF --> x modus_ponens : forall x y : expr, |-- x --> y -> |-- x -> |-- y axiom1 : forall x y : expr, |-- x --> y --> x axiom2 : forall x y z : expr, |-- (x --> y --> z) --> (x --> y) --> x --> z deduction_andp_intros : forall (Phi : context) (x y : expr), Phi |-- x -> Phi |-- y -> Phi |-- x && y deduction_andp_elim1 : forall (Phi : context) (x y : expr), Phi |-- x && y -> Phi |-- x deduction_andp_elim2 : forall (Phi : context) (x y : expr), Phi |-- x && y -> Phi |-- y deduction_orp_intros1 : forall (Phi : context) (x y : expr), Phi |-- x -> Phi |-- x || y deduction_orp_intros2 : forall (Phi : context) (x y : expr), Phi |-- y -> Phi |-- x || y deduction_orp_elim : forall (Phi : Ensemble expr) (x y z : expr), Phi;; x |-- z -> Phi;; y |-- z -> Phi;; x || y |-- z deduction_falsep_elim : forall (Phi : context) (x : expr), Phi |-- FF -> Phi |-- x deduction_modus_ponens : forall (Phi : context) (x y : expr), Phi |-- x -> Phi |-- x --> y -> Phi |-- y deduction_impp_intros : forall (Phi : Ensemble expr) (x y : expr), Phi;; x |-- y -> Phi |-- x --> y derivable_finite_witnessed : forall (Phi : context) (y : expr), Phi |-- y -> exists xs : list expr, Forall Phi xs /\\\\ (fun x : expr => In x xs) |-- y deduction_weaken : forall (Phi Psi : Ensemble expr) (x : expr), Included expr Phi Psi -> Phi |-- x -> Psi |-- x derivable_assum : forall (Phi : Ensemble expr) (x : expr), Ensembles.In expr Phi x -> Phi |-- x deduction_subst : forall (Phi Psi : context) (y : expr), (forall x : expr, Psi x -> Phi |-- x) -> Union expr Phi Psi |-- y -> Phi |-- y H0 : forall x : expr, empty_context |-- x -> |-- x H1 : forall x : expr, |-- x -> empty_context |-- x H2 : forall (Phi : context) (y : expr), (exists xs : list expr, Forall (fun x : expr => Phi x) xs /\\\\ |-- multi_imp xs y) -> Phi |-- y H3 : forall (Phi : context) (y : expr), Phi |-- y -> exists xs : list expr, Forall (fun x : expr => Phi x) xs /\\\\ |-- multi_imp xs y H4 : forall x y z : expr, |-- x --> y -* z -> |-- x * y --> z H5 : forall x y z : expr, |-- x * y --> z -> |-- x --> y -* z H7 : forall P : Ensemble ?A1 -> Prop, finite_witnessed P -> finite_captured (fun X : Ensemble ?A1 => P X -> False) H6 : forall P : Ensemble ?A0 -> Prop, finite_captured P -> subset_preserved P -> Lindenbaum_preserves P Unable to unify \"orp_witnessed Psi\" with \"Type\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros Phi Psi H_closed H_ow.", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness.", "-", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,not_finite_witnessed_finite_captured.", "+", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,context_sepcon_included_l_context_orp_captured,not_finite_witnessed_finite_captured.", "*", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,context_sepcon_included_l_context_orp_captured,not_finite_witnessed_finite_captured.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,context_sepcon_included_l_context_orp_captured,not_finite_witnessed_finite_captured."], "tactic": "+", "exn": "Wrong bullet +: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros Phi Psi H_closed H_ow.", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness.", "-", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,not_finite_witnessed_finite_captured.", "+", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,context_sepcon_included_l_context_orp_captured,not_finite_witnessed_finite_captured.", "*", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,context_sepcon_included_l_context_orp_captured,not_finite_witnessed_finite_captured.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,context_sepcon_included_l_context_orp_captured,not_finite_witnessed_finite_captured.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve."], "tactic": "+", "exn": "Wrong bullet +: Expecting *.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros Phi Psi H_closed H_ow.", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness.", "-", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,not_finite_witnessed_finite_captured.", "+", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,context_sepcon_included_l_context_orp_captured,not_finite_witnessed_finite_captured.", "*", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,context_sepcon_included_l_context_orp_captured,not_finite_witnessed_finite_captured.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,context_sepcon_included_l_context_orp_captured,not_finite_witnessed_finite_captured.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*"], "tactic": "intros H.", "exn": "H is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros Phi Psi H_closed H_ow.", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness.", "-", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,not_finite_witnessed_finite_captured.", "+", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,context_sepcon_included_l_context_orp_captured,not_finite_witnessed_finite_captured.", "*", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,context_sepcon_included_l_context_orp_captured,not_finite_witnessed_finite_captured.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,context_sepcon_included_l_context_orp_captured,not_finite_witnessed_finite_captured.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*"], "tactic": "intros H'.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros Phi Psi H_closed H_ow.", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness.", "-", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,not_finite_witnessed_finite_captured.", "+", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,context_sepcon_included_l_context_orp_captured,not_finite_witnessed_finite_captured.", "*", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,context_sepcon_included_l_context_orp_captured,not_finite_witnessed_finite_captured.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,context_sepcon_included_l_context_orp_captured,not_finite_witnessed_finite_captured.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*"], "tactic": "-", "exn": "Wrong bullet -: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros Phi Psi H_closed H_ow.", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness.", "-", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,not_finite_witnessed_finite_captured.", "+", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,context_sepcon_included_l_context_orp_captured,not_finite_witnessed_finite_captured.", "*", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,context_sepcon_included_l_context_orp_captured,not_finite_witnessed_finite_captured.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,context_sepcon_included_l_context_orp_captured,not_finite_witnessed_finite_captured.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve."], "tactic": "-", "exn": "Wrong bullet -: Expecting *.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros Phi Psi H_closed H_ow.", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness.", "-", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,not_finite_witnessed_finite_captured.", "+", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,context_sepcon_included_l_context_orp_captured,not_finite_witnessed_finite_captured.", "*", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,context_sepcon_included_l_context_orp_captured,not_finite_witnessed_finite_captured.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,context_sepcon_included_l_context_orp_captured,not_finite_witnessed_finite_captured.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*"], "tactic": "intros H.", "exn": "H is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros Phi Psi H_closed H_ow.", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness.", "-", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,not_finite_witnessed_finite_captured.", "+", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,context_sepcon_included_l_context_orp_captured,not_finite_witnessed_finite_captured.", "*", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,context_sepcon_included_l_context_orp_captured,not_finite_witnessed_finite_captured.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,context_sepcon_included_l_context_orp_captured,not_finite_witnessed_finite_captured.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*"], "tactic": "intros H'.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros Phi Psi H_closed H_ow.", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness.", "-", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,not_finite_witnessed_finite_captured.", "+", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,context_sepcon_included_l_context_orp_captured,not_finite_witnessed_finite_captured.", "*", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,context_sepcon_included_l_context_orp_captured,not_finite_witnessed_finite_captured.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,context_sepcon_included_l_context_orp_captured,not_finite_witnessed_finite_captured.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*"], "tactic": "eapply subset_preserved_same_set_preserved.", "exn": "In environment L : Language minL : MinimumLanguage L pL : PropositionalLanguage L sepconL : SepconLanguage L wandL : WandLanguage L GammaP : Provable L GammaD : Derivable L Phi, Psi : context H_closed : derivable_closed Psi H_ow : orp_witnessed Psi H : forall P : Ensemble ?A -> Prop, finite_captured P -> subset_preserved P -> Lindenbaum_preserves P falsep_sepcon_left : forall x : expr, |-- FF * x --> FF orp_sepcon_left : forall x y z : expr, |-- (x || y) * z --> x * z || y * z sepcon_comm_impp : forall x y : expr, |-- x * y --> y * x sepcon_assoc1 : forall x y z : expr, |-- x * (y * z) --> x * y * z sepcon_mono : forall x1 x2 y1 y2 : expr, |-- x1 --> x2 -> |-- y1 --> y2 -> |-- x1 * y1 --> x2 * y2 andp_intros : forall x y : expr, |-- x --> y --> x && y andp_elim1 : forall x y : expr, |-- x && y --> x andp_elim2 : forall x y : expr, |-- x && y --> y orp_intros1 : forall x y : expr, |-- x --> x || y orp_intros2 : forall x y : expr, |-- y --> x || y orp_elim : forall x y z : expr, |-- (x --> z) --> (y --> z) --> x || y --> z falsep_elim : forall x : expr, |-- FF --> x modus_ponens : forall x y : expr, |-- x --> y -> |-- x -> |-- y axiom1 : forall x y : expr, |-- x --> y --> x axiom2 : forall x y z : expr, |-- (x --> y --> z) --> (x --> y) --> x --> z deduction_andp_intros : forall (Phi : context) (x y : expr), Phi |-- x -> Phi |-- y -> Phi |-- x && y deduction_andp_elim1 : forall (Phi : context) (x y : expr), Phi |-- x && y -> Phi |-- x deduction_andp_elim2 : forall (Phi : context) (x y : expr), Phi |-- x && y -> Phi |-- y deduction_orp_intros1 : forall (Phi : context) (x y : expr), Phi |-- x -> Phi |-- x || y deduction_orp_intros2 : forall (Phi : context) (x y : expr), Phi |-- y -> Phi |-- x || y deduction_orp_elim : forall (Phi : Ensemble expr) (x y z : expr), Phi;; x |-- z -> Phi;; y |-- z -> Phi;; x || y |-- z deduction_falsep_elim : forall (Phi : context) (x : expr), Phi |-- FF -> Phi |-- x deduction_modus_ponens : forall (Phi : context) (x y : expr), Phi |-- x -> Phi |-- x --> y -> Phi |-- y deduction_impp_intros : forall (Phi : Ensemble expr) (x y : expr), Phi;; x |-- y -> Phi |-- x --> y derivable_finite_witnessed : forall (Phi : context) (y : expr), Phi |-- y -> exists xs : list expr, Forall Phi xs /\\\\ (fun x : expr => In x xs) |-- y deduction_weaken : forall (Phi Psi : Ensemble expr) (x : expr), Included expr Phi Psi -> Phi |-- x -> Psi |-- x derivable_assum : forall (Phi : Ensemble expr) (x : expr), Ensembles.In expr Phi x -> Phi |-- x deduction_subst : forall (Phi Psi : context) (y : expr), (forall x : expr, Psi x -> Phi |-- x) -> Union expr Phi Psi |-- y -> Phi |-- y H0 : forall x : expr, empty_context |-- x -> |-- x H1 : forall x : expr, |-- x -> empty_context |-- x H2 : forall (Phi : context) (y : expr), (exists xs : list expr, Forall (fun x : expr => Phi x) xs /\\\\ |-- multi_imp xs y) -> Phi |-- y H3 : forall (Phi : context) (y : expr), Phi |-- y -> exists xs : list expr, Forall (fun x : expr => Phi x) xs /\\\\ |-- multi_imp xs y H4 : forall x y z : expr, |-- x --> y -* z -> |-- x * y --> z H5 : forall x y z : expr, |-- x * y --> z -> |-- x --> y -* z H7 : forall P : Ensemble ?A1 -> Prop, finite_witnessed P -> finite_captured (fun X : Ensemble ?A1 => P X -> False) H6 : forall P : Ensemble ?A0 -> Prop, finite_captured P -> subset_preserved P -> Lindenbaum_preserves P Unable to unify \"forall x y : Ensemble ?A7, Same_set ?A7 x y -> ?M89748 x <-> ?M89748 y\" with \"Type\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros Phi Psi H_closed H_ow.", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness.", "-", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,not_finite_witnessed_finite_captured.", "+", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,context_sepcon_included_l_context_orp_captured,not_finite_witnessed_finite_captured.", "*", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,context_sepcon_included_l_context_orp_captured,not_finite_witnessed_finite_captured.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,context_sepcon_included_l_context_orp_captured,not_finite_witnessed_finite_captured.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*"], "tactic": "+", "exn": "Wrong bullet +: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros Phi Psi H_closed H_ow.", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness.", "-", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,not_finite_witnessed_finite_captured.", "+", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,context_sepcon_included_l_context_orp_captured,not_finite_witnessed_finite_captured.", "*", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,context_sepcon_included_l_context_orp_captured,not_finite_witnessed_finite_captured.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,context_sepcon_included_l_context_orp_captured,not_finite_witnessed_finite_captured.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "+"], "tactic": "eapply context_sepcon_included_equiv.", "exn": "In environment L : Language minL : MinimumLanguage L pL : PropositionalLanguage L sepconL : SepconLanguage L wandL : WandLanguage L GammaP : Provable L GammaD : Derivable L Phi, Psi : context H_closed : derivable_closed Psi H_ow : orp_witnessed Psi H : forall P : Ensemble ?A -> Prop, finite_captured P -> subset_preserved P -> Lindenbaum_preserves P falsep_sepcon_left : forall x : expr, |-- FF * x --> FF orp_sepcon_left : forall x y z : expr, |-- (x || y) * z --> x * z || y * z sepcon_comm_impp : forall x y : expr, |-- x * y --> y * x sepcon_assoc1 : forall x y z : expr, |-- x * (y * z) --> x * y * z sepcon_mono : forall x1 x2 y1 y2 : expr, |-- x1 --> x2 -> |-- y1 --> y2 -> |-- x1 * y1 --> x2 * y2 andp_intros : forall x y : expr, |-- x --> y --> x && y andp_elim1 : forall x y : expr, |-- x && y --> x andp_elim2 : forall x y : expr, |-- x && y --> y orp_intros1 : forall x y : expr, |-- x --> x || y orp_intros2 : forall x y : expr, |-- y --> x || y orp_elim : forall x y z : expr, |-- (x --> z) --> (y --> z) --> x || y --> z falsep_elim : forall x : expr, |-- FF --> x modus_ponens : forall x y : expr, |-- x --> y -> |-- x -> |-- y axiom1 : forall x y : expr, |-- x --> y --> x axiom2 : forall x y z : expr, |-- (x --> y --> z) --> (x --> y) --> x --> z deduction_andp_intros : forall (Phi : context) (x y : expr), Phi |-- x -> Phi |-- y -> Phi |-- x && y deduction_andp_elim1 : forall (Phi : context) (x y : expr), Phi |-- x && y -> Phi |-- x deduction_andp_elim2 : forall (Phi : context) (x y : expr), Phi |-- x && y -> Phi |-- y deduction_orp_intros1 : forall (Phi : context) (x y : expr), Phi |-- x -> Phi |-- x || y deduction_orp_intros2 : forall (Phi : context) (x y : expr), Phi |-- y -> Phi |-- x || y deduction_orp_elim : forall (Phi : Ensemble expr) (x y z : expr), Phi;; x |-- z -> Phi;; y |-- z -> Phi;; x || y |-- z deduction_falsep_elim : forall (Phi : context) (x : expr), Phi |-- FF -> Phi |-- x deduction_modus_ponens : forall (Phi : context) (x y : expr), Phi |-- x -> Phi |-- x --> y -> Phi |-- y deduction_impp_intros : forall (Phi : Ensemble expr) (x y : expr), Phi;; x |-- y -> Phi |-- x --> y derivable_finite_witnessed : forall (Phi : context) (y : expr), Phi |-- y -> exists xs : list expr, Forall Phi xs /\\\\ (fun x : expr => In x xs) |-- y deduction_weaken : forall (Phi Psi : Ensemble expr) (x : expr), Included expr Phi Psi -> Phi |-- x -> Psi |-- x derivable_assum : forall (Phi : Ensemble expr) (x : expr), Ensembles.In expr Phi x -> Phi |-- x deduction_subst : forall (Phi Psi : context) (y : expr), (forall x : expr, Psi x -> Phi |-- x) -> Union expr Phi Psi |-- y -> Phi |-- y H0 : forall x : expr, empty_context |-- x -> |-- x H1 : forall x : expr, |-- x -> empty_context |-- x H2 : forall (Phi : context) (y : expr), (exists xs : list expr, Forall (fun x : expr => Phi x) xs /\\\\ |-- multi_imp xs y) -> Phi |-- y H3 : forall (Phi : context) (y : expr), Phi |-- y -> exists xs : list expr, Forall (fun x : expr => Phi x) xs /\\\\ |-- multi_imp xs y H4 : forall x y z : expr, |-- x --> y -* z -> |-- x * y --> z H5 : forall x y z : expr, |-- x * y --> z -> |-- x --> y -* z Unable to unify \"Included context (context_sepcon_included_l ?M89748 ?M89749) (context_sepcon_included_r ?M89748 ?M89749) /\\\\ Included context (context_sepcon_included_r ?M89748 ?M89749) (context_sepcon_included_l ?M89748 ?M89749)\" with \"Type\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros Phi Psi H_closed H_ow.", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness.", "-", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,not_finite_witnessed_finite_captured.", "+", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,context_sepcon_included_l_context_orp_captured,not_finite_witnessed_finite_captured.", "*", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,context_sepcon_included_l_context_orp_captured,not_finite_witnessed_finite_captured.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,context_sepcon_included_l_context_orp_captured,not_finite_witnessed_finite_captured.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "+"], "tactic": "+", "exn": "Wrong bullet +: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros Phi Psi H_closed H_ow.", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness.", "-", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,not_finite_witnessed_finite_captured.", "+", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,context_sepcon_included_l_context_orp_captured,not_finite_witnessed_finite_captured.", "*", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,context_sepcon_included_l_context_orp_captured,not_finite_witnessed_finite_captured.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,context_sepcon_included_l_context_orp_captured,not_finite_witnessed_finite_captured.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "+", "shelve.", "+"], "tactic": "intros _.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros Phi Psi H_closed H_ow.", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness.", "-", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,not_finite_witnessed_finite_captured.", "+", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,context_sepcon_included_l_context_orp_captured,not_finite_witnessed_finite_captured.", "*", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,context_sepcon_included_l_context_orp_captured,not_finite_witnessed_finite_captured.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: Lindenbaum_preserves_by_finiteness,context_sepcon_included_l_context_orp_captured,not_finite_witnessed_finite_captured.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "+", "shelve.", "+"], "tactic": "split.", "exn": "Not an inductive product.", "type": "not_inductive_product", "handled": true}]}, "chat": [], "original": "intros Phi Psi H_closed H_ow. apply Lindenbaum_preserves_by_finiteness. - eapply not_finite_witnessed_finite_captured. + apply context_sepcon_included_l_context_orp_captured. * apply H_closed. * apply H_ow. + intros H. apply Lindenbaum_context_sepcon_included_l_ensures_derivable_closed. - intros H. eapply subset_preserved_same_set_preserved. + eapply context_sepcon_included_equiv. * apply H_closed. + intros _. split. * intros _. right. intros a H_a. apply H. apply Ensembles_ext.left_Included_Union. * intros [H_incl | H_incl]. { apply H_incl. } { intros a H_a. apply H_incl. apply Ensembles_ext.right_Included_Union. }", "back_times": 12, "succ": false, "time": 195.69193816184998}]