[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros x y m."], "tactic": "apply sound_emp_sepcon_elim1.", "exn": "In environment L : Language minL : MinimumLanguage L pL : PropositionalLanguage L sepconL : SepconLanguage L wandL : WandLanguage L MD : Model kMD : KripkeModel MD M : Kmodel R : Relation (Kworlds M) po_R : PreOrder Krelation J : Join (Kworlds M) SA : SeparationAlgebra (Kworlds M) dSA : DownwardsClosedSeparationAlgebra (Kworlds M) SM : Semantics L MD kiSM : KripkeIntuitionisticSemantics L MD M SM kminSM : KripkeMinimumSemantics L MD M SM kpSM : KripkePropositionalSemantics L MD M SM fsepconSM : SepconSemantics L MD M SM fwandSM : WandSemantics L MD M SM empL : EmpLanguage L feSM : EmpSemantics L MD M SM IJSSA : IncreasingJoinSelfSeparationAlgebra (Kworlds M) x, y : expr m : Kworlds M Unable to unify \"(let (denotation) := SM in denotation) (?M2113 * ?M2114 && emp --> ?M2113) (KRIPKE: M, ?M2115)\" with \"(let (denotation) := SM in denotation) (x && emp --> x * x) (KRIPKE: M, m)\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros x y m. apply sound_emp_sepcon_elim1.", "back_times": 0, "succ": false, "time": 103.84479284286499}]