[{"history": {"proof": "hauto use: Zp_opp_plus, Zp_plus_zero, div_rem_spec2, nat2Zp_minus, nat2Zp_p, Zp_opp_zero, rem_diag, nat2Zp_one unfold: lt.", "repairs": [], "exceptions": []}, "chat": [], "original": "apply nat2Zp_inj. assert (Hle: 1 <= p) by lia. rewrite (nat2Zp_minus _ _ Hle). rewrite nat2Zp_one. apply Zp_mult_revert with (i := \u301ap-1\u301b). apply Zp_prime_invert. - split. * intros contra. apply Hp. auto. * intros q Hq. destruct Hq as [k Hk]. destruct (Nat.eq_dec q 0). + subst. rewrite Nat.mul_0_r in Hk. lia. + right. assert (Hdiv: divides (Z.of_nat q) (Z.of_nat (k * q))%Z) by (exists (Z.of_nat k); rewrite Nat2Z.inj_mul; lia). rewrite Hk in Hdiv. apply prime_gcd. lia. - intro contra. rewrite contra. simpl. apply divide_prop_zero.", "back_times": 0, "succ": true, "time": 155.04758739471436}]