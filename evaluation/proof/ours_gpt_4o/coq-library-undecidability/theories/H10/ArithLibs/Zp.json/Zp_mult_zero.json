[{"history": {"proof": "hauto lq: on use: Zp_plus_zero_r, Zp_mult_plus_distr_l, Zp_mult_comm, Zp_mult_one_r, Zp_plus_inj_l, Zp_mult_one.", "repairs": ["cannot_apply_in"], "exceptions": [{"ctx": ["pose proof Zp_prime_invert as Hinv."], "tactic": "apply Hinv in Hp.", "exn": "Unable to apply lemma of type \"prime p -> forall x, x <> Zp -> {i : Z_Zp | i \u2297 x = Op}\" on hypothesis of type \"p <> 0\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["pose proof Zp_prime_invert as Hinv.", "qsimpl time: 1."], "tactic": ["destruct Hp as [i Hi].", ""], "exn": "Expects a disjunctive pattern with 0 branches.", "type": "num_branch", "handled": false}]}, "chat": [], "original": "pose proof Zp_prime_invert as Hinv. apply Hinv in Hp. - destruct Hp as [i Hi]. rewrite Zp_mult_comm. rewrite <- Hi. rewrite Zp_left_distrib. rewrite Zp_opp_zero. rewrite Zp_plus_zero_r. reflexivity. - intros Hcontra. rewrite Hcontra in Hi. rewrite Zp_mult_comm in Hi. apply Zp_mult_one_l in Hi. contradiction.", "back_times": 0, "succ": true, "time": 111.18359303474426}]