[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros Hle Heq."], "tactic": "apply Z2Zp_repr_canon in Hle.", "exn": "Unable to apply lemma of type \"forall u, {v : Z | \u3018 u \u3019 = \u3018 v \u3019 /\\\\ 0 <= v < Z.of_nat p}\" on hypothesis of type \"v <= u\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["intros Hle Heq.", "qsimpl time: 1 use: Z2Zp_repr_canon."], "tactic": ["destruct Hle as [w [Heq' Hw]].", ""], "exn": "Expects a disjunctive pattern with 0 branches.", "type": "num_branch", "handled": false}]}, "chat": [], "original": "intros Hle Heq. apply Z2Zp_repr_canon in Hle. destruct Hle as [w [Heq' Hw]]. assert (Hdiff:\u3018 u - v \u3019 = \u3018 u \u3019 \u2295 \u2238 \u3018 v \u3019) by (apply Z2Zp_minus). rewrite Heq in Heq'. rewrite Heq' in Hdiff. rewrite <- Heq in Hdiff. apply Z2Zp in Hw as Hmod. exists (Z.div (Z.sub u v) (Z.of_nat p)). rewrite <- Z.mul_div_eq_full by lia. rewrite Z.div_mul_cancel_r by (unfold divides; exists 1%nat; auto). rewrite <- (Z.mul_1_r (Z.of_nat p)). symmetry in Hw. apply Z2Zp_pos in Hw. rewrite Z2Zp_of_nat in Hw. rewrite <- Z.mul_succ_l, <- Z.mul_add_distr_l, <- Z.mul_add_distr_r, Z.mul_1_r. apply Hw.", "back_times": 0, "succ": false, "time": 213.460294008255}]