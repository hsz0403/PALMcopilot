[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros Hp.", "split.", "-", "intros H."], "tactic": "destruct (prime_or_div p Hp) as [[q [Hq1 Hq2]] | Hprime].", "exn": "In environment p : nat Hp : 2 <= p H : prime p The term \"p\" has type \"nat\" while it is expected to have type \"2 <= ?p\".", "type": "wrong_type", "handled": true}, {"ctx": ["intros Hp.", "split.", "-", "intros H.", "qsimpl time: 1 use: prime_or_div."], "tactic": "-", "exn": "[Focus] Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros Hp.", "split.", "-", "intros H.", "qsimpl time: 1 use: prime_or_div.", "shelve.", "-", "intros Hq.", "assert (Hp1 : p <> 0) by lia."], "tactic": "rewrite <- (Wilson_thm_1 p Hp1 Hq).", "exn": "In environment p : nat Hp : 2 <= p Hq : divides p (fact (p - 1) + 1) Hp1 : p <> 0 The term \"p\" has type \"nat\" while it is expected to have type \"?p <> 0\".", "type": "wrong_type", "handled": true}, {"ctx": ["intros Hp.", "split.", "-", "intros H.", "qsimpl time: 1 use: prime_or_div.", "shelve.", "-", "intros Hq.", "assert (Hp1 : p <> 0) by lia."], "tactic": "qsimpl time: 1 use: prime_algo,Zp_invertible_factorial,add_succ_r,divides_fact,Wilson_thm_1,eq_nat_dec,prime_or_div,omega,lia,prime_factor,Nat,prime_ge_2,fact,discriminate,contradiction,divides_le,contradict.", "exn": "The reference add_succ_r was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros Hp.", "split.", "-", "intros H.", "qsimpl time: 1 use: prime_or_div.", "shelve.", "-", "intros Hq.", "assert (Hp1 : p <> 0) by lia."], "tactic": "qsimpl time: 1 use: prime_algo,Zp_invertible_factorial,divides_fact,Wilson_thm_1,eq_nat_dec,prime_or_div,omega,lia,prime_factor,Nat,prime_ge_2,fact,discriminate,contradiction,divides_le,contradict.", "exn": "The reference omega was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros Hp.", "split.", "-", "intros H.", "qsimpl time: 1 use: prime_or_div.", "shelve.", "-", "intros Hq.", "assert (Hp1 : p <> 0) by lia."], "tactic": "qsimpl time: 1 use: prime_algo,Zp_invertible_factorial,divides_fact,Wilson_thm_1,eq_nat_dec,prime_or_div,lia,prime_factor,Nat,prime_ge_2,fact,discriminate,contradiction,divides_le,contradict.", "exn": "The reference lia was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros Hp.", "split.", "-", "intros H.", "qsimpl time: 1 use: prime_or_div.", "shelve.", "-", "intros Hq.", "assert (Hp1 : p <> 0) by lia."], "tactic": "qsimpl time: 1 use: prime_algo,Zp_invertible_factorial,divides_fact,Wilson_thm_1,eq_nat_dec,prime_or_div,prime_factor,Nat,prime_ge_2,fact,discriminate,contradiction,divides_le,contradict.", "exn": "The reference Nat was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros Hp.", "split.", "-", "intros H.", "qsimpl time: 1 use: prime_or_div.", "shelve.", "-", "intros Hq.", "assert (Hp1 : p <> 0) by lia."], "tactic": "qsimpl time: 1 use: prime_algo,Zp_invertible_factorial,divides_fact,Wilson_thm_1,eq_nat_dec,prime_or_div,prime_factor,prime_ge_2,fact,discriminate,contradiction,divides_le,contradict.", "exn": "The reference discriminate was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros Hp.", "split.", "-", "intros H.", "qsimpl time: 1 use: prime_or_div.", "shelve.", "-", "intros Hq.", "assert (Hp1 : p <> 0) by lia."], "tactic": "qsimpl time: 1 use: prime_algo,Zp_invertible_factorial,divides_fact,Wilson_thm_1,eq_nat_dec,prime_or_div,prime_factor,prime_ge_2,fact,contradiction,divides_le,contradict.", "exn": "The reference contradiction was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros Hp.", "split.", "-", "intros H.", "qsimpl time: 1 use: prime_or_div.", "shelve.", "-", "intros Hq.", "assert (Hp1 : p <> 0) by lia."], "tactic": "qsimpl time: 1 use: prime_algo,Zp_invertible_factorial,divides_fact,Wilson_thm_1,eq_nat_dec,prime_or_div,prime_factor,prime_ge_2,fact,divides_le,contradict.", "exn": "The reference contradict was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros Hp.", "split.", "-", "intros H.", "qsimpl time: 1 use: prime_or_div.", "shelve.", "-", "intros Hq.", "assert (Hp1 : p <> 0) by lia.", "qsimpl time: 1 use: prime_algo,Zp_invertible_factorial,divides_fact,Wilson_thm_1,eq_nat_dec,prime_or_div,prime_factor,prime_ge_2,fact,divides_le."], "tactic": "rewrite nat2Zp_minus_one in Hq.", "exn": "No such hypothesis: Hq", "type": "no_hypos", "handled": true}, {"ctx": ["intros Hp.", "split.", "-", "intros H.", "qsimpl time: 1 use: prime_or_div.", "shelve.", "-", "intros Hq.", "assert (Hp1 : p <> 0) by lia.", "qsimpl time: 1 use: prime_algo,Zp_invertible_factorial,divides_fact,Wilson_thm_1,eq_nat_dec,prime_or_div,prime_factor,prime_ge_2,fact,divides_le."], "tactic": "qsimpl time: 1 use: prime_algo,Zp_invertible_factorial,add_succ_r,divides_fact,Wilson_thm_1,nat2Zp_minus_one,eq_nat_dec,prime_or_div,omega,lia,prime_factor,Nat,prime_ge_2,fact,discriminate,contradiction,divides_le,contradict.", "exn": "The reference add_succ_r was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros Hp.", "split.", "-", "intros H.", "qsimpl time: 1 use: prime_or_div.", "shelve.", "-", "intros Hq.", "assert (Hp1 : p <> 0) by lia.", "qsimpl time: 1 use: prime_algo,Zp_invertible_factorial,divides_fact,Wilson_thm_1,eq_nat_dec,prime_or_div,prime_factor,prime_ge_2,fact,divides_le."], "tactic": "qsimpl time: 1 use: prime_algo,Zp_invertible_factorial,divides_fact,Wilson_thm_1,nat2Zp_minus_one,eq_nat_dec,prime_or_div,omega,lia,prime_factor,Nat,prime_ge_2,fact,discriminate,contradiction,divides_le,contradict.", "exn": "The reference omega was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros Hp.", "split.", "-", "intros H.", "qsimpl time: 1 use: prime_or_div.", "shelve.", "-", "intros Hq.", "assert (Hp1 : p <> 0) by lia.", "qsimpl time: 1 use: prime_algo,Zp_invertible_factorial,divides_fact,Wilson_thm_1,eq_nat_dec,prime_or_div,prime_factor,prime_ge_2,fact,divides_le."], "tactic": "qsimpl time: 1 use: prime_algo,Zp_invertible_factorial,divides_fact,Wilson_thm_1,nat2Zp_minus_one,eq_nat_dec,prime_or_div,lia,prime_factor,Nat,prime_ge_2,fact,discriminate,contradiction,divides_le,contradict.", "exn": "The reference lia was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros Hp.", "split.", "-", "intros H.", "qsimpl time: 1 use: prime_or_div.", "shelve.", "-", "intros Hq.", "assert (Hp1 : p <> 0) by lia.", "qsimpl time: 1 use: prime_algo,Zp_invertible_factorial,divides_fact,Wilson_thm_1,eq_nat_dec,prime_or_div,prime_factor,prime_ge_2,fact,divides_le."], "tactic": "qsimpl time: 1 use: prime_algo,Zp_invertible_factorial,divides_fact,Wilson_thm_1,nat2Zp_minus_one,eq_nat_dec,prime_or_div,prime_factor,Nat,prime_ge_2,fact,discriminate,contradiction,divides_le,contradict.", "exn": "The reference Nat was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros Hp.", "split.", "-", "intros H.", "qsimpl time: 1 use: prime_or_div.", "shelve.", "-", "intros Hq.", "assert (Hp1 : p <> 0) by lia.", "qsimpl time: 1 use: prime_algo,Zp_invertible_factorial,divides_fact,Wilson_thm_1,eq_nat_dec,prime_or_div,prime_factor,prime_ge_2,fact,divides_le."], "tactic": "qsimpl time: 1 use: prime_algo,Zp_invertible_factorial,divides_fact,Wilson_thm_1,nat2Zp_minus_one,eq_nat_dec,prime_or_div,prime_factor,prime_ge_2,fact,discriminate,contradiction,divides_le,contradict.", "exn": "The reference discriminate was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros Hp.", "split.", "-", "intros H.", "qsimpl time: 1 use: prime_or_div.", "shelve.", "-", "intros Hq.", "assert (Hp1 : p <> 0) by lia.", "qsimpl time: 1 use: prime_algo,Zp_invertible_factorial,divides_fact,Wilson_thm_1,eq_nat_dec,prime_or_div,prime_factor,prime_ge_2,fact,divides_le."], "tactic": "qsimpl time: 1 use: prime_algo,Zp_invertible_factorial,divides_fact,Wilson_thm_1,nat2Zp_minus_one,eq_nat_dec,prime_or_div,prime_factor,prime_ge_2,fact,contradiction,divides_le,contradict.", "exn": "The reference contradiction was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros Hp.", "split.", "-", "intros H.", "qsimpl time: 1 use: prime_or_div.", "shelve.", "-", "intros Hq.", "assert (Hp1 : p <> 0) by lia.", "qsimpl time: 1 use: prime_algo,Zp_invertible_factorial,divides_fact,Wilson_thm_1,eq_nat_dec,prime_or_div,prime_factor,prime_ge_2,fact,divides_le."], "tactic": "qsimpl time: 1 use: prime_algo,Zp_invertible_factorial,divides_fact,Wilson_thm_1,nat2Zp_minus_one,eq_nat_dec,prime_or_div,prime_factor,prime_ge_2,fact,divides_le,contradict.", "exn": "The reference contradict was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros Hp.", "split.", "-", "intros H.", "qsimpl time: 1 use: prime_or_div.", "shelve.", "-", "intros Hq.", "assert (Hp1 : p <> 0) by lia.", "qsimpl time: 1 use: prime_algo,Zp_invertible_factorial,divides_fact,Wilson_thm_1,eq_nat_dec,prime_or_div,prime_factor,prime_ge_2,fact,divides_le.", "qsimpl time: 1 use: prime_algo,Zp_invertible_factorial,divides_fact,Wilson_thm_1,nat2Zp_minus_one,eq_nat_dec,prime_or_div,prime_factor,prime_ge_2,fact,divides_le."], "tactic": "replace (nat2Zp Hp1 (fact (p - 1) + 1)) with (Zp_zero Hp1).", "exn": "The reference p was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros Hp.", "split.", "-", "intros H.", "qsimpl time: 1 use: prime_or_div.", "shelve.", "-", "intros Hq.", "assert (Hp1 : p <> 0) by lia.", "qsimpl time: 1 use: prime_algo,Zp_invertible_factorial,divides_fact,Wilson_thm_1,eq_nat_dec,prime_or_div,prime_factor,prime_ge_2,fact,divides_le.", "qsimpl time: 1 use: prime_algo,Zp_invertible_factorial,divides_fact,Wilson_thm_1,nat2Zp_minus_one,eq_nat_dec,prime_or_div,prime_factor,prime_ge_2,fact,divides_le."], "tactic": "rewrite Zp_opp_add.", "exn": "The reference Zp_opp_add was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros Hp.", "split.", "-", "intros H.", "qsimpl time: 1 use: prime_or_div.", "shelve.", "-", "intros Hq.", "assert (Hp1 : p <> 0) by lia.", "qsimpl time: 1 use: prime_algo,Zp_invertible_factorial,divides_fact,Wilson_thm_1,eq_nat_dec,prime_or_div,prime_factor,prime_ge_2,fact,divides_le.", "qsimpl time: 1 use: prime_algo,Zp_invertible_factorial,divides_fact,Wilson_thm_1,nat2Zp_minus_one,eq_nat_dec,prime_or_div,prime_factor,prime_ge_2,fact,divides_le."], "tactic": "rewrite Zp_opp_one.", "exn": "The reference Zp_opp_one was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros Hp.", "split.", "-", "intros H.", "qsimpl time: 1 use: prime_or_div.", "shelve.", "-", "intros Hq.", "assert (Hp1 : p <> 0) by lia.", "qsimpl time: 1 use: prime_algo,Zp_invertible_factorial,divides_fact,Wilson_thm_1,eq_nat_dec,prime_or_div,prime_factor,prime_ge_2,fact,divides_le.", "qsimpl time: 1 use: prime_algo,Zp_invertible_factorial,divides_fact,Wilson_thm_1,nat2Zp_minus_one,eq_nat_dec,prime_or_div,prime_factor,prime_ge_2,fact,divides_le.", "rewrite ZifyClasses.or_morph."], "tactic": "rewrite Zp_lprod_fact.", "exn": "Found no subterm matching \"nat2Zp ?M9044 (fact (S ?M9046))\" in the current goal.", "type": "no_subterm", "handled": true}, {"ctx": ["intros Hp.", "split.", "-", "intros H.", "qsimpl time: 1 use: prime_or_div.", "shelve.", "-", "intros Hq.", "assert (Hp1 : p <> 0) by lia.", "qsimpl time: 1 use: prime_algo,Zp_invertible_factorial,divides_fact,Wilson_thm_1,eq_nat_dec,prime_or_div,prime_factor,prime_ge_2,fact,divides_le.", "qsimpl time: 1 use: prime_algo,Zp_invertible_factorial,divides_fact,Wilson_thm_1,nat2Zp_minus_one,eq_nat_dec,prime_or_div,prime_factor,prime_ge_2,fact,divides_le.", "rewrite ZifyClasses.or_morph."], "tactic": "qsimpl time: 1 use: Zp_lprod_fact,prime_factor,lia,divides_le,fact,divides_fact,Wilson_thm_1,prime_or_div,Zp_invertible_factorial,prime_algo,contradiction,omega,discriminate,contradict,add_succ_r,nat2Zp_minus_one,eq_nat_dec,Nat,prime_ge_2.", "exn": "The reference lia was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros Hp.", "split.", "-", "intros H.", "qsimpl time: 1 use: prime_or_div.", "shelve.", "-", "intros Hq.", "assert (Hp1 : p <> 0) by lia.", "qsimpl time: 1 use: prime_algo,Zp_invertible_factorial,divides_fact,Wilson_thm_1,eq_nat_dec,prime_or_div,prime_factor,prime_ge_2,fact,divides_le.", "qsimpl time: 1 use: prime_algo,Zp_invertible_factorial,divides_fact,Wilson_thm_1,nat2Zp_minus_one,eq_nat_dec,prime_or_div,prime_factor,prime_ge_2,fact,divides_le.", "rewrite ZifyClasses.or_morph."], "tactic": "qsimpl time: 1 use: Zp_lprod_fact,prime_factor,divides_le,fact,divides_fact,Wilson_thm_1,prime_or_div,Zp_invertible_factorial,prime_algo,contradiction,omega,discriminate,contradict,add_succ_r,nat2Zp_minus_one,eq_nat_dec,Nat,prime_ge_2.", "exn": "The reference contradiction was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros Hp.", "split.", "-", "intros H.", "qsimpl time: 1 use: prime_or_div.", "shelve.", "-", "intros Hq.", "assert (Hp1 : p <> 0) by lia.", "qsimpl time: 1 use: prime_algo,Zp_invertible_factorial,divides_fact,Wilson_thm_1,eq_nat_dec,prime_or_div,prime_factor,prime_ge_2,fact,divides_le.", "qsimpl time: 1 use: prime_algo,Zp_invertible_factorial,divides_fact,Wilson_thm_1,nat2Zp_minus_one,eq_nat_dec,prime_or_div,prime_factor,prime_ge_2,fact,divides_le.", "rewrite ZifyClasses.or_morph."], "tactic": "qsimpl time: 1 use: Zp_lprod_fact,prime_factor,divides_le,fact,divides_fact,Wilson_thm_1,prime_or_div,Zp_invertible_factorial,prime_algo,omega,discriminate,contradict,add_succ_r,nat2Zp_minus_one,eq_nat_dec,Nat,prime_ge_2.", "exn": "The reference omega was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros Hp.", "split.", "-", "intros H.", "qsimpl time: 1 use: prime_or_div.", "shelve.", "-", "intros Hq.", "assert (Hp1 : p <> 0) by lia.", "qsimpl time: 1 use: prime_algo,Zp_invertible_factorial,divides_fact,Wilson_thm_1,eq_nat_dec,prime_or_div,prime_factor,prime_ge_2,fact,divides_le.", "qsimpl time: 1 use: prime_algo,Zp_invertible_factorial,divides_fact,Wilson_thm_1,nat2Zp_minus_one,eq_nat_dec,prime_or_div,prime_factor,prime_ge_2,fact,divides_le.", "rewrite ZifyClasses.or_morph."], "tactic": "qsimpl time: 1 use: Zp_lprod_fact,prime_factor,divides_le,fact,divides_fact,Wilson_thm_1,prime_or_div,Zp_invertible_factorial,prime_algo,discriminate,contradict,add_succ_r,nat2Zp_minus_one,eq_nat_dec,Nat,prime_ge_2.", "exn": "The reference discriminate was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros Hp.", "split.", "-", "intros H.", "qsimpl time: 1 use: prime_or_div.", "shelve.", "-", "intros Hq.", "assert (Hp1 : p <> 0) by lia.", "qsimpl time: 1 use: prime_algo,Zp_invertible_factorial,divides_fact,Wilson_thm_1,eq_nat_dec,prime_or_div,prime_factor,prime_ge_2,fact,divides_le.", "qsimpl time: 1 use: prime_algo,Zp_invertible_factorial,divides_fact,Wilson_thm_1,nat2Zp_minus_one,eq_nat_dec,prime_or_div,prime_factor,prime_ge_2,fact,divides_le.", "rewrite ZifyClasses.or_morph."], "tactic": "qsimpl time: 1 use: Zp_lprod_fact,prime_factor,divides_le,fact,divides_fact,Wilson_thm_1,prime_or_div,Zp_invertible_factorial,prime_algo,contradict,add_succ_r,nat2Zp_minus_one,eq_nat_dec,Nat,prime_ge_2.", "exn": "The reference contradict was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros Hp.", "split.", "-", "intros H.", "qsimpl time: 1 use: prime_or_div.", "shelve.", "-", "intros Hq.", "assert (Hp1 : p <> 0) by lia.", "qsimpl time: 1 use: prime_algo,Zp_invertible_factorial,divides_fact,Wilson_thm_1,eq_nat_dec,prime_or_div,prime_factor,prime_ge_2,fact,divides_le.", "qsimpl time: 1 use: prime_algo,Zp_invertible_factorial,divides_fact,Wilson_thm_1,nat2Zp_minus_one,eq_nat_dec,prime_or_div,prime_factor,prime_ge_2,fact,divides_le.", "rewrite ZifyClasses.or_morph."], "tactic": "qsimpl time: 1 use: Zp_lprod_fact,prime_factor,divides_le,fact,divides_fact,Wilson_thm_1,prime_or_div,Zp_invertible_factorial,prime_algo,add_succ_r,nat2Zp_minus_one,eq_nat_dec,Nat,prime_ge_2.", "exn": "The reference add_succ_r was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros Hp.", "split.", "-", "intros H.", "qsimpl time: 1 use: prime_or_div.", "shelve.", "-", "intros Hq.", "assert (Hp1 : p <> 0) by lia.", "qsimpl time: 1 use: prime_algo,Zp_invertible_factorial,divides_fact,Wilson_thm_1,eq_nat_dec,prime_or_div,prime_factor,prime_ge_2,fact,divides_le.", "qsimpl time: 1 use: prime_algo,Zp_invertible_factorial,divides_fact,Wilson_thm_1,nat2Zp_minus_one,eq_nat_dec,prime_or_div,prime_factor,prime_ge_2,fact,divides_le.", "rewrite ZifyClasses.or_morph."], "tactic": "qsimpl time: 1 use: Zp_lprod_fact,prime_factor,divides_le,fact,divides_fact,Wilson_thm_1,prime_or_div,Zp_invertible_factorial,prime_algo,nat2Zp_minus_one,eq_nat_dec,Nat,prime_ge_2.", "exn": "The reference Nat was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros Hp.", "split.", "-", "intros H.", "qsimpl time: 1 use: prime_or_div.", "shelve.", "-", "intros Hq.", "assert (Hp1 : p <> 0) by lia.", "qsimpl time: 1 use: prime_algo,Zp_invertible_factorial,divides_fact,Wilson_thm_1,eq_nat_dec,prime_or_div,prime_factor,prime_ge_2,fact,divides_le.", "qsimpl time: 1 use: prime_algo,Zp_invertible_factorial,divides_fact,Wilson_thm_1,nat2Zp_minus_one,eq_nat_dec,prime_or_div,prime_factor,prime_ge_2,fact,divides_le.", "rewrite ZifyClasses.or_morph.", "qsimpl time: 1 use: Zp_lprod_fact,prime_factor,divides_le,fact,divides_fact,Wilson_thm_1,prime_or_div,Zp_invertible_factorial,prime_algo,nat2Zp_minus_one,eq_nat_dec,prime_ge_2."], "tactic": ["rewrite Zp_invert_stable.", ""], "exn": "Cannot find an homogeneous relation to rewrite.", "type": "no_rewrite_homo", "handled": false}]}, "chat": [], "original": "intros Hp. split. - intros H. destruct (prime_or_div p Hp) as [[q [Hq1 Hq2]] | Hprime]. + contradict Hprime. apply prime_ge_2 in Hprime as H2. apply divides_le in Hq2 as Hql. lia. + destruct (eq_nat_dec p 2). * subst. simpl. rewrite Nat.add_succ_r. apply divides_fact. lia. * assert (H2prime : 2 <= p) by omega. destruct (prime_factor (fact (p - 1) + 1) H2prime) as [q [Hqprime Hdivides]]. rewrite prime_algo in Hprime. destruct Hprime as [[H1 | [H3 _]] Hprime]. ++ discriminate. ++ apply Hprime. specialize (Hprime (fact (p - 1) + 1)). rewrite <- (Zp_invertible_factorial (p - 1) Hqprime) in Hprime. rewrite (Wilson_thm_1 (p - 1) n0 Hqprime H) in Hprime. contradiction Hprime. - intros Hq. assert (Hp1 : p <> 0) by lia. rewrite <- (Wilson_thm_1 p Hp1 Hq). rewrite nat2Zp_minus_one in Hq. replace (nat2Zp Hp1 (fact (p - 1) + 1)) with (Zp_zero Hp1). + rewrite Zp_opp_add. rewrite Zp_opp_one. rewrite Zp_lprod_fact. unfold Zp_lprod. simpl. rewrite Zp_invert_stable. reflexivity. + apply Hq. simpl in Hq. destruct (prime_or_div p Hp) as [[q [Hq1 _]] | Hprime]. * apply Hprime. destruct Hprime as [Hnp [<- | Hb]]. ++ simpl in Hnp. contradiction. ++ split. ++ discriminate. ++ intros Hq1. apply divides_le in Hq1 as Hql. lia. * exists 2.", "back_times": 0, "succ": false, "time": 481.55975222587585}]