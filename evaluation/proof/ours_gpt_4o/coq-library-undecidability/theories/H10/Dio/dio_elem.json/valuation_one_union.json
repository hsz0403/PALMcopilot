[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros Hnotin Hunion."], "tactic": ["apply valuation_union with (g1:=g1) (g2:=g2).", ""], "exn": "No such bound variable g1 (possible names are: i1 and i2).", "type": "no_such_bound", "handled": false}]}, "chat": [], "original": "intros Hnotin Hunion. apply valuation_union with (g1:=g1) (g2:=g2). - auto. - exists (fun x => if x =? k then v else if in_interval i1 x then g1 x else g2 x). split. + rewrite Nat.eqb_refl. auto. + split. * intros x Hin_i1. destruct (x =? k) eqn:Hk. -- apply beq_nat_true in Hk. subst. eapply interval_disjoint. apply Hin_i1. apply Hnotin. -- unfold not in Hnotin. specialize (Hnotin Hnotin). contradiction. * intros x Hin_i2. destruct (x =? k) eqn:Hk. -- apply beq_nat_true in Hk. subst. eapply interval_disjoint. apply Hnotin. auto. -- unfold not in Hnotin. specialize (Hnotin Hin_i2). contradiction.", "back_times": 0, "succ": false, "time": 117.0201244354248}]