[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros Hb Hv Harem.", "destruct Harem as [Hj [Heq | [Hq Heq]]].", "-", "rewrite Heq in *."], "tactic": "apply alpha_nat_2lm_plus_j with (Hv := Hv) (j := j) in Hb.", "exn": "In environment b, n, m, l, j, v : nat Hb : 2 <= b Hv : v = alpha_nat b (S (S m)) - alpha_nat b m Hj : j <= S m Heq : n = 2 * l * S m + j The term \"Hv\" has type \"v = alpha_nat b (S (S m)) - alpha_nat b m\" while it is expected to have type \"Z.of_nat ?v = (alpha_Z ?b_nat (2 + ?m) - alpha_Z ?b_nat ?m)%Z\" (cannot unify \"nat\" and \"Z\").", "type": "wrong_type", "handled": true}, {"ctx": ["intros Hb Hv Harem.", "destruct Harem as [Hj [Heq | [Hq Heq]]].", "-", "rewrite Heq in *."], "tactic": "-", "exn": "[Focus] Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros Hb Hv Harem.", "destruct Harem as [Hj [Heq | [Hq Heq]]].", "-", "rewrite Heq in *.", "shelve.", "-", "subst."], "tactic": "apply alpha_nat_2lm_minus_j with (Hb_nat := b) (Hv := Hv) (j := j) in Heq.", "exn": "No such hypothesis: Heq", "type": "no_hypos", "handled": true}, {"ctx": ["intros Hb Hv Harem.", "destruct Harem as [Hj [Heq | [Hq Heq]]].", "-", "rewrite Heq in *.", "shelve.", "-", "subst."], "tactic": "qsimpl time: 1 use: rem_plus_div,alpha_SSm_m_neq_0,rem_plus_rem,rem_plus,qsimpl,alpha_nat_2lm_minus_j,alpha_nat_2lm_plus_j.", "exn": "The reference qsimpl was not found in the current environment.", "type": "ref_not_found", "handled": true}]}, "chat": [], "original": "intros Hb Hv Harem. destruct Harem as [Hj [Heq | [Hq Heq]]]. - rewrite Heq in *. apply alpha_nat_2lm_plus_j with (Hv := Hv) (j := j) in Hb. destruct Hb as [Hlmt' | Hneg]. + rewrite Hlmt'. left. apply rem_plus_rem. + rewrite Hneg. right. rewrite rem_plus_div. * rewrite rem_plus. rewrite rem_plus_rem. reflexivity. * apply alpha_SSm_m_neq_0 with (Hb_nat := b) (m := m) (Hv := Hv). - subst. apply alpha_nat_2lm_minus_j with (Hb_nat := b) (Hv := Hv) (j := j) in Heq. + destruct Heq as [Hrj | Hopp]. * rewrite Hrj. left. apply rem_plus_rem. * rewrite Hopp. right. rewrite <- rem_mult_rem. rewrite rem_plus. symmetry. apply rem_plus_rem. + apply alpha_SSm_m_neq_0 with (Hb_nat := b) (m := m) (Hv := Hv).", "back_times": 0, "succ": false, "time": 107.56670713424683}]