[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros Hin_code.", "apply in_code_subcode in Hin_code.", "destruct Hin_code as [a Hsc]."], "tactic": "apply (subcode_in_code _ _ ((length (snd P) + fst P, lsum (snd P) + i) :: link (fst P) (snd P) i)).", "exn": "In environment X, Y : Type c : (nat -> nat) -> nat -> X -> list Y lc : X -> nat Hc : forall (f : nat -> nat) (n : nat) (x : X), length (c f n x) = lc x P : nat * list X i, err : nat Hlc : forall x : X, 1 <= lc x j : nat a : X Hsc : (j, a :: nil) <sc P The term \"(length (snd P) + fst P, lsum (snd P) + i) :: link (fst P) (snd P) i\" has type \"list (nat * nat)\" while it is expected to have type \"in_code ?i ?P\".", "type": "wrong_type", "handled": true}]}, "chat": [], "original": "intros Hin_code. apply in_code_subcode in Hin_code. destruct Hin_code as [a Hsc]. apply (subcode_in_code _ _ ((length (snd P) + fst P, lsum (snd P) + i) :: link (fst P) (snd P) i)). - unfold linker in Hsc. auto. - auto.", "back_times": 0, "succ": false, "time": 141.64513087272644}]