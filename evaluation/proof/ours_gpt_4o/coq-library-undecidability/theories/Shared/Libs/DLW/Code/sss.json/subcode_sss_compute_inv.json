[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros Hsub Hout Hseq."], "tactic": ["induction Hseq as [st1 | st1 st2 st3 Hstep]; intros.", ""], "exn": "Expects a disjunctive pattern with 1 branch or a conjunctive pattern made of 2 patterns.", "type": "num_branch_both", "handled": false}]}, "chat": [], "original": "intros Hsub Hout Hseq. induction Hseq as [st1 | st1 st2 st3 Hstep]; intros. - exists st1. split. + constructor. + split. * constructor. * auto. - destruct (subcode_dec P (Q_code Q)) as [Hsub_dec | Hnot_sub]. + apply sss_dec in Hstep as [Hstep_P | Hnot_step_P]. * exists st2. split. -- apply seq_step with st1; auto. -- split. ++ auto. ++ auto. * exists st2. split. -- apply seq_step with st1; auto. -- split. ++ auto. ++ auto. + exfalso. apply Hnot_sub. apply Hsub.", "back_times": 0, "succ": false, "time": 129.050963640213}]