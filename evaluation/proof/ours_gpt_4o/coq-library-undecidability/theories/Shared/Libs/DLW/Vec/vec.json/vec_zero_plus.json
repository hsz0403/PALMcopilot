[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": [], "tactic": ["induction v using Vector.t_ind.", ""], "exn": "Abstracting over the terms \"n\" and \"v\" leads to a term fun (n0 : nat) (v0 : vec nat n0) => vec_plus vec_zero v0 = v0 which is ill-typed. Reason is: Illegal application: The term \"vec_plus\" of type \"vec nat n -> vec nat n -> vec nat n\" cannot be applied to the terms \"vec_zero\" : \"vec nat n\" \"v0\" : \"vec nat n0\" The 2nd term has type \"vec nat n0\" which should be coercible to \"vec nat n\".", "type": "term_cannot_apply", "handled": false}]}, "chat": [], "original": "induction v using Vector.t_ind. - simpl. reflexivity. - simpl. rewrite IHv. reflexivity.", "back_times": 0, "succ": false, "time": 22.81285285949707}]