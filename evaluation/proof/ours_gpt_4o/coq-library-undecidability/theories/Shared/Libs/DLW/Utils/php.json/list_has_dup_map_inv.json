[{"history": {"proof": "qsimpl time: 1 use: map,list_has_dup_ind. qsimpl time: 1 use: map,list_has_dup_ind,in_map_iff. qsimpl time: 1 use: map,list_has_dup_ind,in_map_iff,map_cons_inv.", "repairs": ["no_subterm", "no_hypos", "cannot_apply_in"], "exceptions": [{"ctx": ["intros H Hdup."], "tactic": "apply list_has_dup_ind with (l := map f l).", "exn": "Found no subterm matching \"map f l\" in the current goal.", "type": "no_subterm", "handled": true}, {"ctx": ["intros H Hdup.", "qsimpl time: 1 use: map,list_has_dup_ind."], "tactic": "intros m x Hin.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros H Hdup.", "qsimpl time: 1 use: map,list_has_dup_ind."], "tactic": "apply in_map_iff in Hin.", "exn": "No such hypothesis: Hin", "type": "no_hypos", "handled": true}, {"ctx": ["intros H Hdup.", "qsimpl time: 1 use: map,list_has_dup_ind.", "qsimpl time: 1 use: map,list_has_dup_ind,in_map_iff."], "tactic": "destruct Hin as [a [Heq Ha]].", "exn": "The reference Hin was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros H Hdup.", "qsimpl time: 1 use: map,list_has_dup_ind.", "qsimpl time: 1 use: map,list_has_dup_ind,in_map_iff."], "tactic": "apply H with (f a); auto.", "exn": "The reference a was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros H Hdup.", "qsimpl time: 1 use: map,list_has_dup_ind.", "qsimpl time: 1 use: map,list_has_dup_ind,in_map_iff."], "tactic": "intros m x Hdup' Hmdup.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros H Hdup.", "qsimpl time: 1 use: map,list_has_dup_ind.", "qsimpl time: 1 use: map,list_has_dup_ind,in_map_iff."], "tactic": "apply map_cons_inv in Hdup.", "exn": "Unable to apply lemma of type \"forall (X Y : Type) (f : X -> Y) (ll : list X) (y : Y) (m : list Y), map f ll = y :: m -> {x : X & {l : list X | ll = x :: l /\\\\ f x = y /\\\\ map f l = m}}\" on hypothesis of type \"list_has_dup (map f l)\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["intros H Hdup.", "qsimpl time: 1 use: map,list_has_dup_ind.", "qsimpl time: 1 use: map,list_has_dup_ind,in_map_iff.", "qsimpl time: 1 use: map,list_has_dup_ind,in_map_iff,map_cons_inv."], "tactic": ["destruct Hdup as [a [ll [Hx [Hf Hmap]]]].", ""], "exn": "Expects a disjunctive pattern with 2 branches.", "type": "num_branch", "handled": false}]}, "chat": [], "original": "intros H Hdup. apply list_has_dup_ind with (l := map f l). - intros m x Hin. apply in_map_iff in Hin. destruct Hin as [a [Heq Ha]]. subst. apply H with (f a); auto. - intros m x Hdup' Hmdup. apply map_cons_inv in Hdup. destruct Hdup as [a [ll [Hx [Hf Hmap]]]]. rewrite <- Hx in *. apply H with (f a). + simpl. left. reflexivity. + simpl. right. auto. + auto.", "back_times": 0, "succ": false, "time": 62.89854955673218}]