[{"history": {"proof": "", "repairs": [], "exceptions": []}, "chat": [], "original": "intros decP decQ. unfold decidable in *. destruct decP as [fP deciderP]. destruct decQ as [fQ deciderQ]. exists (fun x => fP x || fQ x). intros x. split. - intros [Hpx | Hqx]. + apply deciderP in Hpx. rewrite Hpx. simpl. reflexivity. + apply deciderQ in Hqx. rewrite Hqx. destruct (fP x); simpl; reflexivity. - intro H. destruct (fP x) eqn:HP. + left. apply deciderP. auto. + right. apply deciderQ. destruct (fQ x); simpl in H; [assumption|congruence].", "back_times": 0, "succ": false, "time": 149.1283302307129}]