[{"history": {"proof": "", "repairs": [], "exceptions": []}, "chat": [], "original": "intros dX dY. apply discrete_iff. apply decidable_iff in dX. apply decidable_iff in dY. destruct dX as [fX HX]. destruct dY as [fY HY]. exists (fun xy => match xy with | inl x1, inl x2 => fX (x1, x2) | inr y1, inr y2 => fY (y1, y2) | _ , _ => false end). intros [x1 | y1] [x2 | y2]; try (left; constructor); try (right; intros H; inversion H). apply (HX (x1, x2)). apply (HY (y1, y2)).", "back_times": 0, "succ": false, "time": 215.63725328445435}]