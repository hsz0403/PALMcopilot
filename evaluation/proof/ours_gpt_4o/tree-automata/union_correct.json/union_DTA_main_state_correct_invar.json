[{"history": {"proof": "qsimpl time: 1 use: insert_ostate_9. qsimpl time: 1 use: u_merge_ref_ok,insert_ostate_9. qsimpl time: 1 use: u_merge_ref_ok,insert_ostate_9,dta_ref_ok_check_complete. qsimpl time: 1 use: u_merge_ref_ok,DTA_main_state_correct_check_correct,insert_ostate_9,dta_ref_ok_check_complete.", "repairs": ["cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify"], "exceptions": [{"ctx": ["intros d0 d1 Hc0 Hc1.", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in Hc0.", "simpl in Hc1.", "simpl."], "tactic": "apply insert_ostate_9.", "exn": "In environment p0 : preDTA a0 : ad p1 : preDTA a1 : ad Hc0 : addr_in_preDTA p0 a0 Hc1 : addr_in_preDTA p1 a1 Unable to unify \"(reconnaissance ?M1857 ?M1859 ?M1864 \\\\/ reconnaissance ?M1858 ?M1860 ?M1864 -> reconnaissance (insert_ostate (u_merge ?M1857 ?M1858) ?M1861 (Some (union_mpl ?M1862 ?M1863))) ?M1861 ?M1864) /\\\\ (reconnaissance (insert_ostate (u_merge ?M1857 ?M1858) ?M1861 (Some (union_mpl ?M1862 ?M1863))) ?M1861 ?M1864 -> reconnaissance ?M1857 ?M1859 ?M1864 \\\\/ reconnaissance ?M1858 ?M1860 ?M1864)\" with \"exists s : state, MapGet state (insert_ostate (u_merge p0 p1) (N.min (N.double (new_preDTA_ad (MapMerge state (udta_conv_0_aux p0) (M0 state)))) (N.succ_double (new_preDTA_ad (udta_conv_1_aux p1)))) (union_0 (u_merge p0 p1) a0 a1)) (N.min (N.double (new_preDTA_ad (MapMerge state (udta_conv_0_aux p0) (M0 state)))) (N.succ_double (new_preDTA_ad (udta_conv_1_aux p1)))) = Some s\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros d0 d1 Hc0 Hc1.", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in Hc0.", "simpl in Hc1.", "simpl.", "qsimpl time: 1 use: insert_ostate_9."], "tactic": "apply u_merge_ref_ok.", "exn": "In environment H : forall (d0 d1 : preDTA) (a0 a1 a : ad) (s0' s1' : state) (t : term), preDTA_ref_ok d0 -> preDTA_ref_ok d1 -> dta_compat d0 d1 -> match uad_conv_0 a0 with | 0%N => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N | N.pos (p~1)%positive => MapGet state (udta_conv_1_aux d1) (N.pos p) | N.pos (p~0)%positive => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) | 1%N => MapGet state (udta_conv_1_aux d1) 0%N end = Some s0' -> match uad_conv_1 a1 with | 0%N => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N | N.pos (p~1)%positive => MapGet state (udta_conv_1_aux d1) (N.pos p) | N.pos (p~0)%positive => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) | 1%N => MapGet state (udta_conv_1_aux d1) 0%N end = Some s1' -> a = N.min (N.double (new_preDTA_ad (MapMerge state (udta_conv_0_aux d0) (M0 state)))) (N.succ_double (new_preDTA_ad (udta_conv_1_aux d1))) -> (reconnaissance d0 a0 t \\\\/ reconnaissance d1 a1 t -> reconnaissance match a with | 0%N => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N (union_mpl s0' s1')) (udta_conv_1_aux d1) | N.pos (p~1)%positive => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) (N.pos p) (union_mpl s0' s1')) | N.pos (p~0)%positive => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) (union_mpl s0' s1')) (udta_conv_1_aux d1) | 1%N => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) 0%N (union_mpl s0' s1')) end a t) /\\\\ (reconnaissance match a with | 0%N => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N (union_mpl s0' s1')) (udta_conv_1_aux d1) | N.pos (p~1)%positive => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) (N.pos p) (union_mpl s0' s1')) | N.pos (p~0)%positive => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) (union_mpl s0' s1')) (udta_conv_1_aux d1) | 1%N => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) 0%N (union_mpl s0' s1')) end a t -> reconnaissance d0 a0 t \\\\/ reconnaissance d1 a1 t) p0 : preDTA a0 : ad p1 : preDTA a1 : ad x : state H0 : MapGet state p1 a1 = Some x x0 : state H1 : MapGet state p0 a0 = Some x0 Unable to unify \"forall (a : ad) (s : state) (c : ad) (pl : prec_list) (b : ad), MapGet state (u_merge ?M2841 ?M2842) a = Some s -> MapGet prec_list s c = Some pl -> prec_occur pl b -> exists s0 : state, MapGet state (u_merge ?M2841 ?M2842) b = Some s0\" with \"exists s : state, MapGet state (insert_ostate (u_merge p0 p1) (N.min (N.double (new_preDTA_ad (MapMerge state (udta_conv_0_aux p0) (M0 state)))) (N.succ_double (new_preDTA_ad (udta_conv_1_aux p1)))) (union_0 (u_merge p0 p1) a0 a1)) (N.min (N.double (new_preDTA_ad (MapMerge state (udta_conv_0_aux p0) (M0 state)))) (N.succ_double (new_preDTA_ad (udta_conv_1_aux p1)))) = Some s\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros d0 d1 Hc0 Hc1.", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in Hc0.", "simpl in Hc1.", "simpl.", "qsimpl time: 1 use: insert_ostate_9.", "qsimpl time: 1 use: u_merge_ref_ok,insert_ostate_9."], "tactic": "apply dta_ref_ok_check_complete.", "exn": "In environment H3 : forall (d0 d1 : preDTA) (a0 a1 a : ad) (s0' s1' : state) (t : term), preDTA_ref_ok d0 -> preDTA_ref_ok d1 -> dta_compat d0 d1 -> match uad_conv_0 a0 with | 0%N => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N | N.pos (p~1)%positive => MapGet state (udta_conv_1_aux d1) (N.pos p) | N.pos (p~0)%positive => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) | 1%N => MapGet state (udta_conv_1_aux d1) 0%N end = Some s0' -> match uad_conv_1 a1 with | 0%N => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N | N.pos (p~1)%positive => MapGet state (udta_conv_1_aux d1) (N.pos p) | N.pos (p~0)%positive => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) | 1%N => MapGet state (udta_conv_1_aux d1) 0%N end = Some s1' -> a = N.min (N.double (new_preDTA_ad (MapMerge state (udta_conv_0_aux d0) (M0 state)))) (N.succ_double (new_preDTA_ad (udta_conv_1_aux d1))) -> (reconnaissance d0 a0 t \\\\/ reconnaissance d1 a1 t -> reconnaissance match a with | 0%N => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N (union_mpl s0' s1')) (udta_conv_1_aux d1) | N.pos (p~1)%positive => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) (N.pos p) (union_mpl s0' s1')) | N.pos (p~0)%positive => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) (union_mpl s0' s1')) (udta_conv_1_aux d1) | 1%N => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) 0%N (union_mpl s0' s1')) end a t) /\\\\ (reconnaissance match a with | 0%N => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N (union_mpl s0' s1')) (udta_conv_1_aux d1) | N.pos (p~1)%positive => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) (N.pos p) (union_mpl s0' s1')) | N.pos (p~0)%positive => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) (union_mpl s0' s1')) (udta_conv_1_aux d1) | 1%N => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) 0%N (union_mpl s0' s1')) end a t -> reconnaissance d0 a0 t \\\\/ reconnaissance d1 a1 t) H2 : forall d0 d1 : preDTA, preDTA_ref_ok d0 -> preDTA_ref_ok d1 -> preDTA_ref_ok (u_merge d0 d1) p0 : preDTA a0 : ad p1 : preDTA a1 : ad x : state H0 : MapGet state p1 a1 = Some x x0 : state H1 : MapGet state p0 a0 = Some x0 Unable to unify \"match ?M3473 with | dta p _ => preDTA_ref_ok p end\" with \"exists s : state, MapGet state (insert_ostate (u_merge p0 p1) (N.min (N.double (new_preDTA_ad (MapMerge state (udta_conv_0_aux p0) (M0 state)))) (N.succ_double (new_preDTA_ad (udta_conv_1_aux p1)))) (union_0 (u_merge p0 p1) a0 a1)) (N.min (N.double (new_preDTA_ad (MapMerge state (udta_conv_0_aux p0) (M0 state)))) (N.succ_double (new_preDTA_ad (udta_conv_1_aux p1)))) = Some s\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros d0 d1 Hc0 Hc1.", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in Hc0.", "simpl in Hc1.", "simpl.", "qsimpl time: 1 use: insert_ostate_9.", "qsimpl time: 1 use: u_merge_ref_ok,insert_ostate_9.", "qsimpl time: 1 use: u_merge_ref_ok,insert_ostate_9,dta_ref_ok_check_complete."], "tactic": "apply DTA_main_state_correct_check_correct.", "exn": "In environment H5 : forall d : DTA, dta_ref_ok_check d = true -> DTA_ref_ok d H4 : forall (d0 d1 : preDTA) (a0 a1 a : ad) (s0' s1' : state) (t : term), preDTA_ref_ok d0 -> preDTA_ref_ok d1 -> dta_compat d0 d1 -> match uad_conv_0 a0 with | 0%N => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N | N.pos (p~1)%positive => MapGet state (udta_conv_1_aux d1) (N.pos p) | N.pos (p~0)%positive => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) | 1%N => MapGet state (udta_conv_1_aux d1) 0%N end = Some s0' -> match uad_conv_1 a1 with | 0%N => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N | N.pos (p~1)%positive => MapGet state (udta_conv_1_aux d1) (N.pos p) | N.pos (p~0)%positive => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) | 1%N => MapGet state (udta_conv_1_aux d1) 0%N end = Some s1' -> a = N.min (N.double (new_preDTA_ad (MapMerge state (udta_conv_0_aux d0) (M0 state)))) (N.succ_double (new_preDTA_ad (udta_conv_1_aux d1))) -> (reconnaissance d0 a0 t \\\\/ reconnaissance d1 a1 t -> reconnaissance match a with | 0%N => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N (union_mpl s0' s1')) (udta_conv_1_aux d1) | N.pos (p~1)%positive => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) (N.pos p) (union_mpl s0' s1')) | N.pos (p~0)%positive => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) (union_mpl s0' s1')) (udta_conv_1_aux d1) | 1%N => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) 0%N (union_mpl s0' s1')) end a t) /\\\\ (reconnaissance match a with | 0%N => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N (union_mpl s0' s1')) (udta_conv_1_aux d1) | N.pos (p~1)%positive => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) (N.pos p) (union_mpl s0' s1')) | N.pos (p~0)%positive => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) (union_mpl s0' s1')) (udta_conv_1_aux d1) | 1%N => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) 0%N (union_mpl s0' s1')) end a t -> reconnaissance d0 a0 t \\\\/ reconnaissance d1 a1 t) H : forall d0 d1 : preDTA, preDTA_ref_ok d0 -> preDTA_ref_ok d1 -> preDTA_ref_ok (u_merge d0 d1) p0 : preDTA a0 : ad p1 : preDTA a1 : ad x : state H0 : MapGet state p1 a1 = Some x x0 : state H1 : MapGet state p0 a0 = Some x0 Unable to unify \"DTA_main_state_correct_check ?M4145 = true\" with \"exists s : state, MapGet state (insert_ostate (u_merge p0 p1) (N.min (N.double (new_preDTA_ad (MapMerge state (udta_conv_0_aux p0) (M0 state)))) (N.succ_double (new_preDTA_ad (udta_conv_1_aux p1)))) (union_0 (u_merge p0 p1) a0 a1)) (N.min (N.double (new_preDTA_ad (MapMerge state (udta_conv_0_aux p0) (M0 state)))) (N.succ_double (new_preDTA_ad (udta_conv_1_aux p1)))) = Some s\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros d0 d1 Hc0 Hc1.", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in Hc0.", "simpl in Hc1.", "simpl.", "qsimpl time: 1 use: insert_ostate_9.", "qsimpl time: 1 use: u_merge_ref_ok,insert_ostate_9.", "qsimpl time: 1 use: u_merge_ref_ok,insert_ostate_9,dta_ref_ok_check_complete.", "qsimpl time: 1 use: u_merge_ref_ok,DTA_main_state_correct_check_correct,insert_ostate_9,dta_ref_ok_check_complete."], "tactic": "apply Hc0.", "exn": "The reference Hc0 was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros d0 d1 Hc0 Hc1.", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in Hc0.", "simpl in Hc1.", "simpl.", "qsimpl time: 1 use: insert_ostate_9.", "qsimpl time: 1 use: u_merge_ref_ok,insert_ostate_9.", "qsimpl time: 1 use: u_merge_ref_ok,insert_ostate_9,dta_ref_ok_check_complete.", "qsimpl time: 1 use: u_merge_ref_ok,DTA_main_state_correct_check_correct,insert_ostate_9,dta_ref_ok_check_complete.", "apply DTA_ind.", "+"], "tactic": "apply dta_ref_ok_check_complete.", "exn": "In environment H7 : forall d : DTA, dta_ref_ok_check d = true -> DTA_ref_ok d H6 : forall (d0 d1 : preDTA) (a0 a1 a : ad) (s0' s1' : state) (t : term), preDTA_ref_ok d0 -> preDTA_ref_ok d1 -> dta_compat d0 d1 -> match uad_conv_0 a0 with | 0%N => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N | N.pos (p~1)%positive => MapGet state (udta_conv_1_aux d1) (N.pos p) | N.pos (p~0)%positive => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) | 1%N => MapGet state (udta_conv_1_aux d1) 0%N end = Some s0' -> match uad_conv_1 a1 with | 0%N => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N | N.pos (p~1)%positive => MapGet state (udta_conv_1_aux d1) (N.pos p) | N.pos (p~0)%positive => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) | 1%N => MapGet state (udta_conv_1_aux d1) 0%N end = Some s1' -> a = N.min (N.double (new_preDTA_ad (MapMerge state (udta_conv_0_aux d0) (M0 state)))) (N.succ_double (new_preDTA_ad (udta_conv_1_aux d1))) -> (reconnaissance d0 a0 t \\\\/ reconnaissance d1 a1 t -> reconnaissance match a with | 0%N => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N (union_mpl s0' s1')) (udta_conv_1_aux d1) | N.pos (p~1)%positive => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) (N.pos p) (union_mpl s0' s1')) | N.pos (p~0)%positive => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) (union_mpl s0' s1')) (udta_conv_1_aux d1) | 1%N => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) 0%N (union_mpl s0' s1')) end a t) /\\\\ (reconnaissance match a with | 0%N => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N (union_mpl s0' s1')) (udta_conv_1_aux d1) | N.pos (p~1)%positive => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) (N.pos p) (union_mpl s0' s1')) | N.pos (p~0)%positive => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) (union_mpl s0' s1')) (udta_conv_1_aux d1) | 1%N => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) 0%N (union_mpl s0' s1')) end a t -> reconnaissance d0 a0 t \\\\/ reconnaissance d1 a1 t) H3 : forall d : DTA, DTA_main_state_correct d -> DTA_main_state_correct_check d = true H2 : forall d0 d1 : preDTA, preDTA_ref_ok d0 -> preDTA_ref_ok d1 -> preDTA_ref_ok (u_merge d0 d1) p0 : preDTA a0 : ad p1 : preDTA a1 : ad x : state H0 : MapGet state p1 a1 = Some x x0 : state H1 : MapGet state p0 a0 = Some x0 Unable to unify \"forall d : DTA, dta_ref_ok_check d = true -> DTA_ref_ok d\" with \"preDTA -> ad -> addr_in_preDTA (insert_ostate (u_merge p0 p1) (N.min (N.double (new_preDTA_ad (MapMerge state (udta_conv_0_aux p0) (M0 state)))) (N.succ_double (new_preDTA_ad (udta_conv_1_aux p1)))) (union_0 (u_merge p0 p1) a0 a1)) (N.min (N.double (new_preDTA_ad (MapMerge state (udta_conv_0_aux p0) (M0 state)))) (N.succ_double (new_preDTA_ad (udta_conv_1_aux p1))))\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros d0 d1 Hc0 Hc1.", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in Hc0.", "simpl in Hc1.", "simpl.", "qsimpl time: 1 use: insert_ostate_9.", "qsimpl time: 1 use: u_merge_ref_ok,insert_ostate_9.", "qsimpl time: 1 use: u_merge_ref_ok,insert_ostate_9,dta_ref_ok_check_complete.", "qsimpl time: 1 use: u_merge_ref_ok,DTA_main_state_correct_check_correct,insert_ostate_9,dta_ref_ok_check_complete.", "apply DTA_ind.", "+", "qsimpl time: 1 use: u_merge_ref_ok,DTA_main_state_correct_check_correct,insert_ostate_9,dta_ref_ok_check_complete."], "tactic": "apply DTA_main_state_correct_check_correct.", "exn": "In environment H8 : forall d : DTA, dta_ref_ok_check d = true -> DTA_ref_ok d H5 : forall (d0 d1 : preDTA) (a0 a1 a : ad) (s0' s1' : state) (t : term), preDTA_ref_ok d0 -> preDTA_ref_ok d1 -> dta_compat d0 d1 -> match uad_conv_0 a0 with | 0%N => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N | N.pos (p~1)%positive => MapGet state (udta_conv_1_aux d1) (N.pos p) | N.pos (p~0)%positive => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) | 1%N => MapGet state (udta_conv_1_aux d1) 0%N end = Some s0' -> match uad_conv_1 a1 with | 0%N => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N | N.pos (p~1)%positive => MapGet state (udta_conv_1_aux d1) (N.pos p) | N.pos (p~0)%positive => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) | 1%N => MapGet state (udta_conv_1_aux d1) 0%N end = Some s1' -> a = N.min (N.double (new_preDTA_ad (MapMerge state (udta_conv_0_aux d0) (M0 state)))) (N.succ_double (new_preDTA_ad (udta_conv_1_aux d1))) -> (reconnaissance d0 a0 t \\\\/ reconnaissance d1 a1 t -> reconnaissance match a with | 0%N => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N (union_mpl s0' s1')) (udta_conv_1_aux d1) | N.pos (p~1)%positive => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) (N.pos p) (union_mpl s0' s1')) | N.pos (p~0)%positive => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) (union_mpl s0' s1')) (udta_conv_1_aux d1) | 1%N => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) 0%N (union_mpl s0' s1')) end a t) /\\\\ (reconnaissance match a with | 0%N => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N (union_mpl s0' s1')) (udta_conv_1_aux d1) | N.pos (p~1)%positive => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) (N.pos p) (union_mpl s0' s1')) | N.pos (p~0)%positive => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) (union_mpl s0' s1')) (udta_conv_1_aux d1) | 1%N => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) 0%N (union_mpl s0' s1')) end a t -> reconnaissance d0 a0 t \\\\/ reconnaissance d1 a1 t) H4 : forall d : DTA, DTA_main_state_correct d -> DTA_main_state_correct_check d = true H : forall d0 d1 : preDTA, preDTA_ref_ok d0 -> preDTA_ref_ok d1 -> preDTA_ref_ok (u_merge d0 d1) p0 : preDTA a0 : ad p1 : preDTA a1 : ad x : state H0 : MapGet state p1 a1 = Some x x0 : state H1 : MapGet state p0 a0 = Some x0 p : preDTA a : ad Unable to unify \"DTA_main_state_correct_check ?M5612 = true\" with \"exists s : state, MapGet state (insert_ostate (u_merge p0 p1) (N.min (N.double (new_preDTA_ad (MapMerge state (udta_conv_0_aux p0) (M0 state)))) (N.succ_double (new_preDTA_ad (udta_conv_1_aux p1)))) (union_0 (u_merge p0 p1) a0 a1)) (N.min (N.double (new_preDTA_ad (MapMerge state (udta_conv_0_aux p0) (M0 state)))) (N.succ_double (new_preDTA_ad (udta_conv_1_aux p1)))) = Some s\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros d0 d1 Hc0 Hc1.", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in Hc0.", "simpl in Hc1.", "simpl.", "qsimpl time: 1 use: insert_ostate_9.", "qsimpl time: 1 use: u_merge_ref_ok,insert_ostate_9.", "qsimpl time: 1 use: u_merge_ref_ok,insert_ostate_9,dta_ref_ok_check_complete.", "qsimpl time: 1 use: u_merge_ref_ok,DTA_main_state_correct_check_correct,insert_ostate_9,dta_ref_ok_check_complete.", "apply DTA_ind.", "+", "qsimpl time: 1 use: u_merge_ref_ok,DTA_main_state_correct_check_correct,insert_ostate_9,dta_ref_ok_check_complete.", "qsimpl time: 1 use: u_merge_ref_ok,DTA_main_state_correct_check_correct,insert_ostate_9,dta_ref_ok_check_complete."], "tactic": "apply Hc1.", "exn": "The reference Hc1 was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros d0 d1 Hc0 Hc1.", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in Hc0.", "simpl in Hc1.", "simpl.", "qsimpl time: 1 use: insert_ostate_9.", "qsimpl time: 1 use: u_merge_ref_ok,insert_ostate_9.", "qsimpl time: 1 use: u_merge_ref_ok,insert_ostate_9,dta_ref_ok_check_complete.", "qsimpl time: 1 use: u_merge_ref_ok,DTA_main_state_correct_check_correct,insert_ostate_9,dta_ref_ok_check_complete.", "apply DTA_ind.", "+", "qsimpl time: 1 use: u_merge_ref_ok,DTA_main_state_correct_check_correct,insert_ostate_9,dta_ref_ok_check_complete.", "qsimpl time: 1 use: u_merge_ref_ok,DTA_main_state_correct_check_correct,insert_ostate_9,dta_ref_ok_check_complete.", "apply DTA_ind.", "-"], "tactic": "apply predta_compatible_compat.", "exn": "In environment H7 : forall d : DTA, dta_ref_ok_check d = true -> DTA_ref_ok d H6 : forall (d0 d1 : preDTA) (a0 a1 a : ad) (s0' s1' : state) (t : term), preDTA_ref_ok d0 -> preDTA_ref_ok d1 -> dta_compat d0 d1 -> match uad_conv_0 a0 with | 0%N => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N | N.pos (p~1)%positive => MapGet state (udta_conv_1_aux d1) (N.pos p) | N.pos (p~0)%positive => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) | 1%N => MapGet state (udta_conv_1_aux d1) 0%N end = Some s0' -> match uad_conv_1 a1 with | 0%N => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N | N.pos (p~1)%positive => MapGet state (udta_conv_1_aux d1) (N.pos p) | N.pos (p~0)%positive => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) | 1%N => MapGet state (udta_conv_1_aux d1) 0%N end = Some s1' -> a = N.min (N.double (new_preDTA_ad (MapMerge state (udta_conv_0_aux d0) (M0 state)))) (N.succ_double (new_preDTA_ad (udta_conv_1_aux d1))) -> (reconnaissance d0 a0 t \\\\/ reconnaissance d1 a1 t -> reconnaissance match a with | 0%N => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N (union_mpl s0' s1')) (udta_conv_1_aux d1) | N.pos (p~1)%positive => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) (N.pos p) (union_mpl s0' s1')) | N.pos (p~0)%positive => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) (union_mpl s0' s1')) (udta_conv_1_aux d1) | 1%N => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) 0%N (union_mpl s0' s1')) end a t) /\\\\ (reconnaissance match a with | 0%N => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N (union_mpl s0' s1')) (udta_conv_1_aux d1) | N.pos (p~1)%positive => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) (N.pos p) (union_mpl s0' s1')) | N.pos (p~0)%positive => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) (union_mpl s0' s1')) (udta_conv_1_aux d1) | 1%N => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) 0%N (union_mpl s0' s1')) end a t -> reconnaissance d0 a0 t \\\\/ reconnaissance d1 a1 t) H3 : forall d : DTA, DTA_main_state_correct d -> DTA_main_state_correct_check d = true H2 : forall d0 d1 : preDTA, preDTA_ref_ok d0 -> preDTA_ref_ok d1 -> preDTA_ref_ok (u_merge d0 d1) p0 : preDTA a0 : ad p1 : preDTA a1 : ad x : state H0 : MapGet state p1 a1 = Some x x0 : state H1 : MapGet state p0 a0 = Some x0 p : preDTA a : ad d1 : preDTA Unable to unify \"forall s0 s1 : state, state_in_dta ?M6367 s0 -> state_in_dta d1 s1 -> st_compatible s0 s1\" with \"N\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros d0 d1 Hc0 Hc1.", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in Hc0.", "simpl in Hc1.", "simpl.", "qsimpl time: 1 use: insert_ostate_9.", "qsimpl time: 1 use: u_merge_ref_ok,insert_ostate_9.", "qsimpl time: 1 use: u_merge_ref_ok,insert_ostate_9,dta_ref_ok_check_complete.", "qsimpl time: 1 use: u_merge_ref_ok,DTA_main_state_correct_check_correct,insert_ostate_9,dta_ref_ok_check_complete.", "apply DTA_ind.", "+", "qsimpl time: 1 use: u_merge_ref_ok,DTA_main_state_correct_check_correct,insert_ostate_9,dta_ref_ok_check_complete.", "qsimpl time: 1 use: u_merge_ref_ok,DTA_main_state_correct_check_correct,insert_ostate_9,dta_ref_ok_check_complete.", "apply DTA_ind.", "-", "qsimpl time: 1 use: insert_ostate_9,DTA_main_state_correct_check_correct,u_merge_ref_ok,dta_ref_ok_check_complete,predta_compatible_compat."], "tactic": "intros s0 s1 Hs0 Hs1.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros d0 d1 Hc0 Hc1.", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in Hc0.", "simpl in Hc1.", "simpl.", "qsimpl time: 1 use: insert_ostate_9.", "qsimpl time: 1 use: u_merge_ref_ok,insert_ostate_9.", "qsimpl time: 1 use: u_merge_ref_ok,insert_ostate_9,dta_ref_ok_check_complete.", "qsimpl time: 1 use: u_merge_ref_ok,DTA_main_state_correct_check_correct,insert_ostate_9,dta_ref_ok_check_complete.", "apply DTA_ind.", "+", "qsimpl time: 1 use: u_merge_ref_ok,DTA_main_state_correct_check_correct,insert_ostate_9,dta_ref_ok_check_complete.", "qsimpl time: 1 use: u_merge_ref_ok,DTA_main_state_correct_check_correct,insert_ostate_9,dta_ref_ok_check_complete.", "apply DTA_ind.", "-", "qsimpl time: 1 use: insert_ostate_9,DTA_main_state_correct_check_correct,u_merge_ref_ok,dta_ref_ok_check_complete,predta_compatible_compat."], "tactic": "unfold dta_compatible in Hs0.", "exn": "No such hypothesis: Hs0", "type": "no_hypos", "handled": true}, {"ctx": ["intros d0 d1 Hc0 Hc1.", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in Hc0.", "simpl in Hc1.", "simpl.", "qsimpl time: 1 use: insert_ostate_9.", "qsimpl time: 1 use: u_merge_ref_ok,insert_ostate_9.", "qsimpl time: 1 use: u_merge_ref_ok,insert_ostate_9,dta_ref_ok_check_complete.", "qsimpl time: 1 use: u_merge_ref_ok,DTA_main_state_correct_check_correct,insert_ostate_9,dta_ref_ok_check_complete.", "apply DTA_ind.", "+", "qsimpl time: 1 use: u_merge_ref_ok,DTA_main_state_correct_check_correct,insert_ostate_9,dta_ref_ok_check_complete.", "qsimpl time: 1 use: u_merge_ref_ok,DTA_main_state_correct_check_correct,insert_ostate_9,dta_ref_ok_check_complete.", "apply DTA_ind.", "-", "qsimpl time: 1 use: insert_ostate_9,DTA_main_state_correct_check_correct,u_merge_ref_ok,dta_ref_ok_check_complete,predta_compatible_compat.", "qsimpl time: 1 use: dta_compatible,insert_ostate_9,DTA_main_state_correct_check_correct,u_merge_ref_ok,dta_ref_ok_check_complete,predta_compatible_compat."], "tactic": "unfold dta_compatible in Hs1.", "exn": "No such hypothesis: Hs1", "type": "no_hypos", "handled": true}, {"ctx": ["intros d0 d1 Hc0 Hc1.", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in Hc0.", "simpl in Hc1.", "simpl.", "qsimpl time: 1 use: insert_ostate_9.", "qsimpl time: 1 use: u_merge_ref_ok,insert_ostate_9.", "qsimpl time: 1 use: u_merge_ref_ok,insert_ostate_9,dta_ref_ok_check_complete.", "qsimpl time: 1 use: u_merge_ref_ok,DTA_main_state_correct_check_correct,insert_ostate_9,dta_ref_ok_check_complete.", "apply DTA_ind.", "+", "qsimpl time: 1 use: u_merge_ref_ok,DTA_main_state_correct_check_correct,insert_ostate_9,dta_ref_ok_check_complete.", "qsimpl time: 1 use: u_merge_ref_ok,DTA_main_state_correct_check_correct,insert_ostate_9,dta_ref_ok_check_complete.", "apply DTA_ind.", "-", "qsimpl time: 1 use: insert_ostate_9,DTA_main_state_correct_check_correct,u_merge_ref_ok,dta_ref_ok_check_complete,predta_compatible_compat.", "qsimpl time: 1 use: dta_compatible,insert_ostate_9,DTA_main_state_correct_check_correct,u_merge_ref_ok,dta_ref_ok_check_complete,predta_compatible_compat.", "qsimpl time: 1 use: dta_compatible,insert_ostate_9,DTA_main_state_correct_check_correct,u_merge_ref_ok,dta_ref_ok_check_complete,predta_compatible_compat."], "tactic": "apply Hs0.", "exn": "The reference Hs0 was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros d0 d1 Hc0 Hc1.", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in Hc0.", "simpl in Hc1.", "simpl.", "qsimpl time: 1 use: insert_ostate_9.", "qsimpl time: 1 use: u_merge_ref_ok,insert_ostate_9.", "qsimpl time: 1 use: u_merge_ref_ok,insert_ostate_9,dta_ref_ok_check_complete.", "qsimpl time: 1 use: u_merge_ref_ok,DTA_main_state_correct_check_correct,insert_ostate_9,dta_ref_ok_check_complete.", "apply DTA_ind.", "+", "qsimpl time: 1 use: u_merge_ref_ok,DTA_main_state_correct_check_correct,insert_ostate_9,dta_ref_ok_check_complete.", "qsimpl time: 1 use: u_merge_ref_ok,DTA_main_state_correct_check_correct,insert_ostate_9,dta_ref_ok_check_complete.", "apply DTA_ind.", "-", "qsimpl time: 1 use: insert_ostate_9,DTA_main_state_correct_check_correct,u_merge_ref_ok,dta_ref_ok_check_complete,predta_compatible_compat.", "qsimpl time: 1 use: dta_compatible,insert_ostate_9,DTA_main_state_correct_check_correct,u_merge_ref_ok,dta_ref_ok_check_complete,predta_compatible_compat.", "qsimpl time: 1 use: dta_compatible,insert_ostate_9,DTA_main_state_correct_check_correct,u_merge_ref_ok,dta_ref_ok_check_complete,predta_compatible_compat.", "apply DTA_ind."], "tactic": "apply Hs1.", "exn": "The reference Hs1 was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros d0 d1 Hc0 Hc1.", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in Hc0.", "simpl in Hc1.", "simpl.", "qsimpl time: 1 use: insert_ostate_9.", "qsimpl time: 1 use: u_merge_ref_ok,insert_ostate_9.", "qsimpl time: 1 use: u_merge_ref_ok,insert_ostate_9,dta_ref_ok_check_complete.", "qsimpl time: 1 use: u_merge_ref_ok,DTA_main_state_correct_check_correct,insert_ostate_9,dta_ref_ok_check_complete.", "apply DTA_ind.", "+", "qsimpl time: 1 use: u_merge_ref_ok,DTA_main_state_correct_check_correct,insert_ostate_9,dta_ref_ok_check_complete.", "qsimpl time: 1 use: u_merge_ref_ok,DTA_main_state_correct_check_correct,insert_ostate_9,dta_ref_ok_check_complete.", "apply DTA_ind.", "-", "qsimpl time: 1 use: insert_ostate_9,DTA_main_state_correct_check_correct,u_merge_ref_ok,dta_ref_ok_check_complete,predta_compatible_compat.", "qsimpl time: 1 use: dta_compatible,insert_ostate_9,DTA_main_state_correct_check_correct,u_merge_ref_ok,dta_ref_ok_check_complete,predta_compatible_compat.", "qsimpl time: 1 use: dta_compatible,insert_ostate_9,DTA_main_state_correct_check_correct,u_merge_ref_ok,dta_ref_ok_check_complete,predta_compatible_compat.", "apply DTA_ind.", "apply DTA_ind."], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros d0 d1 Hc0 Hc1.", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in Hc0.", "simpl in Hc1.", "simpl.", "qsimpl time: 1 use: insert_ostate_9.", "qsimpl time: 1 use: u_merge_ref_ok,insert_ostate_9.", "qsimpl time: 1 use: u_merge_ref_ok,insert_ostate_9,dta_ref_ok_check_complete.", "qsimpl time: 1 use: u_merge_ref_ok,DTA_main_state_correct_check_correct,insert_ostate_9,dta_ref_ok_check_complete.", "apply DTA_ind.", "+", "qsimpl time: 1 use: u_merge_ref_ok,DTA_main_state_correct_check_correct,insert_ostate_9,dta_ref_ok_check_complete.", "qsimpl time: 1 use: u_merge_ref_ok,DTA_main_state_correct_check_correct,insert_ostate_9,dta_ref_ok_check_complete.", "apply DTA_ind.", "-", "qsimpl time: 1 use: insert_ostate_9,DTA_main_state_correct_check_correct,u_merge_ref_ok,dta_ref_ok_check_complete,predta_compatible_compat.", "qsimpl time: 1 use: dta_compatible,insert_ostate_9,DTA_main_state_correct_check_correct,u_merge_ref_ok,dta_ref_ok_check_complete,predta_compatible_compat.", "qsimpl time: 1 use: dta_compatible,insert_ostate_9,DTA_main_state_correct_check_correct,u_merge_ref_ok,dta_ref_ok_check_complete,predta_compatible_compat.", "apply DTA_ind.", "apply DTA_ind.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "-"], "tactic": "apply union_semantics_0.", "exn": "In environment H7 : forall d : DTA, dta_ref_ok_check d = true -> DTA_ref_ok d H6 : forall (d0 d1 : preDTA) (a0 a1 a : ad) (s0' s1' : state) (t : term), preDTA_ref_ok d0 -> preDTA_ref_ok d1 -> dta_compat d0 d1 -> match uad_conv_0 a0 with | 0%N => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N | N.pos (p~1)%positive => MapGet state (udta_conv_1_aux d1) (N.pos p) | N.pos (p~0)%positive => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) | 1%N => MapGet state (udta_conv_1_aux d1) 0%N end = Some s0' -> match uad_conv_1 a1 with | 0%N => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N | N.pos (p~1)%positive => MapGet state (udta_conv_1_aux d1) (N.pos p) | N.pos (p~0)%positive => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) | 1%N => MapGet state (udta_conv_1_aux d1) 0%N end = Some s1' -> a = N.min (N.double (new_preDTA_ad (MapMerge state (udta_conv_0_aux d0) (M0 state)))) (N.succ_double (new_preDTA_ad (udta_conv_1_aux d1))) -> (reconnaissance d0 a0 t \\\\/ reconnaissance d1 a1 t -> reconnaissance match a with | 0%N => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N (union_mpl s0' s1')) (udta_conv_1_aux d1) | N.pos (p~1)%positive => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) (N.pos p) (union_mpl s0' s1')) | N.pos (p~0)%positive => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) (union_mpl s0' s1')) (udta_conv_1_aux d1) | 1%N => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) 0%N (union_mpl s0' s1')) end a t) /\\\\ (reconnaissance match a with | 0%N => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N (union_mpl s0' s1')) (udta_conv_1_aux d1) | N.pos (p~1)%positive => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) (N.pos p) (union_mpl s0' s1')) | N.pos (p~0)%positive => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) (union_mpl s0' s1')) (udta_conv_1_aux d1) | 1%N => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) 0%N (union_mpl s0' s1')) end a t -> reconnaissance d0 a0 t \\\\/ reconnaissance d1 a1 t) H3 : forall d : DTA, DTA_main_state_correct d -> DTA_main_state_correct_check d = true H2 : forall d0 d1 : preDTA, preDTA_ref_ok d0 -> preDTA_ref_ok d1 -> preDTA_ref_ok (u_merge d0 d1) p0 : preDTA a0 : ad p1 : preDTA a1 : ad x : state H0 : MapGet state p1 a1 = Some x x0 : state H1 : MapGet state p0 a0 = Some x0 p : preDTA a : ad Unable to unify \"(reconnait ?M8954 ?M8956 \\\\/ reconnait ?M8955 ?M8956 -> reconnait (union ?M8954 ?M8955) ?M8956) /\\\\ (reconnait (union ?M8954 ?M8955) ?M8956 -> reconnait ?M8954 ?M8956 \\\\/ reconnait ?M8955 ?M8956)\" with \"DTA\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros d0 d1 Hc0 Hc1.", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in Hc0.", "simpl in Hc1.", "simpl.", "qsimpl time: 1 use: insert_ostate_9.", "qsimpl time: 1 use: u_merge_ref_ok,insert_ostate_9.", "qsimpl time: 1 use: u_merge_ref_ok,insert_ostate_9,dta_ref_ok_check_complete.", "qsimpl time: 1 use: u_merge_ref_ok,DTA_main_state_correct_check_correct,insert_ostate_9,dta_ref_ok_check_complete.", "apply DTA_ind.", "+", "qsimpl time: 1 use: u_merge_ref_ok,DTA_main_state_correct_check_correct,insert_ostate_9,dta_ref_ok_check_complete.", "qsimpl time: 1 use: u_merge_ref_ok,DTA_main_state_correct_check_correct,insert_ostate_9,dta_ref_ok_check_complete.", "apply DTA_ind.", "-", "qsimpl time: 1 use: insert_ostate_9,DTA_main_state_correct_check_correct,u_merge_ref_ok,dta_ref_ok_check_complete,predta_compatible_compat.", "qsimpl time: 1 use: dta_compatible,insert_ostate_9,DTA_main_state_correct_check_correct,u_merge_ref_ok,dta_ref_ok_check_complete,predta_compatible_compat.", "qsimpl time: 1 use: dta_compatible,insert_ostate_9,DTA_main_state_correct_check_correct,u_merge_ref_ok,dta_ref_ok_check_complete,predta_compatible_compat.", "apply DTA_ind.", "apply DTA_ind.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "-", "qsimpl time: 1 use: dta_compatible,insert_ostate_9,union_semantics_0,DTA_main_state_correct_check_correct,u_merge_ref_ok,dta_ref_ok_check_complete,predta_compatible_compat.", "+"], "tactic": "apply Hc0.", "exn": "The reference Hc0 was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros d0 d1 Hc0 Hc1.", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in Hc0.", "simpl in Hc1.", "simpl.", "qsimpl time: 1 use: insert_ostate_9.", "qsimpl time: 1 use: u_merge_ref_ok,insert_ostate_9.", "qsimpl time: 1 use: u_merge_ref_ok,insert_ostate_9,dta_ref_ok_check_complete.", "qsimpl time: 1 use: u_merge_ref_ok,DTA_main_state_correct_check_correct,insert_ostate_9,dta_ref_ok_check_complete.", "apply DTA_ind.", "+", "qsimpl time: 1 use: u_merge_ref_ok,DTA_main_state_correct_check_correct,insert_ostate_9,dta_ref_ok_check_complete.", "qsimpl time: 1 use: u_merge_ref_ok,DTA_main_state_correct_check_correct,insert_ostate_9,dta_ref_ok_check_complete.", "apply DTA_ind.", "-", "qsimpl time: 1 use: insert_ostate_9,DTA_main_state_correct_check_correct,u_merge_ref_ok,dta_ref_ok_check_complete,predta_compatible_compat.", "qsimpl time: 1 use: dta_compatible,insert_ostate_9,DTA_main_state_correct_check_correct,u_merge_ref_ok,dta_ref_ok_check_complete,predta_compatible_compat.", "qsimpl time: 1 use: dta_compatible,insert_ostate_9,DTA_main_state_correct_check_correct,u_merge_ref_ok,dta_ref_ok_check_complete,predta_compatible_compat.", "apply DTA_ind.", "apply DTA_ind.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "-", "qsimpl time: 1 use: dta_compatible,insert_ostate_9,union_semantics_0,DTA_main_state_correct_check_correct,u_merge_ref_ok,dta_ref_ok_check_complete,predta_compatible_compat.", "+", "apply union_1."], "tactic": "+", "exn": "Wrong bullet +: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros d0 d1 Hc0 Hc1.", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in Hc0.", "simpl in Hc1.", "simpl.", "qsimpl time: 1 use: insert_ostate_9.", "qsimpl time: 1 use: u_merge_ref_ok,insert_ostate_9.", "qsimpl time: 1 use: u_merge_ref_ok,insert_ostate_9,dta_ref_ok_check_complete.", "qsimpl time: 1 use: u_merge_ref_ok,DTA_main_state_correct_check_correct,insert_ostate_9,dta_ref_ok_check_complete.", "apply DTA_ind.", "+", "qsimpl time: 1 use: u_merge_ref_ok,DTA_main_state_correct_check_correct,insert_ostate_9,dta_ref_ok_check_complete.", "qsimpl time: 1 use: u_merge_ref_ok,DTA_main_state_correct_check_correct,insert_ostate_9,dta_ref_ok_check_complete.", "apply DTA_ind.", "-", "qsimpl time: 1 use: insert_ostate_9,DTA_main_state_correct_check_correct,u_merge_ref_ok,dta_ref_ok_check_complete,predta_compatible_compat.", "qsimpl time: 1 use: dta_compatible,insert_ostate_9,DTA_main_state_correct_check_correct,u_merge_ref_ok,dta_ref_ok_check_complete,predta_compatible_compat.", "qsimpl time: 1 use: dta_compatible,insert_ostate_9,DTA_main_state_correct_check_correct,u_merge_ref_ok,dta_ref_ok_check_complete,predta_compatible_compat.", "apply DTA_ind.", "apply DTA_ind.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "-", "qsimpl time: 1 use: dta_compatible,insert_ostate_9,union_semantics_0,DTA_main_state_correct_check_correct,u_merge_ref_ok,dta_ref_ok_check_complete,predta_compatible_compat.", "+", "apply union_1.", "*", "shelve.", "*", "shelve.", "*", "shelve."], "tactic": "+", "exn": "Wrong bullet +: No more subgoals.", "type": "no_more_subgoals", "handled": true}]}, "chat": [], "original": "intros d0 d1 Hc0 Hc1. destruct d0 as [p0 a0]. destruct d1 as [p1 a1]. simpl in Hc0. simpl in Hc1. simpl. apply insert_ostate_9. - apply u_merge_ref_ok. + apply dta_ref_ok_check_complete. apply DTA_main_state_correct_check_correct. apply Hc0. + apply dta_ref_ok_check_complete. apply DTA_main_state_correct_check_correct. apply Hc1. - apply predta_compatible_compat. intros s0 s1 Hs0 Hs1. unfold dta_compat. unfold DTA_compat. unfold dta_compatible in Hs0. unfold dta_compatible in Hs1. apply Hs0. apply Hs1. - apply union_semantics_0. + apply Hc0. + apply Hc1. + apply dta_ref_ok_check_complete. apply DTA_main_state_correct_check_correct. apply Hc0. + apply dta_ref_ok_check_complete. apply DTA_main_state_correct_check_correct. apply Hc1. + unfold DTA_compat. apply dta_compatible_compat. intros s0 s1 Hmap0 Hmap1. apply dta_compatible. intros s0 s1 Hstate0 Hstate1. apply predta_compatible. apply Hstate0. apply Hstate1.", "back_times": 5, "succ": false, "time": 393.2803087234497}]