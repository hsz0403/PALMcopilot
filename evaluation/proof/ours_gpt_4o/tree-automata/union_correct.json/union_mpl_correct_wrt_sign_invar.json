[{"history": {"proof": "intros s0 s1 sigma H0 H1. srun best use: union_mpl_correct_wrt_sign_invar_1, st_compat_check_complete, st_compat_check_0_complete, st_compat_check_correct, st_compat_check_0_correct unfold: st_compat_check inv: bool.", "repairs": ["", "hammer"], "exceptions": [{"ctx": ["intros s0 s1 sigma H0 H1.", "induction s0 as [|a0 p0|s00 IH0 s01 IH1].", "-", "induction s1 as [|a1 p1|s10 IH2 s11 IH3].", "--", "simpl.", "apply H0.", "--", "simpl."], "tactic": "apply union_mpl_correct_wrt_sign_invar_0; auto.", "exn": "In environment a1 : ad p1 : prec_list sigma : signature H0 : state_correct_wrt_sign (M0 prec_list) sigma H1 : state_correct_wrt_sign (M1 prec_list a1 p1) sigma a : ad p : prec_list Unable to unify \"MapGet prec_list (union_mpl_0 ?M1864 ?M1865 ?M1863) a = Some p\" with \"MapGet prec_list (M1 prec_list a1 p1) a = Some p\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s0 s1 sigma H0 H1.", "induction s0 as [|a0 p0|s00 IH0 s01 IH1].", "-", "induction s1 as [|a1 p1|s10 IH2 s11 IH3].", "--", "simpl.", "apply H0.", "--", "simpl.", "qsimpl time: 1 use: union_mpl_correct_wrt_sign_invar_0.", "--", "simpl."], "tactic": "apply H0.", "exn": "In environment s10, s11 : Map prec_list sigma : signature H0 : state_correct_wrt_sign (M0 prec_list) sigma H1 : state_correct_wrt_sign (M2 prec_list s10 s11) sigma IH2 : state_correct_wrt_sign s10 sigma -> state_correct_wrt_sign (union_mpl (M0 prec_list) s10) sigma IH3 : state_correct_wrt_sign s11 sigma -> state_correct_wrt_sign (union_mpl (M0 prec_list) s11) sigma Unable to unify \"state_correct_wrt_sign (M0 prec_list) sigma\" with \"state_correct_wrt_sign (M2 prec_list s10 s11) sigma\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s0 s1 sigma H0 H1.", "induction s0 as [|a0 p0|s00 IH0 s01 IH1].", "-", "induction s1 as [|a1 p1|s10 IH2 s11 IH3].", "--", "simpl.", "apply H0.", "--", "simpl.", "qsimpl time: 1 use: union_mpl_correct_wrt_sign_invar_0.", "--", "simpl.", "qsimpl time: 1 use: union_mpl_correct_wrt_sign_invar_0.", "-", "induction s1 as [|a1 p1|s10 IH2 s11 IH3].", "--", "simpl."], "tactic": "apply union_mpl_correct_wrt_sign_invar_0; auto.", "exn": "In environment a0 : ad p0 : prec_list sigma : signature H0 : state_correct_wrt_sign (M1 prec_list a0 p0) sigma H1 : state_correct_wrt_sign (M0 prec_list) sigma a : ad p : prec_list Unable to unify \"MapGet prec_list (union_mpl_0 ?M1870 ?M1871 ?M1869) a = Some p\" with \"MapGet prec_list (M1 prec_list a0 p0) a = Some p\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s0 s1 sigma H0 H1.", "induction s0 as [|a0 p0|s00 IH0 s01 IH1].", "-", "induction s1 as [|a1 p1|s10 IH2 s11 IH3].", "--", "simpl.", "apply H0.", "--", "simpl.", "qsimpl time: 1 use: union_mpl_correct_wrt_sign_invar_0.", "--", "simpl.", "qsimpl time: 1 use: union_mpl_correct_wrt_sign_invar_0.", "-", "induction s1 as [|a1 p1|s10 IH2 s11 IH3].", "--", "simpl.", "qsimpl time: 1 use: union_mpl_correct_wrt_sign_invar_0.", "--", "simpl."], "tactic": "apply union_mpl_correct_wrt_sign_invar_0; auto.", "exn": "In environment a0 : ad p0 : prec_list a1 : ad p1 : prec_list sigma : signature H0 : state_correct_wrt_sign (M1 prec_list a0 p0) sigma H1 : state_correct_wrt_sign (M1 prec_list a1 p1) sigma a : ad p : prec_list Unable to unify \"MapGet prec_list (union_mpl_0 ?M1870 ?M1871 ?M1869) a = Some p\" with \"MapGet prec_list (if (a1 =? a0)%N then M1 prec_list a1 (union_pl p1 p0) else match N.lxor a0 a1 with | 0%N => M1 prec_list a0 p0 | N.pos p => MapPut1 prec_list a0 p0 a1 p1 p end) a = Some p\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s0 s1 sigma H0 H1.", "induction s0 as [|a0 p0|s00 IH0 s01 IH1].", "-", "induction s1 as [|a1 p1|s10 IH2 s11 IH3].", "--", "simpl.", "apply H0.", "--", "simpl.", "qsimpl time: 1 use: union_mpl_correct_wrt_sign_invar_0.", "--", "simpl.", "qsimpl time: 1 use: union_mpl_correct_wrt_sign_invar_0.", "-", "induction s1 as [|a1 p1|s10 IH2 s11 IH3].", "--", "simpl.", "qsimpl time: 1 use: union_mpl_correct_wrt_sign_invar_0.", "--", "simpl.", "qsimpl time: 1 use: union_mpl_correct_wrt_sign_invar_0."], "tactic": "--", "exn": "Wrong bullet --: Current bullet -- is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros s0 s1 sigma H0 H1.", "induction s0 as [|a0 p0|s00 IH0 s01 IH1].", "-", "induction s1 as [|a1 p1|s10 IH2 s11 IH3].", "--", "simpl.", "apply H0.", "--", "simpl.", "qsimpl time: 1 use: union_mpl_correct_wrt_sign_invar_0.", "--", "simpl.", "qsimpl time: 1 use: union_mpl_correct_wrt_sign_invar_0.", "-", "induction s1 as [|a1 p1|s10 IH2 s11 IH3].", "--", "simpl.", "qsimpl time: 1 use: union_mpl_correct_wrt_sign_invar_0.", "--", "simpl.", "qsimpl time: 1 use: union_mpl_correct_wrt_sign_invar_0.", "++", "shelve.", "++", "shelve.", "--", "simpl."], "tactic": "assert (H: mpl_compat (M2 prec_list s00 s01) (M1 prec_list a0 p0)).", "exn": "The reference s01 was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s0 s1 sigma H0 H1.", "induction s0 as [|a0 p0|s00 IH0 s01 IH1].", "-", "induction s1 as [|a1 p1|s10 IH2 s11 IH3].", "--", "simpl.", "apply H0.", "--", "simpl.", "qsimpl time: 1 use: union_mpl_correct_wrt_sign_invar_0.", "--", "simpl.", "qsimpl time: 1 use: union_mpl_correct_wrt_sign_invar_0.", "-", "induction s1 as [|a1 p1|s10 IH2 s11 IH3].", "--", "simpl.", "qsimpl time: 1 use: union_mpl_correct_wrt_sign_invar_0.", "--", "simpl.", "qsimpl time: 1 use: union_mpl_correct_wrt_sign_invar_0.", "++", "shelve.", "++", "shelve.", "--", "simpl."], "tactic": "apply mpl_compat_3 with (M1 prec_list a1 p1).", "exn": "The reference p1 was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s0 s1 sigma H0 H1.", "induction s0 as [|a0 p0|s00 IH0 s01 IH1].", "-", "induction s1 as [|a1 p1|s10 IH2 s11 IH3].", "--", "simpl.", "apply H0.", "--", "simpl.", "qsimpl time: 1 use: union_mpl_correct_wrt_sign_invar_0.", "--", "simpl.", "qsimpl time: 1 use: union_mpl_correct_wrt_sign_invar_0.", "-", "induction s1 as [|a1 p1|s10 IH2 s11 IH3].", "--", "simpl.", "qsimpl time: 1 use: union_mpl_correct_wrt_sign_invar_0.", "--", "simpl.", "qsimpl time: 1 use: union_mpl_correct_wrt_sign_invar_0.", "++", "shelve.", "++", "shelve.", "--", "simpl."], "tactic": "split.", "exn": "Unable to find an instance for the variable x.", "type": "no_instance_var", "handled": true}, {"ctx": ["intros s0 s1 sigma H0 H1.", "induction s0 as [|a0 p0|s00 IH0 s01 IH1].", "-", "induction s1 as [|a1 p1|s10 IH2 s11 IH3].", "--", "simpl.", "apply H0.", "--", "simpl.", "qsimpl time: 1 use: union_mpl_correct_wrt_sign_invar_0.", "--", "simpl.", "qsimpl time: 1 use: union_mpl_correct_wrt_sign_invar_0.", "-", "induction s1 as [|a1 p1|s10 IH2 s11 IH3].", "--", "simpl.", "qsimpl time: 1 use: union_mpl_correct_wrt_sign_invar_0.", "--", "simpl.", "qsimpl time: 1 use: union_mpl_correct_wrt_sign_invar_0.", "++", "shelve.", "++", "shelve.", "--", "simpl."], "tactic": "-", "exn": "Wrong bullet -: Current bullet -- is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros s0 s1 sigma H0 H1.", "induction s0 as [|a0 p0|s00 IH0 s01 IH1].", "-", "induction s1 as [|a1 p1|s10 IH2 s11 IH3].", "--", "simpl.", "apply H0.", "--", "simpl.", "qsimpl time: 1 use: union_mpl_correct_wrt_sign_invar_0.", "--", "simpl.", "qsimpl time: 1 use: union_mpl_correct_wrt_sign_invar_0.", "-", "induction s1 as [|a1 p1|s10 IH2 s11 IH3].", "--", "simpl.", "qsimpl time: 1 use: union_mpl_correct_wrt_sign_invar_0.", "--", "simpl.", "qsimpl time: 1 use: union_mpl_correct_wrt_sign_invar_0.", "++", "shelve.", "++", "shelve.", "--", "simpl.", "shelve.", "-", "induction s1 as [|a1 p1|s10 IH2 s11 IH3].", "--", "simpl.", "apply H0.", "--", "simpl."], "tactic": "apply union_mpl_correct_wrt_sign_invar_0; auto.", "exn": "In environment s00, s01 : Map prec_list a1 : ad p1 : prec_list sigma : signature H0 : state_correct_wrt_sign (M2 prec_list s00 s01) sigma H1 : state_correct_wrt_sign (M1 prec_list a1 p1) sigma IH0 : state_correct_wrt_sign s00 sigma -> state_correct_wrt_sign (union_mpl s00 (M1 prec_list a1 p1)) sigma IH1 : state_correct_wrt_sign s01 sigma -> state_correct_wrt_sign (union_mpl s01 (M1 prec_list a1 p1)) sigma a : ad p : prec_list Unable to unify \"MapGet prec_list (union_mpl_0 ?M3747 ?M3748 ?M3746) a = Some p\" with \"MapGet prec_list match a1 with | 0%N => M2 prec_list (union_mpl_0 0%N p1 s00) s01 | N.pos (p'~1)%positive => M2 prec_list s00 (union_mpl_0 (N.pos p') p1 s01) | N.pos (p'~0)%positive => M2 prec_list (union_mpl_0 (N.pos p') p1 s00) s01 | 1%N => M2 prec_list s00 (union_mpl_0 0%N p1 s01) end a = Some p\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s0 s1 sigma H0 H1.", "induction s0 as [|a0 p0|s00 IH0 s01 IH1].", "-", "induction s1 as [|a1 p1|s10 IH2 s11 IH3].", "--", "simpl.", "apply H0.", "--", "simpl.", "qsimpl time: 1 use: union_mpl_correct_wrt_sign_invar_0.", "--", "simpl.", "qsimpl time: 1 use: union_mpl_correct_wrt_sign_invar_0.", "-", "induction s1 as [|a1 p1|s10 IH2 s11 IH3].", "--", "simpl.", "qsimpl time: 1 use: union_mpl_correct_wrt_sign_invar_0.", "--", "simpl.", "qsimpl time: 1 use: union_mpl_correct_wrt_sign_invar_0.", "++", "shelve.", "++", "shelve.", "--", "simpl.", "shelve.", "-", "induction s1 as [|a1 p1|s10 IH2 s11 IH3].", "--", "simpl.", "apply H0.", "--", "simpl."], "tactic": "qsimpl time: 1 use: umpl_conv_0_correct_wrt_sign_invar,union_mpl_correct_wrt_sign_invar_0,qsimpl,umpl_conv_1_correct_wrt_sign_invar.", "exn": "The reference qsimpl was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s0 s1 sigma H0 H1.", "induction s0 as [|a0 p0|s00 IH0 s01 IH1].", "-", "induction s1 as [|a1 p1|s10 IH2 s11 IH3].", "--", "simpl.", "apply H0.", "--", "simpl.", "qsimpl time: 1 use: union_mpl_correct_wrt_sign_invar_0.", "--", "simpl.", "qsimpl time: 1 use: union_mpl_correct_wrt_sign_invar_0.", "-", "induction s1 as [|a1 p1|s10 IH2 s11 IH3].", "--", "simpl.", "qsimpl time: 1 use: union_mpl_correct_wrt_sign_invar_0.", "--", "simpl.", "qsimpl time: 1 use: union_mpl_correct_wrt_sign_invar_0.", "++", "shelve.", "++", "shelve.", "--", "simpl.", "shelve.", "-", "induction s1 as [|a1 p1|s10 IH2 s11 IH3].", "--", "simpl.", "apply H0.", "--", "simpl.", "qsimpl time: 1 use: umpl_conv_0_correct_wrt_sign_invar,union_mpl_correct_wrt_sign_invar_0,umpl_conv_1_correct_wrt_sign_invar."], "tactic": "--", "exn": "Wrong bullet --: Current bullet -- is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros s0 s1 sigma H0 H1.", "induction s0 as [|a0 p0|s00 IH0 s01 IH1].", "-", "induction s1 as [|a1 p1|s10 IH2 s11 IH3].", "--", "simpl.", "apply H0.", "--", "simpl.", "qsimpl time: 1 use: union_mpl_correct_wrt_sign_invar_0.", "--", "simpl.", "qsimpl time: 1 use: union_mpl_correct_wrt_sign_invar_0.", "-", "induction s1 as [|a1 p1|s10 IH2 s11 IH3].", "--", "simpl.", "qsimpl time: 1 use: union_mpl_correct_wrt_sign_invar_0.", "--", "simpl.", "qsimpl time: 1 use: union_mpl_correct_wrt_sign_invar_0.", "++", "shelve.", "++", "shelve.", "--", "simpl.", "shelve.", "-", "induction s1 as [|a1 p1|s10 IH2 s11 IH3].", "--", "simpl.", "apply H0.", "--", "simpl.", "qsimpl time: 1 use: umpl_conv_0_correct_wrt_sign_invar,union_mpl_correct_wrt_sign_invar_0,umpl_conv_1_correct_wrt_sign_invar.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "--", "simpl."], "tactic": "apply union_mpl_correct_wrt_sign_invar_1; auto.", "exn": "In environment s00, s01, s10, s11 : Map prec_list sigma : signature H0 : state_correct_wrt_sign (M2 prec_list s00 s01) sigma H1 : state_correct_wrt_sign (M2 prec_list s10 s11) sigma IH0 : state_correct_wrt_sign s00 sigma -> state_correct_wrt_sign (union_mpl s00 (M2 prec_list s10 s11)) sigma IH1 : state_correct_wrt_sign s01 sigma -> state_correct_wrt_sign (union_mpl s01 (M2 prec_list s10 s11)) sigma IH2 : state_correct_wrt_sign s10 sigma -> (state_correct_wrt_sign s00 sigma -> state_correct_wrt_sign (union_mpl s00 s10) sigma) -> (state_correct_wrt_sign s01 sigma -> state_correct_wrt_sign (union_mpl s01 s10) sigma) -> state_correct_wrt_sign (union_mpl (M2 prec_list s00 s01) s10) sigma IH3 : state_correct_wrt_sign s11 sigma -> (state_correct_wrt_sign s00 sigma -> state_correct_wrt_sign (union_mpl s00 s11) sigma) -> (state_correct_wrt_sign s01 sigma -> state_correct_wrt_sign (union_mpl s01 s11) sigma) -> state_correct_wrt_sign (union_mpl (M2 prec_list s00 s01) s11) sigma a : ad p : prec_list Unable to unify \"MapGet prec_list (union_mpl ?M8242 ?M8243) a = Some p\" with \"MapGet prec_list (M2 prec_list (union_mpl s00 s10) (union_mpl s01 s11)) a = Some p\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s0 s1 sigma H0 H1.", "induction s0 as [|a0 p0|s00 IH0 s01 IH1].", "-", "induction s1 as [|a1 p1|s10 IH2 s11 IH3].", "--", "simpl.", "apply H0.", "--", "simpl.", "qsimpl time: 1 use: union_mpl_correct_wrt_sign_invar_0.", "--", "simpl.", "qsimpl time: 1 use: union_mpl_correct_wrt_sign_invar_0.", "-", "induction s1 as [|a1 p1|s10 IH2 s11 IH3].", "--", "simpl.", "qsimpl time: 1 use: union_mpl_correct_wrt_sign_invar_0.", "--", "simpl.", "qsimpl time: 1 use: union_mpl_correct_wrt_sign_invar_0.", "++", "shelve.", "++", "shelve.", "--", "simpl.", "shelve.", "-", "induction s1 as [|a1 p1|s10 IH2 s11 IH3].", "--", "simpl.", "apply H0.", "--", "simpl.", "qsimpl time: 1 use: umpl_conv_0_correct_wrt_sign_invar,union_mpl_correct_wrt_sign_invar_0,umpl_conv_1_correct_wrt_sign_invar.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "--", "simpl."], "tactic": "qsimpl time: 1 use: umpl_conv_0_correct_wrt_sign_invar,union_mpl_correct_wrt_sign_invar_0,umpl_conv_1_correct_wrt_sign_invar,qsimpl,union_mpl_correct_wrt_sign_invar_1.", "exn": "The reference qsimpl was not found in the current environment.", "type": "ref_not_found", "handled": true}]}, "chat": [], "original": "intros s0 s1 sigma H0 H1. induction s0 as [|a0 p0|s00 IH0 s01 IH1]. - induction s1 as [|a1 p1|s10 IH2 s11 IH3]. -- simpl. apply H0. -- simpl. apply union_mpl_correct_wrt_sign_invar_0; auto. -- simpl. apply H0. - induction s1 as [|a1 p1|s10 IH2 s11 IH3]. -- simpl. apply union_mpl_correct_wrt_sign_invar_0; auto. -- simpl. apply union_mpl_correct_wrt_sign_invar_0; auto. -- simpl. assert (H: mpl_compat (M2 prec_list s00 s01) (M1 prec_list a0 p0)). { apply mpl_compat_3 with (M1 prec_list a1 p1). } split. ++ apply IH0. ** apply umpl_conv_0_correct_wrt_sign_invar. apply H0. ** apply umpl_conv_1_correct_wrt_sign_invar. apply H1. ++ apply IH1. ** apply umpl_conv_0_correct_wrt_sign_invar. apply H0. ** apply umpl_conv_1_correct_wrt_sign_invar. apply H1. - induction s1 as [|a1 p1|s10 IH2 s11 IH3]. -- simpl. apply H0. -- simpl. apply union_mpl_correct_wrt_sign_invar_0; auto. -- simpl. apply union_mpl_correct_wrt_sign_invar_1; auto.", "back_times": 0, "succ": true, "time": 121.57663416862488}]