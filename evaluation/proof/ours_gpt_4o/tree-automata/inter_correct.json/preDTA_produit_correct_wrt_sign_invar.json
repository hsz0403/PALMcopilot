[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros d0 d1 sigma H0 H1.", "induction d0.", "-", "induction d1.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "--", "simpl."], "tactic": "intros a s Hget.", "exn": "a is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros d0 d1 sigma H0 H1.", "induction d0.", "-", "induction d1.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "-", "induction d1.", "--", "simpl."], "tactic": "intros a s Hget.", "exn": "a is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros d0 d1 sigma H0 H1.", "induction d0.", "-", "induction d1.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "-", "induction d1.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl."], "tactic": "intros a s Hget.", "exn": "a is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros d0 d1 sigma H0 H1.", "induction d0.", "-", "induction d1.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "-", "induction d1.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget."], "tactic": "destruct (MapGet state (M1 state d0a d0s) a) as [s0 |] eqn:Hget0.", "exn": "The reference d0s was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros d0 d1 sigma H0 H1.", "induction d0.", "-", "induction d1.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "-", "induction d1.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget."], "tactic": "apply preDTA_produit_l_correct_wrt_sign_invar; auto.", "exn": "In environment a : ad a0 : state a1 : ad a2 : state sigma : signature H0 : predta_correct_wrt_sign (M1 state a a0) sigma H1 : predta_correct_wrt_sign (M1 state a1 a2) sigma a' : ad s : state Hget : MapGet state (M1 state (iad_conv a a1) (s_produit a0 a2)) a' = Some s a3 : ad Unable to unify \"state\" with \"prec_list\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros d0 d1 sigma H0 H1.", "induction d0.", "-", "induction d1.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "-", "induction d1.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar."], "tactic": "apply preDTA_produit_r_correct_wrt_sign_invar; auto.", "exn": "In environment H : forall (d : preDTA) (a : ad) (s : state) (sigma : signature), predta_correct_wrt_sign d sigma -> predta_correct_wrt_sign (M1 state a s) sigma -> predta_correct_wrt_sign (preDTA_produit_l a s d) sigma a : ad a0 : state a1 : ad a2 : state sigma : signature H0 : predta_correct_wrt_sign (M1 state a a0) sigma H1 : predta_correct_wrt_sign (M1 state a1 a2) sigma a3 : ad Unable to unify \"state\" with \"prec_list\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros d0 d1 sigma H0 H1.", "induction d0.", "-", "induction d1.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "-", "induction d1.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar."], "tactic": "--", "exn": "Wrong bullet --: Current bullet -- is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros d0 d1 sigma H0 H1.", "induction d0.", "-", "induction d1.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "-", "induction d1.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "--", "simpl."], "tactic": "intros a s Hget.", "exn": "a is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros d0 d1 sigma H0 H1.", "induction d0.", "-", "induction d1.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "-", "induction d1.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "--", "simpl.", "intros a' s Hget."], "tactic": "destruct (MapGet state (M1 state d0a d0s) a) as [s0 |] eqn:Hget0.", "exn": "The reference d0s was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros d0 d1 sigma H0 H1.", "induction d0.", "-", "induction d1.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "-", "induction d1.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "--", "simpl.", "intros a' s Hget."], "tactic": "apply preDTA_produit_l_correct_wrt_sign_invar; auto.", "exn": "In environment a : ad a0 : state d1_1, d1_2 : Map state sigma : signature H0 : predta_correct_wrt_sign (M1 state a a0) sigma H1 : predta_correct_wrt_sign (M2 state d1_1 d1_2) sigma IHd1_1 : predta_correct_wrt_sign d1_1 sigma -> predta_correct_wrt_sign (preDTA_produit (M1 state a a0) d1_1) sigma IHd1_2 : predta_correct_wrt_sign d1_2 sigma -> predta_correct_wrt_sign (preDTA_produit (M1 state a a0) d1_2) sigma a' : ad s : state Hget : MapGet state match a with | 0%N => M2 state (M2 state (preDTA_produit_l 0%N a0 d1_1) (preDTA_produit_l 0%N a0 d1_2)) (M0 state) | N.pos (p'~1)%positive => M2 state (M0 state) (M2 state (preDTA_produit_l (N.pos p') a0 d1_1) (preDTA_produit_l (N.pos p') a0 d1_2)) | N.pos (p'~0)%positive => M2 state (M2 state (preDTA_produit_l (N.pos p') a0 d1_1) (preDTA_produit_l (N.pos p') a0 d1_2)) (M0 state) | 1%N => M2 state (M0 state) (M2 state (preDTA_produit_l 0%N a0 d1_1) (preDTA_produit_l 0%N a0 d1_2)) end a' = Some s a1 : ad Unable to unify \"state\" with \"prec_list\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros d0 d1 sigma H0 H1.", "induction d0.", "-", "induction d1.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "-", "induction d1.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "++"], "tactic": "destruct (MapGet state (M2 state d1s1 d1s2) a) as [s1 |] eqn:Hget1.", "exn": "The reference a was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros d0 d1 sigma H0 H1.", "induction d0.", "-", "induction d1.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "-", "induction d1.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "++"], "tactic": "apply preDTA_produit_r_correct_wrt_sign_invar; auto.", "exn": "In environment H2 : forall (d : preDTA) (a : ad) (s : state) (sigma : signature), predta_correct_wrt_sign d sigma -> predta_correct_wrt_sign (M1 state a s) sigma -> predta_correct_wrt_sign (preDTA_produit_r a s d) sigma H : forall (d : preDTA) (a : ad) (s : state) (sigma : signature), predta_correct_wrt_sign d sigma -> predta_correct_wrt_sign (M1 state a s) sigma -> predta_correct_wrt_sign (preDTA_produit_l a s d) sigma a0 : state d1_1, d1_2 : Map state sigma : signature H0 : predta_correct_wrt_sign (M1 state 0%N a0) sigma H1 : predta_correct_wrt_sign (M2 state d1_1 d1_2) sigma IHd1_1 : predta_correct_wrt_sign d1_1 sigma -> predta_correct_wrt_sign (preDTA_produit (M1 state 0%N a0) d1_1) sigma IHd1_2 : predta_correct_wrt_sign d1_2 sigma -> predta_correct_wrt_sign (preDTA_produit (M1 state 0%N a0) d1_2) sigma s : state Hget : MapGet state (preDTA_produit_l 0%N a0 d1_1) 0%N = Some s a : ad Unable to unify \"state\" with \"prec_list\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros d0 d1 sigma H0 H1.", "induction d0.", "-", "induction d1.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "-", "induction d1.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "inversion Hget."], "tactic": "-", "exn": "Wrong bullet -: Current bullet ++ is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros d0 d1 sigma H0 H1.", "induction d0.", "-", "induction d1.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "-", "induction d1.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "inversion Hget.", "shelve."], "tactic": "-", "exn": "Wrong bullet -: Expecting ++.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros d0 d1 sigma H0 H1.", "induction d0.", "-", "induction d1.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "-", "induction d1.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "inversion Hget.", "shelve.", "++"], "tactic": "induction d1.", "exn": "The reference d1 was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros d0 d1 sigma H0 H1.", "induction d0.", "-", "induction d1.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "-", "induction d1.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "inversion Hget.", "shelve.", "++", "induction d1_2."], "tactic": "--", "exn": "Wrong bullet --: Current bullet ++ is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros d0 d1 sigma H0 H1.", "induction d0.", "-", "induction d1.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "-", "induction d1.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "inversion Hget.", "shelve.", "++", "induction d1_2.", "**", "shelve.", "**", "shelve.", "**", "shelve."], "tactic": "--", "exn": "Wrong bullet --: Expecting ++.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros d0 d1 sigma H0 H1.", "induction d0.", "-", "induction d1.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "-", "induction d1.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "inversion Hget.", "shelve.", "++", "induction d1_2.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "++"], "tactic": "intros a s Hget.", "exn": "s is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros d0 d1 sigma H0 H1.", "induction d0.", "-", "induction d1.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "-", "induction d1.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "inversion Hget.", "shelve.", "++", "induction d1_2.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "++"], "tactic": "intros a s' Hget.", "exn": "Hget is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros d0 d1 sigma H0 H1.", "induction d0.", "-", "induction d1.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "-", "induction d1.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "inversion Hget.", "shelve.", "++", "induction d1_2.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "++", "intros a s' Hget'.", "inversion Hget."], "tactic": "--", "exn": "Wrong bullet --: Current bullet ++ is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros d0 d1 sigma H0 H1.", "induction d0.", "-", "induction d1.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "-", "induction d1.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "inversion Hget.", "shelve.", "++", "induction d1_2.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "++", "intros a s' Hget'.", "inversion Hget.", "shelve."], "tactic": "--", "exn": "Wrong bullet --: Expecting ++.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros d0 d1 sigma H0 H1.", "induction d0.", "-", "induction d1.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "-", "induction d1.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "inversion Hget.", "shelve.", "++", "induction d1_2.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "++", "intros a s' Hget'.", "inversion Hget.", "shelve.", "++"], "tactic": "intros a s Hget.", "exn": "s is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros d0 d1 sigma H0 H1.", "induction d0.", "-", "induction d1.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "-", "induction d1.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "inversion Hget.", "shelve.", "++", "induction d1_2.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "++", "intros a s' Hget'.", "inversion Hget.", "shelve.", "++"], "tactic": "intros a s' Hget.", "exn": "Hget is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros d0 d1 sigma H0 H1.", "induction d0.", "-", "induction d1.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "-", "induction d1.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "inversion Hget.", "shelve.", "++", "induction d1_2.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "++", "intros a s' Hget'.", "inversion Hget.", "shelve.", "++", "intros a s' Hget'."], "tactic": "destruct (MapGet state (M2 state d0s1 d0s2) a) as [s1 |] eqn:Hget1.", "exn": "The reference d0s2 was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros d0 d1 sigma H0 H1.", "induction d0.", "-", "induction d1.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "-", "induction d1.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "inversion Hget.", "shelve.", "++", "induction d1_2.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "++", "intros a s' Hget'.", "inversion Hget.", "shelve.", "++", "intros a s' Hget'."], "tactic": "++", "exn": "Wrong bullet ++: Current bullet ++ is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros d0 d1 sigma H0 H1.", "induction d0.", "-", "induction d1.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "-", "induction d1.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "inversion Hget.", "shelve.", "++", "induction d1_2.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "++", "intros a s' Hget'.", "inversion Hget.", "shelve.", "++", "intros a s' Hget'.", "shelve.", "++"], "tactic": "apply preDTA_produit_r_correct_wrt_sign_invar; auto.", "exn": "In environment H2 : forall (d : preDTA) (a : ad) (s : state) (sigma : signature), predta_correct_wrt_sign d sigma -> predta_correct_wrt_sign (M1 state a s) sigma -> predta_correct_wrt_sign (preDTA_produit_r a s d) sigma H : forall (d : preDTA) (a : ad) (s : state) (sigma : signature), predta_correct_wrt_sign d sigma -> predta_correct_wrt_sign (M1 state a s) sigma -> predta_correct_wrt_sign (preDTA_produit_l a s d) sigma p : positive a0 : state d1_1, d1_2 : Map state sigma : signature H0 : predta_correct_wrt_sign (M1 state (N.pos p~1) a0) sigma H1 : predta_correct_wrt_sign (M2 state d1_1 d1_2) sigma IHd1_1 : predta_correct_wrt_sign d1_1 sigma -> predta_correct_wrt_sign (preDTA_produit (M1 state (N.pos p~1) a0) d1_1) sigma IHd1_2 : predta_correct_wrt_sign d1_2 sigma -> predta_correct_wrt_sign (preDTA_produit (M1 state (N.pos p~1) a0) d1_2) sigma p0 : positive s : state Hget : MapGet state (preDTA_produit_l (N.pos p) a0 d1_2) (N.pos p0) = Some s a : ad Unable to unify \"state\" with \"prec_list\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros d0 d1 sigma H0 H1.", "induction d0.", "-", "induction d1.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "-", "induction d1.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "inversion Hget.", "shelve.", "++", "induction d1_2.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "++", "intros a s' Hget'.", "inversion Hget.", "shelve.", "++", "intros a s' Hget'.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar."], "tactic": "++", "exn": "Wrong bullet ++: Current bullet ++ is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros d0 d1 sigma H0 H1.", "induction d0.", "-", "induction d1.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "-", "induction d1.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "inversion Hget.", "shelve.", "++", "induction d1_2.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "++", "intros a s' Hget'.", "inversion Hget.", "shelve.", "++", "intros a s' Hget'.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "++"], "tactic": "apply preDTA_produit_l_correct_wrt_sign_invar; auto.", "exn": "In environment H2 : forall (d : preDTA) (a : ad) (s : state) (sigma : signature), predta_correct_wrt_sign d sigma -> predta_correct_wrt_sign (M1 state a s) sigma -> predta_correct_wrt_sign (preDTA_produit_r a s d) sigma H : forall (d : preDTA) (a : ad) (s : state) (sigma : signature), predta_correct_wrt_sign d sigma -> predta_correct_wrt_sign (M1 state a s) sigma -> predta_correct_wrt_sign (preDTA_produit_l a s d) sigma p : positive a0 : state d1_1, d1_2 : Map state sigma : signature H0 : predta_correct_wrt_sign (M1 state (N.pos p~1) a0) sigma H1 : predta_correct_wrt_sign (M2 state d1_1 d1_2) sigma IHd1_1 : predta_correct_wrt_sign d1_1 sigma -> predta_correct_wrt_sign (preDTA_produit (M1 state (N.pos p~1) a0) d1_1) sigma IHd1_2 : predta_correct_wrt_sign d1_2 sigma -> predta_correct_wrt_sign (preDTA_produit (M1 state (N.pos p~1) a0) d1_2) sigma p0 : positive s : state Hget : MapGet state (preDTA_produit_l (N.pos p) a0 d1_1) (N.pos p0) = Some s a : ad Unable to unify \"state\" with \"prec_list\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros d0 d1 sigma H0 H1.", "induction d0.", "-", "induction d1.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "-", "induction d1.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "inversion Hget.", "shelve.", "++", "induction d1_2.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "++", "intros a s' Hget'.", "inversion Hget.", "shelve.", "++", "intros a s' Hget'.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar."], "tactic": "--", "exn": "Wrong bullet --: Current bullet ++ is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros d0 d1 sigma H0 H1.", "induction d0.", "-", "induction d1.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "-", "induction d1.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "inversion Hget.", "shelve.", "++", "induction d1_2.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "++", "intros a s' Hget'.", "inversion Hget.", "shelve.", "++", "intros a s' Hget'.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve."], "tactic": "--", "exn": "Wrong bullet --: Expecting ++.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros d0 d1 sigma H0 H1.", "induction d0.", "-", "induction d1.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "-", "induction d1.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "inversion Hget.", "shelve.", "++", "induction d1_2.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "++", "intros a s' Hget'.", "inversion Hget.", "shelve.", "++", "intros a s' Hget'.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "++"], "tactic": "intros a s Hget.", "exn": "s is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros d0 d1 sigma H0 H1.", "induction d0.", "-", "induction d1.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "-", "induction d1.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "inversion Hget.", "shelve.", "++", "induction d1_2.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "++", "intros a s' Hget'.", "inversion Hget.", "shelve.", "++", "intros a s' Hget'.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "++"], "tactic": "intros a s' Hget.", "exn": "Hget is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros d0 d1 sigma H0 H1.", "induction d0.", "-", "induction d1.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "-", "induction d1.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "inversion Hget.", "shelve.", "++", "induction d1_2.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "++", "intros a s' Hget'.", "inversion Hget.", "shelve.", "++", "intros a s' Hget'.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "++", "intros a s' Hget'."], "tactic": "destruct (MapGet state (M2 state d0s1 d0s2) a) as [s0 |] eqn:Hget0.", "exn": "The reference d0s2 was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros d0 d1 sigma H0 H1.", "induction d0.", "-", "induction d1.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "-", "induction d1.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "inversion Hget.", "shelve.", "++", "induction d1_2.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "++", "intros a s' Hget'.", "inversion Hget.", "shelve.", "++", "intros a s' Hget'.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "++", "intros a s' Hget'."], "tactic": "++", "exn": "Wrong bullet ++: Current bullet ++ is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros d0 d1 sigma H0 H1.", "induction d0.", "-", "induction d1.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "-", "induction d1.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "inversion Hget.", "shelve.", "++", "induction d1_2.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "++", "intros a s' Hget'.", "inversion Hget.", "shelve.", "++", "intros a s' Hget'.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "++", "intros a s' Hget'.", "shelve.", "++"], "tactic": "destruct (MapGet state (M2 state d1s1 d1s2) a) as [s1 |] eqn:Hget1.", "exn": "The reference a was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros d0 d1 sigma H0 H1.", "induction d0.", "-", "induction d1.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "-", "induction d1.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "inversion Hget.", "shelve.", "++", "induction d1_2.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "++", "intros a s' Hget'.", "inversion Hget.", "shelve.", "++", "intros a s' Hget'.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "++", "intros a s' Hget'.", "shelve.", "++"], "tactic": "apply st_produit_correct_wrt_sign_invar; auto.", "exn": "In environment H2 : forall (d : preDTA) (a : ad) (s : state) (sigma : signature), predta_correct_wrt_sign d sigma -> predta_correct_wrt_sign (M1 state a s) sigma -> predta_correct_wrt_sign (preDTA_produit_r a s d) sigma H : forall (d : preDTA) (a : ad) (s : state) (sigma : signature), predta_correct_wrt_sign d sigma -> predta_correct_wrt_sign (M1 state a s) sigma -> predta_correct_wrt_sign (preDTA_produit_l a s d) sigma p : positive a0 : state d1_1, d1_2 : Map state sigma : signature H0 : predta_correct_wrt_sign (M1 state (N.pos p~1) a0) sigma H1 : predta_correct_wrt_sign (M2 state d1_1 d1_2) sigma IHd1_1 : predta_correct_wrt_sign d1_1 sigma -> predta_correct_wrt_sign (preDTA_produit (M1 state (N.pos p~1) a0) d1_1) sigma IHd1_2 : predta_correct_wrt_sign d1_2 sigma -> predta_correct_wrt_sign (preDTA_produit (M1 state (N.pos p~1) a0) d1_2) sigma s : state Hget : MapGet state (preDTA_produit_l (N.pos p) a0 d1_1) 0%N = Some s a : ad p0 : prec_list Unable to unify \"MapGet prec_list (s_produit ?M27466 ?M27467) a = Some p0\" with \"MapGet prec_list s a = Some p0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros d0 d1 sigma H0 H1.", "induction d0.", "-", "induction d1.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "-", "induction d1.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "inversion Hget.", "shelve.", "++", "induction d1_2.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "++", "intros a s' Hget'.", "inversion Hget.", "shelve.", "++", "intros a s' Hget'.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "++", "intros a s' Hget'.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar,st_produit_correct_wrt_sign_invar."], "tactic": "apply preDTA_produit_r_correct_wrt_sign_invar with a; auto.", "exn": "The reference a was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros d0 d1 sigma H0 H1.", "induction d0.", "-", "induction d1.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "-", "induction d1.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "inversion Hget.", "shelve.", "++", "induction d1_2.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "++", "intros a s' Hget'.", "inversion Hget.", "shelve.", "++", "intros a s' Hget'.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "++", "intros a s' Hget'.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar,st_produit_correct_wrt_sign_invar."], "tactic": "apply predta_correct_wrt_sign_M2 in H0.", "exn": "Unable to apply lemma of type \"forall (d0 d1 : preDTA) (sigma : signature), predta_correct_wrt_sign (M2 state d0 d1) sigma -> predta_correct_wrt_sign d0 sigma /\\\\ predta_correct_wrt_sign d1 sigma\" on hypothesis of type \"predta_correct_wrt_sign (M1 state (N.pos p~1) a0) sigma\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["intros d0 d1 sigma H0 H1.", "induction d0.", "-", "induction d1.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "-", "induction d1.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "inversion Hget.", "shelve.", "++", "induction d1_2.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "++", "intros a s' Hget'.", "inversion Hget.", "shelve.", "++", "intros a s' Hget'.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "++", "intros a s' Hget'.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar,st_produit_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,predta_correct_wrt_sign_M2,preDTA_produit_r_correct_wrt_sign_invar,st_produit_correct_wrt_sign_invar."], "tactic": "destruct H0 as [H0 H0'].", "exn": "Unable to find an instance for the variables a, s, a, p.", "type": "no_instance_var", "handled": true}, {"ctx": ["intros d0 d1 sigma H0 H1.", "induction d0.", "-", "induction d1.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "-", "induction d1.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "inversion Hget.", "shelve.", "++", "induction d1_2.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "++", "intros a s' Hget'.", "inversion Hget.", "shelve.", "++", "intros a s' Hget'.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "++", "intros a s' Hget'.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar,st_produit_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,predta_correct_wrt_sign_M2,preDTA_produit_r_correct_wrt_sign_invar,st_produit_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,predta_correct_wrt_sign_M2,preDTA_produit_r_correct_wrt_sign_invar,st_produit_correct_wrt_sign_invar."], "tactic": "apply H0.", "exn": "In environment H9 : forall (s0 s1 : state) (sigma : signature), state_correct_wrt_sign s0 sigma -> state_correct_wrt_sign s1 sigma -> state_correct_wrt_sign (s_produit s0 s1) sigma H8 : forall (d : preDTA) (a : ad) (s : state) (sigma : signature), predta_correct_wrt_sign d sigma -> predta_correct_wrt_sign (M1 state a s) sigma -> predta_correct_wrt_sign (preDTA_produit_r a s d) sigma H4 : forall (d : preDTA) (a : ad) (s : state) (sigma : signature), predta_correct_wrt_sign d sigma -> predta_correct_wrt_sign (M1 state a s) sigma -> predta_correct_wrt_sign (preDTA_produit_l a s d) sigma p : positive a0 : state d1_1, d1_2 : Map state sigma : signature H0 : predta_correct_wrt_sign (M1 state (N.pos p~1) a0) sigma H1 : predta_correct_wrt_sign (M2 state d1_1 d1_2) sigma IHd1_1 : predta_correct_wrt_sign d1_1 sigma -> predta_correct_wrt_sign (preDTA_produit (M1 state (N.pos p~1) a0) d1_1) sigma IHd1_2 : predta_correct_wrt_sign d1_2 sigma -> predta_correct_wrt_sign (preDTA_produit (M1 state (N.pos p~1) a0) d1_2) sigma s : state Hget : MapGet state (preDTA_produit_l (N.pos p) a0 d1_1) 0%N = Some s H2 : forall (d0 d1 : preDTA) (sigma : signature), predta_correct_wrt_sign (M2 state d0 d1) sigma -> predta_correct_wrt_sign d1 sigma H3 : forall (d0 d1 : preDTA) (sigma : signature), predta_correct_wrt_sign (M2 state d0 d1) sigma -> predta_correct_wrt_sign d0 sigma Unable to unify \"predta_correct_wrt_sign (M1 state (N.pos p~1) a0) sigma\" with \"state_correct_wrt_sign s sigma\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros d0 d1 sigma H0 H1.", "induction d0.", "-", "induction d1.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "-", "induction d1.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "inversion Hget.", "shelve.", "++", "induction d1_2.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "++", "intros a s' Hget'.", "inversion Hget.", "shelve.", "++", "intros a s' Hget'.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "++", "intros a s' Hget'.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar,st_produit_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,predta_correct_wrt_sign_M2,preDTA_produit_r_correct_wrt_sign_invar,st_produit_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,predta_correct_wrt_sign_M2,preDTA_produit_r_correct_wrt_sign_invar,st_produit_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,predta_correct_wrt_sign_M2,preDTA_produit_r_correct_wrt_sign_invar,st_produit_correct_wrt_sign_invar."], "tactic": "++", "exn": "Wrong bullet ++: Current bullet ++ is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros d0 d1 sigma H0 H1.", "induction d0.", "-", "induction d1.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "-", "induction d1.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "inversion Hget.", "shelve.", "++", "induction d1_2.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "++", "intros a s' Hget'.", "inversion Hget.", "shelve.", "++", "intros a s' Hget'.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "++", "intros a s' Hget'.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar,st_produit_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,predta_correct_wrt_sign_M2,preDTA_produit_r_correct_wrt_sign_invar,st_produit_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,predta_correct_wrt_sign_M2,preDTA_produit_r_correct_wrt_sign_invar,st_produit_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,predta_correct_wrt_sign_M2,preDTA_produit_r_correct_wrt_sign_invar,st_produit_correct_wrt_sign_invar.", "shelve.", "++"], "tactic": "eapply predta_produit_2; eauto.", "exn": "In environment H2 : forall (d : preDTA) (a : ad) (s : state) (sigma : signature), predta_correct_wrt_sign d sigma -> predta_correct_wrt_sign (M1 state a s) sigma -> predta_correct_wrt_sign (preDTA_produit_r a s d) sigma H : forall (d : preDTA) (a : ad) (s : state) (sigma : signature), predta_correct_wrt_sign d sigma -> predta_correct_wrt_sign (M1 state a s) sigma -> predta_correct_wrt_sign (preDTA_produit_l a s d) sigma p : positive a0 : state d1_1, d1_2 : Map state sigma : signature H0 : predta_correct_wrt_sign (M1 state (N.pos p~0) a0) sigma H1 : predta_correct_wrt_sign (M2 state d1_1 d1_2) sigma IHd1_1 : predta_correct_wrt_sign d1_1 sigma -> predta_correct_wrt_sign (preDTA_produit (M1 state (N.pos p~0) a0) d1_1) sigma IHd1_2 : predta_correct_wrt_sign d1_2 sigma -> predta_correct_wrt_sign (preDTA_produit (M1 state (N.pos p~0) a0) d1_2) sigma s : state Hget : MapGet state (preDTA_produit_l (N.pos p) a0 d1_1) 0%N = Some s Unable to unify \"MapGet state (preDTA_produit ?M33291 ?M33292) (iad_conv ?M33293 ?M33294) = Some (s_produit ?M33295 ?M33296)\" with \"forall (a : ad) (p : prec_list), MapGet prec_list s a = Some p -> exists n : nat, MapGet nat sigma a = Some n /\\\\ pl_tl_length p n\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros d0 d1 sigma H0 H1.", "induction d0.", "-", "induction d1.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "-", "induction d1.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "inversion Hget.", "shelve.", "++", "induction d1_2.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "++", "intros a s' Hget'.", "inversion Hget.", "shelve.", "++", "intros a s' Hget'.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "++", "intros a s' Hget'.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar,st_produit_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,predta_correct_wrt_sign_M2,preDTA_produit_r_correct_wrt_sign_invar,st_produit_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,predta_correct_wrt_sign_M2,preDTA_produit_r_correct_wrt_sign_invar,st_produit_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,predta_correct_wrt_sign_M2,preDTA_produit_r_correct_wrt_sign_invar,st_produit_correct_wrt_sign_invar.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_r_correct_wrt_sign_invar,preDTA_produit_l_correct_wrt_sign_invar,predta_correct_wrt_sign_M2,st_produit_correct_wrt_sign_invar,predta_produit_2."], "tactic": "apply preDTA_produit_r_correct_wrt_sign_invar with a; auto.", "exn": "The reference a was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros d0 d1 sigma H0 H1.", "induction d0.", "-", "induction d1.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "-", "induction d1.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "inversion Hget.", "shelve.", "++", "induction d1_2.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "++", "intros a s' Hget'.", "inversion Hget.", "shelve.", "++", "intros a s' Hget'.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "++", "intros a s' Hget'.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar,st_produit_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,predta_correct_wrt_sign_M2,preDTA_produit_r_correct_wrt_sign_invar,st_produit_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,predta_correct_wrt_sign_M2,preDTA_produit_r_correct_wrt_sign_invar,st_produit_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,predta_correct_wrt_sign_M2,preDTA_produit_r_correct_wrt_sign_invar,st_produit_correct_wrt_sign_invar.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_r_correct_wrt_sign_invar,preDTA_produit_l_correct_wrt_sign_invar,predta_correct_wrt_sign_M2,st_produit_correct_wrt_sign_invar,predta_produit_2.", "apply predta_correct_wrt_sign_M2 in H1.", "destruct H1 as [H1 H1']."], "tactic": "apply H1.", "exn": "In environment H7 : forall (d0 d1 : preDTA) (a0 a1 : ad) (s0 s1 : state), MapGet state d0 a0 = Some s0 -> MapGet state d1 a1 = Some s1 -> MapGet state (preDTA_produit d0 d1) (iad_conv a0 a1) = Some (s_produit s0 s1) H6 : forall (s0 s1 : state) (sigma : signature), state_correct_wrt_sign s0 sigma -> state_correct_wrt_sign s1 sigma -> state_correct_wrt_sign (s_produit s0 s1) sigma H4 : forall (d : preDTA) (a : ad) (s : state) (sigma : signature), predta_correct_wrt_sign d sigma -> predta_correct_wrt_sign (M1 state a s) sigma -> predta_correct_wrt_sign (preDTA_produit_l a s d) sigma H3 : forall (d : preDTA) (a : ad) (s : state) (sigma : signature), predta_correct_wrt_sign d sigma -> predta_correct_wrt_sign (M1 state a s) sigma -> predta_correct_wrt_sign (preDTA_produit_r a s d) sigma p : positive a0 : state d1_1, d1_2 : Map state sigma : signature H0 : predta_correct_wrt_sign (M1 state (N.pos p~0) a0) sigma H1 : predta_correct_wrt_sign d1_1 sigma H1' : predta_correct_wrt_sign d1_2 sigma IHd1_1 : predta_correct_wrt_sign d1_1 sigma -> predta_correct_wrt_sign (preDTA_produit (M1 state (N.pos p~0) a0) d1_1) sigma IHd1_2 : predta_correct_wrt_sign d1_2 sigma -> predta_correct_wrt_sign (preDTA_produit (M1 state (N.pos p~0) a0) d1_2) sigma s : state Hget : MapGet state (preDTA_produit_l (N.pos p) a0 d1_1) 0%N = Some s H : forall (d0 d1 : preDTA) (sigma : signature), predta_correct_wrt_sign (M2 state d0 d1) sigma -> predta_correct_wrt_sign d1 sigma H2 : forall (d0 d1 : preDTA) (sigma : signature), predta_correct_wrt_sign (M2 state d0 d1) sigma -> predta_correct_wrt_sign d0 sigma Unable to unify \"predta_correct_wrt_sign d1_1 sigma\" with \"state_correct_wrt_sign s sigma\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros d0 d1 sigma H0 H1.", "induction d0.", "-", "induction d1.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "-", "induction d1.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "inversion Hget.", "shelve.", "++", "induction d1_2.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "++", "intros a s' Hget'.", "inversion Hget.", "shelve.", "++", "intros a s' Hget'.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "++", "intros a s' Hget'.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar,st_produit_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,predta_correct_wrt_sign_M2,preDTA_produit_r_correct_wrt_sign_invar,st_produit_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,predta_correct_wrt_sign_M2,preDTA_produit_r_correct_wrt_sign_invar,st_produit_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,predta_correct_wrt_sign_M2,preDTA_produit_r_correct_wrt_sign_invar,st_produit_correct_wrt_sign_invar.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_r_correct_wrt_sign_invar,preDTA_produit_l_correct_wrt_sign_invar,predta_correct_wrt_sign_M2,st_produit_correct_wrt_sign_invar,predta_produit_2.", "apply predta_correct_wrt_sign_M2 in H1.", "destruct H1 as [H1 H1'].", "qsimpl time: 1 use: preDTA_produit_r_correct_wrt_sign_invar,preDTA_produit_l_correct_wrt_sign_invar,predta_correct_wrt_sign_M2,st_produit_correct_wrt_sign_invar,predta_produit_2."], "tactic": "++", "exn": "Wrong bullet ++: Current bullet ++ is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros d0 d1 sigma H0 H1.", "induction d0.", "-", "induction d1.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "-", "induction d1.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "inversion Hget.", "shelve.", "++", "induction d1_2.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "++", "intros a s' Hget'.", "inversion Hget.", "shelve.", "++", "intros a s' Hget'.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "++", "intros a s' Hget'.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar,st_produit_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,predta_correct_wrt_sign_M2,preDTA_produit_r_correct_wrt_sign_invar,st_produit_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,predta_correct_wrt_sign_M2,preDTA_produit_r_correct_wrt_sign_invar,st_produit_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,predta_correct_wrt_sign_M2,preDTA_produit_r_correct_wrt_sign_invar,st_produit_correct_wrt_sign_invar.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_r_correct_wrt_sign_invar,preDTA_produit_l_correct_wrt_sign_invar,predta_correct_wrt_sign_M2,st_produit_correct_wrt_sign_invar,predta_produit_2.", "apply predta_correct_wrt_sign_M2 in H1.", "destruct H1 as [H1 H1'].", "qsimpl time: 1 use: preDTA_produit_r_correct_wrt_sign_invar,preDTA_produit_l_correct_wrt_sign_invar,predta_correct_wrt_sign_M2,st_produit_correct_wrt_sign_invar,predta_produit_2.", "shelve.", "++"], "tactic": "eapply predta_produit_2; eauto.", "exn": "In environment H2 : forall (d : preDTA) (a : ad) (s : state) (sigma : signature), predta_correct_wrt_sign d sigma -> predta_correct_wrt_sign (M1 state a s) sigma -> predta_correct_wrt_sign (preDTA_produit_r a s d) sigma H : forall (d : preDTA) (a : ad) (s : state) (sigma : signature), predta_correct_wrt_sign d sigma -> predta_correct_wrt_sign (M1 state a s) sigma -> predta_correct_wrt_sign (preDTA_produit_l a s d) sigma p : positive a0 : state d1_1, d1_2 : Map state sigma : signature H0 : predta_correct_wrt_sign (M1 state (N.pos p~0) a0) sigma H1 : predta_correct_wrt_sign (M2 state d1_1 d1_2) sigma IHd1_1 : predta_correct_wrt_sign d1_1 sigma -> predta_correct_wrt_sign (preDTA_produit (M1 state (N.pos p~0) a0) d1_1) sigma IHd1_2 : predta_correct_wrt_sign d1_2 sigma -> predta_correct_wrt_sign (preDTA_produit (M1 state (N.pos p~0) a0) d1_2) sigma p0 : positive s : state Hget : MapGet state (preDTA_produit_l (N.pos p) a0 d1_2) (N.pos p0) = Some s Unable to unify \"MapGet state (preDTA_produit ?M37221 ?M37222) (iad_conv ?M37223 ?M37224) = Some (s_produit ?M37225 ?M37226)\" with \"forall (a : ad) (p : prec_list), MapGet prec_list s a = Some p -> exists n : nat, MapGet nat sigma a = Some n /\\\\ pl_tl_length p n\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros d0 d1 sigma H0 H1.", "induction d0.", "-", "induction d1.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a s Hget.", "inversion Hget.", "-", "induction d1.", "--", "simpl.", "intros a' s Hget.", "inversion Hget.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "--", "simpl.", "intros a' s Hget.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "inversion Hget.", "shelve.", "++", "induction d1_2.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "++", "intros a s' Hget'.", "inversion Hget.", "shelve.", "++", "intros a s' Hget'.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar.", "shelve.", "++", "intros a s' Hget'.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,preDTA_produit_r_correct_wrt_sign_invar,st_produit_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,predta_correct_wrt_sign_M2,preDTA_produit_r_correct_wrt_sign_invar,st_produit_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,predta_correct_wrt_sign_M2,preDTA_produit_r_correct_wrt_sign_invar,st_produit_correct_wrt_sign_invar.", "qsimpl time: 1 use: preDTA_produit_l_correct_wrt_sign_invar,predta_correct_wrt_sign_M2,preDTA_produit_r_correct_wrt_sign_invar,st_produit_correct_wrt_sign_invar.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_r_correct_wrt_sign_invar,preDTA_produit_l_correct_wrt_sign_invar,predta_correct_wrt_sign_M2,st_produit_correct_wrt_sign_invar,predta_produit_2.", "apply predta_correct_wrt_sign_M2 in H1.", "destruct H1 as [H1 H1'].", "qsimpl time: 1 use: preDTA_produit_r_correct_wrt_sign_invar,preDTA_produit_l_correct_wrt_sign_invar,predta_correct_wrt_sign_M2,st_produit_correct_wrt_sign_invar,predta_produit_2.", "shelve.", "++", "qsimpl time: 1 use: preDTA_produit_r_correct_wrt_sign_invar,preDTA_produit_l_correct_wrt_sign_invar,predta_correct_wrt_sign_M2,st_produit_correct_wrt_sign_invar,predta_produit_2."], "tactic": "apply preDTA_produit_r_correct_wrt_sign_invar; auto.", "exn": "In environment H7 : forall (d0 d1 : preDTA) (a0 a1 : ad) (s0 s1 : state), MapGet state d0 a0 = Some s0 -> MapGet state d1 a1 = Some s1 -> MapGet state (preDTA_produit d0 d1) (iad_conv a0 a1) = Some (s_produit s0 s1) H6 : forall (s0 s1 : state) (sigma : signature), state_correct_wrt_sign s0 sigma -> state_correct_wrt_sign s1 sigma -> state_correct_wrt_sign (s_produit s0 s1) sigma H4 : forall (d : preDTA) (a : ad) (s : state) (sigma : signature), predta_correct_wrt_sign d sigma -> predta_correct_wrt_sign (M1 state a s) sigma -> predta_correct_wrt_sign (preDTA_produit_l a s d) sigma H3 : forall (d : preDTA) (a : ad) (s : state) (sigma : signature), predta_correct_wrt_sign d sigma -> predta_correct_wrt_sign (M1 state a s) sigma -> predta_correct_wrt_sign (preDTA_produit_r a s d) sigma p : positive a0 : state d1_1, d1_2 : Map state sigma : signature H0 : predta_correct_wrt_sign (M1 state (N.pos p~0) a0) sigma H1 : predta_correct_wrt_sign (M2 state d1_1 d1_2) sigma IHd1_1 : predta_correct_wrt_sign d1_1 sigma -> predta_correct_wrt_sign (preDTA_produit (M1 state (N.pos p~0) a0) d1_1) sigma IHd1_2 : predta_correct_wrt_sign d1_2 sigma -> predta_correct_wrt_sign (preDTA_produit (M1 state (N.pos p~0) a0) d1_2) sigma p0 : positive s : state Hget : MapGet state (preDTA_produit_l (N.pos p) a0 d1_2) (N.pos p0) = Some s H : forall (d0 d1 : preDTA) (sigma : signature), predta_correct_wrt_sign (M2 state d0 d1) sigma -> predta_correct_wrt_sign d1 sigma H2 : forall (d0 d1 : preDTA) (sigma : signature), predta_correct_wrt_sign (M2 state d0 d1) sigma -> predta_correct_wrt_sign d0 sigma a : ad Unable to unify \"state\" with \"prec_list\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros d0 d1 sigma H0 H1. induction d0. - induction d1. -- simpl. intros a s Hget. inversion Hget. -- simpl. intros a s Hget. inversion Hget. -- simpl. intros a s Hget. inversion Hget. - induction d1. -- simpl. intros a s Hget. inversion Hget. -- simpl. intros a s Hget. destruct (MapGet state (M1 state d0a d0s) a) as [s0 |] eqn:Hget0. ++ apply preDTA_produit_l_correct_wrt_sign_invar; auto. ++ apply preDTA_produit_r_correct_wrt_sign_invar; auto. -- simpl. intros a s Hget. destruct (MapGet state (M1 state d0a d0s) a) as [s0 |] eqn:Hget0. ++ apply preDTA_produit_l_correct_wrt_sign_invar; auto. ++ destruct (MapGet state (M2 state d1s1 d1s2) a) as [s1 |] eqn:Hget1. ** apply preDTA_produit_r_correct_wrt_sign_invar; auto. ** inversion Hget. - induction d1. -- simpl. intros a s Hget. inversion Hget. -- simpl. intros a s Hget. destruct (MapGet state (M2 state d0s1 d0s2) a) as [s1 |] eqn:Hget1. ++ apply preDTA_produit_r_correct_wrt_sign_invar; auto. ++ apply preDTA_produit_l_correct_wrt_sign_invar; auto. -- simpl. intros a s Hget. destruct (MapGet state (M2 state d0s1 d0s2) a) as [s0 |] eqn:Hget0. ++ destruct (MapGet state (M2 state d1s1 d1s2) a) as [s1 |] eqn:Hget1. ** apply st_produit_correct_wrt_sign_invar; auto. --- apply preDTA_produit_r_correct_wrt_sign_invar with a; auto. apply predta_correct_wrt_sign_M2 in H0. destruct H0 as [H0 H0']. apply H0. ++ eapply predta_produit_2; eauto. --- apply preDTA_produit_r_correct_wrt_sign_invar with a; auto. apply predta_correct_wrt_sign_M2 in H1. destruct H1 as [H1 H1']. apply H1. ++ eapply predta_produit_2; eauto. ** apply preDTA_produit_r_correct_wrt_sign_invar; auto.", "back_times": 0, "succ": false, "time": 131.16193342208862}]