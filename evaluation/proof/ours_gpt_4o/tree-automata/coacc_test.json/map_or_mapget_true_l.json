[{"history": {"proof": "qsimpl time: 1 use: domain_equal_mapget,true. qsimpl time: 1 use: domain_equal_mapget,true. qsimpl time: 1 use: domain_equal_mapget,true. qsimpl time: 1 use: domain_equal_mapget,true. qsimpl time: 1 use: domain_equal_mapget,true,orb_true_r.", "repairs": ["no_instance_var", "not_inductive_product", "no_hypos", "no_hypos", "no_subterm"], "exceptions": [{"ctx": ["intros m0 m1 a Heq Hget."], "tactic": "apply domain_equal_mapget with (x:=true) in Heq.", "exn": "Unable to find an instance for the variable a.", "type": "no_instance_var", "handled": true}, {"ctx": ["intros m0 m1 a Heq Hget.", "qsimpl time: 1 use: domain_equal_mapget,true."], "tactic": "destruct Heq as [y Hget1].", "exn": "Not an inductive product.", "type": "not_inductive_product", "handled": true}, {"ctx": ["intros m0 m1 a Heq Hget.", "qsimpl time: 1 use: domain_equal_mapget,true.", "qsimpl time: 1 use: domain_equal_mapget,true."], "tactic": "rewrite Hget in Hget1.", "exn": "No such hypothesis: Hget1", "type": "no_hypos", "handled": true}, {"ctx": ["intros m0 m1 a Heq Hget.", "qsimpl time: 1 use: domain_equal_mapget,true.", "qsimpl time: 1 use: domain_equal_mapget,true.", "qsimpl time: 1 use: domain_equal_mapget,true."], "tactic": "injection Hget1 as Hy.", "exn": "The reference Hget1 was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros m0 m1 a Heq Hget.", "qsimpl time: 1 use: domain_equal_mapget,true.", "qsimpl time: 1 use: domain_equal_mapget,true.", "qsimpl time: 1 use: domain_equal_mapget,true."], "tactic": "subst y.", "exn": "No such hypothesis: y", "type": "no_hypos", "handled": true}, {"ctx": ["intros m0 m1 a Heq Hget.", "qsimpl time: 1 use: domain_equal_mapget,true.", "qsimpl time: 1 use: domain_equal_mapget,true.", "qsimpl time: 1 use: domain_equal_mapget,true.", "qsimpl time: 1 use: domain_equal_mapget,true."], "tactic": "rewrite orb_true_r.", "exn": "Found no subterm matching \"?M3411 || true\" in the current goal.", "type": "no_subterm", "handled": true}]}, "chat": [], "original": "intros m0 m1 a Heq Hget. apply domain_equal_mapget with (x:=true) in Heq. destruct Heq as [y Hget1]. rewrite Hget in Hget1. injection Hget1 as Hy. subst y. simpl. rewrite orb_true_r. auto.", "back_times": 0, "succ": false, "time": 72.76157450675964}]