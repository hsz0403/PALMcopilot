[{"history": {"proof": "qsimpl time: 1 use: predta_coacc_0_def_ok.", "repairs": ["cannot_apply_in"], "exceptions": [{"ctx": ["intros d d' a s c p b m Hdistinct Hget_s Hget_p Hoccur Hens Hget_m."], "tactic": "apply predta_coacc_0_def_ok in Hens as Hens_predta_coacc_0.", "exn": "Unable to apply lemma of type \"forall (d d' : preDTA) (m : Map bool), ensemble_base state d (predta_coacc_0 d d' m)\" on hypothesis of type \"ensemble_base state d' m\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["intros d d' a s c p b m Hdistinct Hget_s Hget_p Hoccur Hens Hget_m.", "qsimpl time: 1 use: predta_coacc_0_def_ok.", "induction d'.", "-"], "tactic": ["rewrite predta_coacc_0_def_ok, <- map_or_mapget_true_ld; auto.", ""], "exn": "Cannot find an homogeneous relation to rewrite.", "type": "no_rewrite_homo", "handled": false}, {"ctx": ["intros d d' a s c p b m Hdistinct Hget_s Hget_p Hoccur Hens Hget_m.", "qsimpl time: 1 use: predta_coacc_0_def_ok.", "induction d'.", "-"], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros d d' a s c p b m Hdistinct Hget_s Hget_p Hoccur Hens Hget_m.", "qsimpl time: 1 use: predta_coacc_0_def_ok.", "induction d'.", "-", "shelve.", "-", "simpl in *.", "destruct (MapGet bool _ a) eqn:Hget_ma.", "+", "destruct b0; try contradiction."], "tactic": "destruct (a=?a')%N eqn:Heq_a_a'; try contradiction.", "exn": "The reference a' was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros d d' a s c p b m Hdistinct Hget_s Hget_p Hoccur Hens Hget_m.", "qsimpl time: 1 use: predta_coacc_0_def_ok.", "induction d'.", "-", "shelve.", "-", "simpl in *.", "destruct (MapGet bool _ a) eqn:Hget_ma.", "+", "destruct b0; try contradiction.", "destruct (a=?a)%N eqn:Heq_a_a; try contradiction.", "*"], "tactic": "apply st_coacc_contain_coacc_ads with (s:=s); eauto.", "exn": "In environment H : forall (d d' : preDTA) (m : Map bool), ensemble_base state d (predta_coacc_0 d d' m) d : preDTA a0 : ad a1 : state a : ad s : state c : ad p : prec_list b : ad m : Map bool Hdistinct : preDTA_ref_ok_distinct (M1 state a0 a1) d Hget_s : (if (a0 =? a)%N then Some a1 else None) = Some s Hget_p : MapGet prec_list s c = Some p Hoccur : prec_occur p b Hens : ensemble_base state (M1 state a0 a1) m Hget_ma : MapGet bool m a = Some true Hget_m : Some true = Some true Heq_a_a : (a =? a)%N = true Unable to unify \"MapGet bool (st_coacc ?M2544 s) ?M2548 = Some true\" with \"MapGet bool match m with | @M1 _ a' b => if (a0 =? a')%N && b then st_coacc d a1 else map_mini state d | _ => map_mini state d end b = Some true\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros d d' a s c p b m Hdistinct Hget_s Hget_p Hoccur Hens Hget_m.", "qsimpl time: 1 use: predta_coacc_0_def_ok.", "induction d'.", "-", "shelve.", "-", "simpl in *.", "destruct (MapGet bool _ a) eqn:Hget_ma.", "+", "destruct b0; try contradiction.", "destruct (a=?a)%N eqn:Heq_a_a; try contradiction.", "*"], "tactic": "qsimpl time: 1 use: st_coacc_contain_coacc_ads,map_replace_mapget_ins_true_0,map_or_mapget_true_ld,auto,true,map_replace_mapget_true_inv,predta_coacc_0_def_ok.", "exn": "The reference auto was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros d d' a s c p b m Hdistinct Hget_s Hget_p Hoccur Hens Hget_m.", "qsimpl time: 1 use: predta_coacc_0_def_ok.", "induction d'.", "-", "shelve.", "-", "simpl in *.", "destruct (MapGet bool _ a) eqn:Hget_ma.", "+", "destruct b0; try contradiction.", "destruct (a=?a)%N eqn:Heq_a_a; try contradiction.", "*", "qsimpl time: 1 use: st_coacc_contain_coacc_ads,map_replace_mapget_ins_true_0,map_or_mapget_true_ld,true,map_replace_mapget_true_inv,predta_coacc_0_def_ok."], "tactic": "*", "exn": "Wrong bullet *: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros d d' a s c p b m Hdistinct Hget_s Hget_p Hoccur Hens Hget_m.", "qsimpl time: 1 use: predta_coacc_0_def_ok.", "induction d'.", "-", "shelve.", "-", "simpl in *.", "destruct (MapGet bool _ a) eqn:Hget_ma.", "+", "destruct b0; try contradiction.", "destruct (a=?a)%N eqn:Heq_a_a; try contradiction.", "*", "qsimpl time: 1 use: st_coacc_contain_coacc_ads,map_replace_mapget_ins_true_0,map_or_mapget_true_ld,true,map_replace_mapget_true_inv,predta_coacc_0_def_ok.", "shelve.", "*"], "tactic": ["rewrite predta_coacc_0_def_ok; eauto.", ""], "exn": "Cannot find an homogeneous relation to rewrite.", "type": "no_rewrite_homo", "handled": false}, {"ctx": ["intros d d' a s c p b m Hdistinct Hget_s Hget_p Hoccur Hens Hget_m.", "qsimpl time: 1 use: predta_coacc_0_def_ok.", "induction d'.", "-", "shelve.", "-", "simpl in *.", "destruct (MapGet bool _ a) eqn:Hget_ma.", "+", "destruct b0; try contradiction.", "destruct (a=?a)%N eqn:Heq_a_a; try contradiction.", "*", "qsimpl time: 1 use: st_coacc_contain_coacc_ads,map_replace_mapget_ins_true_0,map_or_mapget_true_ld,true,map_replace_mapget_true_inv,predta_coacc_0_def_ok.", "shelve.", "*"], "tactic": "+", "exn": "Wrong bullet +: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros d d' a s c p b m Hdistinct Hget_s Hget_p Hoccur Hens Hget_m.", "qsimpl time: 1 use: predta_coacc_0_def_ok.", "induction d'.", "-", "shelve.", "-", "simpl in *.", "destruct (MapGet bool _ a) eqn:Hget_ma.", "+", "destruct b0; try contradiction.", "destruct (a=?a)%N eqn:Heq_a_a; try contradiction.", "*", "qsimpl time: 1 use: st_coacc_contain_coacc_ads,map_replace_mapget_ins_true_0,map_or_mapget_true_ld,true,map_replace_mapget_true_inv,predta_coacc_0_def_ok.", "shelve.", "*", "shelve."], "tactic": "+", "exn": "Wrong bullet +: Expecting *.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros d d' a s c p b m Hdistinct Hget_s Hget_p Hoccur Hens Hget_m.", "qsimpl time: 1 use: predta_coacc_0_def_ok.", "induction d'.", "-", "shelve.", "-", "simpl in *.", "destruct (MapGet bool _ a) eqn:Hget_ma.", "+", "destruct b0; try contradiction.", "destruct (a=?a)%N eqn:Heq_a_a; try contradiction.", "*", "qsimpl time: 1 use: st_coacc_contain_coacc_ads,map_replace_mapget_ins_true_0,map_or_mapget_true_ld,true,map_replace_mapget_true_inv,predta_coacc_0_def_ok.", "shelve.", "*", "shelve.", "*"], "tactic": ["now rewrite predta_coacc_0_def_ok.", ""], "exn": "Cannot find an homogeneous relation to rewrite.", "type": "no_rewrite_homo", "handled": false}, {"ctx": ["intros d d' a s c p b m Hdistinct Hget_s Hget_p Hoccur Hens Hget_m.", "qsimpl time: 1 use: predta_coacc_0_def_ok.", "induction d'.", "-", "shelve.", "-", "simpl in *.", "destruct (MapGet bool _ a) eqn:Hget_ma.", "+", "destruct b0; try contradiction.", "destruct (a=?a)%N eqn:Heq_a_a; try contradiction.", "*", "qsimpl time: 1 use: st_coacc_contain_coacc_ads,map_replace_mapget_ins_true_0,map_or_mapget_true_ld,true,map_replace_mapget_true_inv,predta_coacc_0_def_ok.", "shelve.", "*", "shelve.", "*"], "tactic": "-", "exn": "Wrong bullet -: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros d d' a s c p b m Hdistinct Hget_s Hget_p Hoccur Hens Hget_m.", "qsimpl time: 1 use: predta_coacc_0_def_ok.", "induction d'.", "-", "shelve.", "-", "simpl in *.", "destruct (MapGet bool _ a) eqn:Hget_ma.", "+", "destruct b0; try contradiction.", "destruct (a=?a)%N eqn:Heq_a_a; try contradiction.", "*", "qsimpl time: 1 use: st_coacc_contain_coacc_ads,map_replace_mapget_ins_true_0,map_or_mapget_true_ld,true,map_replace_mapget_true_inv,predta_coacc_0_def_ok.", "shelve.", "*", "shelve.", "*", "shelve."], "tactic": "-", "exn": "Wrong bullet -: Expecting +.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros d d' a s c p b m Hdistinct Hget_s Hget_p Hoccur Hens Hget_m.", "qsimpl time: 1 use: predta_coacc_0_def_ok.", "induction d'.", "-", "shelve.", "-", "simpl in *.", "destruct (MapGet bool _ a) eqn:Hget_ma.", "+", "destruct b0; try contradiction.", "destruct (a=?a)%N eqn:Heq_a_a; try contradiction.", "*", "qsimpl time: 1 use: st_coacc_contain_coacc_ads,map_replace_mapget_ins_true_0,map_or_mapget_true_ld,true,map_replace_mapget_true_inv,predta_coacc_0_def_ok.", "shelve.", "*", "shelve.", "*", "shelve.", "+"], "tactic": "destruct (MapGet (Map bool) _ ad0) eqn:Hget_dm.", "exn": "The reference ad0 was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros d d' a s c p b m Hdistinct Hget_s Hget_p Hoccur Hens Hget_m.", "qsimpl time: 1 use: predta_coacc_0_def_ok.", "induction d'.", "-", "shelve.", "-", "simpl in *.", "destruct (MapGet bool _ a) eqn:Hget_ma.", "+", "destruct b0; try contradiction.", "destruct (a=?a)%N eqn:Heq_a_a; try contradiction.", "*", "qsimpl time: 1 use: st_coacc_contain_coacc_ads,map_replace_mapget_ins_true_0,map_or_mapget_true_ld,true,map_replace_mapget_true_inv,predta_coacc_0_def_ok.", "shelve.", "*", "shelve.", "*", "shelve.", "+"], "tactic": "+", "exn": "Wrong bullet +: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros d d' a s c p b m Hdistinct Hget_s Hget_p Hoccur Hens Hget_m.", "qsimpl time: 1 use: predta_coacc_0_def_ok.", "induction d'.", "-", "shelve.", "-", "simpl in *.", "destruct (MapGet bool _ a) eqn:Hget_ma.", "+", "destruct b0; try contradiction.", "destruct (a=?a)%N eqn:Heq_a_a; try contradiction.", "*", "qsimpl time: 1 use: st_coacc_contain_coacc_ads,map_replace_mapget_ins_true_0,map_or_mapget_true_ld,true,map_replace_mapget_true_inv,predta_coacc_0_def_ok.", "shelve.", "*", "shelve.", "*", "shelve.", "+", "shelve."], "tactic": "+", "exn": "Wrong bullet +: Expecting -.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros d d' a s c p b m Hdistinct Hget_s Hget_p Hoccur Hens Hget_m.", "qsimpl time: 1 use: predta_coacc_0_def_ok.", "induction d'.", "-", "shelve.", "-", "simpl in *.", "destruct (MapGet bool _ a) eqn:Hget_ma.", "+", "destruct b0; try contradiction.", "destruct (a=?a)%N eqn:Heq_a_a; try contradiction.", "*", "qsimpl time: 1 use: st_coacc_contain_coacc_ads,map_replace_mapget_ins_true_0,map_or_mapget_true_ld,true,map_replace_mapget_true_inv,predta_coacc_0_def_ok.", "shelve.", "*", "shelve.", "*", "shelve.", "+", "shelve.", "-"], "tactic": "destruct b0 as [|]; contradiction.", "exn": "The reference b0 was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros d d' a s c p b m Hdistinct Hget_s Hget_p Hoccur Hens Hget_m.", "qsimpl time: 1 use: predta_coacc_0_def_ok.", "induction d'.", "-", "shelve.", "-", "simpl in *.", "destruct (MapGet bool _ a) eqn:Hget_ma.", "+", "destruct b0; try contradiction.", "destruct (a=?a)%N eqn:Heq_a_a; try contradiction.", "*", "qsimpl time: 1 use: st_coacc_contain_coacc_ads,map_replace_mapget_ins_true_0,map_or_mapget_true_ld,true,map_replace_mapget_true_inv,predta_coacc_0_def_ok.", "shelve.", "*", "shelve.", "*", "shelve.", "+", "shelve.", "-", "simpl in *."], "tactic": "apply map_or_mapget_true_ld with (m1:=map_mini state d); eauto.", "exn": "In environment H : forall (d d' : preDTA) (m : Map bool), ensemble_base state d (predta_coacc_0 d d' m) d : preDTA d'1, d'2 : Map state a : ad s : state c : ad p : prec_list b : ad m : Map bool Hdistinct : preDTA_ref_ok_distinct (M2 state d'1 d'2) d Hget_s : match a with | 0%N => MapGet state d'1 0%N | N.pos (p~1)%positive => MapGet state d'2 (N.pos p) | N.pos (p~0)%positive => MapGet state d'1 (N.pos p) | 1%N => MapGet state d'2 0%N end = Some s Hget_p : MapGet prec_list s c = Some p Hoccur : prec_occur p b Hens : ensemble_base state (M2 state d'1 d'2) m Hget_m : MapGet bool m a = Some true IHd'1 : preDTA_ref_ok_distinct d'1 d -> MapGet state d'1 a = Some s -> ensemble_base state d'1 m -> MapGet bool (predta_coacc_0 d d'1 m) b = Some true IHd'2 : preDTA_ref_ok_distinct d'2 d -> MapGet state d'2 a = Some s -> ensemble_base state d'2 m -> MapGet bool (predta_coacc_0 d d'2 m) b = Some true Unable to unify \"MapGet bool (map_or ?M9279 (map_mini state d)) ?M9281 = Some true\" with \"MapGet bool match m with | @M2 _ z t => map_or (predta_coacc_0 d d'1 z) (predta_coacc_0 d d'2 t) | _ => map_mini state d end b = Some true\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros d d' a s c p b m Hdistinct Hget_s Hget_p Hoccur Hens Hget_m.", "qsimpl time: 1 use: predta_coacc_0_def_ok.", "induction d'.", "-", "shelve.", "-", "simpl in *.", "destruct (MapGet bool _ a) eqn:Hget_ma.", "+", "destruct b0; try contradiction.", "destruct (a=?a)%N eqn:Heq_a_a; try contradiction.", "*", "qsimpl time: 1 use: st_coacc_contain_coacc_ads,map_replace_mapget_ins_true_0,map_or_mapget_true_ld,true,map_replace_mapget_true_inv,predta_coacc_0_def_ok.", "shelve.", "*", "shelve.", "*", "shelve.", "+", "shelve.", "-", "simpl in *."], "tactic": "qsimpl time: 1 use: st_coacc_contain_coacc_ads,map_replace_mapget_ins_true_0,map_mini,map_or_mapget_true_ld,auto,true,map_replace_mapget_true_inv,state,predta_coacc_0_def_ok.", "exn": "The reference auto was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros d d' a s c p b m Hdistinct Hget_s Hget_p Hoccur Hens Hget_m.", "qsimpl time: 1 use: predta_coacc_0_def_ok.", "induction d'.", "-", "shelve.", "-", "simpl in *.", "destruct (MapGet bool _ a) eqn:Hget_ma.", "+", "destruct b0; try contradiction.", "destruct (a=?a)%N eqn:Heq_a_a; try contradiction.", "*", "qsimpl time: 1 use: st_coacc_contain_coacc_ads,map_replace_mapget_ins_true_0,map_or_mapget_true_ld,true,map_replace_mapget_true_inv,predta_coacc_0_def_ok.", "shelve.", "*", "shelve.", "*", "shelve.", "+", "shelve.", "-", "simpl in *.", "qsimpl time: 1 use: st_coacc_contain_coacc_ads,map_replace_mapget_ins_true_0,map_mini,map_or_mapget_true_ld,true,map_replace_mapget_true_inv,state,predta_coacc_0_def_ok."], "tactic": "apply map_replace_mapget_true_inv in Hget_m as [->|]; [now apply map_replace_mapget_ins_true_0 |].", "exn": "Unable to apply lemma of type \"forall (m : Map bool) (a b : ad), MapGet bool (map_replace bool m a true) b = Some true -> b = a \\\\/ MapGet bool m b = Some true\" on hypothesis of type \"MapGet bool m a = Some true\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["intros d d' a s c p b m Hdistinct Hget_s Hget_p Hoccur Hens Hget_m.", "qsimpl time: 1 use: predta_coacc_0_def_ok.", "induction d'.", "-", "shelve.", "-", "simpl in *.", "destruct (MapGet bool _ a) eqn:Hget_ma.", "+", "destruct b0; try contradiction.", "destruct (a=?a)%N eqn:Heq_a_a; try contradiction.", "*", "qsimpl time: 1 use: st_coacc_contain_coacc_ads,map_replace_mapget_ins_true_0,map_or_mapget_true_ld,true,map_replace_mapget_true_inv,predta_coacc_0_def_ok.", "shelve.", "*", "shelve.", "*", "shelve.", "+", "shelve.", "-", "simpl in *.", "qsimpl time: 1 use: st_coacc_contain_coacc_ads,map_replace_mapget_ins_true_0,map_mini,map_or_mapget_true_ld,true,map_replace_mapget_true_inv,state,predta_coacc_0_def_ok."], "tactic": "qsimpl time: 1 use: st_coacc_contain_coacc_ads,map_replace_mapget_ins_true_0,map_mini,map_or_mapget_true_ld,auto,true,map_replace_mapget_true_inv,state,predta_coacc_0_def_ok.", "exn": "The reference auto was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros d d' a s c p b m Hdistinct Hget_s Hget_p Hoccur Hens Hget_m.", "qsimpl time: 1 use: predta_coacc_0_def_ok.", "induction d'.", "-", "shelve.", "-", "simpl in *.", "destruct (MapGet bool _ a) eqn:Hget_ma.", "+", "destruct b0; try contradiction.", "destruct (a=?a)%N eqn:Heq_a_a; try contradiction.", "*", "qsimpl time: 1 use: st_coacc_contain_coacc_ads,map_replace_mapget_ins_true_0,map_or_mapget_true_ld,true,map_replace_mapget_true_inv,predta_coacc_0_def_ok.", "shelve.", "*", "shelve.", "*", "shelve.", "+", "shelve.", "-", "simpl in *.", "qsimpl time: 1 use: st_coacc_contain_coacc_ads,map_replace_mapget_ins_true_0,map_mini,map_or_mapget_true_ld,true,map_replace_mapget_true_inv,state,predta_coacc_0_def_ok.", "qsimpl time: 1 use: st_coacc_contain_coacc_ads,map_replace_mapget_ins_true_0,map_mini,map_or_mapget_true_ld,true,map_replace_mapget_true_inv,state,predta_coacc_0_def_ok."], "tactic": ["rewrite H; eauto.", ""], "exn": "Cannot find an homogeneous relation to rewrite.", "type": "no_rewrite_homo", "handled": false}]}, "chat": [], "original": "intros d d' a s c p b m Hdistinct Hget_s Hget_p Hoccur Hens Hget_m. apply predta_coacc_0_def_ok in Hens as Hens_predta_coacc_0. induction d'. - rewrite predta_coacc_0_def_ok, <- map_or_mapget_true_ld; auto. apply map_replace_mapget_true_inv in Hget_m as [Hba_eq | Hmapget]. + subst. now apply st_coacc_contain_coacc_ads with (s:=s). + rewrite Hmapget. now apply map_replace_mapget_ins_true_0 with (b:=true). - simpl in *. destruct (MapGet bool _ a) eqn:Hget_ma. + destruct b0; try contradiction. destruct (a=?a')%N eqn:Heq_a_a'; try contradiction. * apply st_coacc_contain_coacc_ads with (s:=s); eauto. * rewrite predta_coacc_0_def_ok; eauto. + now rewrite predta_coacc_0_def_ok. - destruct (MapGet (Map bool) _ ad0) eqn:Hget_dm. + destruct b0 as [|]; contradiction. + simpl in *. apply map_or_mapget_true_ld with (m1:=map_mini state d); eauto. apply map_replace_mapget_true_inv in Hget_m as [->|]; [now apply map_replace_mapget_ins_true_0 |]. rewrite H; eauto.", "back_times": 0, "succ": false, "time": 149.76133608818054}]