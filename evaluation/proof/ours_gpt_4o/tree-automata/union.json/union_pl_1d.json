[{"history": {"proof": "intros d pl0 pl1 tl Hcompat Hrec. hauto use: union_pl_0, sem_listes_1, union_pl_1d_1, rec_empty unfold: pl_compat inv: term_list.", "repairs": ["", "hammer"], "exceptions": []}, "chat": [], "original": "intros d pl0 pl1 tl Hcompat Hrec. induction pl1 using liste_reconnait_ind. - simpl in Hcompat. destruct Hcompat as [[H0 H1] | [H0 H1]]. + rewrite H0. constructor. + exfalso. apply H0. reflexivity. - destruct Hcompat as [[H0 H1] | [H0 H1]]. + rewrite H0. rewrite union_pl_2 in *. auto. exfalso. apply H1. reflexivity. + apply rec_consi. apply Hrec. apply IHl0. split. * rewrite <- H1. apply pl_compat_sym. auto. * auto.", "back_times": 0, "succ": true, "time": 14.534780263900757}]