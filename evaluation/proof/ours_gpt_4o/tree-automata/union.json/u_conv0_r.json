[{"history": {"proof": "intros p a t H. apply reconnaissance_ind with (P:=fun (p0 : preDTA) (a0 : ad) (t0 : term) => reconnaissance p0 a0 t0). - intros d a0 t0 ladj Hmap Hstate. qsimpl time: 1 use: u_conv_0_invar_5. - srun best use: u_conv0_5r unfold: u_conv_rec_0_r.", "repairs": ["", "", "", "", "cannot_apply_in", "", "hammer"], "exceptions": [{"ctx": ["intros p a t H.", "apply reconnaissance_ind with (P:=fun (p0 : preDTA) (a0 : ad) (t0 : term) => reconnaissance p0 a0 t0).", "-", "intros d a0 t0 ladj Hmap Hstate."], "tactic": "apply u_conv_0_invar_5 in Hmap.", "exn": "Unable to apply lemma of type \"forall (d : preDTA) (a : ad) (ladj : state), MapGet state (udta_conv_0 d) (uad_conv_0 a) = Some ladj -> exists ladj0 : state, ladj = umpl_conv_0 ladj0 /\\\\ MapGet state d a = Some ladj0\" on hypothesis of type \"MapGet state d a0 = Some ladj\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["intros p a t H.", "apply reconnaissance_ind with (P:=fun (p0 : preDTA) (a0 : ad) (t0 : term) => reconnaissance p0 a0 t0).", "-", "intros d a0 t0 ladj Hmap Hstate.", "qsimpl time: 1 use: u_conv_0_invar_5."], "tactic": "destruct Hmap as [ladj0 [Hladj0 Hmapped0]].", "exn": "No such goal. Focus next goal with bullet -.", "type": "next_goal", "handled": true}, {"ctx": ["intros p a t H.", "apply reconnaissance_ind with (P:=fun (p0 : preDTA) (a0 : ad) (t0 : term) => reconnaissance p0 a0 t0).", "-", "intros d a0 t0 ladj Hmap Hstate.", "qsimpl time: 1 use: u_conv_0_invar_5.", "-"], "tactic": "apply H.", "exn": "In environment p : preDTA a : ad t : term H : reconnaissance (udta_conv_0 p) (uad_conv_0 a) t Unable to unify \"reconnaissance (udta_conv_0 p) (uad_conv_0 a) t\" with \"reconnaissance p a t\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros p a t H. apply reconnaissance_ind with (P:=fun (p0 : preDTA) (a0 : ad) (t0 : term) => reconnaissance p0 a0 t0). - intros d a0 t0 ladj Hmap Hstate. apply u_conv_0_invar_5 in Hmap. destruct Hmap as [ladj0 [Hladj0 Hmapped0]]. rewrite Hladj0 in Hstate. apply rec_dta with ladj0. + apply Hmapped0. + apply state_reconnait_ind with (P:=fun (p0 : preDTA) (s : state) (t0 : term) => state_reconnait p0 s t0) in Hstate. * apply Hstate. * intros d0 s c tl l Hs Hlist. apply rec_st with l. ++ apply u_conv_0_invar_2 in Hs. apply Hs. ++ apply liste_reconnait_ind with (P:=fun (p0 : preDTA) (p1 : prec_list) (t1 : term_list) => liste_reconnait p0 p1 t1) in Hlist. ** apply Hlist. ** intros d' a' la ls hd tl Hrecon Hlist. apply rec_con. --- apply Hrecon. --- apply Hlist. ** intros d' a' la ls hd tl Hlist. apply (rec_trans _ _ _ _ Hlist). ** apply rec_empty. - apply H.", "back_times": 0, "succ": true, "time": 53.41624879837036}]