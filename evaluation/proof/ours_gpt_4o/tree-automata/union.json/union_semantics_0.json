[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros d0 d1 t Hm0 Hm1 Hro0 Hro1 Hcompat.", "split.", "-", "intros [H | H].", "+", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in *."], "tactic": "apply reconnait.", "exn": "In environment p0 : preDTA a0 : ad p1 : preDTA a1 : ad t : term Hm0 : addr_in_preDTA p0 a0 Hm1 : addr_in_preDTA p1 a1 Hro0 : preDTA_ref_ok p0 Hro1 : preDTA_ref_ok p1 Hcompat : dta_compat p0 p1 H : reconnaissance p0 a0 t Unable to unify \"Prop\" with \"reconnaissance (insert_ostate (u_merge p0 p1) (N.min (N.double (new_preDTA_ad (MapMerge state (udta_conv_0_aux p0) (M0 state)))) (N.succ_double (new_preDTA_ad (udta_conv_1_aux p1)))) (union_0 (u_merge p0 p1) a0 a1)) (N.min (N.double (new_preDTA_ad (MapMerge state (udta_conv_0_aux p0) (M0 state)))) (N.succ_double (new_preDTA_ad (udta_conv_1_aux p1)))) t\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros d0 d1 t Hm0 Hm1 Hro0 Hro1 Hcompat.", "split.", "-", "intros [H | H].", "+", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in *.", "qsimpl time: 1 use: reconnait."], "tactic": "eapply insert_ostate_1 with (d0:=p0) (a0:=a0) (a1:=a1).", "exn": "In environment X : DTA -> term -> Prop p0 : preDTA a0 : ad p1 : preDTA a1 : ad Hro0 : preDTA_ref_ok p0 Hro1 : preDTA_ref_ok p1 Hcompat : dta_compat p0 p1 ladj : state H0 : MapGet state p0 a0 = Some ladj c : ad tl : term_list l : prec_list H : MapGet prec_list ladj c = Some l H2 : liste_reconnait p0 l tl x : state H1 : MapGet state p1 a1 = Some x x0 : state H3 : MapGet state p0 a0 = Some x0 Unable to unify \"(reconnaissance p0 a0 ?M4370 -> reconnaissance (insert_ostate (u_merge p0 ?M4361) ?M4364 (Some ?M4365)) (uad_conv_0 a0) ?M4370) /\\\\ (reconnaissance (insert_ostate (u_merge p0 ?M4361) ?M4364 (Some ?M4365)) (uad_conv_0 a0) ?M4370 -> reconnaissance p0 a0 ?M4370)\" with \"reconnaissance (insert_ostate (u_merge p0 p1) (N.min (N.double (new_preDTA_ad (MapMerge state (udta_conv_0_aux p0) (M0 state)))) (N.succ_double (new_preDTA_ad (udta_conv_1_aux p1)))) (union_0 (u_merge p0 p1) a0 a1)) (N.min (N.double (new_preDTA_ad (MapMerge state (udta_conv_0_aux p0) (M0 state)))) (N.succ_double (new_preDTA_ad (udta_conv_1_aux p1)))) (app c tl)\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros d0 d1 t Hm0 Hm1 Hro0 Hro1 Hcompat.", "split.", "-", "intros [H | H].", "+", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in *.", "qsimpl time: 1 use: reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait."], "tactic": "eapply u_merge_ref_ok; eauto.", "exn": "In environment X0 : DTA -> term -> Prop H4 : forall (d0 d1 : preDTA) (a0 a1 a : ad) (s s0 s1 s0' s1' : state) (t : term), MapGet state d0 a0 = Some s0 -> MapGet state d1 a1 = Some s1 -> match uad_conv_0 a0 with | 0%N => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N | N.pos (p~1)%positive => MapGet state (udta_conv_1_aux d1) (N.pos p) | N.pos (p~0)%positive => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) | 1%N => MapGet state (udta_conv_1_aux d1) 0%N end = Some s0' -> match uad_conv_1 a1 with | 0%N => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N | N.pos (p~1)%positive => MapGet state (udta_conv_1_aux d1) (N.pos p) | N.pos (p~0)%positive => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) | 1%N => MapGet state (udta_conv_1_aux d1) 0%N end = Some s1' -> preDTA_ref_ok (u_merge d0 d1) -> match a with | 0%N => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N | N.pos (p~1)%positive => MapGet state (udta_conv_1_aux d1) (N.pos p) | N.pos (p~0)%positive => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) | 1%N => MapGet state (udta_conv_1_aux d1) 0%N end = None -> (a = uad_conv_0 a0 -> False) -> (reconnaissance d0 a0 t -> reconnaissance match a with | 0%N => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N s) (udta_conv_1_aux d1) | N.pos (p~1)%positive => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) (N.pos p) s) | N.pos (p~0)%positive => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) s) (udta_conv_1_aux d1) | 1%N => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) 0%N s) end (uad_conv_0 a0) t) /\\\\ (reconnaissance match a with | 0%N => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N s) (udta_conv_1_aux d1) | N.pos (p~1)%positive => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) (N.pos p) s) | N.pos (p~0)%positive => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) s) (udta_conv_1_aux d1) | 1%N => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) 0%N s) end (uad_conv_0 a0) t -> reconnaissance d0 a0 t) X : DTA -> term -> Prop p0 : preDTA a0 : ad p1 : preDTA a1 : ad Hro0 : preDTA_ref_ok p0 Hro1 : preDTA_ref_ok p1 Hcompat : dta_compat p0 p1 ladj : state H0 : MapGet state p0 a0 = Some ladj c : ad tl : term_list l : prec_list H : MapGet prec_list ladj c = Some l H2 : liste_reconnait p0 l tl x : state H1 : MapGet state p1 a1 = Some x x0 : state H3 : MapGet state p0 a0 = Some x0 Unable to unify \"forall (a : ad) (s : state) (c : ad) (pl : prec_list) (b : ad), MapGet state (u_merge ?M5908 ?M5909) a = Some s -> MapGet prec_list s c = Some pl -> prec_occur pl b -> exists s0 : state, MapGet state (u_merge ?M5908 ?M5909) b = Some s0\" with \"reconnaissance (insert_ostate (u_merge p0 p1) (N.min (N.double (new_preDTA_ad (MapMerge state (udta_conv_0_aux p0) (M0 state)))) (N.succ_double (new_preDTA_ad (udta_conv_1_aux p1)))) (union_0 (u_merge p0 p1) a0 a1)) (N.min (N.double (new_preDTA_ad (MapMerge state (udta_conv_0_aux p0) (M0 state)))) (N.succ_double (new_preDTA_ad (udta_conv_1_aux p1)))) (app c tl)\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros d0 d1 t Hm0 Hm1 Hro0 Hro1 Hcompat.", "split.", "-", "intros [H | H].", "+", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in *.", "qsimpl time: 1 use: reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok."], "tactic": "rewrite MapGet_some.", "exn": "The reference MapGet_some was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros d0 d1 t Hm0 Hm1 Hro0 Hro1 Hcompat.", "split.", "-", "intros [H | H].", "+", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in *.", "qsimpl time: 1 use: reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "rewrite insert_ostate_1.", "*"], "tactic": "rewrite MapGet_none.", "exn": "The reference MapGet_none was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros d0 d1 t Hm0 Hm1 Hro0 Hro1 Hcompat.", "split.", "-", "intros [H | H].", "+", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in *.", "qsimpl time: 1 use: reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "rewrite insert_ostate_1.", "*"], "tactic": "+", "exn": "Wrong bullet +: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros d0 d1 t Hm0 Hm1 Hro0 Hro1 Hcompat.", "split.", "-", "intros [H | H].", "+", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in *.", "qsimpl time: 1 use: reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "rewrite insert_ostate_1.", "*", "shelve."], "tactic": "+", "exn": "Wrong bullet +: Expecting *.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros d0 d1 t Hm0 Hm1 Hro0 Hro1 Hcompat.", "split.", "-", "intros [H | H].", "+", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in *.", "qsimpl time: 1 use: reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "rewrite insert_ostate_1.", "*", "shelve.", "*"], "tactic": "destruct d0 as [p0 a0].", "exn": "The reference d0 was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros d0 d1 t Hm0 Hm1 Hro0 Hro1 Hcompat.", "split.", "-", "intros [H | H].", "+", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in *.", "qsimpl time: 1 use: reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "rewrite insert_ostate_1.", "*", "shelve.", "*"], "tactic": "destruct d1 as [p1 a1].", "exn": "The reference d1 was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros d0 d1 t Hm0 Hm1 Hro0 Hro1 Hcompat.", "split.", "-", "intros [H | H].", "+", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in *.", "qsimpl time: 1 use: reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "rewrite insert_ostate_1.", "*", "shelve.", "*"], "tactic": "apply reconnait.", "exn": "In environment H6 : forall d0 d1 : preDTA, preDTA_ref_ok d0 -> preDTA_ref_ok d1 -> preDTA_ref_ok (u_merge d0 d1) X1 : DTA -> term -> Prop H5 : forall (d0 d1 : preDTA) (a0 a1 a : ad) (s s0 s1 s0' s1' : state) (t : term), MapGet state d0 a0 = Some s0 -> MapGet state d1 a1 = Some s1 -> match uad_conv_0 a0 with | 0%N => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N | N.pos (p~1)%positive => MapGet state (udta_conv_1_aux d1) (N.pos p) | N.pos (p~0)%positive => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) | 1%N => MapGet state (udta_conv_1_aux d1) 0%N end = Some s0' -> match uad_conv_1 a1 with | 0%N => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N | N.pos (p~1)%positive => MapGet state (udta_conv_1_aux d1) (N.pos p) | N.pos (p~0)%positive => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) | 1%N => MapGet state (udta_conv_1_aux d1) 0%N end = Some s1' -> preDTA_ref_ok (u_merge d0 d1) -> match a with | 0%N => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N | N.pos (p~1)%positive => MapGet state (udta_conv_1_aux d1) (N.pos p) | N.pos (p~0)%positive => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) | 1%N => MapGet state (udta_conv_1_aux d1) 0%N end = None -> (a = uad_conv_0 a0 -> False) -> (reconnaissance d0 a0 t -> reconnaissance match a with | 0%N => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N s) (udta_conv_1_aux d1) | N.pos (p~1)%positive => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) (N.pos p) s) | N.pos (p~0)%positive => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) s) (udta_conv_1_aux d1) | 1%N => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) 0%N s) end (uad_conv_0 a0) t) /\\\\ (reconnaissance match a with | 0%N => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N s) (udta_conv_1_aux d1) | N.pos (p~1)%positive => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) (N.pos p) s) | N.pos (p~0)%positive => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) s) (udta_conv_1_aux d1) | 1%N => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) 0%N s) end (uad_conv_0 a0) t -> reconnaissance d0 a0 t) X0, X : DTA -> term -> Prop p0 : preDTA a0 : ad p1 : preDTA a1 : ad Hro0 : preDTA_ref_ok p0 Hro1 : preDTA_ref_ok p1 Hcompat : dta_compat p0 p1 ladj : state H0 : MapGet state p0 a0 = Some ladj c : ad tl : term_list l : prec_list H : MapGet prec_list ladj c = Some l H2 : liste_reconnait p0 l tl x : state H1 : MapGet state p1 a1 = Some x x0 : state H3 : MapGet state p0 a0 = Some x0 Unable to unify \"Prop\" with \"MapGet state (insert_ostate (u_merge p0 p1) (N.min (N.double (new_preDTA_ad (MapMerge state (udta_conv_0_aux p0) (M0 state)))) (N.succ_double (new_preDTA_ad (udta_conv_1_aux p1)))) (union_0 (u_merge p0 p1) a0 a1)) (N.min (N.double (new_preDTA_ad (MapMerge state (udta_conv_0_aux p0) (M0 state)))) (N.succ_double (new_preDTA_ad (udta_conv_1_aux p1)))) = Some ?Goal6\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros d0 d1 t Hm0 Hm1 Hro0 Hro1 Hcompat.", "split.", "-", "intros [H | H].", "+", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in *.", "qsimpl time: 1 use: reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "rewrite insert_ostate_1.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok."], "tactic": "eapply insert_ostate_2 with (d0:=p0) (a0:=a0) (a1:=a1).", "exn": "In environment H7 : forall d0 d1 : preDTA, preDTA_ref_ok d0 -> preDTA_ref_ok d1 -> preDTA_ref_ok (u_merge d0 d1) X2 : DTA -> term -> Prop H4 : forall (d0 d1 : preDTA) (a0 a1 a : ad) (s s0 s1 s0' s1' : state) (t : term), MapGet state d0 a0 = Some s0 -> MapGet state d1 a1 = Some s1 -> match uad_conv_0 a0 with | 0%N => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N | N.pos (p~1)%positive => MapGet state (udta_conv_1_aux d1) (N.pos p) | N.pos (p~0)%positive => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) | 1%N => MapGet state (udta_conv_1_aux d1) 0%N end = Some s0' -> match uad_conv_1 a1 with | 0%N => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N | N.pos (p~1)%positive => MapGet state (udta_conv_1_aux d1) (N.pos p) | N.pos (p~0)%positive => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) | 1%N => MapGet state (udta_conv_1_aux d1) 0%N end = Some s1' -> preDTA_ref_ok (u_merge d0 d1) -> match a with | 0%N => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N | N.pos (p~1)%positive => MapGet state (udta_conv_1_aux d1) (N.pos p) | N.pos (p~0)%positive => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) | 1%N => MapGet state (udta_conv_1_aux d1) 0%N end = None -> (a = uad_conv_0 a0 -> False) -> (reconnaissance d0 a0 t -> reconnaissance match a with | 0%N => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N s) (udta_conv_1_aux d1) | N.pos (p~1)%positive => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) (N.pos p) s) | N.pos (p~0)%positive => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) s) (udta_conv_1_aux d1) | 1%N => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) 0%N s) end (uad_conv_0 a0) t) /\\\\ (reconnaissance match a with | 0%N => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N s) (udta_conv_1_aux d1) | N.pos (p~1)%positive => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) (N.pos p) s) | N.pos (p~0)%positive => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) s) (udta_conv_1_aux d1) | 1%N => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) 0%N s) end (uad_conv_0 a0) t -> reconnaissance d0 a0 t) X1, X0, X : DTA -> term -> Prop p0 : preDTA a0 : ad p1 : preDTA a1 : ad Hro0 : preDTA_ref_ok p0 Hro1 : preDTA_ref_ok p1 Hcompat : dta_compat p0 p1 ladj : state H0 : MapGet state p0 a0 = Some ladj c : ad tl : term_list l : prec_list H : MapGet prec_list ladj c = Some l H2 : liste_reconnait p0 l tl x : state H1 : MapGet state p1 a1 = Some x x0 : state H3 : MapGet state p0 a0 = Some x0 Unable to unify \"(reconnaissance ?M9461 a1 ?M9470 -> reconnaissance (insert_ostate (u_merge p0 ?M9461) ?M9464 (Some ?M9465)) (uad_conv_1 a1) ?M9470) /\\\\ (reconnaissance (insert_ostate (u_merge p0 ?M9461) ?M9464 (Some ?M9465)) (uad_conv_1 a1) ?M9470 -> reconnaissance ?M9461 a1 ?M9470)\" with \"MapGet state (insert_ostate (u_merge p0 p1) (N.min (N.double (new_preDTA_ad (MapMerge state (udta_conv_0_aux p0) (M0 state)))) (N.succ_double (new_preDTA_ad (udta_conv_1_aux p1)))) (union_0 (u_merge p0 p1) a0 a1)) (N.min (N.double (new_preDTA_ad (MapMerge state (udta_conv_0_aux p0) (M0 state)))) (N.succ_double (new_preDTA_ad (udta_conv_1_aux p1)))) = Some x0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros d0 d1 t Hm0 Hm1 Hro0 Hro1 Hcompat.", "split.", "-", "intros [H | H].", "+", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in *.", "qsimpl time: 1 use: reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "rewrite insert_ostate_1.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok."], "tactic": "*", "exn": "Wrong bullet *: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros d0 d1 t Hm0 Hm1 Hro0 Hro1 Hcompat.", "split.", "-", "intros [H | H].", "+", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in *.", "qsimpl time: 1 use: reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "rewrite insert_ostate_1.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "shelve.", "*"], "tactic": "*", "exn": "Wrong bullet *: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros d0 d1 t Hm0 Hm1 Hro0 Hro1 Hcompat.", "split.", "-", "intros [H | H].", "+", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in *.", "qsimpl time: 1 use: reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "rewrite insert_ostate_1.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "shelve.", "*", "shelve.", "*"], "tactic": "eapply u_merge_ref_ok; eauto.", "exn": "In environment H6 : forall d0 d1 : preDTA, preDTA_ref_ok d0 -> preDTA_ref_ok d1 -> preDTA_ref_ok (u_merge d0 d1) X1 : DTA -> term -> Prop H5 : forall (d0 d1 : preDTA) (a0 a1 a : ad) (s s0 s1 s0' s1' : state) (t : term), MapGet state d0 a0 = Some s0 -> MapGet state d1 a1 = Some s1 -> match uad_conv_0 a0 with | 0%N => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N | N.pos (p~1)%positive => MapGet state (udta_conv_1_aux d1) (N.pos p) | N.pos (p~0)%positive => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) | 1%N => MapGet state (udta_conv_1_aux d1) 0%N end = Some s0' -> match uad_conv_1 a1 with | 0%N => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N | N.pos (p~1)%positive => MapGet state (udta_conv_1_aux d1) (N.pos p) | N.pos (p~0)%positive => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) | 1%N => MapGet state (udta_conv_1_aux d1) 0%N end = Some s1' -> preDTA_ref_ok (u_merge d0 d1) -> match a with | 0%N => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N | N.pos (p~1)%positive => MapGet state (udta_conv_1_aux d1) (N.pos p) | N.pos (p~0)%positive => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) | 1%N => MapGet state (udta_conv_1_aux d1) 0%N end = None -> (a = uad_conv_0 a0 -> False) -> (reconnaissance d0 a0 t -> reconnaissance match a with | 0%N => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N s) (udta_conv_1_aux d1) | N.pos (p~1)%positive => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) (N.pos p) s) | N.pos (p~0)%positive => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) s) (udta_conv_1_aux d1) | 1%N => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) 0%N s) end (uad_conv_0 a0) t) /\\\\ (reconnaissance match a with | 0%N => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N s) (udta_conv_1_aux d1) | N.pos (p~1)%positive => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) (N.pos p) s) | N.pos (p~0)%positive => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) s) (udta_conv_1_aux d1) | 1%N => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) 0%N s) end (uad_conv_0 a0) t -> reconnaissance d0 a0 t) X0, X : DTA -> term -> Prop p0 : preDTA a0 : ad p1 : preDTA a1 : ad Hro0 : preDTA_ref_ok p0 Hro1 : preDTA_ref_ok p1 Hcompat : dta_compat p0 p1 ladj : state H0 : MapGet state p0 a0 = Some ladj c : ad tl : term_list l : prec_list H : MapGet prec_list ladj c = Some l H2 : liste_reconnait p0 l tl x : state H1 : MapGet state p1 a1 = Some x x0 : state H3 : MapGet state p0 a0 = Some x0 Unable to unify \"forall (a : ad) (s : state) (c : ad) (pl : prec_list) (b : ad), MapGet state (u_merge ?M11766 ?M11767) a = Some s -> MapGet prec_list s c = Some pl -> prec_occur pl b -> exists s0 : state, MapGet state (u_merge ?M11766 ?M11767) b = Some s0\" with \"MapGet state (u_merge (insert_ostate (u_merge p0 p1) (N.min (N.double (new_preDTA_ad (MapMerge state (udta_conv_0_aux p0) (M0 state)))) (N.succ_double (new_preDTA_ad (udta_conv_1_aux p1)))) (union_0 (u_merge p0 p1) a0 a1)) ?Goal2) (uad_conv_0 (N.min (N.double (new_preDTA_ad (MapMerge state (udta_conv_0_aux p0) (M0 state)))) (N.succ_double (new_preDTA_ad (udta_conv_1_aux p1))))) = Some ?Goal7\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros d0 d1 t Hm0 Hm1 Hro0 Hro1 Hcompat.", "split.", "-", "intros [H | H].", "+", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in *.", "qsimpl time: 1 use: reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "rewrite insert_ostate_1.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "shelve.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok."], "tactic": "*", "exn": "Wrong bullet *: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros d0 d1 t Hm0 Hm1 Hro0 Hro1 Hcompat.", "split.", "-", "intros [H | H].", "+", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in *.", "qsimpl time: 1 use: reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "rewrite insert_ostate_1.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "shelve.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*"], "tactic": "rewrite MapGet_some.", "exn": "The reference MapGet_some was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros d0 d1 t Hm0 Hm1 Hro0 Hro1 Hcompat.", "split.", "-", "intros [H | H].", "+", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in *.", "qsimpl time: 1 use: reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "rewrite insert_ostate_1.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "shelve.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*"], "tactic": "*", "exn": "Wrong bullet *: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros d0 d1 t Hm0 Hm1 Hro0 Hro1 Hcompat.", "split.", "-", "intros [H | H].", "+", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in *.", "qsimpl time: 1 use: reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "rewrite insert_ostate_1.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "shelve.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*"], "tactic": "rewrite MapGet_none.", "exn": "The reference MapGet_none was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros d0 d1 t Hm0 Hm1 Hro0 Hro1 Hcompat.", "split.", "-", "intros [H | H].", "+", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in *.", "qsimpl time: 1 use: reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "rewrite insert_ostate_1.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "shelve.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*"], "tactic": "-", "exn": "Wrong bullet -: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros d0 d1 t Hm0 Hm1 Hro0 Hro1 Hcompat.", "split.", "-", "intros [H | H].", "+", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in *.", "qsimpl time: 1 use: reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "rewrite insert_ostate_1.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "shelve.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve."], "tactic": "-", "exn": "Wrong bullet -: Expecting *.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros d0 d1 t Hm0 Hm1 Hro0 Hro1 Hcompat.", "split.", "-", "intros [H | H].", "+", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in *.", "qsimpl time: 1 use: reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "rewrite insert_ostate_1.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "shelve.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "intros Hu.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros d0 d1 t Hm0 Hm1 Hro0 Hro1 Hcompat.", "split.", "-", "intros [H | H].", "+", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in *.", "qsimpl time: 1 use: reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "rewrite insert_ostate_1.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "shelve.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "destruct d0 as [p0 a0].", "exn": "The reference d0 was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros d0 d1 t Hm0 Hm1 Hro0 Hro1 Hcompat.", "split.", "-", "intros [H | H].", "+", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in *.", "qsimpl time: 1 use: reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "rewrite insert_ostate_1.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "shelve.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "destruct d1 as [p1 a1].", "exn": "The reference d1 was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros d0 d1 t Hm0 Hm1 Hro0 Hro1 Hcompat.", "split.", "-", "intros [H | H].", "+", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in *.", "qsimpl time: 1 use: reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "rewrite insert_ostate_1.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "shelve.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "simpl in *."], "tactic": "generalize (insert_ostate_9 p0 p1 a0 a1 a0 s0' s1' t Hro0 Hro1 Hcompat).", "exn": "The reference t was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros d0 d1 t Hm0 Hm1 Hro0 Hro1 Hcompat.", "split.", "-", "intros [H | H].", "+", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in *.", "qsimpl time: 1 use: reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "rewrite insert_ostate_1.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "shelve.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "simpl in *."], "tactic": "intros H9.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros d0 d1 t Hm0 Hm1 Hro0 Hro1 Hcompat.", "split.", "-", "intros [H | H].", "+", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in *.", "qsimpl time: 1 use: reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "rewrite insert_ostate_1.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "shelve.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "simpl in *."], "tactic": "assert (mpl_compat s0' s1').", "exn": "The reference s1' was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros d0 d1 t Hm0 Hm1 Hro0 Hro1 Hcompat.", "split.", "-", "intros [H | H].", "+", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in *.", "qsimpl time: 1 use: reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "rewrite insert_ostate_1.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "shelve.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "simpl in *."], "tactic": "eapply udta_conv_0_1_compat.", "exn": "In environment H6 : forall d0 d1 : preDTA, preDTA_ref_ok d0 -> preDTA_ref_ok d1 -> preDTA_ref_ok (u_merge d0 d1) X1 : DTA -> term -> Prop H5 : forall (d0 d1 : preDTA) (a0 a1 a : ad) (s s0 s1 s0' s1' : state) (t : term), MapGet state d0 a0 = Some s0 -> MapGet state d1 a1 = Some s1 -> match uad_conv_0 a0 with | 0%N => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N | N.pos (p~1)%positive => MapGet state (udta_conv_1_aux d1) (N.pos p) | N.pos (p~0)%positive => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) | 1%N => MapGet state (udta_conv_1_aux d1) 0%N end = Some s0' -> match uad_conv_1 a1 with | 0%N => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N | N.pos (p~1)%positive => MapGet state (udta_conv_1_aux d1) (N.pos p) | N.pos (p~0)%positive => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) | 1%N => MapGet state (udta_conv_1_aux d1) 0%N end = Some s1' -> preDTA_ref_ok (u_merge d0 d1) -> match a with | 0%N => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N | N.pos (p~1)%positive => MapGet state (udta_conv_1_aux d1) (N.pos p) | N.pos (p~0)%positive => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) | 1%N => MapGet state (udta_conv_1_aux d1) 0%N end = None -> (a = uad_conv_0 a0 -> False) -> (reconnaissance d0 a0 t -> reconnaissance match a with | 0%N => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N s) (udta_conv_1_aux d1) | N.pos (p~1)%positive => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) (N.pos p) s) | N.pos (p~0)%positive => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) s) (udta_conv_1_aux d1) | 1%N => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) 0%N s) end (uad_conv_0 a0) t) /\\\\ (reconnaissance match a with | 0%N => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N s) (udta_conv_1_aux d1) | N.pos (p~1)%positive => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) (N.pos p) s) | N.pos (p~0)%positive => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) s) (udta_conv_1_aux d1) | 1%N => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) 0%N s) end (uad_conv_0 a0) t -> reconnaissance d0 a0 t) X0, X : DTA -> term -> Prop p0 : preDTA a0 : ad p1 : preDTA a1 : ad Hro0 : preDTA_ref_ok p0 Hro1 : preDTA_ref_ok p1 Hcompat : dta_compat p0 p1 ladj : state H0 : MapGet state p0 a0 = Some ladj c : ad tl : term_list l : prec_list H : MapGet prec_list ladj c = Some l H2 : liste_reconnait p0 l tl x : state H1 : MapGet state p1 a1 = Some x x0 : state H3 : MapGet state p0 a0 = Some x0 Unable to unify \"forall (s0 s1 : state) (a0 a1 : ad), MapGet state (udta_conv_0 ?M22365) a0 = Some s0 -> MapGet state (udta_conv_1 ?M22366) a1 = Some s1 -> mpl_compat s0 s1\" with \"match ?Goal3 with | 0%N => MapGet state (MapMerge state (udta_conv_0_aux (insert_ostate (u_merge p0 p1) (N.min (N.double (new_preDTA_ad (MapMerge state (udta_conv_0_aux p0) (M0 state)))) (N.succ_double (new_preDTA_ad (udta_conv_1_aux p1)))) (union_0 (u_merge p0 p1) a0 a1))) (M0 state)) 0%N | N.pos (p~1)%positive => MapGet state (udta_conv_1_aux p1) (N.pos p) | N.pos (p~0)%positive => MapGet state (MapMerge state (udta_conv_0_aux (insert_ostate (u_merge p0 p1) (N.min (N.double (new_preDTA_ad (MapMerge state (udta_conv_0_aux p0) (M0 state)))) (N.succ_double (new_preDTA_ad (udta_conv_1_aux p1)))) (union_0 (u_merge p0 p1) a0 a1))) (M0 state)) (N.pos p) | 1%N => MapGet state (udta_conv_1_aux p1) 0%N end = None\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros d0 d1 t Hm0 Hm1 Hro0 Hro1 Hcompat.", "split.", "-", "intros [H | H].", "+", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in *.", "qsimpl time: 1 use: reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "rewrite insert_ostate_1.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "shelve.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "simpl in *.", "qsimpl time: 1 use: insert_ostate_1,u_merge_ref_ok,insert_ostate_2,reconnait,udta_conv_0_1_compat."], "tactic": "eapply insert_ostate_5 in Hu; eauto.", "exn": "No such hypothesis: Hu", "type": "no_hypos", "handled": true}, {"ctx": ["intros d0 d1 t Hm0 Hm1 Hro0 Hro1 Hcompat.", "split.", "-", "intros [H | H].", "+", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in *.", "qsimpl time: 1 use: reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "rewrite insert_ostate_1.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "shelve.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "simpl in *.", "qsimpl time: 1 use: insert_ostate_1,u_merge_ref_ok,insert_ostate_2,reconnait,udta_conv_0_1_compat.", "qsimpl time: 1 use: insert_ostate_1,u_merge_ref_ok,insert_ostate_2,reconnait,udta_conv_0_1_compat,insert_ostate_5."], "tactic": "destruct Hu.", "exn": "The reference Hu was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros d0 d1 t Hm0 Hm1 Hro0 Hro1 Hcompat.", "split.", "-", "intros [H | H].", "+", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in *.", "qsimpl time: 1 use: reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "rewrite insert_ostate_1.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "shelve.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "simpl in *.", "qsimpl time: 1 use: insert_ostate_1,u_merge_ref_ok,insert_ostate_2,reconnait,udta_conv_0_1_compat.", "qsimpl time: 1 use: insert_ostate_1,u_merge_ref_ok,insert_ostate_2,reconnait,udta_conv_0_1_compat,insert_ostate_5.", "destruct Npos."], "tactic": "+", "exn": "Wrong bullet +: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros d0 d1 t Hm0 Hm1 Hro0 Hro1 Hcompat.", "split.", "-", "intros [H | H].", "+", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in *.", "qsimpl time: 1 use: reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "rewrite insert_ostate_1.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "shelve.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "simpl in *.", "qsimpl time: 1 use: insert_ostate_1,u_merge_ref_ok,insert_ostate_2,reconnait,udta_conv_0_1_compat.", "qsimpl time: 1 use: insert_ostate_1,u_merge_ref_ok,insert_ostate_2,reconnait,udta_conv_0_1_compat,insert_ostate_5.", "destruct Npos.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve."], "tactic": "+", "exn": "Wrong bullet +: Expecting *.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros d0 d1 t Hm0 Hm1 Hro0 Hro1 Hcompat.", "split.", "-", "intros [H | H].", "+", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in *.", "qsimpl time: 1 use: reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "rewrite insert_ostate_1.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "shelve.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "simpl in *.", "qsimpl time: 1 use: insert_ostate_1,u_merge_ref_ok,insert_ostate_2,reconnait,udta_conv_0_1_compat.", "qsimpl time: 1 use: insert_ostate_1,u_merge_ref_ok,insert_ostate_2,reconnait,udta_conv_0_1_compat,insert_ostate_5.", "destruct Npos.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*"], "tactic": "left.", "exn": "Not an inductive goal with 2 constructors.", "type": "not_inductive_goal", "handled": true}, {"ctx": ["intros d0 d1 t Hm0 Hm1 Hro0 Hro1 Hcompat.", "split.", "-", "intros [H | H].", "+", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in *.", "qsimpl time: 1 use: reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "rewrite insert_ostate_1.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "shelve.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "simpl in *.", "qsimpl time: 1 use: insert_ostate_1,u_merge_ref_ok,insert_ostate_2,reconnait,udta_conv_0_1_compat.", "qsimpl time: 1 use: insert_ostate_1,u_merge_ref_ok,insert_ostate_2,reconnait,udta_conv_0_1_compat,insert_ostate_5.", "destruct Npos.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_1,u_merge_ref_ok,insert_ostate_2,reconnait,udta_conv_0_1_compat,insert_ostate_5."], "tactic": "eapply reconnait.", "exn": "In environment H10 : forall (d0 d1 : preDTA) (a0 a1 a : ad) (s0 s1 s0' s1' : state) (t : term), mpl_compat s0' s1' -> MapGet state d0 a0 = Some s0 -> MapGet state d1 a1 = Some s1 -> match uad_conv_0 a0 with | 0%N => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N | N.pos (p~1)%positive => MapGet state (udta_conv_1_aux d1) (N.pos p) | N.pos (p~0)%positive => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) | 1%N => MapGet state (udta_conv_1_aux d1) 0%N end = Some s0' -> match uad_conv_1 a1 with | 0%N => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N | N.pos (p~1)%positive => MapGet state (udta_conv_1_aux d1) (N.pos p) | N.pos (p~0)%positive => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) | 1%N => MapGet state (udta_conv_1_aux d1) 0%N end = Some s1' -> preDTA_ref_ok (u_merge d0 d1) -> match a with | 0%N => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N | N.pos (p~1)%positive => MapGet state (udta_conv_1_aux d1) (N.pos p) | N.pos (p~0)%positive => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) | 1%N => MapGet state (udta_conv_1_aux d1) 0%N end = None -> (a = uad_conv_0 a0 -> False) -> (a = uad_conv_1 a1 -> False) -> (state_reconnait match a with | 0%N => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N (union_mpl s0' s1')) (udta_conv_1_aux d1) | N.pos (p~1)%positive => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) (N.pos p) (union_mpl s0' s1')) | N.pos (p~0)%positive => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) (union_mpl s0' s1')) (udta_conv_1_aux d1) | 1%N => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) 0%N (union_mpl s0' s1')) end (union_mpl s0' s1') t -> state_reconnait match a with | 0%N => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N (union_mpl s0' s1')) (udta_conv_1_aux d1) | N.pos (p~1)%positive => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) (N.pos p) (union_mpl s0' s1')) | N.pos (p~0)%positive => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) (union_mpl s0' s1')) (udta_conv_1_aux d1) | 1%N => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) 0%N (union_mpl s0' s1')) end s0' t \\\\/ state_reconnait match a with | 0%N => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N (union_mpl s0' s1')) (udta_conv_1_aux d1) | N.pos (p~1)%positive => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) (N.pos p) (union_mpl s0' s1')) | N.pos (p~0)%positive => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) (union_mpl s0' s1')) (udta_conv_1_aux d1) | 1%N => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) 0%N (union_mpl s0' s1')) end s1' t) /\\\\ (state_reconnait match a with | 0%N => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N (union_mpl s0' s1')) (udta_conv_1_aux d1) | N.pos (p~1)%positive => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) (N.pos p) (union_mpl s0' s1')) | N.pos (p~0)%positive => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) (union_mpl s0' s1')) (udta_conv_1_aux d1) | 1%N => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) 0%N (union_mpl s0' s1')) end s0' t \\\\/ state_reconnait match a with | 0%N => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N (union_mpl s0' s1')) (udta_conv_1_aux d1) | N.pos (p~1)%positive => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) (N.pos p) (union_mpl s0' s1')) | N.pos (p~0)%positive => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) (union_mpl s0' s1')) (udta_conv_1_aux d1) | 1%N => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) 0%N (union_mpl s0' s1')) end s1' t -> state_reconnait match a with | 0%N => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N (union_mpl s0' s1')) (udta_conv_1_aux d1) | N.pos (p~1)%positive => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) (N.pos p) (union_mpl s0' s1')) | N.pos (p~0)%positive => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) (union_mpl s0' s1')) (udta_conv_1_aux d1) | 1%N => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) 0%N (union_mpl s0' s1')) end (union_mpl s0' s1') t) H9 : forall d0 d1 : preDTA, dta_compat d0 d1 -> dta_compat (udta_conv_0 d0) (udta_conv_1 d1) X2 : DTA -> term -> Prop H8 : forall (d0 d1 : preDTA) (a0 a1 a : ad) (s s0 s1 s0' s1' : state) (t : term), MapGet state d0 a0 = Some s0 -> MapGet state d1 a1 = Some s1 -> match uad_conv_0 a0 with | 0%N => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N | N.pos (p~1)%positive => MapGet state (udta_conv_1_aux d1) (N.pos p) | N.pos (p~0)%positive => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) | 1%N => MapGet state (udta_conv_1_aux d1) 0%N end = Some s0' -> match uad_conv_1 a1 with | 0%N => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N | N.pos (p~1)%positive => MapGet state (udta_conv_1_aux d1) (N.pos p) | N.pos (p~0)%positive => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) | 1%N => MapGet state (udta_conv_1_aux d1) 0%N end = Some s1' -> preDTA_ref_ok (u_merge d0 d1) -> match a with | 0%N => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N | N.pos (p~1)%positive => MapGet state (udta_conv_1_aux d1) (N.pos p) | N.pos (p~0)%positive => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) | 1%N => MapGet state (udta_conv_1_aux d1) 0%N end = None -> (a = uad_conv_1 a1 -> False) -> (reconnaissance d1 a1 t -> reconnaissance match a with | 0%N => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N s) (udta_conv_1_aux d1) | N.pos (p~1)%positive => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) (N.pos p) s) | N.pos (p~0)%positive => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) s) (udta_conv_1_aux d1) | 1%N => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) 0%N s) end (uad_conv_1 a1) t) /\\\\ (reconnaissance match a with | 0%N => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N s) (udta_conv_1_aux d1) | N.pos (p~1)%positive => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) (N.pos p) s) | N.pos (p~0)%positive => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) s) (udta_conv_1_aux d1) | 1%N => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) 0%N s) end (uad_conv_1 a1) t -> reconnaissance d1 a1 t) H7 : forall d0 d1 : preDTA, preDTA_ref_ok d0 -> preDTA_ref_ok d1 -> preDTA_ref_ok (u_merge d0 d1) H4 : forall (d0 d1 : preDTA) (a0 a1 a : ad) (s s0 s1 s0' s1' : state) (t : term), MapGet state d0 a0 = Some s0 -> MapGet state d1 a1 = Some s1 -> match uad_conv_0 a0 with | 0%N => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N | N.pos (p~1)%positive => MapGet state (udta_conv_1_aux d1) (N.pos p) | N.pos (p~0)%positive => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) | 1%N => MapGet state (udta_conv_1_aux d1) 0%N end = Some s0' -> match uad_conv_1 a1 with | 0%N => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N | N.pos (p~1)%positive => MapGet state (udta_conv_1_aux d1) (N.pos p) | N.pos (p~0)%positive => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) | 1%N => MapGet state (udta_conv_1_aux d1) 0%N end = Some s1' -> preDTA_ref_ok (u_merge d0 d1) -> match a with | 0%N => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N | N.pos (p~1)%positive => MapGet state (udta_conv_1_aux d1) (N.pos p) | N.pos (p~0)%positive => MapGet state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) | 1%N => MapGet state (udta_conv_1_aux d1) 0%N end = None -> (a = uad_conv_0 a0 -> False) -> (reconnaissance d0 a0 t -> reconnaissance match a with | 0%N => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N s) (udta_conv_1_aux d1) | N.pos (p~1)%positive => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) (N.pos p) s) | N.pos (p~0)%positive => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) s) (udta_conv_1_aux d1) | 1%N => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) 0%N s) end (uad_conv_0 a0) t) /\\\\ (reconnaissance match a with | 0%N => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) 0%N s) (udta_conv_1_aux d1) | N.pos (p~1)%positive => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) (N.pos p) s) | N.pos (p~0)%positive => M2 state (MapPut state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (N.pos p) s) (udta_conv_1_aux d1) | 1%N => M2 state (MapMerge state (udta_conv_0_aux d0) (M0 state)) (MapPut state (udta_conv_1_aux d1) 0%N s) end (uad_conv_0 a0) t -> reconnaissance d0 a0 t) X1, X0, X : DTA -> term -> Prop p0 : preDTA a0 : ad p1 : preDTA a1 : ad Hro0 : preDTA_ref_ok p0 Hro1 : preDTA_ref_ok p1 Hcompat : dta_compat p0 p1 ladj : state H0 : MapGet state p0 a0 = Some ladj tl : term_list l : prec_list H : MapGet prec_list ladj (uad_conv_0 (N.min (N.double (new_preDTA_ad (MapMerge state (udta_conv_0_aux p0) (M0 state)))) (N.succ_double (new_preDTA_ad (udta_conv_1_aux p1))))) = Some l H2 : liste_reconnait p0 l tl x : state H1 : MapGet state p1 a1 = Some x x0 : state H3 : MapGet state p0 a0 = Some x0 Unable to unify \"Prop\" with \"False\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros d0 d1 t Hm0 Hm1 Hro0 Hro1 Hcompat.", "split.", "-", "intros [H | H].", "+", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in *.", "qsimpl time: 1 use: reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "rewrite insert_ostate_1.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "shelve.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "simpl in *.", "qsimpl time: 1 use: insert_ostate_1,u_merge_ref_ok,insert_ostate_2,reconnait,udta_conv_0_1_compat.", "qsimpl time: 1 use: insert_ostate_1,u_merge_ref_ok,insert_ostate_2,reconnait,udta_conv_0_1_compat,insert_ostate_5.", "destruct Npos.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_1,u_merge_ref_ok,insert_ostate_2,reconnait,udta_conv_0_1_compat,insert_ostate_5.", "qsimpl time: 1 use: insert_ostate_1,u_merge_ref_ok,insert_ostate_2,reconnait,udta_conv_0_1_compat,insert_ostate_5."], "tactic": "eapply rec_dta with (s0:=s0').", "exn": "The reference s0' was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros d0 d1 t Hm0 Hm1 Hro0 Hro1 Hcompat.", "split.", "-", "intros [H | H].", "+", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in *.", "qsimpl time: 1 use: reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "rewrite insert_ostate_1.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "shelve.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "simpl in *.", "qsimpl time: 1 use: insert_ostate_1,u_merge_ref_ok,insert_ostate_2,reconnait,udta_conv_0_1_compat.", "qsimpl time: 1 use: insert_ostate_1,u_merge_ref_ok,insert_ostate_2,reconnait,udta_conv_0_1_compat,insert_ostate_5.", "destruct Npos.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_1,u_merge_ref_ok,insert_ostate_2,reconnait,udta_conv_0_1_compat,insert_ostate_5.", "qsimpl time: 1 use: insert_ostate_1,u_merge_ref_ok,insert_ostate_2,reconnait,udta_conv_0_1_compat,insert_ostate_5."], "tactic": "*", "exn": "Wrong bullet *: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros d0 d1 t Hm0 Hm1 Hro0 Hro1 Hcompat.", "split.", "-", "intros [H | H].", "+", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in *.", "qsimpl time: 1 use: reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "rewrite insert_ostate_1.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "shelve.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "simpl in *.", "qsimpl time: 1 use: insert_ostate_1,u_merge_ref_ok,insert_ostate_2,reconnait,udta_conv_0_1_compat.", "qsimpl time: 1 use: insert_ostate_1,u_merge_ref_ok,insert_ostate_2,reconnait,udta_conv_0_1_compat,insert_ostate_5.", "destruct Npos.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_1,u_merge_ref_ok,insert_ostate_2,reconnait,udta_conv_0_1_compat,insert_ostate_5.", "qsimpl time: 1 use: insert_ostate_1,u_merge_ref_ok,insert_ostate_2,reconnait,udta_conv_0_1_compat,insert_ostate_5.", "shelve."], "tactic": "*", "exn": "Wrong bullet *: Expecting +.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros d0 d1 t Hm0 Hm1 Hro0 Hro1 Hcompat.", "split.", "-", "intros [H | H].", "+", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in *.", "qsimpl time: 1 use: reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "rewrite insert_ostate_1.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "shelve.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "simpl in *.", "qsimpl time: 1 use: insert_ostate_1,u_merge_ref_ok,insert_ostate_2,reconnait,udta_conv_0_1_compat.", "qsimpl time: 1 use: insert_ostate_1,u_merge_ref_ok,insert_ostate_2,reconnait,udta_conv_0_1_compat,insert_ostate_5.", "destruct Npos.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_1,u_merge_ref_ok,insert_ostate_2,reconnait,udta_conv_0_1_compat,insert_ostate_5.", "qsimpl time: 1 use: insert_ostate_1,u_merge_ref_ok,insert_ostate_2,reconnait,udta_conv_0_1_compat,insert_ostate_5.", "shelve.", "+"], "tactic": "rewrite MapGet_some.", "exn": "The reference MapGet_some was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros d0 d1 t Hm0 Hm1 Hro0 Hro1 Hcompat.", "split.", "-", "intros [H | H].", "+", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in *.", "qsimpl time: 1 use: reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "rewrite insert_ostate_1.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "shelve.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "simpl in *.", "qsimpl time: 1 use: insert_ostate_1,u_merge_ref_ok,insert_ostate_2,reconnait,udta_conv_0_1_compat.", "qsimpl time: 1 use: insert_ostate_1,u_merge_ref_ok,insert_ostate_2,reconnait,udta_conv_0_1_compat,insert_ostate_5.", "destruct Npos.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_1,u_merge_ref_ok,insert_ostate_2,reconnait,udta_conv_0_1_compat,insert_ostate_5.", "qsimpl time: 1 use: insert_ostate_1,u_merge_ref_ok,insert_ostate_2,reconnait,udta_conv_0_1_compat,insert_ostate_5.", "shelve.", "+"], "tactic": "+", "exn": "Wrong bullet +: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros d0 d1 t Hm0 Hm1 Hro0 Hro1 Hcompat.", "split.", "-", "intros [H | H].", "+", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in *.", "qsimpl time: 1 use: reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "rewrite insert_ostate_1.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "shelve.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "simpl in *.", "qsimpl time: 1 use: insert_ostate_1,u_merge_ref_ok,insert_ostate_2,reconnait,udta_conv_0_1_compat.", "qsimpl time: 1 use: insert_ostate_1,u_merge_ref_ok,insert_ostate_2,reconnait,udta_conv_0_1_compat,insert_ostate_5.", "destruct Npos.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_1,u_merge_ref_ok,insert_ostate_2,reconnait,udta_conv_0_1_compat,insert_ostate_5.", "qsimpl time: 1 use: insert_ostate_1,u_merge_ref_ok,insert_ostate_2,reconnait,udta_conv_0_1_compat,insert_ostate_5.", "shelve.", "+", "shelve."], "tactic": "+", "exn": "Wrong bullet +: Expecting -.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros d0 d1 t Hm0 Hm1 Hro0 Hro1 Hcompat.", "split.", "-", "intros [H | H].", "+", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in *.", "qsimpl time: 1 use: reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "rewrite insert_ostate_1.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "shelve.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "simpl in *.", "qsimpl time: 1 use: insert_ostate_1,u_merge_ref_ok,insert_ostate_2,reconnait,udta_conv_0_1_compat.", "qsimpl time: 1 use: insert_ostate_1,u_merge_ref_ok,insert_ostate_2,reconnait,udta_conv_0_1_compat,insert_ostate_5.", "destruct Npos.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_1,u_merge_ref_ok,insert_ostate_2,reconnait,udta_conv_0_1_compat,insert_ostate_5.", "qsimpl time: 1 use: insert_ostate_1,u_merge_ref_ok,insert_ostate_2,reconnait,udta_conv_0_1_compat,insert_ostate_5.", "shelve.", "+", "shelve.", "-", "right."], "tactic": "eapply reconnait.", "exn": "In environment d0, d1 : DTA t : term Hm0 : DTA_main_state_correct d0 Hm1 : DTA_main_state_correct d1 Hro0 : DTA_ref_ok d0 Hro1 : DTA_ref_ok d1 Hcompat : DTA_compat d0 d1 H : reconnait (union d0 d1) t Unable to unify \"Prop\" with \"reconnait d1 t\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros d0 d1 t Hm0 Hm1 Hro0 Hro1 Hcompat.", "split.", "-", "intros [H | H].", "+", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in *.", "qsimpl time: 1 use: reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "rewrite insert_ostate_1.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "shelve.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "simpl in *.", "qsimpl time: 1 use: insert_ostate_1,u_merge_ref_ok,insert_ostate_2,reconnait,udta_conv_0_1_compat.", "qsimpl time: 1 use: insert_ostate_1,u_merge_ref_ok,insert_ostate_2,reconnait,udta_conv_0_1_compat,insert_ostate_5.", "destruct Npos.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_1,u_merge_ref_ok,insert_ostate_2,reconnait,udta_conv_0_1_compat,insert_ostate_5.", "qsimpl time: 1 use: insert_ostate_1,u_merge_ref_ok,insert_ostate_2,reconnait,udta_conv_0_1_compat,insert_ostate_5.", "shelve.", "+", "shelve.", "-", "right.", "qsimpl time: 1 use: insert_ostate_1,u_merge_ref_ok,insert_ostate_2,reconnait,udta_conv_0_1_compat,insert_ostate_5."], "tactic": "eapply rec_dta with (s0:=s1').", "exn": "The reference s1' was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros d0 d1 t Hm0 Hm1 Hro0 Hro1 Hcompat.", "split.", "-", "intros [H | H].", "+", "destruct d0 as [p0 a0].", "destruct d1 as [p1 a1].", "simpl in *.", "qsimpl time: 1 use: reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait.", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "rewrite insert_ostate_1.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_1,reconnait,u_merge_ref_ok.", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "shelve.", "*", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_2,insert_ostate_1,reconnait,u_merge_ref_ok.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "simpl in *.", "qsimpl time: 1 use: insert_ostate_1,u_merge_ref_ok,insert_ostate_2,reconnait,udta_conv_0_1_compat.", "qsimpl time: 1 use: insert_ostate_1,u_merge_ref_ok,insert_ostate_2,reconnait,udta_conv_0_1_compat,insert_ostate_5.", "destruct Npos.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: insert_ostate_1,u_merge_ref_ok,insert_ostate_2,reconnait,udta_conv_0_1_compat,insert_ostate_5.", "qsimpl time: 1 use: insert_ostate_1,u_merge_ref_ok,insert_ostate_2,reconnait,udta_conv_0_1_compat,insert_ostate_5.", "shelve.", "+", "shelve.", "-", "right.", "qsimpl time: 1 use: insert_ostate_1,u_merge_ref_ok,insert_ostate_2,reconnait,udta_conv_0_1_compat,insert_ostate_5."], "tactic": "rewrite MapGet_some.", "exn": "The reference MapGet_some was not found in the current environment.", "type": "ref_not_found", "handled": true}]}, "chat": [], "original": "intros d0 d1 t Hm0 Hm1 Hro0 Hro1 Hcompat. split. - intros [H | H]. + destruct d0 as [p0 a0]. destruct d1 as [p1 a1]. simpl in *. apply reconnait. eapply insert_ostate_1 with (d0:=p0) (a0:=a0) (a1:=a1). * auto. * eapply u_merge_ref_ok; eauto. * rewrite MapGet_some. eauto. * rewrite MapGet_none. reflexivity. + destruct d0 as [p0 a0]. destruct d1 as [p1 a1]. simpl in *. apply reconnait. eapply insert_ostate_2 with (d0:=p0) (a0:=a0) (a1:=a1). * auto. * eapply u_merge_ref_ok; eauto. * rewrite MapGet_some. eauto. * rewrite MapGet_none. reflexivity. - intros Hu. destruct d0 as [p0 a0]. destruct d1 as [p1 a1]. simpl in *. generalize (insert_ostate_9 p0 p1 a0 a1 a0 s0' s1' t Hro0 Hro1 Hcompat). intros H9. assert (mpl_compat s0' s1'). { eapply udta_conv_0_1_compat. eauto. } eapply insert_ostate_5 in Hu; eauto. destruct Hu. + left. eapply reconnait. eapply rec_dta with (s0:=s0'). * rewrite MapGet_some. auto. * eauto. + right. eapply reconnait. eapply rec_dta with (s0:=s1'). * rewrite MapGet_some. auto. * eauto.", "back_times": 0, "succ": false, "time": 288.1871004104614}]