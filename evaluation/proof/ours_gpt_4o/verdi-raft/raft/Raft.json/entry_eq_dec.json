[{"history": {"proof": "intros x y. destruct x as [eAt1 eClient1 eId1 eIndex1 eTerm1 eInput1]. destruct y as [eAt2 eClient2 eId2 eIndex2 eTerm2 eInput2]. destruct (name_eq_dec eAt1 eAt2) as [eAt_eq | eAt_neq]. - destruct (clientId_eq_dec eClient1 eClient2) as [eClient_eq | eClient_neq]. -- destruct (Nat.eq_dec eId1 eId2) as [eId_eq | eId_neq]. ++ destruct (Nat.eq_dec eIndex1 eIndex2) as [eIndex_eq | eIndex_neq]. ** destruct (term_eq_dec eTerm1 eTerm2) as [eTerm_eq | eTerm_neq]. --- destruct (input_eq_dec eInput1 eInput2) as [eInput_eq | eInput_neq]. ---- left. subst. reflexivity. ---- right. intros contra. inversion contra. apply eInput_neq. auto. --- right. intros contra. inversion contra. apply eTerm_neq. auto. ** right. intros contra. inversion contra. apply eIndex_neq. auto. ++ right. intros contra. inversion contra. apply eId_neq. auto. -- right. intros contra. inversion contra. apply eClient_neq. auto. - right. intros contra. inversion contra. apply eAt_neq. auto.", "repairs": ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""], "exceptions": []}, "chat": [], "original": "intros x y. destruct x as [eAt1 eClient1 eId1 eIndex1 eTerm1 eInput1]. destruct y as [eAt2 eClient2 eId2 eIndex2 eTerm2 eInput2]. destruct (name_eq_dec eAt1 eAt2) as [eAt_eq | eAt_neq]. - destruct (clientId_eq_dec eClient1 eClient2) as [eClient_eq | eClient_neq]. -- destruct (Nat.eq_dec eId1 eId2) as [eId_eq | eId_neq]. ++ destruct (Nat.eq_dec eIndex1 eIndex2) as [eIndex_eq | eIndex_neq]. ** destruct (term_eq_dec eTerm1 eTerm2) as [eTerm_eq | eTerm_neq]. --- destruct (input_eq_dec eInput1 eInput2) as [eInput_eq | eInput_neq]. ---- left. subst. reflexivity. ---- right. intros contra. inversion contra. apply eInput_neq. auto. --- right. intros contra. inversion contra. apply eTerm_neq. auto. ** right. intros contra. inversion contra. apply eIndex_neq. auto. ++ right. intros contra. inversion contra. apply eId_neq. auto. -- right. intros contra. inversion contra. apply eClient_neq. auto. - right. intros contra. inversion contra. apply eAt_neq. auto.", "back_times": 0, "succ": true, "time": 1.732407569885254}]