[{"history": {"proof": "qsimpl time: 1 use: name_eq_dec. qsimpl time: 1 use: entry_eq_dec,name_eq_dec. qsimpl time: 1 use: entry_eq_dec,name_eq_dec. qsimpl time: 1 use: entry_eq_dec,name_eq_dec. qsimpl time: 1 use: list_eq_dec,entry_eq_dec,name_eq_dec. qsimpl time: 1 use: list_eq_dec,entry_eq_dec,name_eq_dec. qsimpl time: 1 use: list_eq_dec,entry_eq_dec,name_eq_dec. qsimpl time: 1 use: Z,list_eq_dec,entry_eq_dec,name_eq_dec. qsimpl time: 1 use: Z,list_eq_dec,entry_eq_dec,name_eq_dec. qsimpl time: 1 use: Z,list_eq_dec,entry_eq_dec,name_eq_dec. qsimpl time: 1 use: Z,list_eq_dec,entry_eq_dec,name_eq_dec.", "repairs": ["cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify"], "exceptions": [{"ctx": ["intros x y.", "decide equality.", "apply term_eq_dec."], "tactic": "apply name_eq_dec.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params x, y : msg t : term n : name l : logIndex t0, t1 : term n0 : name l0 : logIndex t2 : term a : t = t1 a0 : n = n0 Unable to unify \"{?M2231 = ?M2232} + {?M2231 <> ?M2232}\" with \"{l = l0} + {l <> l0}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros x y.", "decide equality.", "apply term_eq_dec.", "qsimpl time: 1 use: name_eq_dec."], "tactic": "apply entry_eq_dec.", "exn": "In environment orig_base_params : BaseParams raft_params : RaftParams orig_base_params X : forall x y : name, {x = y} + {x = y -> False} x, y : msg l : logIndex t0, t1 : term n0 : name l0 : logIndex t2 : term init : data handler : input -> data -> output * data Unable to unify \"{?M2884 = ?M2885} + {?M2884 <> ?M2885}\" with \"{l = l0} + {l = l0 -> False}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros x y.", "decide equality.", "apply term_eq_dec.", "qsimpl time: 1 use: name_eq_dec.", "qsimpl time: 1 use: entry_eq_dec,name_eq_dec."], "tactic": "apply OrderedTypeEx.Positive_as_OT.eq_dec.", "exn": "In environment orig_base_params : BaseParams raft_params : RaftParams orig_base_params X1 : forall x y : name, {x = y} + {x = y -> False} X0 : forall x y : entry, {x = y} + {x = y -> False} X : forall x y : name, {x = y} + {x = y -> False} x, y : msg l : logIndex t0, t1 : term n0 : name l0 : logIndex t2 : term init : data handler : input -> data -> output * data Unable to unify \"{?M3362 = ?M3363} + {?M3362 <> ?M3363}\" with \"{l = l0} + {l = l0 -> False}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros x y.", "decide equality.", "apply term_eq_dec.", "qsimpl time: 1 use: name_eq_dec.", "qsimpl time: 1 use: entry_eq_dec,name_eq_dec.", "qsimpl time: 1 use: entry_eq_dec,name_eq_dec.", "apply term_eq_dec.", "apply name_eq_dec."], "tactic": "apply OrderedTypeEx.Positive_as_OT.eq_dec.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params x, y : msg t : term n : name l : logIndex t0, t1 : term n0 : name l0 : logIndex t2 : term Unable to unify \"{?M3972 = ?M3973} + {?M3972 <> ?M3973}\" with \"{t = t1} + {t <> t1}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros x y.", "decide equality.", "apply term_eq_dec.", "qsimpl time: 1 use: name_eq_dec.", "qsimpl time: 1 use: entry_eq_dec,name_eq_dec.", "qsimpl time: 1 use: entry_eq_dec,name_eq_dec.", "apply term_eq_dec.", "apply name_eq_dec.", "qsimpl time: 1 use: entry_eq_dec,name_eq_dec.", "apply term_eq_dec."], "tactic": "apply list_eq_dec.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params x, y : msg t : term b : bool t0 : term b0 : bool a : t = t0 Unable to unify \"{?M4781 = ?M4782} + {?M4781 <> ?M4782}\" with \"{b = b0} + {b <> b0}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros x y.", "decide equality.", "apply term_eq_dec.", "qsimpl time: 1 use: name_eq_dec.", "qsimpl time: 1 use: entry_eq_dec,name_eq_dec.", "qsimpl time: 1 use: entry_eq_dec,name_eq_dec.", "apply term_eq_dec.", "apply name_eq_dec.", "qsimpl time: 1 use: entry_eq_dec,name_eq_dec.", "apply term_eq_dec.", "qsimpl time: 1 use: list_eq_dec,entry_eq_dec,name_eq_dec."], "tactic": "apply entry_eq_dec.", "exn": "In environment orig_base_params : BaseParams raft_params : RaftParams orig_base_params X1 : forall x y : name, {x = y} + {x = y -> False} X0 : forall x y : entry, {x = y} + {x = y -> False} X : forall A : Type, (forall x y : A, {x = y} + {x = y -> False}) -> forall l l' : list A, {l = l'} + {l = l' -> False} x, y : msg b : bool t0 : term b0 : bool init : data handler : input -> data -> output * data Unable to unify \"{?M5828 = ?M5829} + {?M5828 <> ?M5829}\" with \"{b = b0} + {b = b0 -> False}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros x y.", "decide equality.", "apply term_eq_dec.", "qsimpl time: 1 use: name_eq_dec.", "qsimpl time: 1 use: entry_eq_dec,name_eq_dec.", "qsimpl time: 1 use: entry_eq_dec,name_eq_dec.", "apply term_eq_dec.", "apply name_eq_dec.", "qsimpl time: 1 use: entry_eq_dec,name_eq_dec.", "apply term_eq_dec.", "qsimpl time: 1 use: list_eq_dec,entry_eq_dec,name_eq_dec.", "qsimpl time: 1 use: list_eq_dec,entry_eq_dec,name_eq_dec."], "tactic": "apply OrderedTypeEx.Positive_as_OT.eq_dec.", "exn": "In environment orig_base_params : BaseParams raft_params : RaftParams orig_base_params X4 : forall x y : name, {x = y} + {x = y -> False} X3 : forall x y : entry, {x = y} + {x = y -> False} X2 : forall A : Type, (forall x y : A, {x = y} + {x = y -> False}) -> forall l l' : list A, {l = l'} + {l = l' -> False} X1 : forall x y : name, {x = y} + {x = y -> False} X0 : forall x y : entry, {x = y} + {x = y -> False} X : forall A : Type, (forall x y : A, {x = y} + {x = y -> False}) -> forall l l' : list A, {l = l'} + {l = l' -> False} x, y : msg b : bool t0 : term b0 : bool init : data handler : input -> data -> output * data Unable to unify \"{?M6654 = ?M6655} + {?M6654 <> ?M6655}\" with \"{b = b0} + {b = b0 -> False}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros x y.", "decide equality.", "apply term_eq_dec.", "qsimpl time: 1 use: name_eq_dec.", "qsimpl time: 1 use: entry_eq_dec,name_eq_dec.", "qsimpl time: 1 use: entry_eq_dec,name_eq_dec.", "apply term_eq_dec.", "apply name_eq_dec.", "qsimpl time: 1 use: entry_eq_dec,name_eq_dec.", "apply term_eq_dec.", "qsimpl time: 1 use: list_eq_dec,entry_eq_dec,name_eq_dec.", "qsimpl time: 1 use: list_eq_dec,entry_eq_dec,name_eq_dec.", "qsimpl time: 1 use: list_eq_dec,entry_eq_dec,name_eq_dec."], "tactic": "apply Z.eq_dec.", "exn": "In environment orig_base_params : BaseParams raft_params : RaftParams orig_base_params X7 : forall x y : name, {x = y} + {x = y -> False} X6 : forall x y : entry, {x = y} + {x = y -> False} X5 : forall A : Type, (forall x y : A, {x = y} + {x = y -> False}) -> forall l l' : list A, {l = l'} + {l = l' -> False} X4 : forall x y : name, {x = y} + {x = y -> False} X3 : forall x y : entry, {x = y} + {x = y -> False} X2 : forall A : Type, (forall x y : A, {x = y} + {x = y -> False}) -> forall l l' : list A, {l = l'} + {l = l' -> False} X1 : forall x y : name, {x = y} + {x = y -> False} X0 : forall x y : entry, {x = y} + {x = y -> False} X : forall A : Type, (forall x y : A, {x = y} + {x = y -> False}) -> forall l l' : list A, {l = l'} + {l = l' -> False} x, y : msg b : bool t0 : term b0 : bool init : data handler : input -> data -> output * data Unable to unify \"{?M7736 = ?M7737} + {?M7736 <> ?M7737}\" with \"{b = b0} + {b = b0 -> False}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros x y.", "decide equality.", "apply term_eq_dec.", "qsimpl time: 1 use: name_eq_dec.", "qsimpl time: 1 use: entry_eq_dec,name_eq_dec.", "qsimpl time: 1 use: entry_eq_dec,name_eq_dec.", "apply term_eq_dec.", "apply name_eq_dec.", "qsimpl time: 1 use: entry_eq_dec,name_eq_dec.", "apply term_eq_dec.", "qsimpl time: 1 use: list_eq_dec,entry_eq_dec,name_eq_dec.", "qsimpl time: 1 use: list_eq_dec,entry_eq_dec,name_eq_dec.", "qsimpl time: 1 use: list_eq_dec,entry_eq_dec,name_eq_dec.", "qsimpl time: 1 use: Z,list_eq_dec,entry_eq_dec,name_eq_dec."], "tactic": "apply list_eq_dec.", "exn": "In environment orig_base_params : BaseParams raft_params : RaftParams orig_base_params X10 : forall x y : name, {x = y} + {x = y -> False} X9 : forall x y : entry, {x = y} + {x = y -> False} X8 : forall A : Type, (forall x y : A, {x = y} + {x = y -> False}) -> forall l l' : list A, {l = l'} + {l = l' -> False} X7 : forall x y : name, {x = y} + {x = y -> False} X6 : forall x y : entry, {x = y} + {x = y -> False} X5 : forall A : Type, (forall x y : A, {x = y} + {x = y -> False}) -> forall l l' : list A, {l = l'} + {l = l' -> False} X4 : forall x y : name, {x = y} + {x = y -> False} X3 : forall x y : entry, {x = y} + {x = y -> False} X2 : forall A : Type, (forall x y : A, {x = y} + {x = y -> False}) -> forall l l' : list A, {l = l'} + {l = l' -> False} X1 : forall x y : name, {x = y} + {x = y -> False} X0 : forall x y : entry, {x = y} + {x = y -> False} X : forall A : Type, (forall x y : A, {x = y} + {x = y -> False}) -> forall l l' : list A, {l = l'} + {l = l' -> False} x, y : msg b : bool t0 : term b0 : bool init : data handler : input -> data -> output * data Unable to unify \"{?M9076 = ?M9077} + {?M9076 <> ?M9077}\" with \"{b = b0} + {b = b0 -> False}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros x y.", "decide equality.", "apply term_eq_dec.", "qsimpl time: 1 use: name_eq_dec.", "qsimpl time: 1 use: entry_eq_dec,name_eq_dec.", "qsimpl time: 1 use: entry_eq_dec,name_eq_dec.", "apply term_eq_dec.", "apply name_eq_dec.", "qsimpl time: 1 use: entry_eq_dec,name_eq_dec.", "apply term_eq_dec.", "qsimpl time: 1 use: list_eq_dec,entry_eq_dec,name_eq_dec.", "qsimpl time: 1 use: list_eq_dec,entry_eq_dec,name_eq_dec.", "qsimpl time: 1 use: list_eq_dec,entry_eq_dec,name_eq_dec.", "qsimpl time: 1 use: Z,list_eq_dec,entry_eq_dec,name_eq_dec.", "qsimpl time: 1 use: Z,list_eq_dec,entry_eq_dec,name_eq_dec."], "tactic": "apply entry_eq_dec.", "exn": "In environment orig_base_params : BaseParams raft_params : RaftParams orig_base_params X13 : forall x y : name, {x = y} + {x = y -> False} X12 : forall x y : entry, {x = y} + {x = y -> False} X11 : forall A : Type, (forall x y : A, {x = y} + {x = y -> False}) -> forall l l' : list A, {l = l'} + {l = l' -> False} X10 : forall x y : name, {x = y} + {x = y -> False} X9 : forall x y : entry, {x = y} + {x = y -> False} X8 : forall A : Type, (forall x y : A, {x = y} + {x = y -> False}) -> forall l l' : list A, {l = l'} + {l = l' -> False} X7 : forall x y : name, {x = y} + {x = y -> False} X6 : forall x y : entry, {x = y} + {x = y -> False} X5 : forall A : Type, (forall x y : A, {x = y} + {x = y -> False}) -> forall l l' : list A, {l = l'} + {l = l' -> False} X4 : forall x y : name, {x = y} + {x = y -> False} X3 : forall x y : entry, {x = y} + {x = y -> False} X2 : forall A : Type, (forall x y : A, {x = y} + {x = y -> False}) -> forall l l' : list A, {l = l'} + {l = l' -> False} X1 : forall x y : name, {x = y} + {x = y -> False} X0 : forall x y : entry, {x = y} + {x = y -> False} X : forall A : Type, (forall x y : A, {x = y} + {x = y -> False}) -> forall l l' : list A, {l = l'} + {l = l' -> False} x, y : msg b : bool t0 : term b0 : bool init : data handler : input -> data -> output * data Unable to unify \"{?M10668 = ?M10669} + {?M10668 <> ?M10669}\" with \"{b = b0} + {b = b0 -> False}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros x y.", "decide equality.", "apply term_eq_dec.", "qsimpl time: 1 use: name_eq_dec.", "qsimpl time: 1 use: entry_eq_dec,name_eq_dec.", "qsimpl time: 1 use: entry_eq_dec,name_eq_dec.", "apply term_eq_dec.", "apply name_eq_dec.", "qsimpl time: 1 use: entry_eq_dec,name_eq_dec.", "apply term_eq_dec.", "qsimpl time: 1 use: list_eq_dec,entry_eq_dec,name_eq_dec.", "qsimpl time: 1 use: list_eq_dec,entry_eq_dec,name_eq_dec.", "qsimpl time: 1 use: list_eq_dec,entry_eq_dec,name_eq_dec.", "qsimpl time: 1 use: Z,list_eq_dec,entry_eq_dec,name_eq_dec.", "qsimpl time: 1 use: Z,list_eq_dec,entry_eq_dec,name_eq_dec.", "qsimpl time: 1 use: Z,list_eq_dec,entry_eq_dec,name_eq_dec."], "tactic": "apply entry_eq_dec.", "exn": "In environment orig_base_params : BaseParams raft_params : RaftParams orig_base_params X16 : forall x y : name, {x = y} + {x = y -> False} X15 : forall x y : entry, {x = y} + {x = y -> False} X14 : forall A : Type, (forall x y : A, {x = y} + {x = y -> False}) -> forall l l' : list A, {l = l'} + {l = l' -> False} X13 : forall x y : name, {x = y} + {x = y -> False} X12 : forall x y : entry, {x = y} + {x = y -> False} X11 : forall A : Type, (forall x y : A, {x = y} + {x = y -> False}) -> forall l l' : list A, {l = l'} + {l = l' -> False} X10 : forall x y : name, {x = y} + {x = y -> False} X9 : forall x y : entry, {x = y} + {x = y -> False} X8 : forall A : Type, (forall x y : A, {x = y} + {x = y -> False}) -> forall l l' : list A, {l = l'} + {l = l' -> False} X7 : forall x y : name, {x = y} + {x = y -> False} X6 : forall x y : entry, {x = y} + {x = y -> False} X5 : forall A : Type, (forall x y : A, {x = y} + {x = y -> False}) -> forall l l' : list A, {l = l'} + {l = l' -> False} X4 : forall x y : name, {x = y} + {x = y -> False} X3 : forall x y : entry, {x = y} + {x = y -> False} X2 : forall A : Type, (forall x y : A, {x = y} + {x = y -> False}) -> forall l l' : list A, {l = l'} + {l = l' -> False} X1 : forall x y : name, {x = y} + {x = y -> False} X0 : forall x y : entry, {x = y} + {x = y -> False} X : forall A : Type, (forall x y : A, {x = y} + {x = y -> False}) -> forall l l' : list A, {l = l'} + {l = l' -> False} x, y : msg b : bool t0 : term b0 : bool init : data handler : input -> data -> output * data Unable to unify \"{?M12518 = ?M12519} + {?M12518 <> ?M12519}\" with \"{b = b0} + {b = b0 -> False}\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros x y. decide equality. apply term_eq_dec. apply name_eq_dec. apply entry_eq_dec. apply OrderedTypeEx.Positive_as_OT.eq_dec. apply term_eq_dec. apply name_eq_dec. apply OrderedTypeEx.Positive_as_OT.eq_dec. apply term_eq_dec. apply list_eq_dec. apply entry_eq_dec. apply OrderedTypeEx.Positive_as_OT.eq_dec. apply Z.eq_dec. apply list_eq_dec. apply entry_eq_dec. apply entry_eq_dec. apply Bool.bool_dec. apply term_eq_dec.", "back_times": 0, "succ": false, "time": 326.227814912796}]