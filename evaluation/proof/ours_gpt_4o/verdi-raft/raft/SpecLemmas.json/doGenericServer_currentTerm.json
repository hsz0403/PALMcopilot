[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros h st os st' ms H.", "unfold doGenericServer in H.", "destruct (applyEntries h st (rev (filter (fun x => (lastApplied st <? eIndex x) && (eIndex x <=? commitIndex st)) (findGtIndex (log st) (lastApplied st))))) eqn:Heq.", "inversion H; subst.", "simpl."], "tactic": "reflexivity.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params h : name st : raft_data os : list raft_output r : raft_data H : (os, {[r with lastApplied := if lastApplied r <? commitIndex r then commitIndex r else lastApplied r]}, []) = (os, mkRaft_data (currentTerm r) (votedFor r) (leaderId r) (log r) (commitIndex r) (if lastApplied r <? commitIndex r then commitIndex r else lastApplied r) (stateMachine r) (nextIndex r) (matchIndex r) (shouldSend r) (votesReceived r) (type r) (clientCache r) (electoralVictories r), []) Heq : applyEntries h st (rev (filter (fun x : entry => (lastApplied st <? eIndex x) && (eIndex x <=? commitIndex st)) (findGtIndex (log st) (lastApplied st)))) = (os, r) Unable to unify \"currentTerm st\" with \"currentTerm r\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros h st os st' ms H. unfold doGenericServer in H. destruct (applyEntries h st (rev (filter (fun x => (lastApplied st <? eIndex x) && (eIndex x <=? commitIndex st)) (findGtIndex (log st) (lastApplied st))))) eqn:Heq. inversion H; subst. simpl. reflexivity.", "back_times": 0, "succ": false, "time": 213.56805229187012}]