[{"history": {"proof": "intros pDst t cid lli llt d d' m H. unfold handleRequestVote in H. destruct (t <? currentTerm d) eqn:Ht. - inversion H. omega. - destruct (leaderId (advanceCurrentTerm d t)) eqn:Hlid. * destruct (moreUpToDate llt lli (maxTerm (log (advanceCurrentTerm d t))) (maxIndex (log (advanceCurrentTerm d t)))) eqn:Hup. + inversion H; subst. apply advanceCurrentTerm_currentTerm. + inversion H; subst. apply advanceCurrentTerm_currentTerm. * destruct (moreUpToDate llt lli (maxTerm (log (advanceCurrentTerm d t))) (maxIndex (log (advanceCurrentTerm d t)))) eqn:Hup. + inversion H; subst. qsimpl time: 1 use: advanceCurrentTerm_currentTerm. + inversion H; subst. apply advanceCurrentTerm_currentTerm.", "repairs": ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "cannot_unify", "", "", ""], "exceptions": [{"ctx": ["intros pDst t cid lli llt d d' m H.", "unfold handleRequestVote in H.", "destruct (t <? currentTerm d) eqn:Ht.", "-", "inversion H.", "omega.", "-", "destruct (leaderId (advanceCurrentTerm d t)) eqn:Hlid.", "*", "destruct (moreUpToDate llt lli (maxTerm (log (advanceCurrentTerm d t))) (maxIndex (log (advanceCurrentTerm d t)))) eqn:Hup.", "+", "inversion H; subst.", "apply advanceCurrentTerm_currentTerm.", "+", "inversion H; subst.", "apply advanceCurrentTerm_currentTerm.", "*", "destruct (moreUpToDate llt lli (maxTerm (log (advanceCurrentTerm d t))) (maxIndex (log (advanceCurrentTerm d t)))) eqn:Hup.", "+", "inversion H; subst."], "tactic": "apply advanceCurrentTerm_currentTerm.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params pDst : name t : nat cid : fin N lli, llt : nat d : RaftState.raft_data term name entry logIndex serverType data clientId output d' : raft_data m : msg Ht : (t <? currentTerm d) = false Hlid : leaderId (advanceCurrentTerm d t) = None Hup : moreUpToDate llt lli (maxTerm (log (advanceCurrentTerm d t))) (maxIndex (log (advanceCurrentTerm d t))) = true H : (if true && true then match votedFor (advanceCurrentTerm d t) with | Some candidateId' => (advanceCurrentTerm d t, RequestVoteReply (currentTerm (advanceCurrentTerm d t)) (if fin_eq_dec N cid candidateId' then true else false)) | None => ({[advanceCurrentTerm d t with votedFor := Some cid]}, RequestVoteReply (currentTerm (advanceCurrentTerm d t)) true) end else (advanceCurrentTerm d t, RequestVoteReply (currentTerm (advanceCurrentTerm d t)) false)) = (d', m) H1 : match votedFor (advanceCurrentTerm d t) with | Some candidateId' => (advanceCurrentTerm d t, RequestVoteReply (currentTerm (advanceCurrentTerm d t)) (if fin_eq_dec N cid candidateId' then true else false)) | None => (mkRaft_data (currentTerm (advanceCurrentTerm d t)) (Some cid) (leaderId (advanceCurrentTerm d t)) (log (advanceCurrentTerm d t)) (commitIndex (advanceCurrentTerm d t)) (lastApplied (advanceCurrentTerm d t)) (stateMachine (advanceCurrentTerm d t)) (nextIndex (advanceCurrentTerm d t)) (matchIndex (advanceCurrentTerm d t)) (shouldSend (advanceCurrentTerm d t)) (votesReceived (advanceCurrentTerm d t)) (type (advanceCurrentTerm d t)) (clientCache (advanceCurrentTerm d t)) (electoralVictories (advanceCurrentTerm d t)), RequestVoteReply (currentTerm (advanceCurrentTerm d t)) true) end = (d', m) Unable to unify \"currentTerm ?M1766 <= currentTerm (advanceCurrentTerm ?M1766 ?M1767)\" with \"currentTerm d <= currentTerm d'\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros pDst t cid lli llt d d' m H. unfold handleRequestVote in H. destruct (t <? currentTerm d) eqn:Ht. - inversion H. omega. - destruct (leaderId (advanceCurrentTerm d t)) eqn:Hlid. * destruct (moreUpToDate llt lli (maxTerm (log (advanceCurrentTerm d t))) (maxIndex (log (advanceCurrentTerm d t)))) eqn:Hup. + inversion H; subst. apply advanceCurrentTerm_currentTerm. + inversion H; subst. apply advanceCurrentTerm_currentTerm. * destruct (moreUpToDate llt lli (maxTerm (log (advanceCurrentTerm d t))) (maxIndex (log (advanceCurrentTerm d t)))) eqn:Hup. + inversion H; subst. apply advanceCurrentTerm_currentTerm. + inversion H; subst. apply advanceCurrentTerm_currentTerm.", "back_times": 0, "succ": true, "time": 2.783937692642212}]