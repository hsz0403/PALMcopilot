[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros h st d m t n pli plt es ci H.", "pose proof handleAppendEntries_type_term h st t n pli plt es ci d m H as H_type.", "pose proof handleAppendEntries_log h st t n pli plt es ci d m H as H_log.", "destruct H_type as [[H_type_st' H_type_term] | [H_type_follower H_term_ge]].", "--", "unfold matchIndex_preserved.", "intros H_lead_st'.", "split.", "++"], "tactic": "++", "exn": "Wrong bullet ++: Current bullet ++ is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros h st d m t n pli plt es ci H.", "pose proof handleAppendEntries_type_term h st t n pli plt es ci d m H as H_type.", "pose proof handleAppendEntries_log h st t n pli plt es ci d m H as H_log.", "destruct H_type as [[H_type_st' H_type_term] | [H_type_follower H_term_ge]].", "--", "unfold matchIndex_preserved.", "intros H_lead_st'.", "split.", "++", "shelve.", "++"], "tactic": ["destruct H_log as [H_log_st' | [H_ct_le [H_es_neq_nil [H_pli_eq_0 H_log_st']]]].", ""], "exn": "Expects a disjunctive pattern with 2 branches.", "type": "num_branch", "handled": false}, {"ctx": ["intros h st d m t n pli plt es ci H.", "pose proof handleAppendEntries_type_term h st t n pli plt es ci d m H as H_type.", "pose proof handleAppendEntries_log h st t n pli plt es ci d m H as H_log.", "destruct H_type as [[H_type_st' H_type_term] | [H_type_follower H_term_ge]].", "--", "unfold matchIndex_preserved.", "intros H_lead_st'.", "split.", "++", "shelve.", "++"], "tactic": "--", "exn": "Wrong bullet --: Current bullet ++ is not finished.", "type": "unfinished_bullet", "handled": true}]}, "chat": [], "original": "intros h st d m t n pli plt es ci H. pose proof handleAppendEntries_type_term h st t n pli plt es ci d m H as H_type. pose proof handleAppendEntries_log h st t n pli plt es ci d m H as H_log. destruct H_type as [[H_type_st' H_type_term] | [H_type_follower H_term_ge]]. -- unfold matchIndex_preserved. intros H_lead_st'. split. ++ auto. ++ destruct H_log as [H_log_st' | [H_ct_le [H_es_neq_nil [H_pli_eq_0 H_log_st']]]]. * split; auto. * exfalso. apply Nat.eqb_eq in H_pli_eq_0. congruence. -- unfold matchIndex_preserved. intros H_lead_st'. exfalso. congruence.", "back_times": 0, "succ": false, "time": 327.48831391334534}]