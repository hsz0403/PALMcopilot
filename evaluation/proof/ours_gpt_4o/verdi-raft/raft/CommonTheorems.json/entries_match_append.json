[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros xs ys es ple pli plt Hsorted_xs Hsorted_ys Hsorted_es Heq_xs_ys Hforall_es_ys Hforall_i Hforall_in_es HfindAtIndex Hple_eq Hpli_neq_0."], "tactic": "apply entries_match_entries_match'.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params xs, ys, es : list entry ple : entry pli : nat plt : term Hsorted_xs : sorted xs Hsorted_ys : sorted ys Hsorted_es : sorted es Heq_xs_ys : entries_match xs ys Hforall_es_ys : forall e1 e2 : entry, eIndex e1 = eIndex e2 -> eTerm e1 = eTerm e2 -> In e1 es -> In e2 ys -> (forall e3 : entry, eIndex e3 <= eIndex e1 -> In e3 es -> In e3 ys) /\\\\ (pli <> 0 -> exists e4 : entry, eIndex e4 = pli /\\\\ eTerm e4 = plt /\\\\ In e4 ys) Hforall_i : forall i : nat, pli < i <= maxIndex es -> exists e : entry, eIndex e = i /\\\\ In e es Hforall_in_es : forall e : entry, In e es -> pli < eIndex e HfindAtIndex : findAtIndex xs pli = Some ple Hple_eq : eTerm ple = plt Hpli_neq_0 : pli <> 0 Unable to unify \"entries_match' ?M1635 ?M1636 /\\\\ entries_match' ?M1636 ?M1635\" with \"forall e e' e'' : entry, eIndex e = eIndex e' -> eTerm e = eTerm e' -> In e (es ++ removeAfterIndex xs pli) -> In e' ys -> eIndex e'' <= eIndex e -> In e'' (es ++ removeAfterIndex xs pli) <-> In e'' ys\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros xs ys es ple pli plt Hsorted_xs Hsorted_ys Hsorted_es Heq_xs_ys Hforall_es_ys Hforall_i Hforall_in_es HfindAtIndex Hple_eq Hpli_neq_0.", "qsimpl time: 1 use: entries_match_entries_match'.", "split.", "-"], "tactic": "intros e e' e'' HeIndex HeTerm He_in_es H'_in_ys He''_le.", "exn": "e is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros xs ys es ple pli plt Hsorted_xs Hsorted_ys Hsorted_es Heq_xs_ys Hforall_es_ys Hforall_i Hforall_in_es HfindAtIndex Hple_eq Hpli_neq_0.", "qsimpl time: 1 use: entries_match_entries_match'.", "split.", "-"], "tactic": "intros e''' e' e'' HeIndex HeTerm He_in_es H'_in_ys He''_le.", "exn": "e' is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros xs ys es ple pli plt Hsorted_xs Hsorted_ys Hsorted_es Heq_xs_ys Hforall_es_ys Hforall_i Hforall_in_es HfindAtIndex Hple_eq Hpli_neq_0.", "qsimpl time: 1 use: entries_match_entries_match'.", "split.", "-"], "tactic": "intros e''' e'''' e'' HeIndex HeTerm He_in_es H'_in_ys He''_le.", "exn": "e'' is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros xs ys es ple pli plt Hsorted_xs Hsorted_ys Hsorted_es Heq_xs_ys Hforall_es_ys Hforall_i Hforall_in_es HfindAtIndex Hple_eq Hpli_neq_0.", "qsimpl time: 1 use: entries_match_entries_match'.", "split.", "-"], "tactic": "intros e''' e'''' e''''' HeIndex HeTerm He_in_es H'_in_ys He''_le.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros xs ys es ple pli plt Hsorted_xs Hsorted_ys Hsorted_es Heq_xs_ys Hforall_es_ys Hforall_i Hforall_in_es HfindAtIndex Hple_eq Hpli_neq_0.", "qsimpl time: 1 use: entries_match_entries_match'.", "split.", "-", "intros.", "destruct (le_gt_dec (eIndex e) pli) as [He_le_pli|He_gt_pli].", "+"], "tactic": "apply removeAfterIndex_le_In in He_le_pli.", "exn": "Unable to find an instance for the variable xs.", "type": "no_instance_var", "handled": true}, {"ctx": ["intros xs ys es ple pli plt Hsorted_xs Hsorted_ys Hsorted_es Heq_xs_ys Hforall_es_ys Hforall_i Hforall_in_es HfindAtIndex Hple_eq Hpli_neq_0.", "qsimpl time: 1 use: entries_match_entries_match'.", "split.", "-", "intros.", "destruct (le_gt_dec (eIndex e) pli) as [He_le_pli|He_gt_pli].", "+", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'."], "tactic": "apply He_le_pli in He_in_es.", "exn": "No such hypothesis: He_in_es", "type": "no_hypos", "handled": true}, {"ctx": ["intros xs ys es ple pli plt Hsorted_xs Hsorted_ys Hsorted_es Heq_xs_ys Hforall_es_ys Hforall_i Hforall_in_es HfindAtIndex Hple_eq Hpli_neq_0.", "qsimpl time: 1 use: entries_match_entries_match'.", "split.", "-", "intros.", "destruct (le_gt_dec (eIndex e) pli) as [He_le_pli|He_gt_pli].", "+", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'."], "tactic": "+", "exn": "Wrong bullet +: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros xs ys es ple pli plt Hsorted_xs Hsorted_ys Hsorted_es Heq_xs_ys Hforall_es_ys Hforall_i Hforall_in_es HfindAtIndex Hple_eq Hpli_neq_0.", "qsimpl time: 1 use: entries_match_entries_match'.", "split.", "-", "intros.", "destruct (le_gt_dec (eIndex e) pli) as [He_le_pli|He_gt_pli].", "+", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "shelve.", "+"], "tactic": "apply Hforall_es_ys with (e1:=e) (e2:=e') in He_in_es; auto.", "exn": "No such hypothesis: He_in_es", "type": "no_hypos", "handled": true}, {"ctx": ["intros xs ys es ple pli plt Hsorted_xs Hsorted_ys Hsorted_es Heq_xs_ys Hforall_es_ys Hforall_i Hforall_in_es HfindAtIndex Hple_eq Hpli_neq_0.", "qsimpl time: 1 use: entries_match_entries_match'.", "split.", "-", "intros.", "destruct (le_gt_dec (eIndex e) pli) as [He_le_pli|He_gt_pli].", "+", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "shelve.", "+"], "tactic": "qsimpl time: 1 use: in_or_app,auto,entries_match_entries_match',removeAfterIndex_le_In,all.", "exn": "The reference auto was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros xs ys es ple pli plt Hsorted_xs Hsorted_ys Hsorted_es Heq_xs_ys Hforall_es_ys Hforall_i Hforall_in_es HfindAtIndex Hple_eq Hpli_neq_0.", "qsimpl time: 1 use: entries_match_entries_match'.", "split.", "-", "intros.", "destruct (le_gt_dec (eIndex e) pli) as [He_le_pli|He_gt_pli].", "+", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "shelve.", "+", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all."], "tactic": "destruct He_in_es as [H3 _].", "exn": "The reference He_in_es was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros xs ys es ple pli plt Hsorted_xs Hsorted_ys Hsorted_es Heq_xs_ys Hforall_es_ys Hforall_i Hforall_in_es HfindAtIndex Hple_eq Hpli_neq_0.", "qsimpl time: 1 use: entries_match_entries_match'.", "split.", "-", "intros.", "destruct (le_gt_dec (eIndex e) pli) as [He_le_pli|He_gt_pli].", "+", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "shelve.", "+", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all."], "tactic": "destruct (classic (eIndex e'' > pli)) as [He''_gt_pli|He''_le_pli].", "exn": "The reference classic was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros xs ys es ple pli plt Hsorted_xs Hsorted_ys Hsorted_es Heq_xs_ys Hforall_es_ys Hforall_i Hforall_in_es HfindAtIndex Hple_eq Hpli_neq_0.", "qsimpl time: 1 use: entries_match_entries_match'.", "split.", "-", "intros.", "destruct (le_gt_dec (eIndex e) pli) as [He_le_pli|He_gt_pli].", "+", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "shelve.", "+", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "destruct (Decidable.dec_not_not (eIndex e'' > pli)) as [He''_gt_pli|He''_le_pli].", "*"], "tactic": "apply H3 in He_in_es; auto.", "exn": "No such hypothesis: He_in_es", "type": "no_hypos", "handled": true}, {"ctx": ["intros xs ys es ple pli plt Hsorted_xs Hsorted_ys Hsorted_es Heq_xs_ys Hforall_es_ys Hforall_i Hforall_in_es HfindAtIndex Hple_eq Hpli_neq_0.", "qsimpl time: 1 use: entries_match_entries_match'.", "split.", "-", "intros.", "destruct (le_gt_dec (eIndex e) pli) as [He_le_pli|He_gt_pli].", "+", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "shelve.", "+", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "destruct (Decidable.dec_not_not (eIndex e'' > pli)) as [He''_gt_pli|He''_le_pli].", "*"], "tactic": "qsimpl time: 1 use: in_or_app,auto,entries_match_entries_match',removeAfterIndex_le_In,all.", "exn": "The reference auto was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros xs ys es ple pli plt Hsorted_xs Hsorted_ys Hsorted_es Heq_xs_ys Hforall_es_ys Hforall_i Hforall_in_es HfindAtIndex Hple_eq Hpli_neq_0.", "qsimpl time: 1 use: entries_match_entries_match'.", "split.", "-", "intros.", "destruct (le_gt_dec (eIndex e) pli) as [He_le_pli|He_gt_pli].", "+", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "shelve.", "+", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "destruct (Decidable.dec_not_not (eIndex e'' > pli)) as [He''_gt_pli|He''_le_pli].", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all."], "tactic": "apply in_app_or in He_in_es.", "exn": "No such hypothesis: He_in_es", "type": "no_hypos", "handled": true}, {"ctx": ["intros xs ys es ple pli plt Hsorted_xs Hsorted_ys Hsorted_es Heq_xs_ys Hforall_es_ys Hforall_i Hforall_in_es HfindAtIndex Hple_eq Hpli_neq_0.", "qsimpl time: 1 use: entries_match_entries_match'.", "split.", "-", "intros.", "destruct (le_gt_dec (eIndex e) pli) as [He_le_pli|He_gt_pli].", "+", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "shelve.", "+", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "destruct (Decidable.dec_not_not (eIndex e'' > pli)) as [He''_gt_pli|He''_le_pli].", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all."], "tactic": "qsimpl time: 1 use: in_or_app,auto,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "exn": "The reference auto was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros xs ys es ple pli plt Hsorted_xs Hsorted_ys Hsorted_es Heq_xs_ys Hforall_es_ys Hforall_i Hforall_in_es HfindAtIndex Hple_eq Hpli_neq_0.", "qsimpl time: 1 use: entries_match_entries_match'.", "split.", "-", "intros.", "destruct (le_gt_dec (eIndex e) pli) as [He_le_pli|He_gt_pli].", "+", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "shelve.", "+", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "destruct (Decidable.dec_not_not (eIndex e'' > pli)) as [He''_gt_pli|He''_le_pli].", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all."], "tactic": "destruct He_in_es as [He_in_es|He_in_ys].", "exn": "The reference He_in_es was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros xs ys es ple pli plt Hsorted_xs Hsorted_ys Hsorted_es Heq_xs_ys Hforall_es_ys Hforall_i Hforall_in_es HfindAtIndex Hple_eq Hpli_neq_0.", "qsimpl time: 1 use: entries_match_entries_match'.", "split.", "-", "intros.", "destruct (le_gt_dec (eIndex e) pli) as [He_le_pli|He_gt_pli].", "+", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "shelve.", "+", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "destruct (Decidable.dec_not_not (eIndex e'' > pli)) as [He''_gt_pli|He''_le_pli].", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "destruct es as [es|He_in_ys].", "--"], "tactic": "--", "exn": "Wrong bullet --: Current bullet -- is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros xs ys es ple pli plt Hsorted_xs Hsorted_ys Hsorted_es Heq_xs_ys Hforall_es_ys Hforall_i Hforall_in_es HfindAtIndex Hple_eq Hpli_neq_0.", "qsimpl time: 1 use: entries_match_entries_match'.", "split.", "-", "intros.", "destruct (le_gt_dec (eIndex e) pli) as [He_le_pli|He_gt_pli].", "+", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "shelve.", "+", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "destruct (Decidable.dec_not_not (eIndex e'' > pli)) as [He''_gt_pli|He''_le_pli].", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "destruct es as [es|He_in_ys].", "--", "shelve.", "--"], "tactic": "*", "exn": "Wrong bullet *: Current bullet -- is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros xs ys es ple pli plt Hsorted_xs Hsorted_ys Hsorted_es Heq_xs_ys Hforall_es_ys Hforall_i Hforall_in_es HfindAtIndex Hple_eq Hpli_neq_0.", "qsimpl time: 1 use: entries_match_entries_match'.", "split.", "-", "intros.", "destruct (le_gt_dec (eIndex e) pli) as [He_le_pli|He_gt_pli].", "+", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "shelve.", "+", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "destruct (Decidable.dec_not_not (eIndex e'' > pli)) as [He''_gt_pli|He''_le_pli].", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "destruct es as [es|He_in_ys].", "--", "shelve.", "--", "shelve.", "*"], "tactic": "apply Hpli_neq_0 in He''_le_pli.", "exn": "No such hypothesis: He''_le_pli", "type": "no_hypos", "handled": true}, {"ctx": ["intros xs ys es ple pli plt Hsorted_xs Hsorted_ys Hsorted_es Heq_xs_ys Hforall_es_ys Hforall_i Hforall_in_es HfindAtIndex Hple_eq Hpli_neq_0.", "qsimpl time: 1 use: entries_match_entries_match'.", "split.", "-", "intros.", "destruct (le_gt_dec (eIndex e) pli) as [He_le_pli|He_gt_pli].", "+", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "shelve.", "+", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "destruct (Decidable.dec_not_not (eIndex e'' > pli)) as [He''_gt_pli|He''_le_pli].", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "destruct es as [es|He_in_ys].", "--", "shelve.", "--", "shelve.", "*"], "tactic": "qsimpl time: 1 use: in_or_app,auto,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "exn": "The reference auto was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros xs ys es ple pli plt Hsorted_xs Hsorted_ys Hsorted_es Heq_xs_ys Hforall_es_ys Hforall_i Hforall_in_es HfindAtIndex Hple_eq Hpli_neq_0.", "qsimpl time: 1 use: entries_match_entries_match'.", "split.", "-", "intros.", "destruct (le_gt_dec (eIndex e) pli) as [He_le_pli|He_gt_pli].", "+", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "shelve.", "+", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "destruct (Decidable.dec_not_not (eIndex e'' > pli)) as [He''_gt_pli|He''_le_pli].", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "destruct es as [es|He_in_ys].", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all."], "tactic": "-", "exn": "Wrong bullet -: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros xs ys es ple pli plt Hsorted_xs Hsorted_ys Hsorted_es Heq_xs_ys Hforall_es_ys Hforall_i Hforall_in_es HfindAtIndex Hple_eq Hpli_neq_0.", "qsimpl time: 1 use: entries_match_entries_match'.", "split.", "-", "intros.", "destruct (le_gt_dec (eIndex e) pli) as [He_le_pli|He_gt_pli].", "+", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "shelve.", "+", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "destruct (Decidable.dec_not_not (eIndex e'' > pli)) as [He''_gt_pli|He''_le_pli].", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "destruct es as [es|He_in_ys].", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "shelve."], "tactic": "-", "exn": "Wrong bullet -: Expecting *.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros xs ys es ple pli plt Hsorted_xs Hsorted_ys Hsorted_es Heq_xs_ys Hforall_es_ys Hforall_i Hforall_in_es HfindAtIndex Hple_eq Hpli_neq_0.", "qsimpl time: 1 use: entries_match_entries_match'.", "split.", "-", "intros.", "destruct (le_gt_dec (eIndex e) pli) as [He_le_pli|He_gt_pli].", "+", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "shelve.", "+", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "destruct (Decidable.dec_not_not (eIndex e'' > pli)) as [He''_gt_pli|He''_le_pli].", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "destruct es as [es|He_in_ys].", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "shelve.", "*"], "tactic": "intros e e' e'' HeIndex HeTerm H'in_ys He_in_es He''_le.", "exn": "e is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros xs ys es ple pli plt Hsorted_xs Hsorted_ys Hsorted_es Heq_xs_ys Hforall_es_ys Hforall_i Hforall_in_es HfindAtIndex Hple_eq Hpli_neq_0.", "qsimpl time: 1 use: entries_match_entries_match'.", "split.", "-", "intros.", "destruct (le_gt_dec (eIndex e) pli) as [He_le_pli|He_gt_pli].", "+", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "shelve.", "+", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "destruct (Decidable.dec_not_not (eIndex e'' > pli)) as [He''_gt_pli|He''_le_pli].", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "destruct es as [es|He_in_ys].", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "shelve.", "*"], "tactic": "intros e''' e' e'' HeIndex HeTerm H'in_ys He_in_es He''_le.", "exn": "e' is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros xs ys es ple pli plt Hsorted_xs Hsorted_ys Hsorted_es Heq_xs_ys Hforall_es_ys Hforall_i Hforall_in_es HfindAtIndex Hple_eq Hpli_neq_0.", "qsimpl time: 1 use: entries_match_entries_match'.", "split.", "-", "intros.", "destruct (le_gt_dec (eIndex e) pli) as [He_le_pli|He_gt_pli].", "+", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "shelve.", "+", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "destruct (Decidable.dec_not_not (eIndex e'' > pli)) as [He''_gt_pli|He''_le_pli].", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "destruct es as [es|He_in_ys].", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "shelve.", "*"], "tactic": "intros e''' e'''' e'' HeIndex HeTerm H'in_ys He_in_es He''_le.", "exn": "e'' is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros xs ys es ple pli plt Hsorted_xs Hsorted_ys Hsorted_es Heq_xs_ys Hforall_es_ys Hforall_i Hforall_in_es HfindAtIndex Hple_eq Hpli_neq_0.", "qsimpl time: 1 use: entries_match_entries_match'.", "split.", "-", "intros.", "destruct (le_gt_dec (eIndex e) pli) as [He_le_pli|He_gt_pli].", "+", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "shelve.", "+", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "destruct (Decidable.dec_not_not (eIndex e'' > pli)) as [He''_gt_pli|He''_le_pli].", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "destruct es as [es|He_in_ys].", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "shelve.", "*"], "tactic": "intros e''' e'''' e''''' HeIndex HeTerm H'in_ys He_in_es He''_le.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros xs ys es ple pli plt Hsorted_xs Hsorted_ys Hsorted_es Heq_xs_ys Hforall_es_ys Hforall_i Hforall_in_es HfindAtIndex Hple_eq Hpli_neq_0.", "qsimpl time: 1 use: entries_match_entries_match'.", "split.", "-", "intros.", "destruct (le_gt_dec (eIndex e) pli) as [He_le_pli|He_gt_pli].", "+", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "shelve.", "+", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "destruct (Decidable.dec_not_not (eIndex e'' > pli)) as [He''_gt_pli|He''_le_pli].", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "destruct es as [es|He_in_ys].", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "shelve.", "*"], "tactic": "apply in_or_app.", "exn": "In environment X : forall A : Type, (A -> Prop) -> Prop orig_base_params : BaseParams raft_params : RaftParams orig_base_params H12 : forall (xs : list entry) (i : nat) (x : entry), eIndex x <= i -> In x xs -> In x (removeAfterIndex xs i) xs, ys, es : list entry ple : entry pli : nat Hsorted_xs : sorted xs Hsorted_ys : sorted ys Hsorted_es : sorted es Heq_xs_ys : entries_match xs ys Hforall_in_es : forall e : entry, In e es -> pli < eIndex e HfindAtIndex : findAtIndex xs pli = Some ple Hpli_neq_0 : pli = 0 -> False H0 : forall i : nat, pli < i -> i <= maxIndex es -> exists e : entry, eIndex e = i /\\\\ In e es H1 : forall e1 e2 : entry, eIndex e1 = eIndex e2 -> eTerm e1 = eTerm e2 -> In e1 es -> In e2 ys -> (pli = 0 -> False) -> exists e4 : entry, eIndex e4 = pli /\\\\ eTerm e4 = eTerm ple /\\\\ In e4 ys H2 : forall e1 e2 : entry, eIndex e1 = eIndex e2 -> eTerm e1 = eTerm e2 -> In e1 es -> In e2 ys -> forall e3 : entry, eIndex e3 <= eIndex e1 -> In e3 es -> In e3 ys H : forall xs ys : list entry, entries_match xs ys -> entries_match' ys xs H3 : forall xs ys : list entry, entries_match xs ys -> entries_match' xs ys init : data handler : input -> data -> output * data e, e', e'' : entry H4 : eIndex e = eIndex e' H5 : eTerm e = eTerm e' H6 : In e (es ++ removeAfterIndex xs pli) H7 : In e' ys H8 : S pli <= eIndex e H9 : In e'' (es ++ removeAfterIndex xs pli) He_gt_pli : eIndex e > pli H10 : forall (A : Type) (l m : list A) (a : A), In a m -> In a (l ++ m) H13 : forall (A : Type) (l m : list A) (a : A), In a l -> In a (l ++ m) Unable to unify \"(fix In (a : ?M18873) (l : list ?M18873) {struct l} : Prop := match l with | [] => False | b :: m => b = a \\\\/ In a m end) ?M18876 (?M18874 ++ ?M18875)\" with \"(fix In (a : entry) (l : list entry) {struct l} : Prop := match l with | [] => False | b :: m => b = a \\\\/ In a m end) e'' ys\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros xs ys es ple pli plt Hsorted_xs Hsorted_ys Hsorted_es Heq_xs_ys Hforall_es_ys Hforall_i Hforall_in_es HfindAtIndex Hple_eq Hpli_neq_0.", "qsimpl time: 1 use: entries_match_entries_match'.", "split.", "-", "intros.", "destruct (le_gt_dec (eIndex e) pli) as [He_le_pli|He_gt_pli].", "+", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "shelve.", "+", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "destruct (Decidable.dec_not_not (eIndex e'' > pli)) as [He''_gt_pli|He''_le_pli].", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "destruct es as [es|He_in_ys].", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "shelve.", "*"], "tactic": "qsimpl time: 1 use: in_or_app,auto,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all,contradiction.", "exn": "The reference auto was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros xs ys es ple pli plt Hsorted_xs Hsorted_ys Hsorted_es Heq_xs_ys Hforall_es_ys Hforall_i Hforall_in_es HfindAtIndex Hple_eq Hpli_neq_0.", "qsimpl time: 1 use: entries_match_entries_match'.", "split.", "-", "intros.", "destruct (le_gt_dec (eIndex e) pli) as [He_le_pli|He_gt_pli].", "+", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "shelve.", "+", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "destruct (Decidable.dec_not_not (eIndex e'' > pli)) as [He''_gt_pli|He''_le_pli].", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "destruct es as [es|He_in_ys].", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "shelve.", "*"], "tactic": "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all,contradiction.", "exn": "The reference contradiction was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros xs ys es ple pli plt Hsorted_xs Hsorted_ys Hsorted_es Heq_xs_ys Hforall_es_ys Hforall_i Hforall_in_es HfindAtIndex Hple_eq Hpli_neq_0.", "qsimpl time: 1 use: entries_match_entries_match'.", "split.", "-", "intros.", "destruct (le_gt_dec (eIndex e) pli) as [He_le_pli|He_gt_pli].", "+", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "shelve.", "+", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "destruct (Decidable.dec_not_not (eIndex e'' > pli)) as [He''_gt_pli|He''_le_pli].", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "destruct es as [es|He_in_ys].", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "shelve.", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all."], "tactic": "right.", "exn": "Not an inductive product.", "type": "not_inductive_product", "handled": true}, {"ctx": ["intros xs ys es ple pli plt Hsorted_xs Hsorted_ys Hsorted_es Heq_xs_ys Hforall_es_ys Hforall_i Hforall_in_es HfindAtIndex Hple_eq Hpli_neq_0.", "qsimpl time: 1 use: entries_match_entries_match'.", "split.", "-", "intros.", "destruct (le_gt_dec (eIndex e) pli) as [He_le_pli|He_gt_pli].", "+", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "shelve.", "+", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "destruct (Decidable.dec_not_not (eIndex e'' > pli)) as [He''_gt_pli|He''_le_pli].", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "destruct es as [es|He_in_ys].", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "shelve.", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all."], "tactic": "qsimpl time: 1 use: in_or_app,auto,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all,contradiction.", "exn": "The reference auto was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros xs ys es ple pli plt Hsorted_xs Hsorted_ys Hsorted_es Heq_xs_ys Hforall_es_ys Hforall_i Hforall_in_es HfindAtIndex Hple_eq Hpli_neq_0.", "qsimpl time: 1 use: entries_match_entries_match'.", "split.", "-", "intros.", "destruct (le_gt_dec (eIndex e) pli) as [He_le_pli|He_gt_pli].", "+", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "shelve.", "+", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "destruct (Decidable.dec_not_not (eIndex e'' > pli)) as [He''_gt_pli|He''_le_pli].", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "destruct es as [es|He_in_ys].", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "shelve.", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all."], "tactic": "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all,contradiction.", "exn": "The reference contradiction was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros xs ys es ple pli plt Hsorted_xs Hsorted_ys Hsorted_es Heq_xs_ys Hforall_es_ys Hforall_i Hforall_in_es HfindAtIndex Hple_eq Hpli_neq_0.", "qsimpl time: 1 use: entries_match_entries_match'.", "split.", "-", "intros.", "destruct (le_gt_dec (eIndex e) pli) as [He_le_pli|He_gt_pli].", "+", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "shelve.", "+", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "destruct (Decidable.dec_not_not (eIndex e'' > pli)) as [He''_gt_pli|He''_le_pli].", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "destruct es as [es|He_in_ys].", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "shelve.", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all."], "tactic": "apply Hforall_es_ys with (e1:=e') (e2:=e) in H'in_ys; auto.", "exn": "No such hypothesis: H'in_ys", "type": "no_hypos", "handled": true}, {"ctx": ["intros xs ys es ple pli plt Hsorted_xs Hsorted_ys Hsorted_es Heq_xs_ys Hforall_es_ys Hforall_i Hforall_in_es HfindAtIndex Hple_eq Hpli_neq_0.", "qsimpl time: 1 use: entries_match_entries_match'.", "split.", "-", "intros.", "destruct (le_gt_dec (eIndex e) pli) as [He_le_pli|He_gt_pli].", "+", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "shelve.", "+", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "destruct (Decidable.dec_not_not (eIndex e'' > pli)) as [He''_gt_pli|He''_le_pli].", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "destruct es as [es|He_in_ys].", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "shelve.", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all."], "tactic": "qsimpl time: 1 use: in_or_app,auto,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all,contradiction.", "exn": "The reference auto was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros xs ys es ple pli plt Hsorted_xs Hsorted_ys Hsorted_es Heq_xs_ys Hforall_es_ys Hforall_i Hforall_in_es HfindAtIndex Hple_eq Hpli_neq_0.", "qsimpl time: 1 use: entries_match_entries_match'.", "split.", "-", "intros.", "destruct (le_gt_dec (eIndex e) pli) as [He_le_pli|He_gt_pli].", "+", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "shelve.", "+", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "destruct (Decidable.dec_not_not (eIndex e'' > pli)) as [He''_gt_pli|He''_le_pli].", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "destruct es as [es|He_in_ys].", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "shelve.", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all."], "tactic": "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all,contradiction.", "exn": "The reference contradiction was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros xs ys es ple pli plt Hsorted_xs Hsorted_ys Hsorted_es Heq_xs_ys Hforall_es_ys Hforall_i Hforall_in_es HfindAtIndex Hple_eq Hpli_neq_0.", "qsimpl time: 1 use: entries_match_entries_match'.", "split.", "-", "intros.", "destruct (le_gt_dec (eIndex e) pli) as [He_le_pli|He_gt_pli].", "+", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "shelve.", "+", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "destruct (Decidable.dec_not_not (eIndex e'' > pli)) as [He''_gt_pli|He''_le_pli].", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "destruct es as [es|He_in_ys].", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "shelve.", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all."], "tactic": "destruct H'in_ys as [_ H3].", "exn": "The reference H'in_ys was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros xs ys es ple pli plt Hsorted_xs Hsorted_ys Hsorted_es Heq_xs_ys Hforall_es_ys Hforall_i Hforall_in_es HfindAtIndex Hple_eq Hpli_neq_0.", "qsimpl time: 1 use: entries_match_entries_match'.", "split.", "-", "intros.", "destruct (le_gt_dec (eIndex e) pli) as [He_le_pli|He_gt_pli].", "+", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "shelve.", "+", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "destruct (Decidable.dec_not_not (eIndex e'' > pli)) as [He''_gt_pli|He''_le_pli].", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "destruct es as [es|He_in_ys].", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "shelve.", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all."], "tactic": "destruct (classic (eIndex e'' <= pli)) as [He''_le_pli|He''_gt_pli].", "exn": "The reference classic was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros xs ys es ple pli plt Hsorted_xs Hsorted_ys Hsorted_es Heq_xs_ys Hforall_es_ys Hforall_i Hforall_in_es HfindAtIndex Hple_eq Hpli_neq_0.", "qsimpl time: 1 use: entries_match_entries_match'.", "split.", "-", "intros.", "destruct (le_gt_dec (eIndex e) pli) as [He_le_pli|He_gt_pli].", "+", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "shelve.", "+", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "destruct (Decidable.dec_not_not (eIndex e'' > pli)) as [He''_gt_pli|He''_le_pli].", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "destruct es as [es|He_in_ys].", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "shelve.", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "destruct (Decidable.dec_not_not (eIndex e'' <= pli)) as [He''_le_pli|He''_gt_pli]."], "tactic": "+", "exn": "Wrong bullet +: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros xs ys es ple pli plt Hsorted_xs Hsorted_ys Hsorted_es Heq_xs_ys Hforall_es_ys Hforall_i Hforall_in_es HfindAtIndex Hple_eq Hpli_neq_0.", "qsimpl time: 1 use: entries_match_entries_match'.", "split.", "-", "intros.", "destruct (le_gt_dec (eIndex e) pli) as [He_le_pli|He_gt_pli].", "+", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "shelve.", "+", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "destruct (Decidable.dec_not_not (eIndex e'' > pli)) as [He''_gt_pli|He''_le_pli].", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "destruct es as [es|He_in_ys].", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "shelve.", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "destruct (Decidable.dec_not_not (eIndex e'' <= pli)) as [He''_le_pli|He''_gt_pli].", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve."], "tactic": "+", "exn": "Wrong bullet +: Expecting *.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros xs ys es ple pli plt Hsorted_xs Hsorted_ys Hsorted_es Heq_xs_ys Hforall_es_ys Hforall_i Hforall_in_es HfindAtIndex Hple_eq Hpli_neq_0.", "qsimpl time: 1 use: entries_match_entries_match'.", "split.", "-", "intros.", "destruct (le_gt_dec (eIndex e) pli) as [He_le_pli|He_gt_pli].", "+", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "shelve.", "+", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "destruct (Decidable.dec_not_not (eIndex e'' > pli)) as [He''_gt_pli|He''_le_pli].", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "destruct es as [es|He_in_ys].", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "shelve.", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "destruct (Decidable.dec_not_not (eIndex e'' <= pli)) as [He''_le_pli|He''_gt_pli].", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*"], "tactic": "apply removeAfterIndex_le_In in He''_le_pli.", "exn": "Unable to apply lemma of type \"forall (xs : list entry) (i : nat) (x : entry), eIndex x <= i -> In x xs -> In x (removeAfterIndex xs i)\" on hypothesis of type \"nat\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["intros xs ys es ple pli plt Hsorted_xs Hsorted_ys Hsorted_es Heq_xs_ys Hforall_es_ys Hforall_i Hforall_in_es HfindAtIndex Hple_eq Hpli_neq_0.", "qsimpl time: 1 use: entries_match_entries_match'.", "split.", "-", "intros.", "destruct (le_gt_dec (eIndex e) pli) as [He_le_pli|He_gt_pli].", "+", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "shelve.", "+", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "destruct (Decidable.dec_not_not (eIndex e'' > pli)) as [He''_gt_pli|He''_le_pli].", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "destruct es as [es|He_in_ys].", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "shelve.", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "destruct (Decidable.dec_not_not (eIndex e'' <= pli)) as [He''_le_pli|He''_gt_pli].", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*"], "tactic": "qsimpl time: 1 use: in_or_app,auto,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all,contradiction.", "exn": "The reference auto was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros xs ys es ple pli plt Hsorted_xs Hsorted_ys Hsorted_es Heq_xs_ys Hforall_es_ys Hforall_i Hforall_in_es HfindAtIndex Hple_eq Hpli_neq_0.", "qsimpl time: 1 use: entries_match_entries_match'.", "split.", "-", "intros.", "destruct (le_gt_dec (eIndex e) pli) as [He_le_pli|He_gt_pli].", "+", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "shelve.", "+", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "destruct (Decidable.dec_not_not (eIndex e'' > pli)) as [He''_gt_pli|He''_le_pli].", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "destruct es as [es|He_in_ys].", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "shelve.", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "destruct (Decidable.dec_not_not (eIndex e'' <= pli)) as [He''_le_pli|He''_gt_pli].", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*"], "tactic": "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all,contradiction.", "exn": "The reference contradiction was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros xs ys es ple pli plt Hsorted_xs Hsorted_ys Hsorted_es Heq_xs_ys Hforall_es_ys Hforall_i Hforall_in_es HfindAtIndex Hple_eq Hpli_neq_0.", "qsimpl time: 1 use: entries_match_entries_match'.", "split.", "-", "intros.", "destruct (le_gt_dec (eIndex e) pli) as [He_le_pli|He_gt_pli].", "+", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "shelve.", "+", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "destruct (Decidable.dec_not_not (eIndex e'' > pli)) as [He''_gt_pli|He''_le_pli].", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "destruct es as [es|He_in_ys].", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "shelve.", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "destruct (Decidable.dec_not_not (eIndex e'' <= pli)) as [He''_le_pli|He''_gt_pli].", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all."], "tactic": "apply He''_le_pli in H'in_ys.", "exn": "No such hypothesis: H'in_ys", "type": "no_hypos", "handled": true}, {"ctx": ["intros xs ys es ple pli plt Hsorted_xs Hsorted_ys Hsorted_es Heq_xs_ys Hforall_es_ys Hforall_i Hforall_in_es HfindAtIndex Hple_eq Hpli_neq_0.", "qsimpl time: 1 use: entries_match_entries_match'.", "split.", "-", "intros.", "destruct (le_gt_dec (eIndex e) pli) as [He_le_pli|He_gt_pli].", "+", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "shelve.", "+", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "destruct (Decidable.dec_not_not (eIndex e'' > pli)) as [He''_gt_pli|He''_le_pli].", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "destruct es as [es|He_in_ys].", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "shelve.", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "destruct (Decidable.dec_not_not (eIndex e'' <= pli)) as [He''_le_pli|He''_gt_pli].", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all."], "tactic": "qsimpl time: 1 use: in_or_app,auto,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all,contradiction.", "exn": "The reference auto was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros xs ys es ple pli plt Hsorted_xs Hsorted_ys Hsorted_es Heq_xs_ys Hforall_es_ys Hforall_i Hforall_in_es HfindAtIndex Hple_eq Hpli_neq_0.", "qsimpl time: 1 use: entries_match_entries_match'.", "split.", "-", "intros.", "destruct (le_gt_dec (eIndex e) pli) as [He_le_pli|He_gt_pli].", "+", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "shelve.", "+", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "destruct (Decidable.dec_not_not (eIndex e'' > pli)) as [He''_gt_pli|He''_le_pli].", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "destruct es as [es|He_in_ys].", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "shelve.", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "destruct (Decidable.dec_not_not (eIndex e'' <= pli)) as [He''_le_pli|He''_gt_pli].", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all."], "tactic": "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all,contradiction.", "exn": "The reference contradiction was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros xs ys es ple pli plt Hsorted_xs Hsorted_ys Hsorted_es Heq_xs_ys Hforall_es_ys Hforall_i Hforall_in_es HfindAtIndex Hple_eq Hpli_neq_0.", "qsimpl time: 1 use: entries_match_entries_match'.", "split.", "-", "intros.", "destruct (le_gt_dec (eIndex e) pli) as [He_le_pli|He_gt_pli].", "+", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "shelve.", "+", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "destruct (Decidable.dec_not_not (eIndex e'' > pli)) as [He''_gt_pli|He''_le_pli].", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "destruct es as [es|He_in_ys].", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "shelve.", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "destruct (Decidable.dec_not_not (eIndex e'' <= pli)) as [He''_le_pli|He''_gt_pli].", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all."], "tactic": "+", "exn": "Wrong bullet +: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros xs ys es ple pli plt Hsorted_xs Hsorted_ys Hsorted_es Heq_xs_ys Hforall_es_ys Hforall_i Hforall_in_es HfindAtIndex Hple_eq Hpli_neq_0.", "qsimpl time: 1 use: entries_match_entries_match'.", "split.", "-", "intros.", "destruct (le_gt_dec (eIndex e) pli) as [He_le_pli|He_gt_pli].", "+", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "qsimpl time: 1 use: removeAfterIndex_le_In,entries_match_entries_match'.", "shelve.", "+", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "destruct (Decidable.dec_not_not (eIndex e'' > pli)) as [He''_gt_pli|He''_le_pli].", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "destruct es as [es|He_in_ys].", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "shelve.", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "destruct (Decidable.dec_not_not (eIndex e'' <= pli)) as [He''_le_pli|He''_gt_pli].", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "qsimpl time: 1 use: in_or_app,entries_match_entries_match',in_app_or,removeAfterIndex_le_In,all.", "shelve."], "tactic": "+", "exn": "Wrong bullet +: Expecting -.", "type": "wrong_bullet", "handled": true}]}, "chat": [], "original": "intros xs ys es ple pli plt Hsorted_xs Hsorted_ys Hsorted_es Heq_xs_ys Hforall_es_ys Hforall_i Hforall_in_es HfindAtIndex Hple_eq Hpli_neq_0. apply entries_match_entries_match'. split. - intros e e' e'' HeIndex HeTerm He_in_es H'_in_ys He''_le. destruct (le_gt_dec (eIndex e) pli) as [He_le_pli|He_gt_pli]. + apply removeAfterIndex_le_In in He_le_pli. apply He_le_pli in He_in_es. apply Heq_xs_ys with e e' e''; auto. all: try (apply in_or_app; auto). + apply Hforall_es_ys with (e1:=e) (e2:=e') in He_in_es; auto. destruct He_in_es as [H3 _]. destruct (classic (eIndex e'' > pli)) as [He''_gt_pli|He''_le_pli]. * apply H3 in He_in_es; auto. apply in_app_or in He_in_es. destruct He_in_es as [He_in_es|He_in_ys]. -- apply Heq_xs_ys with e e' e''; auto. apply in_or_app; auto. -- auto. * apply Hpli_neq_0 in He''_le_pli. contradiction. - intros e e' e'' HeIndex HeTerm H'in_ys He_in_es He''_le. apply in_or_app. right. apply Hforall_es_ys with (e1:=e') (e2:=e) in H'in_ys; auto. destruct H'in_ys as [_ H3]. destruct (classic (eIndex e'' <= pli)) as [He''_le_pli|He''_gt_pli]. + apply removeAfterIndex_le_In in He''_le_pli. apply He''_le_pli in H'in_ys. apply Heq_xs_ys with e' e e''; auto. + apply H3 with e''; auto. apply in_app_iff; left; auto.", "back_times": 0, "succ": false, "time": 135.16731977462769}]