[{"history": {"proof": "intros h st client id c. unfold update_elections_data_client_request, votesWithLog. case_eq (handleClientRequest h (snd st) client id c). intros. qsimpl time: 1 use: votes_update_elections_data_client_request.", "repairs": ["", "", "", "no_product", "no_subterm"], "exceptions": [{"ctx": ["intros h st client id c.", "unfold update_elections_data_client_request, votesWithLog.", "case_eq (handleClientRequest h (snd st) client id c)."], "tactic": "intros out st' ps Heq.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros h st client id c.", "unfold update_elections_data_client_request, votesWithLog.", "case_eq (handleClientRequest h (snd st) client id c).", "intros."], "tactic": "rewrite votes_update_elections_data_client_request.", "exn": "Found no subterm matching \"votes (update_elections_data_client_request ?M1640 ?M1641 ?M1642 ?M1643 ?M1644)\" in the current goal.", "type": "no_subterm", "handled": true}, {"ctx": ["intros h st client id c.", "unfold update_elections_data_client_request, votesWithLog.", "case_eq (handleClientRequest h (snd st) client id c).", "intros.", "qsimpl time: 1 use: votes_update_elections_data_client_request."], "tactic": "assert (Hs: log (snd st) = log st' \\/ exists e, log st' = e :: log (snd st)).", "exn": "No such goal.", "type": "no_goal", "handled": true}]}, "chat": [], "original": "intros h st client id c. unfold update_elections_data_client_request, votesWithLog. simpl. case_eq (handleClientRequest h (snd st) client id c). intros out st' ps Heq. rewrite votes_update_elections_data_client_request. assert (Hs: log (snd st) = log st' \\/ exists e, log st' = e :: log (snd st)). - apply handleClientRequest_log with (h := h) (st := snd st) (client := client) (id := id) (c := c) (out := out) (st' := st') (ps := ps) in Heq. destruct Heq as [_ [Heq' | Hex]]. + left. apply Heq'. + right. apply Hex. destruct Hs as [Hlog | [e [Hlog _]]]. + rewrite Hlog. destruct (PeanoNat.Nat.ltb_Sn_le (length (log (snd st))) (length (log st'))) eqn:Hl. * apply PeanoNat.Nat.ltb_ge in Hl. omega. * reflexivity. + contradiction.", "back_times": 0, "succ": true, "time": 1.3939785957336426}]