[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl."], "tactic": "assert (NoDup (import tr)) by (apply IHtr).", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params oiai : output_implies_applied_interface aiii : applied_implies_input_interface copi : causal_order_preserved_interface iboi : input_before_output_interface oci : output_correct_interface ogii : output_greatest_id_interface n : name c : clientId n0 : nat i : input tr : list (name * (raft_input + list raft_output)) IHtr : NoDup (get_op_output_keys key (import tr)) Unable to unify \"NoDup (get_op_output_keys key (import tr))\" with \"NoDup (import tr)\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup."], "tactic": "assert (NoDup (get_op_output_keys key (import tr))) by (apply NoDup_input_import).", "exn": "In environment orig_base_params : BaseParams raft_params : RaftParams orig_base_params l : list (name * (raft_input + list raft_output)) -> list (op key) one_node_params : OneNodeParams orig_base_params n : name c : clientId n0 : nat i : input tr : list (name * (raft_input + list raft_output)) IHtr : NoDup (get_op_output_keys key (import tr)) output_greatest_id : forall (client : clientId) (id : nat) (failed : list name) (net : network) (tr : list (name * (raft_input + list raft_output))), step_failure_star step_failure_init (failed, net) tr -> key_in_output_trace client id tr -> greatest_id_for_client client id net output_correct_invariant : forall (client : clientId) (id : nat) (out : output) (failed : list name) (net : network) (tr : list (name * (raft_input + list raft_output))), step_failure_star step_failure_init (failed, net) tr -> in_output_trace client id out tr -> output_correct client id out (applied_entries (nwState net)) output_implies_input_before_output : forall (client : clientId) (id : nat) (failed : list name) (net : network) (tr : list (name * (raft_input + list raft_output))), step_failure_star step_failure_init (failed, net) tr -> key_in_output_trace client id tr -> input_before_output client id tr causal_order_preserved : forall (client : clientId) (id : nat) (client' : clientId) (id' : nat) (failed : list name) (net : network) (tr : list (name * (raft_input + list raft_output))), step_failure_star step_failure_init (failed, net) tr -> output_before_input client id client' id' tr -> entries_ordered client id client' id' net applied_implies_input : forall (client : clientId) (id : nat) (failed : list name) (net : network) (tr : list (name * (raft_input + list raft_output))) (e : entry), step_failure_star step_failure_init (failed, net) tr -> eClient e = client -> eId e = id -> applied_implies_input_state client id (eInput e) net -> in_input_trace client id (eInput e) tr output_implies_applied : forall (client : clientId) (id : nat) (failed : list name) (net : network) (tr : list (name * (raft_input + list raft_output))), step_failure_star step_failure_init (failed, net) tr -> key_in_output_trace client id tr -> in_applied_entries client id net Unable to unify \"NoDup (get_op_input_keys key (import ?M3236))\" with \"NoDup (get_op_output_keys key (import tr))\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import."], "tactic": "simpl in H1.", "exn": "No such hypothesis: H1", "type": "no_hypos", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import."], "tactic": "apply NoDup_cons.", "exn": "In environment T0 : Type orig_base_params : BaseParams raft_params : RaftParams orig_base_params H0 : forall tr : list (name * (raft_input + list raft_output)), NoDup (get_op_input_keys T0 (import tr)) X : forall K : Type, list (op K) -> list K T : Type H : forall tr : list (name * (raft_input + list raft_output)), NoDup (get_op_input_keys T (import tr)) l0 : forall K : Type, list (op K) -> list K l : list (name * (raft_input + list raft_output)) -> list (op key) one_node_params : OneNodeParams orig_base_params n : name c : clientId n0 : nat i : input tr : list (name * (raft_input + list raft_output)) IHtr : NoDup (get_op_output_keys key (import tr)) output_greatest_id : forall (client : clientId) (id : nat) (failed : list name) (net : network) (tr : list (name * (raft_input + list raft_output))), step_failure_star step_failure_init (failed, net) tr -> key_in_output_trace client id tr -> greatest_id_for_client client id net output_correct_invariant : forall (client : clientId) (id : nat) (out : output) (failed : list name) (net : network) (tr : list (name * (raft_input + list raft_output))), step_failure_star step_failure_init (failed, net) tr -> in_output_trace client id out tr -> output_correct client id out (applied_entries (nwState net)) output_implies_input_before_output : forall (client : clientId) (id : nat) (failed : list name) (net : network) (tr : list (name * (raft_input + list raft_output))), step_failure_star step_failure_init (failed, net) tr -> key_in_output_trace client id tr -> input_before_output client id tr causal_order_preserved : forall (client : clientId) (id : nat) (client' : clientId) (id' : nat) (failed : list name) (net : network) (tr : list (name * (raft_input + list raft_output))), step_failure_star step_failure_init (failed, net) tr -> output_before_input client id client' id' tr -> entries_ordered client id client' id' net applied_implies_input : forall (client : clientId) (id : nat) (failed : list name) (net : network) (tr : list (name * (raft_input + list raft_output))) (e : entry), step_failure_star step_failure_init (failed, net) tr -> eClient e = client -> eId e = id -> applied_implies_input_state client id (eInput e) net -> in_input_trace client id (eInput e) tr output_implies_applied : forall (client : clientId) (id : nat) (failed : list name) (net : network) (tr : list (name * (raft_input + list raft_output))), step_failure_star step_failure_init (failed, net) tr -> key_in_output_trace client id tr -> in_applied_entries client id net X0 : list (op T) X2 : list (op T0) Unable to unify \"NoDup (?M5007 :: ?M5008)\" with \"NoDup (l0 T (I (c, n0) :: remove op_eq_dec (I (c, n0)) (l tr)))\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_cons,NoDup_input_import,import."], "tactic": "intro H_in.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_cons,NoDup_input_import,import."], "tactic": "apply get_output_import_O in H_in.", "exn": "No such hypothesis: H_in", "type": "no_hypos", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import."], "tactic": "destruct H_in as [o H_output].", "exn": "The reference H_in was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_implies_applied_interface as [o H_output].", "exfalso."], "tactic": "apply import_get_output with (k0 := (c, id)) in H_output.", "exn": "No such hypothesis: H_output", "type": "no_hypos", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_implies_applied_interface as [o H_output].", "exfalso.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import."], "tactic": "destruct H_output as [out H_out].", "exn": "The reference H_output was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_implies_applied_interface as [o H_output].", "exfalso.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_correct_interface as [out H_out]."], "tactic": "rewrite H_out in H; discriminate.", "exn": "The reference H_out was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_implies_applied_interface as [o H_output].", "exfalso.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_correct_interface as [out H_out].", "--"], "tactic": ["apply H1.", ""], "exn": "Applied theorem does not have enough premises.", "type": "no_enough_premises", "handled": false}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_implies_applied_interface as [o H_output].", "exfalso.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_correct_interface as [out H_out].", "--"], "tactic": "+", "exn": "Wrong bullet +: Current bullet -- is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_implies_applied_interface as [o H_output].", "exfalso.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_correct_interface as [out H_out].", "--", "shelve."], "tactic": "+", "exn": "Wrong bullet +: Expecting --.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_implies_applied_interface as [o H_output].", "exfalso.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_correct_interface as [out H_out].", "--", "shelve.", "--"], "tactic": "assert (NoDup (import tr)) by (apply IHtr).", "exn": "In environment orig_base_params : BaseParams raft_params : RaftParams orig_base_params T3 : Type H8 : forall tr : list (name * (raft_input + list raft_output)), NoDup (get_op_input_keys T3 (import tr)) H7 : forall (A : Type) (x : A) (l : list A), (In x l -> False) -> NoDup l -> NoDup (x :: l) H6 : forall (tr : list (name * (raft_input + list raft_output))) (k : T3) (out : output), get_output tr k = Some out -> In (O k) (import tr) T2 : Type H5 : forall tr : list (name * (raft_input + list raft_output)), NoDup (get_op_input_keys T2 (import tr)) H3 : forall (tr : list (name * (raft_input + list raft_output))) (k : T2) (out : output), get_output tr k = Some out -> In (O k) (import tr) X3 : forall K : Type, list (op K) -> list K T1 : Type H2 : forall tr : list (name * (raft_input + list raft_output)), NoDup (get_op_input_keys T1 (import tr)) X1 : forall K : Type, list (op K) -> list K T0 : Type H0 : forall tr : list (name * (raft_input + list raft_output)), NoDup (get_op_input_keys T0 (import tr)) X : forall K : Type, list (op K) -> list K T : Type H : forall tr : list (name * (raft_input + list raft_output)), NoDup (get_op_input_keys T (import tr)) l0 : forall K : Type, list (op K) -> list K one_node_params : OneNodeParams orig_base_params n : name c : clientId n0 : nat i : input tr : list (name * (raft_input + list raft_output)) IHtr : NoDup (get_op_output_keys key (import tr)) output_greatest_id : forall (client : clientId) (id : nat) (failed : list name) (net : network) (tr : list (name * (raft_input + list raft_output))), step_failure_star step_failure_init (failed, net) tr -> key_in_output_trace client id tr -> greatest_id_for_client client id net output_correct_invariant : forall (client : clientId) (id : nat) (out : output) (failed : list name) (net : network) (tr : list (name * (raft_input + list raft_output))), step_failure_star step_failure_init (failed, net) tr -> in_output_trace client id out tr -> output_correct client id out (applied_entries (nwState net)) output_implies_input_before_output : forall (client : clientId) (id : nat) (failed : list name) (net : network) (tr : list (name * (raft_input + list raft_output))), step_failure_star step_failure_init (failed, net) tr -> key_in_output_trace client id tr -> input_before_output client id tr causal_order_preserved : forall (client : clientId) (id : nat) (client' : clientId) (id' : nat) (failed : list name) (net : network) (tr : list (name * (raft_input + list raft_output))), step_failure_star step_failure_init (failed, net) tr -> output_before_input client id client' id' tr -> entries_ordered client id client' id' net applied_implies_input : forall (client : clientId) (id : nat) (failed : list name) (net : network) (tr : list (name * (raft_input + list raft_output))) (e : entry), step_failure_star step_failure_init (failed, net) tr -> eClient e = client -> eId e = id -> applied_implies_input_state client id (eInput e) net -> in_input_trace client id (eInput e) tr output_implies_applied : forall (client : clientId) (id : nat) (failed : list name) (net : network) (tr : list (name * (raft_input + list raft_output))), step_failure_star step_failure_init (failed, net) tr -> key_in_output_trace client id tr -> in_applied_entries client id net X0 : list (op T) X2 : list (op T0) X4 : list (op T1) X6 : list (op T2) H1 : forall (tr : list (name * (raft_input + list raft_output))) (k : T3), In (O k) (import tr) -> exists o : output, get_output tr k = Some o X5 : forall K : Type, list (op K) -> list K X9 : list (op key) X10 : list (op T3) out : forall (client : clientId) (id : nat) (out : output) (failed : list Net.name) (net : network) (tr : list (Net.name * (input + list output))), step_failure_star step_failure_init (failed, net) tr -> in_output_trace client id out tr -> output_correct client id out (applied_entries (nwState net)) Unable to unify \"NoDup (get_op_output_keys key (import tr))\" with \"NoDup (import tr)\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_implies_applied_interface as [o H_output].", "exfalso.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_correct_interface as [out H_out].", "--", "shelve.", "--", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import."], "tactic": "assert (NoDup (get_op_output_keys key (import tr))) by (apply NoDup_input_import).", "exn": "In environment orig_base_params : BaseParams raft_params : RaftParams orig_base_params T4 : Type H11 : forall tr : list (name * (raft_input + list raft_output)), NoDup (get_op_input_keys T4 (import tr)) H10 : forall (A : Type) (x : A) (l : list A), (In x l -> False) -> NoDup l -> NoDup (x :: l) H9 : forall (tr : list (name * (raft_input + list raft_output))) (k : T4) (out : output), get_output tr k = Some out -> In (O k) (import tr) T3 : Type H8 : forall tr : list (name * (raft_input + list raft_output)), NoDup (get_op_input_keys T3 (import tr)) H6 : forall (tr : list (name * (raft_input + list raft_output))) (k : T3) (out : output), get_output tr k = Some out -> In (O k) (import tr) T2 : Type H5 : forall tr : list (name * (raft_input + list raft_output)), NoDup (get_op_input_keys T2 (import tr)) H3 : forall (tr : list (name * (raft_input + list raft_output))) (k : T2) (out : output), get_output tr k = Some out -> In (O k) (import tr) X3 : forall K : Type, list (op K) -> list K T1 : Type H2 : forall tr : list (name * (raft_input + list raft_output)), NoDup (get_op_input_keys T1 (import tr)) X1 : forall K : Type, list (op K) -> list K T0 : Type H0 : forall tr : list (name * (raft_input + list raft_output)), NoDup (get_op_input_keys T0 (import tr)) X : forall K : Type, list (op K) -> list K T : Type H : forall tr : list (name * (raft_input + list raft_output)), NoDup (get_op_input_keys T (import tr)) l0 : forall K : Type, list (op K) -> list K one_node_params : OneNodeParams orig_base_params n : name c : clientId n0 : nat i : input tr : list (name * (raft_input + list raft_output)) IHtr : NoDup (get_op_output_keys key (import tr)) output_greatest_id : forall (client : clientId) (id : nat) (failed : list name) (net : network) (tr : list (name * (raft_input + list raft_output))), step_failure_star step_failure_init (failed, net) tr -> key_in_output_trace client id tr -> greatest_id_for_client client id net output_correct_invariant : forall (client : clientId) (id : nat) (out : output) (failed : list name) (net : network) (tr : list (name * (raft_input + list raft_output))), step_failure_star step_failure_init (failed, net) tr -> in_output_trace client id out tr -> output_correct client id out (applied_entries (nwState net)) output_implies_input_before_output : forall (client : clientId) (id : nat) (failed : list name) (net : network) (tr : list (name * (raft_input + list raft_output))), step_failure_star step_failure_init (failed, net) tr -> key_in_output_trace client id tr -> input_before_output client id tr causal_order_preserved : forall (client : clientId) (id : nat) (client' : clientId) (id' : nat) (failed : list name) (net : network) (tr : list (name * (raft_input + list raft_output))), step_failure_star step_failure_init (failed, net) tr -> output_before_input client id client' id' tr -> entries_ordered client id client' id' net applied_implies_input : forall (client : clientId) (id : nat) (failed : list name) (net : network) (tr : list (name * (raft_input + list raft_output))) (e : entry), step_failure_star step_failure_init (failed, net) tr -> eClient e = client -> eId e = id -> applied_implies_input_state client id (eInput e) net -> in_input_trace client id (eInput e) tr output_implies_applied : forall (client : clientId) (id : nat) (failed : list name) (net : network) (tr : list (name * (raft_input + list raft_output))), step_failure_star step_failure_init (failed, net) tr -> key_in_output_trace client id tr -> in_applied_entries client id net X0 : list (op T) X2 : list (op T0) X4 : list (op T1) X6 : list (op T2) H1 : forall (tr : list (name * (raft_input + list raft_output))) (k : T3), In (O k) (import tr) -> exists o : output, get_output tr k = Some o X5 : forall K : Type, list (op K) -> list K X9 : list (op key) X10 : list (op T3) H4 : forall (tr : list (name * (raft_input + list raft_output))) (k : T4), In (O k) (import tr) -> exists o : output, get_output tr k = Some o X7 : forall K : Type, list (op K) -> list K X12 : list (op T4) Unable to unify \"NoDup (get_op_input_keys key (import ?M10758))\" with \"NoDup (get_op_output_keys key (import tr))\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_implies_applied_interface as [o H_output].", "exfalso.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_correct_interface as [out H_out].", "--", "shelve.", "--", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import."], "tactic": "apply get_op_output_keys_preserves_NoDup with (K := key) in H2.", "exn": "Unable to apply lemma of type \"forall (K : Type) (l : list (op K)), NoDup l -> NoDup (get_op_output_keys K l)\" on hypothesis of type \"forall tr : list (name * (raft_input + list raft_output)), NoDup (get_op_input_keys T1 (import tr))\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_implies_applied_interface as [o H_output].", "exfalso.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_correct_interface as [out H_out].", "--", "shelve.", "--", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,get_op_output_keys_preserves_NoDup,NoDup,NoDup_cons,NoDup_input_import,import.", "clear H1."], "tactic": "induction (dedup op_eq_dec (filterMap (fun x : raft_output => match x with | NotLeader _ _ => None | ClientResponse c id _ => Some (O (c, id)) end) l)); simpl.", "exn": "In environment orig_base_params : BaseParams raft_params : RaftParams orig_base_params T6 : Type H18 : forall tr : list (name * (raft_input + list raft_output)), NoDup (get_op_input_keys T6 (import tr)) H17 : forall (A : Type) (x : A) (l : list A), (In x l -> False) -> NoDup l -> NoDup (x :: l) l : forall K : Type, list (op K) -> list K H16 : forall (K : Type) (l0 : list (op K)), NoDup l0 -> NoDup (l K l0) H15 : forall (tr : list (name * (raft_input + list raft_output))) (k : T6) (out : output), get_output tr k = Some out -> In (O k) (import tr) T5 : Type H14 : forall tr : list (name * (raft_input + list raft_output)), NoDup (get_op_input_keys T5 (import tr)) H12 : forall (tr : list (name * (raft_input + list raft_output))) (k : T5) (out : output), get_output tr k = Some out -> In (O k) (import tr) T4 : Type H11 : forall tr : list (name * (raft_input + list raft_output)), NoDup (get_op_input_keys T4 (import tr)) H9 : forall (tr : list (name * (raft_input + list raft_output))) (k : T4) (out : output), get_output tr k = Some out -> In (O k) (import tr) T3 : Type H8 : forall tr : list (name * (raft_input + list raft_output)), NoDup (get_op_input_keys T3 (import tr)) H6 : forall (tr : list (name * (raft_input + list raft_output))) (k : T3) (out : output), get_output tr k = Some out -> In (O k) (import tr) T2 : Type H5 : forall tr : list (name * (raft_input + list raft_output)), NoDup (get_op_input_keys T2 (import tr)) H3 : forall (tr : list (name * (raft_input + list raft_output))) (k : T2) (out : output), get_output tr k = Some out -> In (O k) (import tr) X3 : forall K : Type, list (op K) -> list K T1 : Type H2 : forall tr : list (name * (raft_input + list raft_output)), NoDup (get_op_input_keys T1 (import tr)) X1 : forall K : Type, list (op K) -> list K T0 : Type H0 : forall tr : list (name * (raft_input + list raft_output)), NoDup (get_op_input_keys T0 (import tr)) X : forall K : Type, list (op K) -> list K T : Type H : forall tr : list (name * (raft_input + list raft_output)), NoDup (get_op_input_keys T (import tr)) l0 : forall K : Type, list (op K) -> list K one_node_params : OneNodeParams orig_base_params n : name c : clientId n0 : nat i : input tr : list (name * (raft_input + list raft_output)) IHtr : NoDup (get_op_output_keys key (import tr)) output_greatest_id : forall (client : clientId) (id : nat) (failed : list name) (net : network) (tr : list (name * (raft_input + list raft_output))), step_failure_star step_failure_init (failed, net) tr -> key_in_output_trace client id tr -> greatest_id_for_client client id net output_correct_invariant : forall (client : clientId) (id : nat) (out : output) (failed : list name) (net : network) (tr : list (name * (raft_input + list raft_output))), step_failure_star step_failure_init (failed, net) tr -> in_output_trace client id out tr -> output_correct client id out (applied_entries (nwState net)) output_implies_input_before_output : forall (client : clientId) (id : nat) (failed : list name) (net : network) (tr : list (name * (raft_input + list raft_output))), step_failure_star step_failure_init (failed, net) tr -> key_in_output_trace client id tr -> input_before_output client id tr causal_order_preserved : forall (client : clientId) (id : nat) (client' : clientId) (id' : nat) (failed : list name) (net : network) (tr : list (name * (raft_input + list raft_output))), step_failure_star step_failure_init (failed, net) tr -> output_before_input client id client' id' tr -> entries_ordered client id client' id' net applied_implies_input : forall (client : clientId) (id : nat) (failed : list name) (net : network) (tr : list (name * (raft_input + list raft_output))) (e : entry), step_failure_star step_failure_init (failed, net) tr -> eClient e = client -> eId e = id -> applied_implies_input_state client id (eInput e) net -> in_input_trace client id (eInput e) tr output_implies_applied : forall (client : clientId) (id : nat) (failed : list name) (net : network) (tr : list (name * (raft_input + list raft_output))), step_failure_star step_failure_init (failed, net) tr -> key_in_output_trace client id tr -> in_applied_entries client id net X0 : list (op T) X2 : list (op T0) X4 : list (op T1) X6 : list (op T2) X5 : forall K : Type, list (op K) -> list K X9 : list (op key) X10 : list (op T3) H4 : forall (tr : list (name * (raft_input + list raft_output))) (k : T4), In (O k) (import tr) -> exists o : output, get_output tr k = Some o X7 : forall K : Type, list (op K) -> list K X12 : list (op T4) H7 : forall (tr : list (name * (raft_input + list raft_output))) (k : T5), In (O k) (import tr) -> exists o : output, get_output tr k = Some o X8 : forall K : Type, list (op K) -> list K X14 : list (op T5) H10 : forall (tr : list (name * (raft_input + list raft_output))) (k : T6), In (O k) (import tr) -> exists o : output, get_output tr k = Some o X15 : list (op T6) The term \"l\" has type \"forall K : Type, list (op K) -> list K\" while it is expected to have type \"list raft_output\".", "type": "wrong_type", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_implies_applied_interface as [o H_output].", "exfalso.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_correct_interface as [out H_out].", "--", "shelve.", "--", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,get_op_output_keys_preserves_NoDup,NoDup,NoDup_cons,NoDup_input_import,import.", "clear H1.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader."], "tactic": "*", "exn": "Wrong bullet *: Current bullet -- is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_implies_applied_interface as [o H_output].", "exfalso.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_correct_interface as [out H_out].", "--", "shelve.", "--", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,get_op_output_keys_preserves_NoDup,NoDup,NoDup_cons,NoDup_input_import,import.", "clear H1.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve."], "tactic": "*", "exn": "Wrong bullet *: Expecting --.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_implies_applied_interface as [o H_output].", "exfalso.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_correct_interface as [out H_out].", "--", "shelve.", "--", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,get_op_output_keys_preserves_NoDup,NoDup,NoDup_cons,NoDup_input_import,import.", "clear H1.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "--"], "tactic": "apply H2.", "exn": "In environment T2 : Type orig_base_params : BaseParams raft_params : RaftParams orig_base_params H5 : forall tr : list (name * (raft_input + list raft_output)), NoDup (get_op_input_keys T2 (import tr)) H4 : forall (A : Type) (x : A) (l : list A), (In x l -> False) -> NoDup l -> NoDup (x :: l) H3 : forall (tr : list (name * (raft_input + list raft_output))) (k : T2) (out : output), get_output tr k = Some out -> In (O k) (import tr) X3 : forall K : Type, list (op K) -> list K T1 : Type H2 : forall tr : list (name * (raft_input + list raft_output)), NoDup (get_op_input_keys T1 (import tr)) X1 : forall K : Type, list (op K) -> list K T0 : Type H0 : forall tr : list (name * (raft_input + list raft_output)), NoDup (get_op_input_keys T0 (import tr)) X : forall K : Type, list (op K) -> list K T : Type H : forall tr : list (name * (raft_input + list raft_output)), NoDup (get_op_input_keys T (import tr)) l0 : forall K : Type, list (op K) -> list K l : list (name * (raft_input + list raft_output)) -> list (op key) one_node_params : OneNodeParams orig_base_params n : name c : clientId n0 : nat i : input tr : list (name * (raft_input + list raft_output)) IHtr : NoDup (get_op_output_keys key (import tr)) output_greatest_id : forall (client : clientId) (id : nat) (failed : list name) (net : network) (tr : list (name * (raft_input + list raft_output))), step_failure_star step_failure_init (failed, net) tr -> key_in_output_trace client id tr -> greatest_id_for_client client id net output_correct_invariant : forall (client : clientId) (id : nat) (out : output) (failed : list name) (net : network) (tr : list (name * (raft_input + list raft_output))), step_failure_star step_failure_init (failed, net) tr -> in_output_trace client id out tr -> output_correct client id out (applied_entries (nwState net)) output_implies_input_before_output : forall (client : clientId) (id : nat) (failed : list name) (net : network) (tr : list (name * (raft_input + list raft_output))), step_failure_star step_failure_init (failed, net) tr -> key_in_output_trace client id tr -> input_before_output client id tr causal_order_preserved : forall (client : clientId) (id : nat) (client' : clientId) (id' : nat) (failed : list name) (net : network) (tr : list (name * (raft_input + list raft_output))), step_failure_star step_failure_init (failed, net) tr -> output_before_input client id client' id' tr -> entries_ordered client id client' id' net applied_implies_input : forall (client : clientId) (id : nat) (failed : list name) (net : network) (tr : list (name * (raft_input + list raft_output))) (e : entry), step_failure_star step_failure_init (failed, net) tr -> eClient e = client -> eId e = id -> applied_implies_input_state client id (eInput e) net -> in_input_trace client id (eInput e) tr output_implies_applied : forall (client : clientId) (id : nat) (failed : list name) (net : network) (tr : list (name * (raft_input + list raft_output))), step_failure_star step_failure_init (failed, net) tr -> key_in_output_trace client id tr -> in_applied_entries client id net X0 : list (op T) X2 : list (op T0) X4 : list (op T1) X6 : list (op T2) o : forall (client : clientId) (id : nat) (failed : list Net.name) (net : network) (tr : list (Net.name * (input + list output))), step_failure_star step_failure_init (failed, net) tr -> key_in_output_trace client id tr -> in_applied_entries client id net Unable to unify \"NoDup (get_op_input_keys T1 (import ?M18077))\" with \"NoDup (l0 T (I (c, n0) :: remove op_eq_dec (I (c, n0)) (l tr)))\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_implies_applied_interface as [o H_output].", "exfalso.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_correct_interface as [out H_out].", "--", "shelve.", "--", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,get_op_output_keys_preserves_NoDup,NoDup,NoDup_cons,NoDup_input_import,import.", "clear H1.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "--", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader."], "tactic": "*", "exn": "Wrong bullet *: Current bullet -- is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_implies_applied_interface as [o H_output].", "exfalso.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_correct_interface as [out H_out].", "--", "shelve.", "--", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,get_op_output_keys_preserves_NoDup,NoDup,NoDup_cons,NoDup_input_import,import.", "clear H1.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "--", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve."], "tactic": "*", "exn": "Wrong bullet *: Expecting +.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_implies_applied_interface as [o H_output].", "exfalso.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_correct_interface as [out H_out].", "--", "shelve.", "--", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,get_op_output_keys_preserves_NoDup,NoDup,NoDup_cons,NoDup_input_import,import.", "clear H1.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "--", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "+"], "tactic": "assert (~ In a (import tr)).", "exn": "The reference a was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_implies_applied_interface as [o H_output].", "exfalso.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_correct_interface as [out H_out].", "--", "shelve.", "--", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,get_op_output_keys_preserves_NoDup,NoDup,NoDup_cons,NoDup_input_import,import.", "clear H1.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "--", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "+"], "tactic": "intro H_in.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_implies_applied_interface as [o H_output].", "exfalso.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_correct_interface as [out H_out].", "--", "shelve.", "--", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,get_op_output_keys_preserves_NoDup,NoDup,NoDup_cons,NoDup_input_import,import.", "clear H1.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "--", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "+"], "tactic": "apply get_output_import_O in H_in.", "exn": "No such hypothesis: H_in", "type": "no_hypos", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_implies_applied_interface as [o H_output].", "exfalso.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_correct_interface as [out H_out].", "--", "shelve.", "--", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,get_op_output_keys_preserves_NoDup,NoDup,NoDup_cons,NoDup_input_import,import.", "clear H1.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "--", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "+", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader."], "tactic": "destruct H_in as [o H_output].", "exn": "The reference H_in was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_implies_applied_interface as [o H_output].", "exfalso.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_correct_interface as [out H_out].", "--", "shelve.", "--", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,get_op_output_keys_preserves_NoDup,NoDup,NoDup_cons,NoDup_input_import,import.", "clear H1.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "--", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "+", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader."], "tactic": "apply in_import_in_trace_O in H_in.", "exn": "No such hypothesis: H_in", "type": "no_hypos", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_implies_applied_interface as [o H_output].", "exfalso.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_correct_interface as [out H_out].", "--", "shelve.", "--", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,get_op_output_keys_preserves_NoDup,NoDup,NoDup_cons,NoDup_input_import,import.", "clear H1.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "--", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "+", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,id,NotLeader."], "tactic": "destruct H_in as [os' [h' [H_in_os H_some]]].", "exn": "The reference H_in was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_implies_applied_interface as [o H_output].", "exfalso.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_correct_interface as [out H_out].", "--", "shelve.", "--", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,get_op_output_keys_preserves_NoDup,NoDup,NoDup_cons,NoDup_input_import,import.", "clear H1.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "--", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "+", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,id,NotLeader."], "tactic": "apply (dedup_In op_eq_dec (filterMap (fun x : raft_output => match x with | NotLeader _ _ => None | ClientResponse c id _ => Some (O (c, id)) end) l)) in H.", "exn": "In environment orig_base_params : BaseParams raft_params : RaftParams orig_base_params T2 : Type X14 : clientId -> nat -> T2 T0 : Type X7 : clientId -> nat -> T0 one_node_params : OneNodeParams orig_base_params oiai : output_implies_applied_interface aiii : applied_implies_input_interface copi : causal_order_preserved_interface iboi : input_before_output_interface oci : output_correct_interface ogii : output_greatest_id_interface n : name l : list raft_output tr : list (name * (raft_input + list raft_output)) IHtr : NoDup (get_op_output_keys key (import tr)) T : Type l1 : list (name * (raft_input + list T0)) -> list (op T) l0 : forall K : Type, list (op K) -> list K X3 : forall A : Type, (forall x y : A, {x = y} + {x = y -> False}) -> list A -> list A H3 : forall (K : Type) (l : list (op K)), NoDup l -> NoDup (get_op_output_keys K l) H2 : forall (tr : list (name * (raft_input + list raft_output))) (k : T) (out : output), get_output tr k = Some out -> In (O k) (import tr) H1 : forall (tr : list (name * (raft_input + list raft_output))) (k : T), In (O k) (import tr) -> exists o : output, get_output tr k = Some o X2 : forall x y : op key, {x = y} + {x = y -> False} H0 : forall tr : list (name * (raft_input + list raft_output)), NoDup (get_op_input_keys key (import tr)) X1 : option ?A H : forall (A : Type) (x : A) (l : list A), (In x l -> False) -> NoDup l -> NoDup (x :: l) X : clientId -> nat -> output -> raft_output H4 : option (clientId -> nat -> output -> raft_output) H5 : op (option (clientId -> nat -> output -> raft_output)) T1 : Type X11 : list (name * (raft_input + list T2)) -> list (op T1) r : clientId -> nat -> output -> raft_output H11 : forall (tr : list (name * (raft_input + list raft_output))) (k : T1), In (O k) (import tr) -> exists (os : list raft_output) (h : name), In (h, inr os) tr /\\\\ (exists o : output, In (r (fst k) (snd k) o) os) X9 : forall K : Type, list (op K) -> list K X8 : forall A : Type, (forall x y : A, {x = y} + {x = y -> False}) -> list A -> list A H9 : forall (tr : list (name * (raft_input + list raft_output))) (k : T1) (out : output), get_output tr k = Some out -> In (O k) (import tr) H8 : forall (tr : list (name * (raft_input + list raft_output))) (k : T1), In (O k) (import tr) -> exists o : output, get_output tr k = Some o X6 : forall x y : op key, {x = y} + {x = y -> False} X4 : option T H6 : op (name * (raft_input + list raft_output) -> option (name * (raft_input + list raft_output))) H10, H12 : list (name * (raft_input + list raft_output)) X5 : raft_input -> option (name * (raft_input + list raft_output)) X0 : option (name * (raft_input + list raft_output)) The term \"filterMap (fun x : raft_output => match x with | NotLeader _ _ => None | ClientResponse c id _ => Some (O (c, id)) end) l\" has type \"list (op (clientId * nat))\" while it is expected to have type \"op key\".", "type": "wrong_type", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_implies_applied_interface as [o H_output].", "exfalso.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_correct_interface as [out H_out].", "--", "shelve.", "--", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,get_op_output_keys_preserves_NoDup,NoDup,NoDup_cons,NoDup_input_import,import.", "clear H1.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "--", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "+", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader."], "tactic": "destruct H.", "exn": "Unable to find an instance for the variables A, x, l.", "type": "no_instance_var", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_implies_applied_interface as [o H_output].", "exfalso.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_correct_interface as [out H_out].", "--", "shelve.", "--", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,get_op_output_keys_preserves_NoDup,NoDup,NoDup_cons,NoDup_input_import,import.", "clear H1.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "--", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "+", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "**"], "tactic": "simpl in H_some.", "exn": "No such hypothesis: H_some", "type": "no_hypos", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_implies_applied_interface as [o H_output].", "exfalso.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_correct_interface as [out H_out].", "--", "shelve.", "--", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,get_op_output_keys_preserves_NoDup,NoDup,NoDup_cons,NoDup_input_import,import.", "clear H1.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "--", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "+", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "**", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader."], "tactic": "destruct H_some as [o' H_some].", "exn": "The reference H_some was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_implies_applied_interface as [o H_output].", "exfalso.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_correct_interface as [out H_out].", "--", "shelve.", "--", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,get_op_output_keys_preserves_NoDup,NoDup,NoDup_cons,NoDup_input_import,import.", "clear H1.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "--", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "+", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "**", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "exfalso."], "tactic": "eapply in_map in H_in_os.", "exn": "No such hypothesis: H_in_os", "type": "no_hypos", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_implies_applied_interface as [o H_output].", "exfalso.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_correct_interface as [out H_out].", "--", "shelve.", "--", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,get_op_output_keys_preserves_NoDup,NoDup,NoDup_cons,NoDup_input_import,import.", "clear H1.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "--", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "+", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "**", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "exfalso.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader."], "tactic": "simpl in H_in_os.", "exn": "No such hypothesis: H_in_os", "type": "no_hypos", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_implies_applied_interface as [o H_output].", "exfalso.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_correct_interface as [out H_out].", "--", "shelve.", "--", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,get_op_output_keys_preserves_NoDup,NoDup,NoDup_cons,NoDup_input_import,import.", "clear H1.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "--", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "+", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "**", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "exfalso.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader."], "tactic": "apply in_filterMap in H_in_os.", "exn": "No such hypothesis: H_in_os", "type": "no_hypos", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_implies_applied_interface as [o H_output].", "exfalso.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_correct_interface as [out H_out].", "--", "shelve.", "--", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,get_op_output_keys_preserves_NoDup,NoDup,NoDup_cons,NoDup_input_import,import.", "clear H1.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "--", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "+", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "**", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "exfalso.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader."], "tactic": "destruct H_in_os as [r [H_e H_in_r]].", "exn": "The reference H_in_os was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_implies_applied_interface as [o H_output].", "exfalso.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_correct_interface as [out H_out].", "--", "shelve.", "--", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,get_op_output_keys_preserves_NoDup,NoDup,NoDup_cons,NoDup_input_import,import.", "clear H1.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "--", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "+", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "**", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "exfalso.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader."], "tactic": "apply in_filter in H_in_r.", "exn": "No such hypothesis: H_in_r", "type": "no_hypos", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_implies_applied_interface as [o H_output].", "exfalso.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_correct_interface as [out H_out].", "--", "shelve.", "--", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,get_op_output_keys_preserves_NoDup,NoDup,NoDup_cons,NoDup_input_import,import.", "clear H1.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "--", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "+", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "**", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "exfalso.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader."], "tactic": "**", "exn": "Wrong bullet **: Current bullet ** is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_implies_applied_interface as [o H_output].", "exfalso.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_correct_interface as [out H_out].", "--", "shelve.", "--", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,get_op_output_keys_preserves_NoDup,NoDup,NoDup_cons,NoDup_input_import,import.", "clear H1.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "--", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "+", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "**", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "exfalso.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "---", "shelve.", "---", "shelve.", "**"], "tactic": "assert (NoDup (remove_all op_eq_dec (a :: a0) (import tr))).", "exn": "The reference a was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_implies_applied_interface as [o H_output].", "exfalso.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_correct_interface as [out H_out].", "--", "shelve.", "--", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,get_op_output_keys_preserves_NoDup,NoDup,NoDup_cons,NoDup_input_import,import.", "clear H1.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "--", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "+", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "**", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "exfalso.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "---", "shelve.", "---", "shelve.", "**"], "tactic": "apply NoDup_permute_1 with (a :: import tr).", "exn": "The reference a was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_implies_applied_interface as [o H_output].", "exfalso.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_correct_interface as [out H_out].", "--", "shelve.", "--", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,get_op_output_keys_preserves_NoDup,NoDup,NoDup_cons,NoDup_input_import,import.", "clear H1.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "--", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "+", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "**", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "exfalso.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "---", "shelve.", "---", "shelve.", "**"], "tactic": "**", "exn": "Wrong bullet **: Current bullet ** is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_implies_applied_interface as [o H_output].", "exfalso.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_correct_interface as [out H_out].", "--", "shelve.", "--", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,get_op_output_keys_preserves_NoDup,NoDup,NoDup_cons,NoDup_input_import,import.", "clear H1.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "--", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "+", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "**", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "exfalso.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "---", "shelve.", "---", "shelve.", "**", "shelve.", "**"], "tactic": "eapply NoDup_remove; eauto.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params oiai : output_implies_applied_interface aiii : applied_implies_input_interface copi : causal_order_preserved_interface iboi : input_before_output_interface oci : output_correct_interface ogii : output_greatest_id_interface n : name l : list raft_output tr : list (name * (raft_input + list raft_output)) IHtr : NoDup (get_op_output_keys key (import tr)) Unable to unify \"NoDup (?M49249 ++ ?M49250) /\\\\ ~ In ?M49251 (?M49249 ++ ?M49250)\" with \"Type\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_implies_applied_interface as [o H_output].", "exfalso.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_correct_interface as [out H_out].", "--", "shelve.", "--", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,get_op_output_keys_preserves_NoDup,NoDup,NoDup_cons,NoDup_input_import,import.", "clear H1.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "--", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "+", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "**", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "exfalso.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "---", "shelve.", "---", "shelve.", "**", "shelve.", "**"], "tactic": "qsimpl time: 1 use: qsimpl,ClientResponse,Some,NoDup_cons,None,discriminate,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,NoDup_remove,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "exn": "The reference qsimpl was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_implies_applied_interface as [o H_output].", "exfalso.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_correct_interface as [out H_out].", "--", "shelve.", "--", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,get_op_output_keys_preserves_NoDup,NoDup,NoDup_cons,NoDup_input_import,import.", "clear H1.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "--", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "+", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "**", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "exfalso.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "---", "shelve.", "---", "shelve.", "**", "shelve.", "**"], "tactic": "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,discriminate,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,NoDup_remove,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "exn": "The reference discriminate was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_implies_applied_interface as [o H_output].", "exfalso.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_correct_interface as [out H_out].", "--", "shelve.", "--", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,get_op_output_keys_preserves_NoDup,NoDup,NoDup_cons,NoDup_input_import,import.", "clear H1.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "--", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "+", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "**", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "exfalso.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "---", "shelve.", "---", "shelve.", "**", "shelve.", "**", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,NoDup_remove,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "--"], "tactic": "apply NoDup_cons.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params oiai : output_implies_applied_interface aiii : applied_implies_input_interface copi : causal_order_preserved_interface iboi : input_before_output_interface oci : output_correct_interface ogii : output_greatest_id_interface n : name l : list raft_output tr : list (name * (raft_input + list raft_output)) IHtr : NoDup (get_op_output_keys key (import tr)) Unable to unify \"NoDup (?M49943 :: ?M49944)\" with \"Type\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_implies_applied_interface as [o H_output].", "exfalso.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_correct_interface as [out H_out].", "--", "shelve.", "--", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,get_op_output_keys_preserves_NoDup,NoDup,NoDup_cons,NoDup_input_import,import.", "clear H1.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "--", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "+", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "**", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "exfalso.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "---", "shelve.", "---", "shelve.", "**", "shelve.", "**", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,NoDup_remove,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "--"], "tactic": "qsimpl time: 1 use: qsimpl,ClientResponse,Some,NoDup_cons,None,discriminate,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,NoDup_remove,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "exn": "The reference qsimpl was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_implies_applied_interface as [o H_output].", "exfalso.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_correct_interface as [out H_out].", "--", "shelve.", "--", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,get_op_output_keys_preserves_NoDup,NoDup,NoDup_cons,NoDup_input_import,import.", "clear H1.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "--", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "+", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "**", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "exfalso.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "---", "shelve.", "---", "shelve.", "**", "shelve.", "**", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,NoDup_remove,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "--"], "tactic": "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,discriminate,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,NoDup_remove,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "exn": "The reference discriminate was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_implies_applied_interface as [o H_output].", "exfalso.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_correct_interface as [out H_out].", "--", "shelve.", "--", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,get_op_output_keys_preserves_NoDup,NoDup,NoDup_cons,NoDup_input_import,import.", "clear H1.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "--", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "+", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "**", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "exfalso.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "---", "shelve.", "---", "shelve.", "**", "shelve.", "**", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,NoDup_remove,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "--", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,NoDup_remove,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader."], "tactic": "**", "exn": "Wrong bullet **: Current bullet -- is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_implies_applied_interface as [o H_output].", "exfalso.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_correct_interface as [out H_out].", "--", "shelve.", "--", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,get_op_output_keys_preserves_NoDup,NoDup,NoDup_cons,NoDup_input_import,import.", "clear H1.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "--", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "+", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "**", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "exfalso.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "---", "shelve.", "---", "shelve.", "**", "shelve.", "**", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,NoDup_remove,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "--", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,NoDup_remove,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve."], "tactic": "**", "exn": "Wrong bullet **: Expecting --.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_implies_applied_interface as [o H_output].", "exfalso.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_correct_interface as [out H_out].", "--", "shelve.", "--", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,get_op_output_keys_preserves_NoDup,NoDup,NoDup_cons,NoDup_input_import,import.", "clear H1.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "--", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "+", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "**", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "exfalso.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "---", "shelve.", "---", "shelve.", "**", "shelve.", "**", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,NoDup_remove,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "--", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,NoDup_remove,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "--"], "tactic": "intro H_in_remove_all.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_implies_applied_interface as [o H_output].", "exfalso.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_correct_interface as [out H_out].", "--", "shelve.", "--", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,get_op_output_keys_preserves_NoDup,NoDup,NoDup_cons,NoDup_input_import,import.", "clear H1.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "--", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "+", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "**", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "exfalso.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "---", "shelve.", "---", "shelve.", "**", "shelve.", "**", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,NoDup_remove,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "--", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,NoDup_remove,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "--"], "tactic": "apply remove_all_In in H_in_remove_all.", "exn": "No such hypothesis: H_in_remove_all", "type": "no_hypos", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_implies_applied_interface as [o H_output].", "exfalso.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_correct_interface as [out H_out].", "--", "shelve.", "--", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,get_op_output_keys_preserves_NoDup,NoDup,NoDup_cons,NoDup_input_import,import.", "clear H1.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "--", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "+", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "**", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "exfalso.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "---", "shelve.", "---", "shelve.", "**", "shelve.", "**", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,NoDup_remove,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "--", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,NoDup_remove,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "--"], "tactic": "qsimpl time: 1 use: qsimpl,ClientResponse,Some,NoDup_cons,None,discriminate,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,NoDup_remove,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "exn": "The reference qsimpl was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_implies_applied_interface as [o H_output].", "exfalso.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_correct_interface as [out H_out].", "--", "shelve.", "--", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,get_op_output_keys_preserves_NoDup,NoDup,NoDup_cons,NoDup_input_import,import.", "clear H1.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "--", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "+", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "**", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "exfalso.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "---", "shelve.", "---", "shelve.", "**", "shelve.", "**", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,NoDup_remove,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "--", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,NoDup_remove,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "--"], "tactic": "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,discriminate,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,NoDup_remove,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "exn": "The reference discriminate was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_implies_applied_interface as [o H_output].", "exfalso.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_correct_interface as [out H_out].", "--", "shelve.", "--", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,get_op_output_keys_preserves_NoDup,NoDup,NoDup_cons,NoDup_input_import,import.", "clear H1.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "--", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "+", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "**", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "exfalso.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "---", "shelve.", "---", "shelve.", "**", "shelve.", "**", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,NoDup_remove,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "--", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,NoDup_remove,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "--", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,NoDup_remove,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader."], "tactic": "**", "exn": "Wrong bullet **: Current bullet -- is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_implies_applied_interface as [o H_output].", "exfalso.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_correct_interface as [out H_out].", "--", "shelve.", "--", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,get_op_output_keys_preserves_NoDup,NoDup,NoDup_cons,NoDup_input_import,import.", "clear H1.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "--", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "+", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "**", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "exfalso.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "---", "shelve.", "---", "shelve.", "**", "shelve.", "**", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,NoDup_remove,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "--", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,NoDup_remove,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "--", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,NoDup_remove,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve."], "tactic": "**", "exn": "Wrong bullet **: Expecting --.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros tr.", "induction tr.", "-", "simpl.", "constructor.", "-", "destruct a.", "destruct s.", "+", "destruct r.", "*", "simpl.", "apply IHtr.", "*", "simpl.", "qsimpl time: 1 use: import,NoDup.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_implies_applied_interface as [o H_output].", "exfalso.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "destruct Build_output_correct_interface as [out H_out].", "--", "shelve.", "--", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,NoDup,NoDup_cons,NoDup_input_import,import.", "qsimpl time: 1 use: key,get_op_output_keys,import_get_output,id,get_output_import_O,get_op_output_keys_preserves_NoDup,NoDup,NoDup_cons,NoDup_input_import,import.", "clear H1.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "--", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "shelve.", "+", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "**", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "exfalso.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "---", "shelve.", "---", "shelve.", "**", "shelve.", "**", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,NoDup_remove,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "--", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,NoDup_remove,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "--", "qsimpl time: 1 use: ClientResponse,Some,NoDup_cons,None,NoDup_input_import,op_eq_dec,key,import_get_output,in_map,get_output_import_O,get_op_output_keys_preserves_NoDup,dedup,get_op_output_keys,NoDup_remove,in_import_in_trace_O,raft_output,O,NoDup,import,filterMap,dedup_In,id,NotLeader.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "--"], "tactic": "apply H1.", "exn": "The reference H1 was not found in the current environment.", "type": "ref_not_found", "handled": true}]}, "chat": [{"role": "user", "content": "I will give you a Coq proof state, including both hypotheses and a specific goal and your need to prove it. Your response should be a singular code block of Coq proof starting with \"```coq\n\", ending with \"Qed.```\", without any additional explanation or commentary. Follow to these guidelines:\nIntroduce variables using unique names to avoid any conflicts.\nKeep each command distinct and separated, avoid concatenations like ';' or '[cmd|cmd]'.\nOrganize your proof with bullets like '-', '+', and '*' instead of braces ({, }). Shift to their double symbols like '--' and '++', when necessary.\nEffectively use given premises, follow the syntax and structure demonstrated in the examples provided.\n\nExample 1:\n\nHypotheses:\nn, m: nat\nIHn: m + n = n + m\n\nGoal:\nm + S n = S n + m\n\nYour Response:\n```coq\nsimpl. rewrite <- IHn. auto.\nQed.```\n\nExample 2:\nHypotheses:\n\nGoal:\nforall n m : nat, m + n = n + m\n\nYour Response:\n```coq\nintros n m. induction n.\n- simpl. auto.\n- simpl. rewrite <- IHn. auto.\nQed.```\n\nSolve This Proof State:\n\nHypotheses:\norig_base_params: BaseParams\none_node_params: OneNodeParams orig_base_params\nraft_params: RaftParams orig_base_params\noiai: output_implies_applied_interface\naiii: applied_implies_input_interface\ncopi: causal_order_preserved_interface\niboi: input_before_output_interface\noci: output_correct_interface\nogii: output_greatest_id_interface\n\nGoal:\nforall tr : list (name * (raft_input + list raft_output)), NoDup (get_op_output_keys key (import tr))\n\nPremises:\nname = fun (orig_base_params : BaseParams) (raft_params : RaftParams orig_base_params) => fin N : forall orig_base_params : BaseParams, RaftParams orig_base_params -> Type Arguments name {orig_base_params raft_params}\nInductive list (A : Type) : Type := nil : list A | cons : A -> list A -> list A Arguments list _%type_scope Arguments nil {A}%type_scope Arguments cons {A}%type_scope a l%list_scope : rename\nRecord OneNodeParams (P : BaseParams) : Type := Build_OneNodeParams { init : data; handler : input -> data -> output * data } Arguments Build_OneNodeParams _ _ _%function_scope\nkey = fun (orig_base_params : BaseParams) (raft_params : RaftParams orig_base_params) => (clientId * nat)%type : forall orig_base_params : BaseParams, RaftParams orig_base_params -> Type Arguments key {orig_base_params raft_params}\nInductive raft_input (orig_base_params : BaseParams) (raft_params : RaftParams orig_base_params) : Type := Timeout : raft_input | ClientRequest : clientId -> nat -> input -> raft_input Arguments raft_input {orig_base_params raft_params} Arguments Timeout {orig_base_params raft_params} Arguments ClientRequest {orig_base_params raft_params} _ _%nat_scope\nInductive raft_output (orig_base_params : BaseParams) (raft_params : RaftParams orig_base_params) : Type := NotLeader : clientId -> nat -> raft_output | ClientResponse : clientId -> nat -> output -> raft_output Arguments raft_output {orig_base_params raft_params} Arguments NotLeader {orig_base_params raft_params} _ _%nat_scope Arguments ClientResponse {orig_base_params raft_params} _ _%nat_scope\nimport = fix import (tr : list (name * (raft_input + list raft_output))) : list (op key) := match tr with | [] => [] | (_, inl Timeout) :: xs => import xs | (_, inl (ClientRequest c id _)) :: xs => I (c, id) :: remove op_eq_dec (I (c, id)) (import xs) | (_, inr l) :: xs => let os := dedup op_eq_dec (filterMap (fun x : raft_output => match x with | NotLeader _ _ => None | ClientResponse c id _ => Some (O (c, id)) end) l) in os ++ remove_all op_eq_dec os (import xs) end : list (name * (raft_input + list raft_output)) -> list (op key)\nget_op_output_keys : forall K : Type, list (op K) -> list K\nRecord RaftParams (orig_base_params : BaseParams) : Type := Build_RaftParams { N : nat; input_eq_dec : forall x y : input, {x = y} + {x <> y}; output_eq_dec : forall x y : output, {x = y} + {x <> y}; clientId : Type; clientId_eq_dec : forall x y : clientId, {x = y} + {x <> y} } Arguments Build_RaftParams _ _%nat_scope (_ _)%function_scope [clientId]%type_scope _%function_scope\nNoDup : forall A : Type, list A -> Prop\nNoDup_input_import : forall tr : list (name * (raft_input + list raft_output)), NoDup (get_op_input_keys key (import tr))\nget_output_import_O : forall (tr : list (name * (raft_input + list raft_output))) (k : key) (out : output), get_output tr k = Some out -> In (O k) (import tr)\nimport_get_output : forall (tr : list (name * (raft_input + list raft_output))) (k : key), In (O k) (import tr) -> exists o : output, get_output tr k = Some o\ntrace_I_in_import : forall (tr : list (name * (raft_input + list raft_output))) (k : clientId * nat) (h : name) (i : input), In (h, inl (ClientRequest (fst k) (snd k) i)) tr -> In (I k) (import tr)\nin_import_in_trace_I : forall (tr : list (name * (raft_input + list raft_output))) (k : key), In (I k) (import tr) -> exists (h : name) (i : input), In (h, inl (ClientRequest (fst k) (snd k) i)) tr\nin_import_in_trace_O : forall (tr : list (name * (raft_input + list raft_output))) (k : key), In (O k) (import tr) -> exists (os : list raft_output) (h : name), In (h, inr os) tr /\\ (exists o : output, In (ClientResponse (fst k) (snd k) o) os)\ninput_before_output = fun (orig_base_params : BaseParams) (raft_params : RaftParams orig_base_params) (client : clientId) (id : nat) (tr : list (name * (raft_input + list raft_output))) => before_func (is_input_with_key client id) (is_output_with_key client id) tr : forall (orig_base_params : BaseParams) (raft_params : RaftParams orig_base_params), clientId -> nat -> list (name * (raft_input + list raft_output)) -> Prop Arguments input_before_output {orig_base_params raft_params} _ _%nat_scope _%list_scope\nkey_in_output_trace = fun (orig_base_params : BaseParams) (raft_params : RaftParams orig_base_params) (client : clientId) (id : nat) (tr : list (name * (raft_input + list raft_output))) => exists (os : list raft_output) (h : name), In (h, inr os) tr /\\ key_in_output_list client id os : forall (orig_base_params : BaseParams) (raft_params : RaftParams orig_base_params), clientId -> nat -> list (name * (raft_input + list raft_output)) -> Prop Arguments key_in_output_trace {orig_base_params raft_params} _ _%nat_scope _%list_scope\nin_input_trace = fun (orig_base_params : BaseParams) (raft_params : RaftParams orig_base_params) (client : clientId) (id : nat) (i : input) (tr : list (name * (raft_input + list raft_output))) => exists h : name, In (h, inl (ClientRequest client id i)) tr : forall (orig_base_params : BaseParams) (raft_params : RaftParams orig_base_params), clientId -> nat -> input -> list (name * (raft_input + list raft_output)) -> Prop Arguments in_input_trace {orig_base_params raft_params} _ _%nat_scope _ _%list_scope\noutput_before_input = fun (orig_base_params : BaseParams) (raft_params : RaftParams orig_base_params) (client : clientId) (id : nat) (client' : clientId) (id' : nat) (tr : list (name * (raft_input + list raft_output))) => before_func (is_output_with_key client id) (is_input_with_key client' id') tr : forall (orig_base_params : BaseParams) (raft_params : RaftParams orig_base_params), clientId -> nat -> clientId -> nat -> list (name * (raft_input + list raft_output)) -> Prop Arguments output_before_input {orig_base_params raft_params} _ _%nat_scope _ _%nat_scope _%list_scope\nin_output_trace = fun (orig_base_params : BaseParams) (raft_params : RaftParams orig_base_params) (client : clientId) (id : nat) (o : output) (tr : list (name * (raft_input + list raft_output))) => exists (os : list raft_output) (h : name), In (h, inr os) tr /\\ in_output_list client id o os : forall (orig_base_params : BaseParams) (raft_params : RaftParams orig_base_params), clientId -> nat -> output -> list (name * (raft_input + list raft_output)) -> Prop Arguments in_output_trace {orig_base_params raft_params} _ _%nat_scope _ _%list_scope\nRecord applied_implies_input_interface (orig_base_params : BaseParams) (one_node_params : OneNodeParams orig_base_params) (raft_params : RaftParams orig_base_params) : Prop := Build_applied_implies_input_interface { applied_implies_input : forall (client : clientId) (id : nat) (failed : list Net.name) (net : network) (tr : list (Net.name * (input + list output))) (e : entry), step_failure_star step_failure_init (failed, net) tr -> eClient e = client -> eId e = id -> applied_implies_input_state client id (eInput e) net -> in_input_trace client id (eInput e) tr } Arguments applied_implies_input_interface {orig_base_params one_node_params raft_params} Arguments Build_applied_implies_input_interface {orig_base_params one_node_params raft_params} _%function_scope\nget_output = fix get_output (tr : list (name * (raft_input + list raft_output))) (k : key) {struct tr} : option output := match tr with | [] => None | (_, inl _) :: xs => get_output xs k | (_, inr os) :: xs => match get_output' os k with | Some o => Some o | None => get_output xs k end end : list (name * (raft_input + list raft_output)) -> key -> option output Arguments get_output _%list_scope\nget_op_output_keys_preserves_NoDup : forall (K : Type) (l : list (op K)), NoDup l -> NoDup (get_op_output_keys K l)\napplyEntries_spec_ind : applyEntries ?h ?st ?es = (?os, ?st') -> forall P : raft_data -> Prop, (forall (d : data) (cc : list (clientId * (nat * output))), P (RaftState.set_raft_data_clientCache term name entry logIndex serverType data clientId output (RaftState.set_raft_data_stateMachine term name entry logIndex serverType data clientId output ?st d) cc)) -> P ?st' where ?es : [orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params oiai : output_implies_applied_interface aiii : applied_implies_input_interface copi : causal_order_preserved_interface iboi : input_before_output_interface oci : output_correct_interface ogii : output_greatest_id_interface |- list entry] ?h : [orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params...\nkey_in_output_trace_dec : forall (client : clientId) (id : nat) (tr : list (name * (raft_input + list raft_output))), {key_in_output_trace client id tr} + {~ key_in_output_trace client id tr}\nget_input = fix get_input (tr : list (name * (raft_input + list raft_output))) (k : key) {struct tr} : option input := match tr with | [] => None | (_, inl (ClientRequest c id cmd)) :: xs => if sumbool_and (c = fst k) (c <> fst k) (id = snd k) (id <> snd k) (clientId_eq_dec c (fst k)) (Nat.eq_dec id (snd k)) then Some cmd else get_input xs k | (_, inl Timeout) :: xs | (_, inr _) :: xs => get_input xs k end : list (name * (raft_input + list raft_output)) -> key -> option input Arguments get_input _%list_scope\nIRU_in_IR_in_log : forall (k : key) (log : list entry) (tr : list (name * (raft_input + list raft_output))), In (IRU k) (log_to_IR (get_output tr) log) -> exists e : entry, eClient e = fst k /\\ eId e = snd k /\\ get_output tr k = None /\\ In e log\nIRO_in_IR_in_log : forall (k : key) (log : list entry) (tr : list (name * (raft_input + list raft_output))), In (IRO k) (log_to_IR (get_output tr) log) -> exists (e : entry) (out : output), eClient e = fst k /\\ eId e = snd k /\\ get_output tr k = Some out /\\ In e log\nRecord input_before_output_interface (orig_base_params : BaseParams) (one_node_params : OneNodeParams orig_base_params) (raft_params : RaftParams orig_base_params) : Prop := Build_input_before_output_interface { output_implies_input_before_output : forall (client : clientId) (id : nat) (failed : list Net.name) (net : network) (tr : list (Net.name * (input + list output))), step_failure_star step_failure_init (failed, net) tr -> key_in_output_trace client id tr -> input_before_output client id tr } Arguments input_before_output_interface {orig_base_params one_node_params raft_params} Arguments Build_input_before_output_interface {orig_base_params one_node_params raft_params} _%function_scope\nRecord output_greatest_id_interface (orig_base_params : BaseParams) (one_node_params : OneNodeParams orig_base_params) (raft_params : RaftParams orig_base_params) : Prop := Build_output_greatest_id_interface { output_greatest_id : forall (client : clientId) (id : nat) (failed : list Net.name) (net : network) (tr : list (Net.name * (input + list output))), step_failure_star step_failure_init (failed, net) tr -> key_in_output_trace client id tr -> greatest_id_for_client client id net } Arguments output_greatest_id_interface {orig_base_params one_node_params raft_params} Arguments Build_output_greatest_id_interface {orig_base_params one_node_params raft_params} _%function_scope\nRecord output_implies_applied_interface (orig_base_params : BaseParams) (one_node_params : OneNodeParams orig_base_params) (raft_params : RaftParams orig_base_params) : Prop := Build_output_implies_applied_interface { output_implies_applied : forall (client : clientId) (id : nat) (failed : list Net.name) (net : network) (tr : list (Net.name * (input + list output))), step_failure_star step_failure_init (failed, net) tr -> key_in_output_trace client id tr -> in_applied_entries client id net } Arguments output_implies_applied_interface {orig_base_params one_node_params raft_params} Arguments Build_output_implies_applied_interface {orig_base_params one_node_params raft_params} _%function_scope\nRecord output_correct_interface (orig_base_params : BaseParams) (one_node_params : OneNodeParams orig_base_params) (raft_params : RaftParams orig_base_params) : Prop := Build_output_correct_interface { output_correct_invariant : forall (client : clientId) (id : nat) (out : output) (failed : list Net.name) (net : network) (tr : list (Net.name * (input + list output))), step_failure_star step_failure_init (failed, net) tr -> in_output_trace client id out tr -> output_correct client id out (applied_entries (nwState net)) } Arguments output_correct_interface {orig_base_params one_node_params raft_params} Arguments Build_output_correct_interface {orig_base_params one_node_params raft_params} _%function_scope\nRecord causal_order_preserved_interface (orig_base_params : BaseParams) (one_node_params : OneNodeParams orig_base_params) (raft_params : RaftParams orig_base_params) : Prop := Build_causal_order_preserved_interface { causal_order_preserved : forall (client : clientId) (id : nat) (client' : clientId) (id' : nat) (failed : list Net.name) (net : network) (tr : list (Net.name * (input + list output))), step_failure_star step_failure_init (failed, net) tr -> output_before_input client id client' id' tr -> entries_ordered client id client' id' net } Arguments causal_order_preserved_interface {orig_base_params one_node_params raft_params} Arguments Build_causal_order_preserved_interface {orig_base_params one_node_params raft_params} _%function_scope\nBuild_applied_implies_input_interface : (forall (client : clientId) (id : nat) (failed : list Net.name) (net : network) (tr : list (Net.name * (input + list output))) (e : entry), step_failure_star step_failure_init (failed, net) tr -> eClient e = client -> eId e = id -> applied_implies_input_state client id (eInput e) net -> in_input_trace client id (eInput e) tr) -> applied_implies_input_interface\nis_output_with_key = fun (orig_base_params : BaseParams) (raft_params : RaftParams orig_base_params) (client : clientId) (id : nat) (trace_entry : name * (raft_input + list raft_output)) => let (_, s) := trace_entry in match s with | inl _ => false | inr os => if key_in_output_list_dec client id os then true else false end : forall (orig_base_params : BaseParams) (raft_params : RaftParams orig_base_params), clientId -> nat -> name * (raft_input + list raft_output) -> bool Arguments is_output_with_key {orig_base_params raft_params} _ _%nat_scope\nexported_sind : forall (env_i : key -> option input) (env_o : key -> option output) (P : list (IR key) -> list (input * output) -> SProp), P [] [] -> (forall (k : key) (i : input) (o : output) (l : list (IR key)) (tr : list (input * output)), env_i k = Some i -> env_o k = Some o -> exported env_i env_o l tr -> P l tr -> P (IRI k :: IRO k :: l) ((i, o) :: tr)) ->...-> P l l0\nexported_ind : forall (env_i : key -> option input) (env_o : key -> option output) (P : list (IR key) -> list (input * output) -> Prop), P [] [] -> (forall (k : key) (i : input) (o : output) (l : list (IR key)) (tr : list (input * output)), env_i k = Some i -> env_o k = Some o -> exported env_i env_o l tr -> P l tr -> P (IRI k :: IRO k :: l) ((i, o) :: tr)) ->...-> P l l0\nRaftInputHandler = fun (orig_base_params : BaseParams) (one_node_params : OneNodeParams orig_base_params) (raft_params : RaftParams orig_base_params) (me : name) (inp : raft_input) (state : raft_data) => let '(handlerOut, state0, pkts) := handleInput me inp state in let '(leaderOut, state1, leaderPkts) := doLeader state0 me in let '(genericOut, state2, genericPkts) := doGenericServer me state1 in (handlerOut ++ leaderOut ++ genericOut, state2, pkts ++ leaderPkts ++ genericPkts) : forall orig_base_params : BaseParams, OneNodeParams orig_base_params -> forall raft_params : RaftParams orig_base_params, name -> raft_input -> raft_data -> list raft_output * raft_data * list (name * msg) Arguments RaftInputHandler {orig_base_params one_node_params raft_params}\nis_input_with_key = fun (orig_base_params : BaseParams) (raft_params : RaftParams orig_base_params) (client : clientId) (id : nat) (trace_entry : name * (raft_input + list raft_output)) => let (_, s) := trace_entry in match s with | inl (ClientRequest c i _) => (if clientId_eq_dec client c then true else false) && (id =? i) | _ => false end : forall (orig_base_params : BaseParams) (raft_params : RaftParams orig_base_params), clientId -> nat -> name * (raft_input + list raft_output) -> bool Arguments is_input_with_key {orig_base_params raft_params} _ _%nat_scope"}, {"role": "assistant", "content": "```coq\nintros tr.\ninduction tr.\n- simpl. constructor.\n- destruct a.\n  destruct s.\n  + destruct r.\n    * simpl. apply IHtr.\n    * simpl. assert (NoDup (import tr)) by (apply IHtr).\n      assert (NoDup (get_op_output_keys key (import tr)))\n        by (apply NoDup_input_import).\n      simpl in H1.\n      apply NoDup_cons.\n      -- intro H_in.\n         apply get_output_import_O in H_in.\n         destruct H_in as [o H_output].\n         exfalso.\n         apply import_get_output with (k0 := (c, id)) in H_output.\n         destruct H_output as [out H_out].\n         rewrite H_out in H; discriminate.\n      -- apply H1.\n  + simpl. \n    assert (NoDup (import tr)) by (apply IHtr).\n    assert (NoDup (get_op_output_keys key (import tr)))\n      by (apply NoDup_input_import).\n    apply get_op_output_keys_preserves_NoDup with (K := key)\n      in H2.\n    clear H1.\n    induction (dedup op_eq_dec (filterMap (fun x : raft_output => match x with\n        | NotLeader _ _ => None\n        | ClientResponse c id _ => Some (O (c, id))\n        end) l)); simpl.\n    * apply H2.\n    * assert (~ In a (import tr)).\n      ++ intro H_in.\n         apply get_output_import_O in H_in.\n         destruct H_in as [o H_output].\n         apply in_import_in_trace_O in H_in.\n         destruct H_in as [os' [h' [H_in_os H_some]]].\n         apply (dedup_In op_eq_dec (filterMap (fun x : raft_output => match x with\n        | NotLeader _ _ => None\n        | ClientResponse c id _ => Some (O (c, id))\n        end) l)) in H.\n         destruct H.\n           ** simpl in H_some.\n              destruct H_some as [o' H_some].\n              exfalso. eapply in_map in H_in_os. simpl in H_in_os.\n              apply in_filterMap in H_in_os. destruct H_in_os as [r [H_e H_in_r]].\n              apply in_filter in H_in_r. destruct H_in_r.\n              rewrite H1 in H_some.\n              discriminate.\n           ** auto.\n      ++ assert (NoDup (remove_all op_eq_dec (a :: a0) (import tr))).\n         -- apply NoDup_permute_1 with (a :: import tr).\n            ** eapply NoDup_remove; eauto.\n         -- apply NoDup_cons.\n            ** intro H_in_remove_all. apply remove_all_In in H_in_remove_all. contradiction. \n            ** apply H1.\nQed.\n```"}], "original": "intros tr. induction tr. - simpl. constructor. - destruct a. destruct s. + destruct r. * simpl. apply IHtr. * simpl. assert (NoDup (import tr)) by (apply IHtr). assert (NoDup (get_op_output_keys key (import tr))) by (apply NoDup_input_import). simpl in H1. apply NoDup_cons. -- intro H_in. apply get_output_import_O in H_in. destruct H_in as [o H_output]. exfalso. apply import_get_output with (k0 := (c, id)) in H_output. destruct H_output as [out H_out]. rewrite H_out in H; discriminate. -- apply H1. + simpl. assert (NoDup (import tr)) by (apply IHtr). assert (NoDup (get_op_output_keys key (import tr))) by (apply NoDup_input_import). apply get_op_output_keys_preserves_NoDup with (K := key) in H2. clear H1. induction (dedup op_eq_dec (filterMap (fun x : raft_output => match x with | NotLeader _ _ => None | ClientResponse c id _ => Some (O (c, id)) end) l)); simpl. * apply H2. * assert (~ In a (import tr)). ++ intro H_in. apply get_output_import_O in H_in. destruct H_in as [o H_output]. apply in_import_in_trace_O in H_in. destruct H_in as [os' [h' [H_in_os H_some]]]. apply (dedup_In op_eq_dec (filterMap (fun x : raft_output => match x with | NotLeader _ _ => None | ClientResponse c id _ => Some (O (c, id)) end) l)) in H. destruct H. ** simpl in H_some. destruct H_some as [o' H_some]. exfalso. eapply in_map in H_in_os. simpl in H_in_os. apply in_filterMap in H_in_os. destruct H_in_os as [r [H_e H_in_r]]. apply in_filter in H_in_r. destruct H_in_r. rewrite H1 in H_some. discriminate. ** auto. ++ assert (NoDup (remove_all op_eq_dec (a :: a0) (import tr))). -- apply NoDup_permute_1 with (a :: import tr). ** eapply NoDup_remove; eauto. -- apply NoDup_cons. ** intro H_in_remove_all. apply remove_all_In in H_in_remove_all. contradiction. ** apply H1.", "succ": false, "time": 291.5956528186798}]