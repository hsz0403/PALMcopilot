[{"history": {"proof": "intros tr tr' l tr1 Hexp Heq. qsimpl time: 1 use: get_input_tr_filterMap_trace_non_empty_out. qsimpl time: 1 use: get_input_tr_filterMap_trace_non_empty_out,get_output_tr_filterMap_trace_non_empty_out. qsimpl time: 1 use: get_input_tr_filterMap_trace_non_empty_out,get_output_tr_filterMap_trace_non_empty_out. rewrite get_input_tr_filterMap_trace_non_empty_out. rewrite get_output_tr_filterMap_trace_non_empty_out. qsimpl time: 1 use: get_input_tr_filterMap_trace_non_empty_out,get_output_tr_filterMap_trace_non_empty_out. hauto lq: on depth: 3.", "repairs": ["", "no_subterm", "no_subterm", "cannot_unify", "", "", "no_subterm", "hammer"], "exceptions": [{"ctx": ["intros tr tr' l tr1 Hexp Heq."], "tactic": "rewrite <- get_input_tr_filterMap_trace_non_empty_out with (tr := tr).", "exn": "Found no subterm matching \"get_input (filterMap trace_non_empty_out tr)\" in the current goal.", "type": "no_subterm", "handled": true}, {"ctx": ["intros tr tr' l tr1 Hexp Heq.", "qsimpl time: 1 use: get_input_tr_filterMap_trace_non_empty_out."], "tactic": "rewrite <- get_output_tr_filterMap_trace_non_empty_out with (tr := tr).", "exn": "Found no subterm matching \"get_output (filterMap trace_non_empty_out tr)\" in the current goal.", "type": "no_subterm", "handled": true}, {"ctx": ["intros tr tr' l tr1 Hexp Heq.", "qsimpl time: 1 use: get_input_tr_filterMap_trace_non_empty_out.", "qsimpl time: 1 use: get_input_tr_filterMap_trace_non_empty_out,get_output_tr_filterMap_trace_non_empty_out."], "tactic": "apply Hexp.", "exn": "In environment n : nat H1 : forall tr : list (name * (raft_input + list raft_output)), get_output tr = get_output (filterMap trace_non_empty_out tr) H0 : forall tr : list (name * (raft_input + list raft_output)), get_input tr = get_input (filterMap trace_non_empty_out tr) tr : list (name * (raft_input + list raft_output)) tr' : list (name * (raft_input + list raft_output)) l : list (IR key) tr1 : list (VarD.input * VarD.output) Hexp : exported (get_input tr') (get_output tr') l tr1 Heq : filterMap trace_non_empty_out tr = filterMap trace_non_empty_out tr' Unable to unify \"exported (get_input tr') (get_output tr') l tr1\" with \"exported (get_input tr) (get_output tr) l tr1\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros tr tr' l tr1 Hexp Heq.", "qsimpl time: 1 use: get_input_tr_filterMap_trace_non_empty_out.", "qsimpl time: 1 use: get_input_tr_filterMap_trace_non_empty_out,get_output_tr_filterMap_trace_non_empty_out.", "qsimpl time: 1 use: get_input_tr_filterMap_trace_non_empty_out,get_output_tr_filterMap_trace_non_empty_out.", "rewrite get_input_tr_filterMap_trace_non_empty_out.", "rewrite get_output_tr_filterMap_trace_non_empty_out."], "tactic": "rewrite Heq.", "exn": "Found no subterm matching \"filterMap trace_non_empty_out tr\" in the current goal.", "type": "no_subterm", "handled": true}]}, "chat": [], "original": "intros tr tr' l tr1 Hexp Heq. rewrite <- get_input_tr_filterMap_trace_non_empty_out with (tr := tr). rewrite <- get_output_tr_filterMap_trace_non_empty_out with (tr := tr). apply Hexp. rewrite get_input_tr_filterMap_trace_non_empty_out. rewrite get_output_tr_filterMap_trace_non_empty_out. rewrite Heq. reflexivity.", "back_times": 0, "succ": true, "time": 1.6416237354278564}]