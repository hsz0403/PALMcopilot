[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros net Hcommit Hsms.", "split.", "-"], "tactic": "pose proof (state_machine_safety'_invariant net) as Hinv.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params rri : raft_refinement_interface si : sorted_interface lmi : log_matching_interface smspi : state_machine_safety'interface rlmli : refined_log_matching_lemmas_interface pllsi : prevLog_leader_sublog_interface ctgt0 : current_term_gt_zero_interface lalcii : lastApplied_le_commitIndex_interface miaei : match_index_all_entries_interface lhlli : leaders_have_leaderLogs_interface lci : leader_completeness_interface lsi : leader_sublog_interface taifoli : terms_and_indices_from_one_log_interface glci : ghost_log_correct_interface lphogli : log_properties_hold_on_ghost_logs_interface glemi : ghost_log_entries_match_interface tci : transitive_commit_interface tsi : term_sanity_interface lhllsi : leaders_have_leaderLogs_strong_interface ollpti : one_leaderLog_per_term_interface rmri : raft_msg_refinement_interface net : network Hcommit : Net.name -> data Hsms : list packet gd : ghost_data d : raft_data h : name os : list raft_output d' : raft_data ms : list (name * msg) H : doLeader d h = (os, d', ms) H0 : everything net H1 : msg_refined_raft_intermediate_reachable net H2 : msg_refined_raft_intermediate_reachable {| nwPackets := Hsms; nwState := Hcommit |} H3 : nwState net h = (gd, d) H4 : forall h' : Net.name, Hcommit h' = update name_eq_dec (nwState net) h (gd, d') h' H5 : forall p : packet, In p Hsms -> In p (nwPackets net) \\\\/ In p (send_packets h (add_ghost_msg h (gd, d') ms)) The term \"net\" has type \"@network (@raft_refined_base_params orig_base_params one_node_params raft_params) (@raft_msg_refined_multi_params orig_base_params one_node_params raft_params)\" while it is expected to have type \"@network (@raft_refined_base_params orig_base_params one_node_params raft_params) (@raft_refined_multi_params orig_base_params one_node_params raft_params)\" (cannot unify \"raft_msg_refined_multi_params\" and \"raft_refined_multi_params\").", "type": "wrong_type", "handled": true}, {"ctx": ["intros net Hcommit Hsms.", "split.", "-"], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros net Hcommit Hsms.", "split.", "-", "shelve.", "-"], "tactic": "intros net0 Hreach0.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros net Hcommit Hsms.", "split.", "-", "shelve.", "-"], "tactic": "apply lower_prop with (P := state_machine_safety') in Hreach0.", "exn": "No such hypothesis: Hreach0", "type": "no_hypos", "handled": true}, {"ctx": ["intros net Hcommit Hsms.", "split.", "-", "shelve.", "-"], "tactic": "qsimpl time: 1 use: lower_prop,simulation_1,state_machine_safety,state_machine_safety',refined_raft_intermediate_reachable,msg_lift_prop_all_the_way,state_machine_safety'_invariant,qsimpl,proof.", "exn": "The reference qsimpl was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros net Hcommit Hsms.", "split.", "-", "shelve.", "-"], "tactic": "qsimpl time: 1 use: lower_prop,simulation_1,state_machine_safety,state_machine_safety',refined_raft_intermediate_reachable,msg_lift_prop_all_the_way,state_machine_safety'_invariant,proof.", "exn": "The reference proof was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros net Hcommit Hsms.", "split.", "-", "shelve.", "-"], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros net Hcommit Hsms.", "split.", "-", "shelve.", "-", "shelve."], "tactic": "-", "exn": "Wrong bullet -: No more subgoals.", "type": "no_more_subgoals", "handled": true}]}, "chat": [], "original": "intros net Hcommit Hsms. split. - pose proof (state_machine_safety'_invariant net) as Hinv. apply lower_prop with (P := state_machine_safety). intros net' Hreach. unfold state_machine_safety. pose proof (simulation_1 net') as Hsim. assert (Hreach' : refined_raft_intermediate_reachable net'). { apply msg_lift_prop_all_the_way. - intros net0 Hreach0. apply lower_prop with (P := state_machine_safety') in Hreach0. + apply Hinv in Hreach0. apply Hreach0. + apply state_machine_safety'_invariant. } apply Hsim in Hreach'; clear Hsim. pose proof (state_machine_safety'_invariant net') as Hsms'. apply Hsms' in Hreach'. clear Hsms'. destruct Hreach' as [Hhost0 Hnw0]. split; auto. - destruct Hsms as [Hhost Hnw]. split; auto.", "back_times": 0, "succ": false, "time": 135.98991441726685}]