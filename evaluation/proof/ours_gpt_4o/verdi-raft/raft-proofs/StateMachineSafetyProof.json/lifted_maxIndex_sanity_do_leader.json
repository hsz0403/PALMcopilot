[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros l x."], "tactic": ["induction l as [| a l' IH].", ""], "exn": "Expects a disjunctive pattern with 1 branch or a conjunctive pattern made of 2 patterns.", "type": "num_branch_both", "handled": false}]}, "chat": [], "original": "intros l x. induction l as [| a l' IH]. - left. simpl. auto. - simpl. destruct (le_dec a (fold_left Init.Nat.max l' x)). -- apply IH. -- right. exists a. split. ++ left. reflexivity. ++ symmetry. apply fold_left_maxmimum_increase_init with x. ** apply fold_left_maximum_le. ** apply le_n_S, le_0_n.", "back_times": 0, "succ": false, "time": 93.59433269500732}]