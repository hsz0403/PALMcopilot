[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": [], "tactic": "apply msg_refined_raft_net_invariant.", "exn": "Unable to find an instance for the variable net.", "type": "no_instance_var", "handled": true}, {"ctx": ["qsimpl time: 1 use: msg_refined_raft_net_invariant."], "tactic": "apply ghost_log_correct_invariant.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params H : forall (P : network -> Prop) (net : network), msg_refined_raft_net_invariant_init P -> msg_refined_raft_net_invariant_client_request P -> msg_refined_raft_net_invariant_timeout P -> msg_refined_raft_net_invariant_append_entries P -> msg_refined_raft_net_invariant_append_entries_reply P -> msg_refined_raft_net_invariant_request_vote P -> msg_refined_raft_net_invariant_request_vote_reply P -> msg_refined_raft_net_invariant_do_leader P -> msg_refined_raft_net_invariant_do_generic_server P -> msg_refined_raft_net_invariant_state_same_packet_subset P -> msg_refined_raft_net_invariant_reboot P -> msg_refined_raft_intermediate_reachable net -> P net entries_contiguous_nw_invariant : forall net : network, RaftRefinementInterface.refined_raft_intermediate_reachable net -> entries_contiguous_nw net entries_gt_0_nw_invariant : forall net : network, RaftRefinementInterface.refined_raft_intermediate_reachable net -> entries_gt_0_nw net entries_sorted_nw_invariant : forall net : network, RaftRefinementInterface.refined_raft_intermediate_reachable net -> entries_sorted_nw net entries_gt_0_invariant : forall net : network, RaftRefinementInterface.refined_raft_intermediate_reachable net -> entries_gt_0 net entries_contiguous_invariant : forall net : network, RaftRefinementInterface.refined_raft_intermediate_reachable net -> entries_contiguous net entries_sorted_invariant : forall net : network, RaftRefinementInterface.refined_raft_intermediate_reachable net -> entries_sorted net entries_match_invariant : forall (net : network) (h h' : name), RaftRefinementInterface.refined_raft_intermediate_reachable net -> entries_match (log (snd (nwState net h))) (log (snd (nwState net h'))) entries_match_nw_1_invariant : forall net : network, RaftRefinementInterface.refined_raft_intermediate_reachable net -> entries_match_nw_1 net entries_match_nw_host_invariant : forall net : network, RaftRefinementInterface.refined_raft_intermediate_reachable net -> entries_match_nw_host net allEntries_gt_0_invariant : forall (net : network) (h : name) (e : entry), RaftRefinementInterface.refined_raft_intermediate_reachable net -> In e (map snd (RaftRefinementInterface.allEntries (fst (nwState net h)))) -> eIndex e > 0 nextIndex_safety_invariant : forall net : network, raft_intermediate_reachable net -> nextIndex_safety net msg_refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), msg_refined_raft_net_invariant_init P -> msg_refined_raft_net_invariant_client_request' P -> msg_refined_raft_net_invariant_timeout' P -> msg_refined_raft_net_invariant_append_entries' P -> msg_refined_raft_net_invariant_append_entries_reply' P -> msg_refined_raft_net_invariant_request_vote' P -> msg_refined_raft_net_invariant_request_vote_reply' P -> msg_refined_raft_net_invariant_do_leader' P -> msg_refined_raft_net_invariant_do_generic_server' P -> msg_refined_raft_net_invariant_state_same_packet_subset' P -> msg_refined_raft_net_invariant_reboot' P -> msg_refined_raft_intermediate_reachable net -> P net msg_lift_prop : forall P : network -> Prop, (forall net : network, RaftRefinementInterface.refined_raft_intermediate_reachable net -> P net) -> forall net : network, msg_refined_raft_intermediate_reachable net -> P (mgv_deghost net) msg_lift_prop_all_the_way : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, msg_refined_raft_intermediate_reachable net -> P (deghost (mgv_deghost net)) msg_lower_prop : forall P : network -> Prop, (forall net : network, msg_refined_raft_intermediate_reachable net -> P (mgv_deghost net)) -> forall net : network, RaftRefinementInterface.refined_raft_intermediate_reachable net -> P net msg_lower_prop_all_the_way : forall P : network -> Prop, (forall net : network, msg_refined_raft_intermediate_reachable net -> P (deghost (mgv_deghost net))) -> forall net : network, raft_intermediate_reachable net -> P net msg_deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => nwState h end = nwState net h msg_simulation_1 : forall net : network, msg_refined_raft_intermediate_reachable net -> RaftRefinementInterface.refined_raft_intermediate_reachable (mgv_deghost net) Unable to unify \"packet\" with \"list packet\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: msg_refined_raft_net_invariant.", "qsimpl time: 1 use: msg_refined_raft_net_invariant,ghost_log_correct_invariant.", "-"], "tactic": "apply ghost_log_correct_invariant.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params H : forall (P : network -> Prop) (net : network), msg_refined_raft_net_invariant_init P -> msg_refined_raft_net_invariant_client_request P -> msg_refined_raft_net_invariant_timeout P -> msg_refined_raft_net_invariant_append_entries P -> msg_refined_raft_net_invariant_append_entries_reply P -> msg_refined_raft_net_invariant_request_vote P -> msg_refined_raft_net_invariant_request_vote_reply P -> msg_refined_raft_net_invariant_do_leader P -> msg_refined_raft_net_invariant_do_generic_server P -> msg_refined_raft_net_invariant_state_same_packet_subset P -> msg_refined_raft_net_invariant_reboot P -> msg_refined_raft_intermediate_reachable net -> P net entries_contiguous_nw_invariant : forall net : network, RaftRefinementInterface.refined_raft_intermediate_reachable net -> entries_contiguous_nw net entries_gt_0_nw_invariant : forall net : network, RaftRefinementInterface.refined_raft_intermediate_reachable net -> entries_gt_0_nw net entries_sorted_nw_invariant : forall net : network, RaftRefinementInterface.refined_raft_intermediate_reachable net -> entries_sorted_nw net entries_gt_0_invariant : forall net : network, RaftRefinementInterface.refined_raft_intermediate_reachable net -> entries_gt_0 net entries_contiguous_invariant : forall net : network, RaftRefinementInterface.refined_raft_intermediate_reachable net -> entries_contiguous net entries_sorted_invariant : forall net : network, RaftRefinementInterface.refined_raft_intermediate_reachable net -> entries_sorted net entries_match_invariant : forall (net : network) (h h' : name), RaftRefinementInterface.refined_raft_intermediate_reachable net -> entries_match (log (snd (nwState net h))) (log (snd (nwState net h'))) entries_match_nw_1_invariant : forall net : network, RaftRefinementInterface.refined_raft_intermediate_reachable net -> entries_match_nw_1 net entries_match_nw_host_invariant : forall net : network, RaftRefinementInterface.refined_raft_intermediate_reachable net -> entries_match_nw_host net allEntries_gt_0_invariant : forall (net : network) (h : name) (e : entry), RaftRefinementInterface.refined_raft_intermediate_reachable net -> In e (map snd (RaftRefinementInterface.allEntries (fst (nwState net h)))) -> eIndex e > 0 nextIndex_safety_invariant : forall net : network, raft_intermediate_reachable net -> nextIndex_safety net msg_refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), msg_refined_raft_net_invariant_init P -> msg_refined_raft_net_invariant_client_request' P -> msg_refined_raft_net_invariant_timeout' P -> msg_refined_raft_net_invariant_append_entries' P -> msg_refined_raft_net_invariant_append_entries_reply' P -> msg_refined_raft_net_invariant_request_vote' P -> msg_refined_raft_net_invariant_request_vote_reply' P -> msg_refined_raft_net_invariant_do_leader' P -> msg_refined_raft_net_invariant_do_generic_server' P -> msg_refined_raft_net_invariant_state_same_packet_subset' P -> msg_refined_raft_net_invariant_reboot' P -> msg_refined_raft_intermediate_reachable net -> P net msg_lift_prop : forall P : network -> Prop, (forall net : network, RaftRefinementInterface.refined_raft_intermediate_reachable net -> P net) -> forall net : network, msg_refined_raft_intermediate_reachable net -> P (mgv_deghost net) msg_lift_prop_all_the_way : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, msg_refined_raft_intermediate_reachable net -> P (deghost (mgv_deghost net)) msg_lower_prop : forall P : network -> Prop, (forall net : network, msg_refined_raft_intermediate_reachable net -> P (mgv_deghost net)) -> forall net : network, RaftRefinementInterface.refined_raft_intermediate_reachable net -> P net msg_lower_prop_all_the_way : forall P : network -> Prop, (forall net : network, msg_refined_raft_intermediate_reachable net -> P (deghost (mgv_deghost net))) -> forall net : network, raft_intermediate_reachable net -> P net msg_deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => nwState h end = nwState net h msg_simulation_1 : forall net : network, msg_refined_raft_intermediate_reachable net -> RaftRefinementInterface.refined_raft_intermediate_reachable (mgv_deghost net) H1 : forall net : network, msg_refined_raft_intermediate_reachable net -> ghost_log_correct net H0 : forall (P : network -> Prop) (net : network), msg_refined_raft_net_invariant_init P -> msg_refined_raft_net_invariant_client_request P -> msg_refined_raft_net_invariant_timeout P -> msg_refined_raft_net_invariant_append_entries P -> msg_refined_raft_net_invariant_append_entries_reply P -> msg_refined_raft_net_invariant_request_vote P -> msg_refined_raft_net_invariant_request_vote_reply P -> msg_refined_raft_net_invariant_do_leader P -> msg_refined_raft_net_invariant_do_generic_server P -> msg_refined_raft_net_invariant_state_same_packet_subset P -> msg_refined_raft_net_invariant_reboot P -> msg_refined_raft_intermediate_reachable net -> P net Unable to unify \"packet\" with \"list packet\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: msg_refined_raft_net_invariant.", "qsimpl time: 1 use: msg_refined_raft_net_invariant,ghost_log_correct_invariant.", "-", "qsimpl time: 1 use: msg_refined_raft_net_invariant,ghost_log_correct_invariant."], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["qsimpl time: 1 use: msg_refined_raft_net_invariant.", "qsimpl time: 1 use: msg_refined_raft_net_invariant,ghost_log_correct_invariant.", "-", "qsimpl time: 1 use: msg_refined_raft_net_invariant,ghost_log_correct_invariant.", "shelve.", "-"], "tactic": "apply ghost_log_correct_invariant.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params H : forall (P : network -> Prop) (net : network), msg_refined_raft_net_invariant_init P -> msg_refined_raft_net_invariant_client_request P -> msg_refined_raft_net_invariant_timeout P -> msg_refined_raft_net_invariant_append_entries P -> msg_refined_raft_net_invariant_append_entries_reply P -> msg_refined_raft_net_invariant_request_vote P -> msg_refined_raft_net_invariant_request_vote_reply P -> msg_refined_raft_net_invariant_do_leader P -> msg_refined_raft_net_invariant_do_generic_server P -> msg_refined_raft_net_invariant_state_same_packet_subset P -> msg_refined_raft_net_invariant_reboot P -> msg_refined_raft_intermediate_reachable net -> P net entries_contiguous_nw_invariant : forall net : network, RaftRefinementInterface.refined_raft_intermediate_reachable net -> entries_contiguous_nw net entries_gt_0_nw_invariant : forall net : network, RaftRefinementInterface.refined_raft_intermediate_reachable net -> entries_gt_0_nw net entries_sorted_nw_invariant : forall net : network, RaftRefinementInterface.refined_raft_intermediate_reachable net -> entries_sorted_nw net entries_gt_0_invariant : forall net : network, RaftRefinementInterface.refined_raft_intermediate_reachable net -> entries_gt_0 net entries_contiguous_invariant : forall net : network, RaftRefinementInterface.refined_raft_intermediate_reachable net -> entries_contiguous net entries_sorted_invariant : forall net : network, RaftRefinementInterface.refined_raft_intermediate_reachable net -> entries_sorted net entries_match_invariant : forall (net : network) (h h' : name), RaftRefinementInterface.refined_raft_intermediate_reachable net -> entries_match (log (snd (nwState net h))) (log (snd (nwState net h'))) entries_match_nw_1_invariant : forall net : network, RaftRefinementInterface.refined_raft_intermediate_reachable net -> entries_match_nw_1 net entries_match_nw_host_invariant : forall net : network, RaftRefinementInterface.refined_raft_intermediate_reachable net -> entries_match_nw_host net allEntries_gt_0_invariant : forall (net : network) (h : name) (e : entry), RaftRefinementInterface.refined_raft_intermediate_reachable net -> In e (map snd (RaftRefinementInterface.allEntries (fst (nwState net h)))) -> eIndex e > 0 nextIndex_safety_invariant : forall net : network, raft_intermediate_reachable net -> nextIndex_safety net msg_refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), msg_refined_raft_net_invariant_init P -> msg_refined_raft_net_invariant_client_request' P -> msg_refined_raft_net_invariant_timeout' P -> msg_refined_raft_net_invariant_append_entries' P -> msg_refined_raft_net_invariant_append_entries_reply' P -> msg_refined_raft_net_invariant_request_vote' P -> msg_refined_raft_net_invariant_request_vote_reply' P -> msg_refined_raft_net_invariant_do_leader' P -> msg_refined_raft_net_invariant_do_generic_server' P -> msg_refined_raft_net_invariant_state_same_packet_subset' P -> msg_refined_raft_net_invariant_reboot' P -> msg_refined_raft_intermediate_reachable net -> P net msg_lift_prop : forall P : network -> Prop, (forall net : network, RaftRefinementInterface.refined_raft_intermediate_reachable net -> P net) -> forall net : network, msg_refined_raft_intermediate_reachable net -> P (mgv_deghost net) msg_lift_prop_all_the_way : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, msg_refined_raft_intermediate_reachable net -> P (deghost (mgv_deghost net)) msg_lower_prop : forall P : network -> Prop, (forall net : network, msg_refined_raft_intermediate_reachable net -> P (mgv_deghost net)) -> forall net : network, RaftRefinementInterface.refined_raft_intermediate_reachable net -> P net msg_lower_prop_all_the_way : forall P : network -> Prop, (forall net : network, msg_refined_raft_intermediate_reachable net -> P (deghost (mgv_deghost net))) -> forall net : network, raft_intermediate_reachable net -> P net msg_deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => nwState h end = nwState net h msg_simulation_1 : forall net : network, msg_refined_raft_intermediate_reachable net -> RaftRefinementInterface.refined_raft_intermediate_reachable (mgv_deghost net) Unable to unify \"forall (p : packet) (l : ghost_msg) (t : term) (leaderId : name) (prevLogIndex : logIndex) (prevLogTerm : term) (entries : list entry) (leaderCommit : logIndex), In p (nwPackets ?M49784) -> snd (pBody p) = AppendEntries t leaderId prevLogIndex prevLogTerm entries leaderCommit -> fst (pBody p) = l -> prevLogIndex = 0 /\\\\ prevLogTerm = 0 /\\\\ entries = l \\\\/ (exists e : entry, eIndex e = prevLogIndex /\\\\ eTerm e = prevLogTerm /\\\\ In e l) /\\\\ entries = findGtIndex l prevLogIndex\" with \"ghost_log_correct_interface\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: msg_refined_raft_net_invariant.", "qsimpl time: 1 use: msg_refined_raft_net_invariant,ghost_log_correct_invariant.", "-", "qsimpl time: 1 use: msg_refined_raft_net_invariant,ghost_log_correct_invariant.", "shelve.", "-"], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["qsimpl time: 1 use: msg_refined_raft_net_invariant.", "qsimpl time: 1 use: msg_refined_raft_net_invariant,ghost_log_correct_invariant.", "-", "qsimpl time: 1 use: msg_refined_raft_net_invariant,ghost_log_correct_invariant.", "shelve.", "-", "shelve."], "tactic": "-", "exn": "Wrong bullet -: No more subgoals.", "type": "no_more_subgoals", "handled": true}]}, "chat": [], "original": "apply msg_refined_raft_net_invariant. - apply ghost_log_correct_invariant. - intros. apply ghost_log_correct_invariant. auto. - intros. apply ghost_log_correct_invariant. auto. - intros. apply ghost_log_correct_invariant. auto. - intros. apply ghost_log_correct_invariant. auto. - intros. apply ghost_log_correct_invariant. auto. - intros. apply ghost_log_correct_invariant. auto. - intros. apply ghost_log_correct_invariant. auto. - intros. apply ghost_log_correct_invariant. auto. - intros. apply ghost_log_correct_invariant. auto. - intros. apply ghost_log_correct_invariant. auto. - intros. apply ghost_log_correct_invariant. auto.", "back_times": 0, "succ": false, "time": 99.9737298488617}]