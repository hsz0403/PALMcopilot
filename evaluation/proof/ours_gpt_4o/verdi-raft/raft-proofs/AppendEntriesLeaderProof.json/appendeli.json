[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": [], "tactic": "apply refined_raft_net_invariant.", "exn": "Unable to find an instance for the variable net.", "type": "no_instance_var", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant."], "tactic": "eapply append_entries_leader_invariant.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params H : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net one_leader_per_term_invariant : forall net : network, raft_intermediate_reachable net -> one_leader_per_term net leaderLogs_term_sanity_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_term_sanity net leaderLogs_currentTerm_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_currentTerm_sanity net leaderLogs_currentTerm_sanity_candidate_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_currentTerm_sanity_candidate net one_leaderLog_per_term_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term net one_leaderLog_per_term_log_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term_log net one_leaderLog_per_term_host_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term_host net append_entries_came_from_leaders_invariant : forall net : network, refined_raft_intermediate_reachable net -> append_entries_came_from_leaders net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (GhostSimulations.deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (GhostSimulations.deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (GhostSimulations.deghost net) Unable to unify \"forall (p : packet) (t : term) (leaderId : name) (prevLogIndex : logIndex) (prevLogTerm : term) (entries : list entry) (leaderCommit : logIndex) (h : Net.name) (e : entry), In p (nwPackets ?M6412) -> pBody p = AppendEntries t leaderId prevLogIndex prevLogTerm entries leaderCommit -> In e entries -> currentTerm (snd (nwState ?M6412 h)) = t -> type (snd (nwState ?M6412 h)) = Leader -> In e (log (snd (nwState ?M6412 h)))\" with \"append_entries_leader_interface\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant."], "tactic": "now apply rri.", "exn": "The reference rri was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant."], "tactic": "apply refined_raft_net_invariant_request_vote'_weak.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params H : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net one_leader_per_term_invariant : forall net : network, raft_intermediate_reachable net -> one_leader_per_term net leaderLogs_term_sanity_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_term_sanity net leaderLogs_currentTerm_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_currentTerm_sanity net leaderLogs_currentTerm_sanity_candidate_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_currentTerm_sanity_candidate net one_leaderLog_per_term_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term net one_leaderLog_per_term_log_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term_log net one_leaderLog_per_term_host_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term_host net append_entries_came_from_leaders_invariant : forall net : network, refined_raft_intermediate_reachable net -> append_entries_came_from_leaders net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (GhostSimulations.deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (GhostSimulations.deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (GhostSimulations.deghost net) Unable to unify \"forall (xs : list packet) (p : packet) (ys : list packet) (net : network) (st' : Net.name -> data) (ps' : list packet) (gd : electionsData) (d : raft_data) (m : msg) (t : nat) (cid : name) (lli llt : nat), handleRequestVote (pDst p) (snd (nwState net (pDst p))) t (pSrc p) lli llt = (d, m) -> gd = update_elections_data_requestVote (pDst p) (pSrc p) t (pSrc p) lli llt (nwState net (pDst p)) -> pBody p = RequestVote t cid lli llt -> ?M6412 net -> refined_raft_intermediate_reachable net -> refined_raft_intermediate_reachable {| nwPackets := ps'; nwState := st' |} -> nwPackets net = xs ++ p :: ys -> (forall h : Net.name, st' h = update name_eq_dec (nwState net) (pDst p) (gd, d) h) -> (forall p' : packet, In p' ps' -> In p' (xs ++ ys) \\\\/ p' = {| pSrc := pDst p; pDst := pSrc p; pBody := m |}) -> ?M6412 {| nwPackets := ps'; nwState := st' |}\" with \"append_entries_leader_interface\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant."], "tactic": "intros xs p ys net st' ps' gd d m t cid lli llt H H0 H1.", "exn": "H is already used.", "type": "used_var", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant."], "tactic": "intros xs p ys net st' ps' gd d m t cid lli llt H' H0 H1.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant."], "tactic": "destruct p.", "exn": "The reference p was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "destruct update_elections_data_input."], "tactic": "destruct (nwState net pDst0) as [log st] eqn:Heqnw.", "exn": "The reference pDst0 was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "destruct update_elections_data_input."], "tactic": "subst gd.", "exn": "No such hypothesis: gd", "type": "no_hypos", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "destruct update_elections_data_input.", "qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak,refined_raft_net_invariant,append_entries_leader_invariant."], "tactic": "apply (one_leaderLog_per_term_invariant ollpti net).", "exn": "The reference net was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "destruct update_elections_data_input.", "qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak,refined_raft_net_invariant,append_entries_leader_invariant.", "+"], "tactic": "eapply refined_raft_intermediate_reachable_update.", "exn": "The reference refined_raft_intermediate_reachable_update was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "destruct update_elections_data_input.", "qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak,refined_raft_net_invariant,append_entries_leader_invariant.", "+", "eapply update.", "*"], "tactic": "apply rri.", "exn": "The reference rri was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "destruct update_elections_data_input.", "qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak,refined_raft_net_invariant,append_entries_leader_invariant.", "+", "eapply update.", "*"], "tactic": "*", "exn": "Wrong bullet *: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "destruct update_elections_data_input.", "qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak,refined_raft_net_invariant,append_entries_leader_invariant.", "+", "eapply update.", "*", "shelve.", "*"], "tactic": "apply H.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params H : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net one_leader_per_term_invariant : forall net : network, raft_intermediate_reachable net -> one_leader_per_term net leaderLogs_term_sanity_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_term_sanity net leaderLogs_currentTerm_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_currentTerm_sanity net leaderLogs_currentTerm_sanity_candidate_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_currentTerm_sanity_candidate net one_leaderLog_per_term_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term net one_leaderLog_per_term_log_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term_log net one_leaderLog_per_term_host_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term_host net append_entries_came_from_leaders_invariant : forall net : network, refined_raft_intermediate_reachable net -> append_entries_came_from_leaders net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (GhostSimulations.deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (GhostSimulations.deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (GhostSimulations.deghost net) H2 : forall net : network, refined_raft_intermediate_reachable net -> appendEntries_leader net H1 : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net H0 : forall net : network -> Prop, refined_raft_net_invariant_request_vote net -> refined_raft_net_invariant_request_vote' net r : refined_raft_intermediate_reachable ?M10078 Unable to unify \"?M10077 ?M10078\" with \"(fix fin (n : nat) : Type := match n with | 0 => False | S n' => option (fin n') end) N\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "destruct update_elections_data_input.", "qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak,refined_raft_net_invariant,append_entries_leader_invariant.", "+", "eapply update.", "*", "shelve.", "*", "qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak,refined_raft_net_invariant,append_entries_leader_invariant."], "tactic": "+", "exn": "Wrong bullet +: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "destruct update_elections_data_input.", "qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak,refined_raft_net_invariant,append_entries_leader_invariant.", "+", "eapply update.", "*", "shelve.", "*", "qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak,refined_raft_net_invariant,append_entries_leader_invariant.", "--", "shelve.", "--", "shelve."], "tactic": "+", "exn": "Wrong bullet +: Expecting *.", "type": "wrong_bullet", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "destruct update_elections_data_input.", "qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak,refined_raft_net_invariant,append_entries_leader_invariant.", "+", "eapply update.", "*", "shelve.", "*", "qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak,refined_raft_net_invariant,append_entries_leader_invariant.", "--", "shelve.", "--", "shelve.", "*"], "tactic": "destruct (ollpti).", "exn": "The reference ollpti was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "destruct update_elections_data_input.", "qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak,refined_raft_net_invariant,append_entries_leader_invariant.", "+", "eapply update.", "*", "shelve.", "*", "qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak,refined_raft_net_invariant,append_entries_leader_invariant.", "--", "shelve.", "--", "shelve.", "*", "apply Build_one_leaderLog_per_term_interface."], "tactic": "*", "exn": "Wrong bullet *: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "destruct update_elections_data_input.", "qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak,refined_raft_net_invariant,append_entries_leader_invariant.", "+", "eapply update.", "*", "shelve.", "*", "qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak,refined_raft_net_invariant,append_entries_leader_invariant.", "--", "shelve.", "--", "shelve.", "*", "apply Build_one_leaderLog_per_term_interface.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*"], "tactic": "intros net'.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "destruct update_elections_data_input.", "qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak,refined_raft_net_invariant,append_entries_leader_invariant.", "+", "eapply update.", "*", "shelve.", "*", "qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak,refined_raft_net_invariant,append_entries_leader_invariant.", "--", "shelve.", "--", "shelve.", "*", "apply Build_one_leaderLog_per_term_interface.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*"], "tactic": "now apply one_leaderLog_per_term_invariant.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params H : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net one_leader_per_term_invariant : forall net : network, raft_intermediate_reachable net -> one_leader_per_term net leaderLogs_term_sanity_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_term_sanity net leaderLogs_currentTerm_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_currentTerm_sanity net leaderLogs_currentTerm_sanity_candidate_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_currentTerm_sanity_candidate net one_leaderLog_per_term_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term net one_leaderLog_per_term_log_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term_log net one_leaderLog_per_term_host_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term_host net append_entries_came_from_leaders_invariant : forall net : network, refined_raft_intermediate_reachable net -> append_entries_came_from_leaders net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (GhostSimulations.deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (GhostSimulations.deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (GhostSimulations.deghost net) H2 : forall net : network, refined_raft_intermediate_reachable net -> appendEntries_leader net H1 : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net H0 : forall net : network -> Prop, refined_raft_net_invariant_request_vote net -> refined_raft_net_invariant_request_vote' net Unable to unify \"forall (h h' : Net.name) (t : term) (ll ll' : list entry), In (t, ll) (leaderLogs (fst (nwState ?M13016 h))) -> In (t, ll') (leaderLogs (fst (nwState ?M13016 h'))) -> h = h' /\\\\ ll = ll'\" with \"(fix fin (n : nat) : Type := match n with | 0 => False | S n' => option (fin n') end) N\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "destruct update_elections_data_input.", "qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak,refined_raft_net_invariant,append_entries_leader_invariant.", "+", "eapply update.", "*", "shelve.", "*", "qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak,refined_raft_net_invariant,append_entries_leader_invariant.", "--", "shelve.", "--", "shelve.", "*", "apply Build_one_leaderLog_per_term_interface.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak,refined_raft_net_invariant,append_entries_leader_invariant."], "tactic": "*", "exn": "Wrong bullet *: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "destruct update_elections_data_input.", "qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak,refined_raft_net_invariant,append_entries_leader_invariant.", "+", "eapply update.", "*", "shelve.", "*", "qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak,refined_raft_net_invariant,append_entries_leader_invariant.", "--", "shelve.", "--", "shelve.", "*", "apply Build_one_leaderLog_per_term_interface.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak,refined_raft_net_invariant,append_entries_leader_invariant.", "shelve.", "*"], "tactic": "intros net'.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "destruct update_elections_data_input.", "qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak,refined_raft_net_invariant,append_entries_leader_invariant.", "+", "eapply update.", "*", "shelve.", "*", "qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak,refined_raft_net_invariant,append_entries_leader_invariant.", "--", "shelve.", "--", "shelve.", "*", "apply Build_one_leaderLog_per_term_interface.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak,refined_raft_net_invariant,append_entries_leader_invariant.", "shelve.", "*"], "tactic": "now apply one_leaderLog_per_term_log_invariant.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params H : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net one_leader_per_term_invariant : forall net : network, raft_intermediate_reachable net -> one_leader_per_term net leaderLogs_term_sanity_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_term_sanity net leaderLogs_currentTerm_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_currentTerm_sanity net leaderLogs_currentTerm_sanity_candidate_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_currentTerm_sanity_candidate net one_leaderLog_per_term_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term net one_leaderLog_per_term_log_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term_log net one_leaderLog_per_term_host_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term_host net append_entries_came_from_leaders_invariant : forall net : network, refined_raft_intermediate_reachable net -> append_entries_came_from_leaders net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (GhostSimulations.deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (GhostSimulations.deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (GhostSimulations.deghost net) H2 : forall net : network, refined_raft_intermediate_reachable net -> appendEntries_leader net H1 : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net H0 : forall net : network -> Prop, refined_raft_net_invariant_request_vote net -> refined_raft_net_invariant_request_vote' net Unable to unify \"forall (h h' : Net.name) (t : term) (ll ll' : list entry), In (t, ll) (leaderLogs (fst (nwState ?M15689 h))) -> In (t, ll') (leaderLogs (fst (nwState ?M15689 h'))) -> ll = ll'\" with \"one_leaderLog_per_term_interface\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "destruct update_elections_data_input.", "qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak,refined_raft_net_invariant,append_entries_leader_invariant.", "+", "eapply update.", "*", "shelve.", "*", "qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak,refined_raft_net_invariant,append_entries_leader_invariant.", "--", "shelve.", "--", "shelve.", "*", "apply Build_one_leaderLog_per_term_interface.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak,refined_raft_net_invariant,append_entries_leader_invariant.", "shelve.", "*", "qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak,refined_raft_net_invariant,append_entries_leader_invariant."], "tactic": "*", "exn": "Wrong bullet *: Expecting +.", "type": "wrong_bullet", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "destruct update_elections_data_input.", "qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak,refined_raft_net_invariant,append_entries_leader_invariant.", "+", "eapply update.", "*", "shelve.", "*", "qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak,refined_raft_net_invariant,append_entries_leader_invariant.", "--", "shelve.", "--", "shelve.", "*", "apply Build_one_leaderLog_per_term_interface.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak,refined_raft_net_invariant,append_entries_leader_invariant.", "shelve.", "*", "qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak,refined_raft_net_invariant,append_entries_leader_invariant.", "+"], "tactic": "intros net'.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "destruct update_elections_data_input.", "qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak,refined_raft_net_invariant,append_entries_leader_invariant.", "+", "eapply update.", "*", "shelve.", "*", "qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak,refined_raft_net_invariant,append_entries_leader_invariant.", "--", "shelve.", "--", "shelve.", "*", "apply Build_one_leaderLog_per_term_interface.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak,refined_raft_net_invariant,append_entries_leader_invariant.", "shelve.", "*", "qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak,refined_raft_net_invariant,append_entries_leader_invariant.", "+"], "tactic": "now apply one_leaderLog_per_term_host_invariant.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params H : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net one_leader_per_term_invariant : forall net : network, raft_intermediate_reachable net -> one_leader_per_term net leaderLogs_term_sanity_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_term_sanity net leaderLogs_currentTerm_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_currentTerm_sanity net leaderLogs_currentTerm_sanity_candidate_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_currentTerm_sanity_candidate net one_leaderLog_per_term_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term net one_leaderLog_per_term_log_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term_log net one_leaderLog_per_term_host_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term_host net append_entries_came_from_leaders_invariant : forall net : network, refined_raft_intermediate_reachable net -> append_entries_came_from_leaders net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (GhostSimulations.deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (GhostSimulations.deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (GhostSimulations.deghost net) Unable to unify \"forall (h h' : Net.name) (t : term) (ll ll' : list entry), In (t, ll) (leaderLogs (fst (nwState ?M18126 h))) -> In (t, ll') (leaderLogs (fst (nwState ?M18126 h'))) -> h = h'\" with \"append_entries_leader_interface\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "destruct update_elections_data_input.", "qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak,refined_raft_net_invariant,append_entries_leader_invariant.", "+", "eapply update.", "*", "shelve.", "*", "qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak,refined_raft_net_invariant,append_entries_leader_invariant.", "--", "shelve.", "--", "shelve.", "*", "apply Build_one_leaderLog_per_term_interface.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak,refined_raft_net_invariant,append_entries_leader_invariant.", "shelve.", "*", "qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak,refined_raft_net_invariant,append_entries_leader_invariant.", "+"], "tactic": "+", "exn": "Wrong bullet +: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}]}, "chat": [], "original": "apply refined_raft_net_invariant. - intros. eapply append_entries_leader_invariant. now apply rri. - intros. apply refined_raft_net_invariant_request_vote'_weak. intros xs p ys net st' ps' gd d m t cid lli llt H H0 H1. destruct p. destruct (nwState net pDst0) as [log st] eqn:Heqnw. simpl in *. subst gd. apply (one_leaderLog_per_term_invariant ollpti net). + eapply refined_raft_intermediate_reachable_update. * apply rri. * apply H. + destruct (ollpti). apply Build_one_leaderLog_per_term_interface. * intros net'. now apply one_leaderLog_per_term_invariant. * intros net'. now apply one_leaderLog_per_term_log_invariant. * intros net'. now apply one_leaderLog_per_term_host_invariant. + auto.", "back_times": 0, "succ": false, "time": 167.9274411201477}]