[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": [], "tactic": "apply raft_net_invariant.", "exn": "Unable to find an instance for the variable net.", "type": "no_instance_var", "handled": true}, {"ctx": ["qsimpl time: 1 use: raft_net_invariant."], "tactic": "destruct raft_net_invariant_init.", "exn": "Not an inductive product.", "type": "not_inductive_product", "handled": true}, {"ctx": ["qsimpl time: 1 use: raft_net_invariant.", "qsimpl time: 1 use: raft_net_invariant_init,raft_net_invariant."], "tactic": "destruct raft_net_invariant_client_request.", "exn": "Not an inductive product.", "type": "not_inductive_product", "handled": true}, {"ctx": ["qsimpl time: 1 use: raft_net_invariant.", "qsimpl time: 1 use: raft_net_invariant_init,raft_net_invariant.", "qsimpl time: 1 use: raft_net_invariant_init,raft_net_invariant_client_request,raft_net_invariant."], "tactic": "destruct raft_net_invariant_timeout.", "exn": "Not an inductive product.", "type": "not_inductive_product", "handled": true}, {"ctx": ["qsimpl time: 1 use: raft_net_invariant.", "qsimpl time: 1 use: raft_net_invariant_init,raft_net_invariant.", "qsimpl time: 1 use: raft_net_invariant_init,raft_net_invariant_client_request,raft_net_invariant.", "qsimpl time: 1 use: raft_net_invariant_timeout,raft_net_invariant_init,raft_net_invariant_client_request,raft_net_invariant."], "tactic": "destruct raft_net_invariant_append_entries.", "exn": "Not an inductive product.", "type": "not_inductive_product", "handled": true}, {"ctx": ["qsimpl time: 1 use: raft_net_invariant.", "qsimpl time: 1 use: raft_net_invariant_init,raft_net_invariant.", "qsimpl time: 1 use: raft_net_invariant_init,raft_net_invariant_client_request,raft_net_invariant.", "qsimpl time: 1 use: raft_net_invariant_timeout,raft_net_invariant_init,raft_net_invariant_client_request,raft_net_invariant.", "qsimpl time: 1 use: raft_net_invariant_timeout,raft_net_invariant,raft_net_invariant_append_entries,raft_net_invariant_init,raft_net_invariant_client_request."], "tactic": "destruct raft_net_invariant_append_entries_reply.", "exn": "Not an inductive product.", "type": "not_inductive_product", "handled": true}]}, "chat": [], "original": "apply raft_net_invariant. - intros. intros. destruct raft_net_invariant_init. auto. - intros. intros. destruct raft_net_invariant_client_request. auto. - intros. intros. destruct raft_net_invariant_timeout. auto. - intros. intros. destruct raft_net_invariant_append_entries. auto. - intros. intros. destruct raft_net_invariant_append_entries_reply. auto. - intros. intros. destruct raft_net_invariant_request_vote. auto. - intros. intros. destruct raft_net_invariant_request_vote_reply. auto. - unfold raft_net_invariant_do_leader. intros. intros. match goal with | [ |- context[doLeader ?d ?h] ] => pose proof (doLeader_spec d h) end. unfold match_index_sanity. intros. match goal with | [ H1 : doLeader ?d ?h = _ |- _ ] => pose proof (doLeader_spec d h) as Hdl; rewrite H1 in Hdl; clear H1 end. simpl in *. intros. unfold match_index_sanity_invariant in *. specialize (H3 net). intuition. - intros. intros. destruct raft_net_invariant_do_generic_server. auto. - intros. intros. destruct raft_net_invariant_state_same_packet_subset. auto. - intros. intros. destruct raft_net_invariant_reboot. auto.", "back_times": 0, "succ": false, "time": 38.76378655433655}]