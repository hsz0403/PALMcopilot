[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros net h t src lli llt st' m t' h' l'.", "intros Hreach Hreq H."], "tactic": "eapply votesWithLog_update_elections_data_request_vote in H.", "exn": "Unable to apply lemma of type \"forall (h0 : name) (st : electionsData * RaftState.raft_data term name entry logIndex serverType data clientId output) (t0 : nat) (src0 : fin N) (lli0 llt0 : nat) (st'0 : raft_data) (m0 : msg) (t'0 : term) (h'0 : name) (l'0 : list entry), handleRequestVote h0 (snd st) t0 src0 lli0 llt0 = (st'0, m0) -> In (t'0, h'0, l'0) (votesWithLog (update_elections_data_requestVote h0 src0 t0 src0 lli0 llt0 st)) -> In (t'0, h'0, l'0) (votesWithLog (fst st)) \\\\/ t'0 = currentTerm st'0 /\\\\ l'0 = log st'0\" on hypothesis of type \"st' = fst (nwState src (pDst h))\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["intros net h t src lli llt st' m t' h' l'.", "intros Hreach Hreq H.", "qsimpl time: 1 use: votesWithLog_update_elections_data_request_vote."], "tactic": "destruct H as [Hold | [Heq [Hlog Hcase]]].", "exn": "The reference H was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros net h t src lli llt st' m t' h' l'.", "intros Hreach Hreq H.", "qsimpl time: 1 use: votesWithLog_update_elections_data_request_vote.", "destruct findAtIndex as [findAtIndexold | [findAtIndexeq [findAtIndexlog findAtIndexcase]]].", "+", "left."], "tactic": "apply update_elections_data_request_vote_votesWithLog_old.", "exn": "No such goal. Focus next goal with bullet +.", "type": "next_goal", "handled": true}, {"ctx": ["intros net h t src lli llt st' m t' h' l'.", "intros Hreach Hreq H.", "qsimpl time: 1 use: votesWithLog_update_elections_data_request_vote.", "destruct findAtIndex as [findAtIndexold | [findAtIndexeq [findAtIndexlog findAtIndexcase]]].", "+", "left.", "+", "right."], "tactic": "split; [assumption | split; [assumption |]].", "exn": "Not an inductive goal with 1 constructor.", "type": "not_inductive_goal", "handled": true}, {"ctx": ["intros net h t src lli llt st' m t' h' l'.", "intros Hreach Hreq H.", "qsimpl time: 1 use: votesWithLog_update_elections_data_request_vote.", "destruct findAtIndex as [findAtIndexold | [findAtIndexeq [findAtIndexlog findAtIndexcase]]].", "+", "left.", "+", "right.", "qsimpl time: 1 use: votesWithLog_update_elections_data_request_vote."], "tactic": "destruct (leaderId (snd (nwState net h))) eqn:Hnone.", "exn": "No such goal. Focus next goal with bullet +.", "type": "next_goal", "handled": true}]}, "chat": [], "original": "intros net h t src lli llt st' m t' h' l'. intros Hreach Hreq H. eapply votesWithLog_update_elections_data_request_vote in H. - destruct H as [Hold | [Heq [Hlog Hcase]]]. + left. apply update_elections_data_request_vote_votesWithLog_old. auto. + right. split; [assumption | split; [assumption |]]. destruct (leaderId (snd (nwState net h))) eqn:Hnone. * right. assert (Hle: currentTerm (snd (nwState net h)) <= currentTerm st'). { eapply handleRequestVote_currentTerm_monotonic. eauto. } apply Nat.lt_eq_cases. auto. * left. reflexivity. - auto.", "back_times": 0, "succ": false, "time": 195.50131750106812}]