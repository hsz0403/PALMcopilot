[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": [], "tactic": "apply refined_raft_net_invariant with (P := allEntries_leader_sublog).", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params rri : raft_refinement_interface cei : candidate_entries_interface lsi : leader_sublog_interface olpti : one_leader_per_term_interface aecei : allEntries_candidate_entries_interface vci : votes_correct_interface cci : cronies_correct_interface Unable to unify \"let (name, msg, _, _, nodes, _, _, _, _, _) := raft_refined_multi_params in name\" with \"list packet\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: allEntries_leader_sublog,refined_raft_net_invariant."], "tactic": "apply allEntries_leader_sublog_invariant.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params H : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net P : network -> Prop cronies_correct_invariant : forall net : network, refined_raft_intermediate_reachable net -> cronies_correct net votes_correct_invariant : forall net : network, refined_raft_intermediate_reachable net -> votes_correct net allEntries_candidateEntries_invariant : forall net : network, refined_raft_intermediate_reachable net -> allEntries_candidateEntries net one_leader_per_term_invariant : forall net : network, raft_intermediate_reachable net -> one_leader_per_term net leader_sublog_invariant_invariant : forall net : network, raft_intermediate_reachable net -> leader_sublog_invariant net candidate_entries_invariant : forall net : network, refined_raft_intermediate_reachable net -> CandidateEntries net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (deghost net) Unable to unify \"let (name, msg, _, _, nodes, _, _, _, _, _) := raft_refined_multi_params in name\" with \"list packet\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros. apply refined_raft_net_invariant with (P := allEntries_leader_sublog). - intros. apply allEntries_leader_sublog_invariant. auto. - intros. unfold allEntries_leader_sublog. intros. match goal with | H: handleAppendEntriesReply _ _ _ _ _ _ = _ |- _ => pose proof H; apply handle_append_entries_reply_leader_sublog_invariant in H; eauto end.", "back_times": 0, "succ": false, "time": 107.14748501777649}]