[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros h st t h' lli llt st' m.", "intros H."], "tactic": "destruct (t <? currentTerm st) eqn:Heq.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params rri : raft_refinement_interface lmi : log_matching_interface si : sorted_interface aeigt0 : allEntries_indices_gt_0_interface h : network st : refined_raft_intermediate_reachable h t : packet h' : term lli : name llt : logIndex st' : term m : list entry H : logIndex The term \"t\" has type \"packet\" while it is expected to have type \"nat\".", "type": "wrong_type", "handled": true}, {"ctx": ["intros h st t h' lli llt st' m.", "intros H.", "qsimpl time: 1 use: currentTerm.", "inversion H."], "tactic": "split.", "exn": "Not an inductive product.", "type": "not_inductive_product", "handled": true}, {"ctx": ["intros h st t h' lli llt st' m.", "intros H.", "qsimpl time: 1 use: currentTerm.", "inversion H.", "qsimpl time: 1 use: currentTerm.", "+"], "tactic": "+", "exn": "Wrong bullet +: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros h st t h' lli llt st' m.", "intros H.", "qsimpl time: 1 use: currentTerm.", "inversion H.", "qsimpl time: 1 use: currentTerm.", "+", "shelve.", "+"], "tactic": "left.", "exn": "Not an inductive product.", "type": "not_inductive_product", "handled": true}, {"ctx": ["intros h st t h' lli llt st' m.", "intros H.", "qsimpl time: 1 use: currentTerm.", "inversion H.", "qsimpl time: 1 use: currentTerm.", "+", "shelve.", "+", "qsimpl time: 1 use: currentTerm."], "tactic": "+", "exn": "Wrong bullet +: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros h st t h' lli llt st' m.", "intros H.", "qsimpl time: 1 use: currentTerm.", "inversion H.", "qsimpl time: 1 use: currentTerm.", "+", "shelve.", "+", "qsimpl time: 1 use: currentTerm.", "shelve."], "tactic": "+", "exn": "Wrong bullet +: No more subgoals.", "type": "no_more_subgoals", "handled": true}]}, "chat": [], "original": "intros h st t h' lli llt st' m. intros H. unfold handleRequestVote in H. destruct (t <? currentTerm st) eqn:Heq. - inversion H. split. + reflexivity. + left. reflexivity. - remember (advanceCurrentTerm st t) as st0. destruct (if leaderId st0 then false else true) eqn:Heq1. + inversion H. subst. split. * apply advanceCurrentTerm_same_lastApplied. * right. reflexivity. + remember (moreUpToDate llt lli (maxTerm (log st0)) (maxTerm (log st0))) as upd. inversion H. split. * apply advanceCurrentTerm_same_lastApplied. * right. reflexivity.", "back_times": 0, "succ": false, "time": 229.96111059188843}]