[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros net st' ps' d os d' ms h H_doGenericServer H_candidate_term_gt_log H_reachable H_nwState H_st' H_ps'."], "tactic": ["apply candidate_term_gt_log_invariant with (net:=net).", ""], "exn": "No such bound variable net (possible name is: net0).", "type": "no_such_bound", "handled": false}]}, "chat": [], "original": "intros net st' ps' d os d' ms h H_doGenericServer H_candidate_term_gt_log H_reachable H_nwState H_st' H_ps'. apply candidate_term_gt_log_invariant with (net:=net). - auto. - unfold candidate_term_gt_log. intros h' H_candidate e H_in_log. unfold doGenericServer in H_doGenericServer. destruct (applyEntries h d (rev (filter (fun x => (lastApplied d <? eIndex x) && (eIndex x <=? commitIndex d)) (findGtIndex (log d) (lastApplied d))))) as [out state0]. simpl in H_doGenericServer. destruct (lastApplied state0 <? commitIndex state0). + inversion H_doGenericServer. subst d' ms. rewrite H_st'. rewrite H in H_nwState. rewrite H_nwState. apply (H_candidate_term_gt_log h' H_candidate e H_in_log). + inversion H_doGenericServer. subst d' ms. rewrite H_st'. rewrite H in H_nwState. rewrite H_nwState. apply (H_candidate_term_gt_log h' H_candidate e H_in_log).", "back_times": 0, "succ": false, "time": 83.53855752944946}]