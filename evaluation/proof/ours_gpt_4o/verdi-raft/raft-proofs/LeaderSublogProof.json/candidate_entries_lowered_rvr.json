[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros net net' Hinv Hlog Heq h leader e Hin Hlog' HeTerm."], "tactic": "assert (Htype : type (nwState net h) = Leader /\\ currentTerm (nwState net h) = currentTerm (nwState net' h)).", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params rri : raft_refinement_interface cei : candidate_entries_interface vci : votes_correct_interface cci : cronies_correct_interface olpti : one_leader_per_term_interface net : network net' : raft_intermediate_reachable net Hinv : packet Hlog : Net.name Heq : entry h : In Heq (log (nwState net Hlog)) leader : In Hinv (nwPackets net) e : pBody Hinv = RequestVoteReply (eTerm Heq) true Hin : currentTerm (nwState net (pDst Hinv)) = eTerm Heq Hlog' : wonElection (dedup name_eq_dec (pSrc Hinv :: votesReceived (nwState net (pDst Hinv)))) = true HeTerm : type (nwState net (pDst Hinv)) = Candidate The term \"h\" has type \"In Heq (log (nwState net Hlog))\" while it is expected to have type \"Net.name\".", "type": "wrong_type", "handled": true}]}, "chat": [], "original": "intros net net' Hinv Hlog Heq h leader e Hin Hlog' HeTerm. assert (Htype : type (nwState net h) = Leader /\\ currentTerm (nwState net h) = currentTerm (nwState net' h)). -- destruct (type (nwState net' h)) eqn:Htype'. ++ exfalso. apply Hin. congruence. ++ exfalso. apply Hin. congruence. ++ apply Heq. rewrite Htype'. auto. simpl in *. intuition. apply Hinv with (leader := leader) (e := e) (h := h); auto. rewrite <- Hlog'. auto.", "back_times": 0, "succ": false, "time": 92.6727991104126}]