[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros net H_rr."], "tactic": ["apply Build_leader_sublog_interface.", ""], "exn": "Applied theorem does not have enough premises.", "type": "no_enough_premises", "handled": false}]}, "chat": [], "original": "intros net H_rr. apply Build_leader_sublog_interface. intros net0 H_rr0. induction H_rr0 using raft_intermediate_reachable_ind. - unfold leader_sublog_invariant. split; auto. - destruct H as [_ _ _ _ _ H_inv]. apply H_inv. + apply IHH_rr0. auto. + auto. - destruct H as [_ _ _ _ _ H_inv]. eapply lift_prop. apply H_inv. eapply IHH_rr0. eapply lower_prop; eauto. - destruct H as [_ _ _ _ _ H_inv]. eapply lift_prop. apply H_inv. eapply IHH_rr0. eapply lower_prop; eauto. - destruct H as [_ _ _ _ _ H_inv]. eapply lift_prop. apply H_inv. eapply IHH_rr0. eapply lower_prop; eauto. - destruct H as [_ _ _ _ _ H_inv]. eapply lift_prop. apply H_inv. eapply IHH_rr0. eapply lower_prop; eauto. - destruct H as [_ _ _ _ _ H_inv]. eapply lift_prop. apply H_inv. eapply IHH_rr0. eapply lower_prop; eauto. - destruct H as [_ _ _ _ _ H_inv]. eapply lift_prop. apply H_inv. eapply IHH_rr0. eapply lower_prop; eauto. - destruct H as [_ _ _ _ _ H_inv]. eapply lift_prop. apply H_inv. eapply IHH_rr0. eapply lower_prop; eauto. - destruct H as [_ _ _ _ _ H_inv]. eapply lift_prop. apply H_inv. eapply IHH_rr0. eapply lower_prop; eauto.", "back_times": 0, "succ": false, "time": 91.48090720176697}]