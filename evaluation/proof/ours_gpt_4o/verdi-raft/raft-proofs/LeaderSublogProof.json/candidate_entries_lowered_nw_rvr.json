[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros net Hcandidate Hvotes Hcronies h h' e Hin."], "tactic": ["destruct Hcandidate as [Hhost_inv Hnw_inv].", ""], "exn": "Expects a disjunctive pattern with 6 branches.", "type": "num_branch", "handled": false}]}, "chat": [], "original": "intros net Hcandidate Hvotes Hcronies h h' e Hin. unfold CandidateEntries in Hcandidate. destruct Hcandidate as [Hhost_inv Hnw_inv]. unfold candidateEntries_host_invariant in Hhost_inv. specialize (Hhost_inv h' e Hin). unfold candidateEntries in Hhost_inv. apply candidateEntries_wonElection. - destruct Hvotes as [Hone_vote _]. auto. - destruct Hcronies as [_ Hcronies_votes]. destruct Hcronies_votes as [_ Hvotes_cronies]. intros leader crony Hvote_respotype. apply (Hvotes_cronies h' crony). specialize (Hhost_inv crony Hvote_respotype). auto. - destruct Hcronies as [Hvotes_cronies _]. apply (Hvotes_cronies h') with (crony:= h'). * apply in_eq. * left. reflexivity. - auto. - auto.", "back_times": 0, "succ": false, "time": 91.08706283569336}]