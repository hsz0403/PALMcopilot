[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["split.", "-"], "tactic": "eapply olpti.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params rri : raft_refinement_interface cei : candidate_entries_interface vci : votes_correct_interface cci : cronies_correct_interface olpti : one_leader_per_term_interface xs : list packet p : packet ys : list packet net : network st' : name -> data ps' : list packet d : raft_data m : list (name * msg) t : nat es : list entry res : bool H : handleAppendEntriesReply (pDst p) (nwState net (pDst p)) (pSrc p) t es res = (d, m) H0 : pBody p = AppendEntriesReply t es res H1 : leader_sublog_invariant net H2 : raft_intermediate_reachable net H3 : nwPackets net = xs ++ p :: ys H4 : forall h : name, st' h = update name_eq_dec (nwState net) (pDst p) d h H5 : forall p' : packet, In p' ps' -> In p' (xs ++ ys) \\\\/ In p' (send_packets (pDst p) m) Unable to unify \"one_leader_per_term_interface\" with \"leader_sublog_host_invariant {| nwPackets := ps'; nwState := st' |}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["split.", "-", "qsimpl time: 1.", "eapply leader_sublog_invariant_invariant; eauto."], "tactic": "split.", "exn": "Not an inductive goal with 1 constructor.", "type": "not_inductive_goal", "handled": true}, {"ctx": ["split.", "-", "qsimpl time: 1.", "eapply leader_sublog_invariant_invariant; eauto."], "tactic": "eapply leader_sublog_host_invariant; eauto.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params xs : list packet p : packet ys : list packet net : network st' : name -> raft_data ps' : list packet d : raft_data m : list (name * msg) t : nat es : list entry res : bool H : handleAppendEntriesReply (pDst p) (nwState net (pDst p)) (pSrc p) t es res = (d, m) H0 : pBody p = AppendEntriesReply t es res H2 : raft_intermediate_reachable net H3 : nwPackets net = xs ++ p :: ys H4 : forall h : name, st' h = (if name_eq_dec h (pDst p) then d else nwState net h) H5 : forall p' : packet, In p' ps' -> In p' (xs ++ ys) \\\\/ In p' (map (fun m : name * msg => {| pSrc := pDst p; pDst := fst m; pBody := snd m |}) m) H6 : leader_sublog_host_invariant net H7 : leader_sublog_nw_invariant net one_leader_per_term_invariant : forall net : network, raft_intermediate_reachable net -> one_leader_per_term net cronies_correct_invariant : forall net : network, refined_raft_intermediate_reachable net -> cronies_correct net votes_correct_invariant : forall net : network, refined_raft_intermediate_reachable net -> votes_correct net candidate_entries_invariant : forall net : network, refined_raft_intermediate_reachable net -> CandidateEntries net refined_raft_net_invariant : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (deghost net) Unable to unify \"Prop\" with \"raft_intermediate_reachable {| nwPackets := ps'; nwState := st' |}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["split.", "-", "qsimpl time: 1.", "eapply leader_sublog_invariant_invariant; eauto.", "qsimpl time: 1 use: leader_sublog_host_invariant."], "tactic": "eapply cei; eauto.", "exn": "The reference cei was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["split.", "-", "qsimpl time: 1.", "eapply leader_sublog_invariant_invariant; eauto.", "qsimpl time: 1 use: leader_sublog_host_invariant."], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["split.", "-", "qsimpl time: 1.", "eapply leader_sublog_invariant_invariant; eauto.", "qsimpl time: 1 use: leader_sublog_host_invariant.", "shelve.", "-"], "tactic": "eapply olpti.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params rri : raft_refinement_interface cei : candidate_entries_interface vci : votes_correct_interface cci : cronies_correct_interface olpti : one_leader_per_term_interface xs : list packet p : packet ys : list packet net : network st' : name -> data ps' : list packet d : raft_data m : list (name * msg) t : nat es : list entry res : bool H : handleAppendEntriesReply (pDst p) (nwState net (pDst p)) (pSrc p) t es res = (d, m) H0 : pBody p = AppendEntriesReply t es res H1 : leader_sublog_invariant net H2 : raft_intermediate_reachable net H3 : nwPackets net = xs ++ p :: ys H4 : forall h : name, st' h = update name_eq_dec (nwState net) (pDst p) d h H5 : forall p' : packet, In p' ps' -> In p' (xs ++ ys) \\\\/ In p' (send_packets (pDst p) m) Unable to unify \"one_leader_per_term_interface\" with \"leader_sublog_nw_invariant {| nwPackets := ps'; nwState := st' |}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["split.", "-", "qsimpl time: 1.", "eapply leader_sublog_invariant_invariant; eauto.", "qsimpl time: 1 use: leader_sublog_host_invariant.", "shelve.", "-", "qsimpl time: 1 use: leader_sublog_host_invariant.", "eapply leader_sublog_invariant_invariant; eauto."], "tactic": "split.", "exn": "Not an inductive goal with 1 constructor.", "type": "not_inductive_goal", "handled": true}, {"ctx": ["split.", "-", "qsimpl time: 1.", "eapply leader_sublog_invariant_invariant; eauto.", "qsimpl time: 1 use: leader_sublog_host_invariant.", "shelve.", "-", "qsimpl time: 1 use: leader_sublog_host_invariant.", "eapply leader_sublog_invariant_invariant; eauto.", "qsimpl time: 1 use: leader_sublog_host_invariant."], "tactic": "eapply leader_sublog_host_invariant; eauto.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params xs : list packet p : packet ys : list packet net : network st' : name -> raft_data ps' : list packet d : raft_data m : list (name * msg) t : nat es : list entry res : bool H : handleAppendEntriesReply (pDst p) (nwState net (pDst p)) (pSrc p) t es res = (d, m) H0 : pBody p = AppendEntriesReply t es res H2 : raft_intermediate_reachable net H3 : nwPackets net = xs ++ p :: ys H4 : forall h : name, st' h = (if name_eq_dec h (pDst p) then d else nwState net h) H5 : forall p' : packet, In p' ps' -> In p' (xs ++ ys) \\\\/ In p' (map (fun m : name * msg => {| pSrc := pDst p; pDst := fst m; pBody := snd m |}) m) X0 : Prop H6 : leader_sublog_host_invariant net H7 : leader_sublog_nw_invariant net one_leader_per_term_invariant : forall net : network, raft_intermediate_reachable net -> one_leader_per_term net cronies_correct_invariant : forall net : network, refined_raft_intermediate_reachable net -> cronies_correct net votes_correct_invariant : forall net : network, refined_raft_intermediate_reachable net -> votes_correct net candidate_entries_invariant : forall net : network, refined_raft_intermediate_reachable net -> CandidateEntries net refined_raft_net_invariant : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (deghost net) X1 : Prop Unable to unify \"Prop\" with \"raft_intermediate_reachable {| nwPackets := ps'; nwState := st' |}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["split.", "-", "qsimpl time: 1.", "eapply leader_sublog_invariant_invariant; eauto.", "qsimpl time: 1 use: leader_sublog_host_invariant.", "shelve.", "-", "qsimpl time: 1 use: leader_sublog_host_invariant.", "eapply leader_sublog_invariant_invariant; eauto.", "qsimpl time: 1 use: leader_sublog_host_invariant.", "qsimpl time: 1 use: leader_sublog_host_invariant."], "tactic": "eapply cei; eauto.", "exn": "The reference cei was not found in the current environment.", "type": "ref_not_found", "handled": true}]}, "chat": [], "original": "unfold raft_net_invariant_timeout. intros. split. - intros. eapply olpti. eapply leader_sublog_invariant_invariant; eauto. unfold leader_sublog_invariant. split. + eapply leader_sublog_host_invariant; eauto. + eapply cei; eauto. - intros. eapply olpti. eapply leader_sublog_invariant_invariant; eauto. unfold leader_sublog_invariant. split. + eapply leader_sublog_host_invariant; eauto. + eapply cei; eauto.", "back_times": 0, "succ": false, "time": 141.97175645828247}]