[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": [], "tactic": "apply raft_net_invariant'.", "exn": "Unable to find an instance for the variable net.", "type": "no_instance_var", "handled": true}, {"ctx": ["qsimpl time: 1 use: raft_net_invariant'."], "tactic": "apply raft_net_invariant_init.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params H : forall (P : network -> Prop) (net : network), raft_net_invariant_init P -> raft_net_invariant_client_request' P -> raft_net_invariant_timeout' P -> raft_net_invariant_append_entries' P -> raft_net_invariant_append_entries_reply' P -> raft_net_invariant_request_vote' P -> raft_net_invariant_request_vote_reply' P -> raft_net_invariant_do_leader' P -> raft_net_invariant_do_generic_server' P -> raft_net_invariant_state_same_packet_subset P -> raft_net_invariant_reboot' P -> raft_intermediate_reachable net -> P net log_matching_invariant : forall net : network, raft_intermediate_reachable net -> log_matching net state_machine_safety_invariant : forall net : network, raft_intermediate_reachable net -> state_machine_safety net max_index_sanity_invariant : forall net : network, raft_intermediate_reachable net -> maxIndex_sanity net handleAppendEntries_logs_sorted : forall (net : network) (p : packet) (t : term) (n : name) (pli : logIndex) (plt : term) (es : list entry) (ci : logIndex) (st' : raft_data) (m : msg), raft_intermediate_reachable net -> logs_sorted net -> handleAppendEntries (pDst p) (nwState net (pDst p)) t n pli plt es ci = (st', m) -> pBody p = AppendEntries t n pli plt es ci -> In p (nwPackets net) -> sorted (log st') handleClientRequest_logs_sorted : forall (h : name) (client : clientId) (id : nat) (c : input) (out : list raft_output) (st : raft_data) (l : list (name * msg)) (net : network), handleClientRequest h (nwState net h) client id c = (out, st, l) -> raft_intermediate_reachable net -> logs_sorted_host net -> sorted (log st) logs_sorted_invariant : forall net : network, raft_intermediate_reachable net -> logs_sorted net Unable to unify \"Prop\" with \"raft_net_invariant_request_vote' state_machine_log\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: raft_net_invariant'.", "qsimpl time: 1 use: raft_net_invariant',raft_net_invariant_init.", "unfold state_machine_log."], "tactic": "destruct smsi.", "exn": "The reference smsi was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["qsimpl time: 1 use: raft_net_invariant'.", "qsimpl time: 1 use: raft_net_invariant',raft_net_invariant_init.", "unfold state_machine_log.", "destruct Build_state_machine_safety_interface.", "apply state_machine_safety_invariant."], "tactic": "apply raft_invariant_handle_message'.", "exn": "Found no subterm matching \"{| nwPackets := ?M14092; nwState := ?M14091 |}\" in the current goal.", "type": "no_subterm", "handled": true}, {"ctx": ["qsimpl time: 1 use: raft_net_invariant'.", "qsimpl time: 1 use: raft_net_invariant',raft_net_invariant_init.", "unfold state_machine_log.", "destruct Build_state_machine_safety_interface.", "apply state_machine_safety_invariant.", "qsimpl time: 1 use: raft_net_invariant',raft_net_invariant_init,raft_invariant_handle_message'."], "tactic": "apply H0.", "exn": "The reference H0 was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["qsimpl time: 1 use: raft_net_invariant'.", "qsimpl time: 1 use: raft_net_invariant',raft_net_invariant_init.", "unfold state_machine_log.", "destruct Build_state_machine_safety_interface.", "apply state_machine_safety_invariant.", "qsimpl time: 1 use: raft_net_invariant',raft_net_invariant_init,raft_invariant_handle_message'.", "apply fast_Zred_factor6."], "tactic": "apply H1.", "exn": "Found no subterm matching \"{| nwPackets := ?M26513; nwState := ?M26512 |}\" in the current goal.", "type": "no_subterm", "handled": true}, {"ctx": ["qsimpl time: 1 use: raft_net_invariant'.", "qsimpl time: 1 use: raft_net_invariant',raft_net_invariant_init.", "unfold state_machine_log.", "destruct Build_state_machine_safety_interface.", "apply state_machine_safety_invariant.", "qsimpl time: 1 use: raft_net_invariant',raft_net_invariant_init,raft_invariant_handle_message'.", "apply fast_Zred_factor6.", "qsimpl time: 1 use: raft_net_invariant',raft_net_invariant_init,raft_invariant_handle_message'."], "tactic": "apply raft_invariant_handle_message'.", "exn": "Found no subterm matching \"{| nwPackets := ?M30590; nwState := ?M30589 |}\" in the current goal.", "type": "no_subterm", "handled": true}, {"ctx": ["qsimpl time: 1 use: raft_net_invariant'.", "qsimpl time: 1 use: raft_net_invariant',raft_net_invariant_init.", "unfold state_machine_log.", "destruct Build_state_machine_safety_interface.", "apply state_machine_safety_invariant.", "qsimpl time: 1 use: raft_net_invariant',raft_net_invariant_init,raft_invariant_handle_message'.", "apply fast_Zred_factor6.", "qsimpl time: 1 use: raft_net_invariant',raft_net_invariant_init,raft_invariant_handle_message'.", "qsimpl time: 1 use: raft_net_invariant',raft_net_invariant_init,raft_invariant_handle_message'."], "tactic": "apply H0.", "exn": "Unable to find an instance for the variable net.", "type": "no_instance_var", "handled": true}, {"ctx": ["qsimpl time: 1 use: raft_net_invariant'.", "qsimpl time: 1 use: raft_net_invariant',raft_net_invariant_init.", "unfold state_machine_log.", "destruct Build_state_machine_safety_interface.", "apply state_machine_safety_invariant.", "qsimpl time: 1 use: raft_net_invariant',raft_net_invariant_init,raft_invariant_handle_message'.", "apply fast_Zred_factor6.", "qsimpl time: 1 use: raft_net_invariant',raft_net_invariant_init,raft_invariant_handle_message'.", "qsimpl time: 1 use: raft_net_invariant',raft_net_invariant_init,raft_invariant_handle_message'.", "qsimpl time: 1 use: raft_net_invariant',raft_net_invariant_init,raft_invariant_handle_message'."], "tactic": "apply H1.", "exn": "Found no subterm matching \"{| nwPackets := ?M71368; nwState := ?M71367 |}\" in the current goal.", "type": "no_subterm", "handled": true}]}, "chat": [], "original": "apply raft_net_invariant'. - apply raft_net_invariant_init. intros. unfold state_machine_log. unfold state_machine_safety. destruct smsi. apply state_machine_safety_invariant. - intros. apply raft_invariant_handle_message'. apply H0. apply H1. - intros. apply raft_invariant_handle_message'. apply H0. apply H1. - intros. apply raft_invariant_handle_message'. apply H0. apply H1. - intros. apply raft_invariant_handle_message'. apply H0. apply H1. - intros. apply raft_invariant_handle_message'. apply H0. apply H1. - intros. apply raft_invariant_handle_message'. apply H0. apply H1. - intros. apply raft_invariant_handle_message'. apply H0. apply H1. - intros. apply raft_invariant_handle_message'. apply H0. apply H1. - intros. apply raft_net_invariant_state_same_packet_subset. eauto. - intros. apply raft_invariant_handle_message'. apply H0. apply H1.", "back_times": 0, "succ": false, "time": 174.36844205856323}]