[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros net st' ps' d h os d' ms H H0 H1 H2 H3 H4.", "intros.", "specialize (log_matching_invariant net H1).", "intros.", "specialize (state_machine_safety_invariant net H1).", "intros.", "specialize (max_index_sanity_invariant net H1).", "intros."], "tactic": "apply functional_extensionality.", "exn": "The reference functional_extensionality was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros net st' ps' d h os d' ms H H0 H1 H2 H3 H4.", "intros.", "specialize (log_matching_invariant net H1).", "intros.", "specialize (state_machine_safety_invariant net H1).", "intros.", "specialize (max_index_sanity_invariant net H1).", "intros.", "apply fast_Zred_factor6."], "tactic": "rewrite H3.", "exn": "Found no subterm matching \"nwState net h\" in the current goal.", "type": "no_subterm", "handled": true}, {"ctx": ["intros net st' ps' d h os d' ms H H0 H1 H2 H3 H4.", "intros.", "specialize (log_matching_invariant net H1).", "intros.", "specialize (state_machine_safety_invariant net H1).", "intros.", "specialize (max_index_sanity_invariant net H1).", "intros.", "apply fast_Zred_factor6.", "qsimpl time: 1."], "tactic": "rewrite H4.", "exn": "Found no subterm matching \"st' ?M2321\" in the current goal.", "type": "no_subterm", "handled": true}, {"ctx": ["intros net st' ps' d h os d' ms H H0 H1 H2 H3 H4.", "intros.", "specialize (log_matching_invariant net H1).", "intros.", "specialize (state_machine_safety_invariant net H1).", "intros.", "specialize (max_index_sanity_invariant net H1).", "intros.", "apply fast_Zred_factor6.", "qsimpl time: 1.", "qsimpl time: 1.", "unfold doLeader in H."], "tactic": "destruct (applyEntries h d (rev (filter (fun x => (lastApplied d <? eIndex x) && (eIndex x <=? commitIndex d)) (findGtIndex (log d) (lastApplied d))))) as [out st0].", "exn": "The reference d was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros net st' ps' d h os d' ms H H0 H1 H2 H3 H4.", "intros.", "specialize (log_matching_invariant net H1).", "intros.", "specialize (state_machine_safety_invariant net H1).", "intros.", "specialize (max_index_sanity_invariant net H1).", "intros.", "apply fast_Zred_factor6.", "qsimpl time: 1.", "qsimpl time: 1.", "unfold doLeader in H."], "tactic": "destruct (if lastApplied st0 <? commitIndex st0 then commitIndex st0 else lastApplied st0).", "exn": "The reference st0 was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros net st' ps' d h os d' ms H H0 H1 H2 H3 H4.", "intros.", "specialize (log_matching_invariant net H1).", "intros.", "specialize (state_machine_safety_invariant net H1).", "intros.", "specialize (max_index_sanity_invariant net H1).", "intros.", "apply fast_Zred_factor6.", "qsimpl time: 1.", "qsimpl time: 1.", "unfold doLeader in H.", "destruct (if lastApplied d' <? commitIndex d' then commitIndex d' else lastApplied d').", "simpl in H."], "tactic": ["rewrite <- H1.", ""], "exn": "Cannot find an homogeneous relation to rewrite.", "type": "no_rewrite_homo", "handled": false}]}, "chat": [], "original": "intros net st' ps' d h os d' ms H H0 H1 H2 H3 H4. unfold raft_net_invariant_do_leader'. intros. specialize (log_matching_invariant net H1). intros. specialize (state_machine_safety_invariant net H1). intros. specialize (max_index_sanity_invariant net H1). intros. apply functional_extensionality. intros. unfold state_machine_log. rewrite H3. rewrite H4. unfold doLeader in H. destruct (applyEntries h d (rev (filter (fun x => (lastApplied d <? eIndex x) && (eIndex x <=? commitIndex d)) (findGtIndex (log d) (lastApplied d))))) as [out st0]. destruct (if lastApplied st0 <? commitIndex st0 then commitIndex st0 else lastApplied st0). simpl in H. rewrite <- H1. auto.", "back_times": 0, "succ": false, "time": 465.05277943611145}]