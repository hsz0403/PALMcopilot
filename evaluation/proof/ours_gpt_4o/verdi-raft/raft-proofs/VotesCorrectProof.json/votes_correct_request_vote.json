[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros net H."], "tactic": "apply append_entries_request_term_sanity_invariant.", "exn": "The reference append_entries_request_term_sanity_invariant was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros net H."], "tactic": "apply lift_prop with (P := logs_sorted).", "exn": "The reference logs_sorted was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros net H.", "intros."], "tactic": "apply logs_sorted_invariant.", "exn": "The reference logs_sorted_invariant was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros net H.", "intros.", "apply refined_raft_net_invariant."], "tactic": "apply simulation_1.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params rri : raft_refinement_interface vlcti : votes_le_current_term_interface net : list packet H : packet ys : list packet net0 : network st' : name -> data ps' : list packet gd : electionsData d : raft_data m : msg t : nat cid : name lli, llt : nat H0 : handleRequestVote (pDst H) (snd (nwState net0 (pDst H))) t (pSrc H) lli llt = (d, m) H1 : gd = update_elections_data_requestVote (pDst H) (pSrc H) t (pSrc H) lli llt (nwState net0 (pDst H)) H2 : pBody H = RequestVote t cid lli llt H3 : votes_correct net0 H4 : refined_raft_intermediate_reachable net0 H5 : nwPackets net0 = net ++ H :: ys H6 : forall h : name, st' h = update name_eq_dec (nwState net0) (pDst H) (gd, d) h H7 : forall p' : packet, In p' ps' -> In p' (net ++ ys) \\\\/ p' = {| pSrc := pDst H; pDst := pSrc H; pBody := m |} Unable to unify \"raft_intermediate_reachable (GhostSimulations.deghost ?M1649)\" with \"one_vote_per_term step_async_init /\\\\ votes_currentTerm_votedFor_correct step_async_init /\\\\ currentTerm_votedFor_votes_correct step_async_init\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros net H.", "intros.", "apply refined_raft_net_invariant.", "qsimpl time: 1 use: simulation_1.", "-"], "tactic": "apply refined_raft_net_invariant with (net := deghost net).", "exn": "The reference deghost was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros net H.", "intros.", "apply refined_raft_net_invariant.", "qsimpl time: 1 use: simulation_1.", "-"], "tactic": "apply refined_raft_net_invariant_init.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params rri : raft_refinement_interface vlcti : votes_le_current_term_interface net : list packet H : packet ys : list packet net0 : network st' : name -> data ps' : list packet gd : electionsData d : raft_data m : msg t : nat cid : name lli, llt : nat H0 : handleRequestVote (pDst H) (snd (nwState net0 (pDst H))) t (pSrc H) lli llt = (d, m) H1 : gd = update_elections_data_requestVote (pDst H) (pSrc H) t (pSrc H) lli llt (nwState net0 (pDst H)) H2 : pBody H = RequestVote t cid lli llt H3 : votes_correct net0 H4 : refined_raft_intermediate_reachable net0 H5 : nwPackets net0 = net ++ H :: ys H6 : forall h : name, st' h = update name_eq_dec (nwState net0) (pDst H) (gd, d) h H7 : forall p' : packet, In p' ps' -> In p' (net ++ ys) \\\\/ p' = {| pSrc := pDst H; pDst := pSrc H; pBody := m |} Unable to unify \"Prop\" with \"refined_raft_net_invariant_client_request votes_correct\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros net H.", "intros.", "apply refined_raft_net_invariant.", "qsimpl time: 1 use: simulation_1.", "-", "qsimpl time: 1 use: simulation_1,refined_raft_net_invariant_init."], "tactic": "apply refined_raft_net_invariant_client_request.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params X : (network -> Prop) -> Prop H8 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (GhostSimulations.deghost net) net : list packet H : packet ys : list packet net0 : network st' : name -> electionsData * raft_data ps' : list packet d : raft_data m : msg t : nat cid : name lli, llt : nat H0 : handleRequestVote (pDst H) (snd (nwState net0 (pDst H))) t (pSrc H) lli llt = (d, m) H2 : pBody H = RequestVote t cid lli llt H4 : refined_raft_intermediate_reachable net0 H5 : nwPackets net0 = net ++ H :: ys H6 : forall h : name, st' h = update name_eq_dec (nwState net0) (pDst H) (update_elections_data_requestVote (pDst H) (pSrc H) t (pSrc H) lli llt (nwState net0 (pDst H)), d) h H7 : forall p' : packet, In p' ps' -> In p' (net ++ ys) \\\\/ p' = {| pSrc := pDst H; pDst := pSrc H; pBody := m |} H1 : one_vote_per_term net0 H3 : votes_currentTerm_votedFor_correct net0 H10 : currentTerm_votedFor_votes_correct net0 votes_le_current_term_invariant : forall net : network, refined_raft_intermediate_reachable net -> votes_le_currentTerm net refined_raft_net_invariant : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (GhostSimulations.deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (GhostSimulations.deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) Unable to unify \"Prop\" with \"refined_raft_net_invariant_client_request votes_correct\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros net H.", "intros.", "apply refined_raft_net_invariant.", "qsimpl time: 1 use: simulation_1.", "-", "qsimpl time: 1 use: simulation_1,refined_raft_net_invariant_init.", "qsimpl time: 1 use: refined_raft_net_invariant_client_request,simulation_1,refined_raft_net_invariant_init."], "tactic": "apply refined_raft_net_invariant_timeout.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params X0, X : (network -> Prop) -> Prop H8 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (GhostSimulations.deghost net) net : list packet H : packet ys : list packet net0 : network st' : name -> electionsData * raft_data ps' : list packet d : raft_data m : msg t : nat cid : name lli, llt : nat H0 : handleRequestVote (pDst H) (snd (nwState net0 (pDst H))) t (pSrc H) lli llt = (d, m) H2 : pBody H = RequestVote t cid lli llt H4 : refined_raft_intermediate_reachable net0 H5 : nwPackets net0 = net ++ H :: ys H6 : forall h : name, st' h = update name_eq_dec (nwState net0) (pDst H) (update_elections_data_requestVote (pDst H) (pSrc H) t (pSrc H) lli llt (nwState net0 (pDst H)), d) h H7 : forall p' : packet, In p' ps' -> In p' (net ++ ys) \\\\/ p' = {| pSrc := pDst H; pDst := pSrc H; pBody := m |} H1 : one_vote_per_term net0 H3 : votes_currentTerm_votedFor_correct net0 H10 : currentTerm_votedFor_votes_correct net0 votes_le_current_term_invariant : forall net : network, refined_raft_intermediate_reachable net -> votes_le_currentTerm net refined_raft_net_invariant : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (GhostSimulations.deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (GhostSimulations.deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) H9 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (GhostSimulations.deghost net) P : (network -> Prop) -> Prop Unable to unify \"Prop\" with \"P votes_correct\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros net H. apply append_entries_request_term_sanity_invariant. apply lift_prop with (P := logs_sorted). - intros. apply logs_sorted_invariant. apply simulation_1. auto. - apply refined_raft_net_invariant with (net := deghost net). + apply refined_raft_net_invariant_init. + apply refined_raft_net_invariant_client_request. + apply refined_raft_net_invariant_timeout. + apply refined_raft_net_invariant_append_entries. + apply refined_raft_net_invariant_append_entries_reply. + apply refined_raft_net_invariant_request_vote. + apply refined_raft_net_invariant_request_vote_reply. + apply refined_raft_net_invariant_do_leader. + apply refined_raft_net_invariant_do_generic_server. + apply refined_raft_net_invariant_state_same_packet_subset. + apply refined_raft_net_invariant_reboot. + intros. apply lift_sorted. auto. + apply simulation_1. apply ghost_invariant_lower with (P := logs_sorted). * intros. apply ghost_simulation_1. auto. * apply logs_sorted_invariant. auto.", "back_times": 0, "succ": false, "time": 201.8359076976776}]