[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": [], "tactic": "pose proof (refined_raft_net_invariant _ _ _ _ _ (requestVoteReply_term_sanity_invariant rvtsi)) as H.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params rri : raft_refinement_interface rvtsi : requestVote_term_sanity_interface The term \"rvtsi\" has type \"requestVote_term_sanity_interface\" while it is expected to have type \"network\".", "type": "wrong_type", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant,requestVoteReply_term_sanity_invariant.", "intros net st' ps' gd d h os d' ms Hdo P_reachable H_reachable HState Hst' Hps'."], "tactic": "eapply (H net); eauto.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params rri : raft_refinement_interface rvtsi : requestVote_term_sanity_interface H0 : forall net : network, refined_raft_intermediate_reachable net -> requestVoteReply_term_sanity net H : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net net : network st' : name -> data ps' : list packet gd : GhostSimulations.ghost_data d : raft_data h : list raft_output os : raft_data d' : list (name * msg) ms : name Hdo : doGenericServer ms d = (h, os, d') P_reachable : requestVoteReply_term_sanity net H_reachable : refined_raft_intermediate_reachable net HState : nwState net ms = (gd, d) Hst' : forall h' : name, st' h' = update name_eq_dec (nwState net) ms (gd, os) h' Hps' : forall p : packet, In p ps' -> In p (nwPackets net) \\\\/ In p (send_packets ms d') The term \"net\" has type \"network\" while it is expected to have type \"network -> Prop\".", "type": "wrong_type", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant,requestVoteReply_term_sanity_invariant.", "intros net st' ps' gd d h os d' ms Hdo P_reachable H_reachable HState Hst' Hps'.", "qsimpl time: 1 use: refined_raft_net_invariant,requestVoteReply_term_sanity_invariant.", "-"], "tactic": "intros ? ? ? ? ? HdoLeader _ _ ? Hst'' ?.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}]}, "chat": [], "original": "pose proof (refined_raft_net_invariant _ _ _ _ _ (requestVoteReply_term_sanity_invariant rvtsi)) as H. intros net st' ps' gd d h os d' ms Hdo P_reachable H_reachable HState Hst' Hps'. eapply (H net); eauto. - unfold refined_raft_net_invariant_do_leader. simpl. intros ? ? ? ? ? HdoLeader _ _ ? Hst'' ?. eapply requestVoteReply_term_sanity_invariant; eauto. intros; subst; eauto.", "back_times": 0, "succ": false, "time": 86.41402554512024}]