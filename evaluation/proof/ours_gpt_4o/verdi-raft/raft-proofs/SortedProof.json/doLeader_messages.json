[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": [], "tactic": ["apply raft_net_invariant.", ""], "exn": "Applied theorem does not have enough premises.", "type": "no_enough_premises", "handled": false}]}, "chat": [], "original": "apply raft_net_invariant. - apply logs_sorted_invariant. - intros. eauto using SortedInterface.handleClientRequest_logs_sorted, logs_sorted_host. - intros. eauto using SortedInterface.handleAppendEntries_logs_sorted, logs_sorted_nw. - apply logs_sorted_invariant. - intros. eauto using SortedInterface.handleClientRequest_logs_sorted, logs_sorted_host. - intros. eauto using SortedInterface.handleAppendEntries_logs_sorted, logs_sorted_nw. - intros. eauto using SortedInterface.handleClientRequest_logs_sorted, logs_sorted_host. - intros. unfold raft_net_invariant_do_generic_server. intros. unfold logs_sorted. split. ++ unfold logs_sorted_host. intros. subst. specialize (logs_sorted_invariant net H1). destruct logs_sorted_invariant as (Hh, _). apply Hh. ++ unfold logs_sorted_nw. intros. specialize (logs_sorted_invariant net H1). destruct logs_sorted_invariant as (_, Hnw). eapply H4. rewrite H6. eauto. - intros. subst. auto. - intros. subst. eauto. - eapply no_entries_past_current_term_invariant.", "back_times": 0, "succ": false, "time": 33.624571084976196}]