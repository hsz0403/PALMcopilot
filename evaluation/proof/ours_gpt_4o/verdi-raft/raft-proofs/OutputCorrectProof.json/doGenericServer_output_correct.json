[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros h ps sigma os st' ms Hreach HdoGenServer HinOutList.", "unfold doGenericServer in HdoGenServer.", "break_match_hyp."], "tactic": "eapply in_output_list_split in HinOutList.", "exn": "Unable to apply lemma of type \"forall l l' : list raft_output, in_output_list client id out (l ++ l') -> in_output_list client id out l \\\\/ in_output_list client id out l'\" on hypothesis of type \"in_output_list client id out os\".", "type": "cannot_apply_in", "handled": true}]}, "chat": [], "original": "intros h ps sigma os st' ms Hreach HdoGenServer HinOutList. unfold doGenericServer in HdoGenServer. break_match_hyp. eapply in_output_list_split in HinOutList. destruct HinOutList as [HinOutList | HinOutList]. - exfalso. eapply handleInput_key_in_output_list; eauto. - eapply in_output_list_cons_or in HinOutList. destruct HinOutList as [[Heq HoutEq]|HinOutList]; [ | exfalso; eapply doLeader_key_in_output_list; eauto]. subst. unfold output_correct. repeat eexists. + eapply doGenericServer_commitIndex; eauto. + eapply doLeader_same_log; eauto. + eapply applied_entries_log_lastApplied_same. * eapply doLeader_same_log; eauto. * eapply handleClientRequest_lastApplied; eauto. + eapply applied_entries_safe_update. * eapply handleClientRequest_lastApplied; eauto. * eapply removeAfterIndex_commutes; eauto.", "back_times": 0, "succ": false, "time": 154.33060479164124}]