[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros st h h' t lli llt st' m H."], "tactic": "destruct (t <? currentTerm st) eqn:Htc.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params rri : raft_refinement_interface naetli : no_append_entries_to_leader_interface naetsi : no_append_entries_to_self_interface taifoli : terms_and_indices_from_one_log_interface rlmli : refined_log_matching_lemmas_interface laei : log_all_entries_interface aelli : append_entries_leaderLogs_interface lsi : leader_sublog_interface lhllsi : leaders_have_leaderLogs_strong_interface ollpti : one_leaderLog_per_term_interface mili : match_index_leader_interface matchisi : match_index_sanity_interface aersi : append_entries_reply_sublog_interface cei : candidate_entries_interface vci : votes_correct_interface cci : cronies_correct_interface st : network h : name -> data h' : list packet t : GhostSimulations.ghost_data lli : raft_data llt : list raft_output st' : raft_data m : list (name * msg) H : name The term \"t\" has type \"GhostSimulations.ghost_data\" while it is expected to have type \"nat\".", "type": "wrong_type", "handled": true}]}, "chat": [], "original": "intros st h h' t lli llt st' m H. unfold handleRequestVote in H. destruct (t <? currentTerm st) eqn:Htc. - exists (currentTerm st). exists false. inversion H. reflexivity. - destruct ((if leaderId (advanceCurrentTerm st t) then false else true) && moreUpToDate llt lli (maxTerm (log (advanceCurrentTerm st t))) (maxIndex (log (advanceCurrentTerm st t)))) eqn:Hlogic. + exists t. exists true. inversion H. reflexivity. + exists t. exists false. inversion H. reflexivity.", "back_times": 0, "succ": false, "time": 85.98165988922119}]