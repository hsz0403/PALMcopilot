[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros h st t n pli plt es ci st' m Ht Hhandle Htype."], "tactic": "destruct (t <? currentTerm st) eqn:Heq.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params rri : raft_refinement_interface naetli : no_append_entries_to_leader_interface naetsi : no_append_entries_to_self_interface taifoli : terms_and_indices_from_one_log_interface rlmli : refined_log_matching_lemmas_interface laei : log_all_entries_interface aelli : append_entries_leaderLogs_interface lsi : leader_sublog_interface lhllsi : leaders_have_leaderLogs_strong_interface ollpti : one_leaderLog_per_term_interface mili : match_index_leader_interface matchisi : match_index_sanity_interface aersi : append_entries_reply_sublog_interface cei : candidate_entries_interface vci : votes_correct_interface cci : cronies_correct_interface h : network st : name -> data t : list packet n : GhostSimulations.ghost_data pli : raft_data plt : name es : list raft_output ci : raft_data st' : list (name * msg) m : doLeader pli plt = (es, ci, st') Ht : match_index_all_entries_inv h Hhandle : refined_raft_intermediate_reachable h Htype : nwState h plt = (n, pli) The term \"t\" has type \"list packet\" while it is expected to have type \"nat\".", "type": "wrong_type", "handled": true}]}, "chat": [], "original": "intros h st t n pli plt es ci st' m Ht Hhandle Htype. unfold handleAppendEntries in Hhandle. destruct (t <? currentTerm st) eqn:Heq. - inversion Hhandle. subst. exfalso. apply Ht. auto. - destruct (pli =? 0) eqn:Hpli. + destruct (haveNewEntries st es) eqn:Hhave. * inversion Hhandle. subst. exfalso. congruence. * inversion Hhandle. subst. reflexivity. + inversion Hhandle. subst. exfalso. congruence.", "back_times": 0, "succ": false, "time": 98.85022497177124}]