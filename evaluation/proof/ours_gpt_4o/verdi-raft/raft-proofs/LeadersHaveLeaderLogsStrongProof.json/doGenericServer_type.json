[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros h st os st' ms Hgen.", "pose proof doGenericServer_commitIndex as Hci.", "pose proof doGenericServer h st as H."], "tactic": ["rewrite H in Hgen.", ""], "exn": "Cannot find an homogeneous relation to rewrite.", "type": "no_rewrite_homo", "handled": false}]}, "chat": [], "original": "intros h st os st' ms Hgen. pose proof doGenericServer_commitIndex as Hci. pose proof doGenericServer h st as H. rewrite H in Hgen. apply doGenericServer_commitIndex in Hgen. simpl in Hgen. destruct (applyEntries h st (rev (filter (fun x : entry => (_ <? eIndex x) && (eIndex x <=? _)) (findGtIndex (log st) (lastApplied st))))) as [out state'] eqn:Hae. assert (Htmp: log st' = log st /\\ currentTerm st' = currentTerm st /\\ type st' = type st). - split. -- rewrite <- Hae. reflexivity. -- split. ++ rewrite <- Hae. reflexivity. ++ rewrite <- Hae. reflexivity. destruct Htmp as [Hlog [Hterm Htype]]. split. - apply Htype. - split. -- apply Hterm. -- apply Hlog.", "back_times": 0, "succ": false, "time": 165.54709315299988}]