[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": [], "tactic": "apply refined_raft_net_invariant_request_vote'_weak.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params rri : raft_refinement_interface ctgli : candidate_term_gt_log_interface Unable to unify \"network -> Prop\" with \"network\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak."], "tactic": "intros net H.", "exn": "net is already used.", "type": "used_var", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak."], "tactic": "intros net' H.", "exn": "H is already used.", "type": "used_var", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak.", "intros net' H'."], "tactic": "apply refined_raft_net_invariant.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params H : forall net : network -> Prop, refined_raft_net_invariant_request_vote net -> refined_raft_net_invariant_request_vote' net net : network H0 : refined_raft_intermediate_reachable net candidate_term_gt_log_invariant : forall net : network, raft_intermediate_reachable net -> candidate_term_gt_log net refined_raft_net_invariant : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (deghost net) net' : Net.name H' : term Unable to unify \"forall net net' : network, (forall h : Net.name, nwState net h = nwState net' h) -> (forall p : packet, In p (nwPackets net') -> In p (nwPackets net)) -> ?M4973 net -> refined_raft_intermediate_reachable net -> ?M4973 net'\" with \"list entry\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak.", "intros net' H'.", "qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak."], "tactic": "apply leaderLogs_currentTerm_sanity_candidate_invariant.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params H1 : forall net : network -> Prop, refined_raft_net_invariant_request_vote net -> refined_raft_net_invariant_request_vote' net net : network H0 : refined_raft_intermediate_reachable net candidate_term_gt_log_invariant : forall net : network, raft_intermediate_reachable net -> candidate_term_gt_log net refined_raft_net_invariant : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (deghost net) net' : name H' : term log : list entry H2 : In (H', log) (leaderLogs (fst (nwState net net'))) H3 : type (snd (nwState net net')) = Candidate Unable to unify \"forall (h : Net.name) (t : term) (log0 : list entry), In (t, log0) (leaderLogs (fst (nwState ?M5753 h))) -> type (snd (nwState ?M5753 h)) = Candidate -> t < currentTerm (snd (nwState ?M5753 h))\" with \"S H' <= currentTerm (snd (nwState net net'))\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak.", "intros net' H'.", "qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak.", "qsimpl time: 1 use: leaderLogs_currentTerm_sanity_candidate_invariant,refined_raft_net_invariant_request_vote'_weak.", "-", "intros; eapply leaderLogs_currentTerm_invariant; eauto."], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak.", "intros net' H'.", "qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak.", "qsimpl time: 1 use: leaderLogs_currentTerm_sanity_candidate_invariant,refined_raft_net_invariant_request_vote'_weak.", "-", "intros; eapply leaderLogs_currentTerm_invariant; eauto.", "shelve.", "-"], "tactic": "intros; eapply LeaderLogsTermSanityInterface.leaderLogs_term_sanity_invariant; eauto.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params H1 : forall net : network -> Prop, refined_raft_net_invariant_request_vote net -> refined_raft_net_invariant_request_vote' net net : network H0 : refined_raft_intermediate_reachable net candidate_term_gt_log_invariant : forall net : network, raft_intermediate_reachable net -> candidate_term_gt_log net refined_raft_net_invariant : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (deghost net) net' : name H' : term log : list entry H2 : In (H', log) (leaderLogs (fst (nwState net net'))) H3 : type (snd (nwState net net')) = Candidate Unable to unify \"forall (h : Net.name) (t : term) (log0 : list entry) (e : entry), In (t, log0) (leaderLogs (fst (nwState ?M8432 h))) -> In e log0 -> eTerm e < t\" with \"leaderLogs_term_sanity_interface\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak.", "intros net' H'.", "qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak.", "qsimpl time: 1 use: leaderLogs_currentTerm_sanity_candidate_invariant,refined_raft_net_invariant_request_vote'_weak.", "-", "intros; eapply leaderLogs_currentTerm_invariant; eauto.", "shelve.", "-", "qsimpl time: 1 use: leaderLogs_currentTerm_sanity_candidate_invariant,refined_raft_net_invariant_request_vote'_weak."], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak.", "intros net' H'.", "qsimpl time: 1 use: refined_raft_net_invariant_request_vote'_weak.", "qsimpl time: 1 use: leaderLogs_currentTerm_sanity_candidate_invariant,refined_raft_net_invariant_request_vote'_weak.", "-", "intros; eapply leaderLogs_currentTerm_invariant; eauto.", "shelve.", "-", "qsimpl time: 1 use: leaderLogs_currentTerm_sanity_candidate_invariant,refined_raft_net_invariant_request_vote'_weak.", "+", "shelve.", "+", "shelve."], "tactic": "-", "exn": "Wrong bullet -: No more subgoals.", "type": "no_more_subgoals", "handled": true}]}, "chat": [], "original": "apply refined_raft_net_invariant_request_vote'_weak. intros net H. apply refined_raft_net_invariant. - apply leaderLogs_currentTerm_sanity_candidate_invariant. - intros; eapply leaderLogs_currentTerm_invariant; eauto. - intros; eapply LeaderLogsTermSanityInterface.leaderLogs_term_sanity_invariant; eauto. - eapply rri.", "back_times": 0, "succ": false, "time": 178.2862639427185}]