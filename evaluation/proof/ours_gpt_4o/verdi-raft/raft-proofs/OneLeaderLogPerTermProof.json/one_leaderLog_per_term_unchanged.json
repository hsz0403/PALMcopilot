[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": [], "tactic": "apply refined_raft_net_invariant with (P := one_leaderLog_per_term).", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params rri : raft_refinement_interface llvwli : leaderLogs_votesWithLog_interface vci : votes_correct_interface cci : cronies_correct_interface vvci : votes_votesWithLog_correspond_interface lltsi : leaderLogs_term_sanity_interface Unable to unify \"forall (xs : list packet) (p : packet) (ys : list packet) (net : network) (st' : name -> data) (ps' : list packet) (gd : electionsData) (d : raft_data) (m : msg) (t : term) (n : name) (pli : logIndex) (plt : term) (es : list entry) (ci : logIndex), handleAppendEntries (pDst p) (snd (nwState net (pDst p))) t n pli plt es ci = (d, m) -> gd = update_elections_data_appendEntries (pDst p) (nwState net (pDst p)) t n pli plt es ci -> pBody p = AppendEntries t n pli plt es ci -> one_leaderLog_per_term net -> refined_raft_intermediate_reachable net -> nwPackets net = xs ++ p :: ys -> (forall h : name, st' h = update name_eq_dec (nwState net) (pDst p) (gd, d) h) -> (forall p' : packet, In p' ps' -> In p' (xs ++ ys) \\\\/ p' = {| pSrc := pDst p; pDst := pSrc p; pBody := m |}) -> one_leaderLog_per_term {| nwPackets := ps'; nwState := st' |}\" with \"network\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: one_leaderLog_per_term,refined_raft_net_invariant."], "tactic": "apply one_leaderLog_per_term_invariant.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params H : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net P : network -> Prop net : network st' : name -> electionsData * raft_data ps' : list packet h : name gd : electionsData d : raft_data H0 : P net H1 : forall h' : name, st' h' = update name_eq_dec (nwState net) h (gd, d) h' H2 : leaderLogs gd = leaderLogs (fst (nwState net h)) leaderLogs_term_sanity_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_term_sanity net leaderLogs_currentTerm_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_currentTerm_sanity net leaderLogs_currentTerm_sanity_candidate_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_currentTerm_sanity_candidate net votes_votesWithLog_correspond_invariant : forall net : network, refined_raft_intermediate_reachable net -> votes_votesWithLog_correspond net cronies_correct_invariant : forall net : network, refined_raft_intermediate_reachable net -> cronies_correct net votes_correct_invariant : forall net : network, refined_raft_intermediate_reachable net -> votes_correct net leaderLogs_votesWithLog_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_votesWithLog net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (deghost net) Unable to unify \"forall (h0 h' : Net.name) (t : term) (ll ll' : list entry), In (t, ll) (leaderLogs (fst (nwState ?M3810 h0))) -> In (t, ll') (leaderLogs (fst (nwState ?M3810 h'))) -> h0 = h' /\\\\ ll = ll'\" with \"P {| nwPackets := ps'; nwState := st' |}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: one_leaderLog_per_term,refined_raft_net_invariant.", "qsimpl time: 1 use: one_leaderLog_per_term,refined_raft_net_invariant,one_leaderLog_per_term_invariant.", "-"], "tactic": "apply one_leaderLog_per_term_log_invariant.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params H : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net P : network -> Prop net : network st' : name -> electionsData * raft_data ps' : list packet h : name gd : electionsData d : raft_data H0 : P net H1 : forall h' : name, st' h' = update name_eq_dec (nwState net) h (gd, d) h' H2 : leaderLogs gd = leaderLogs (fst (nwState net h)) leaderLogs_term_sanity_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_term_sanity net leaderLogs_currentTerm_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_currentTerm_sanity net leaderLogs_currentTerm_sanity_candidate_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_currentTerm_sanity_candidate net votes_votesWithLog_correspond_invariant : forall net : network, refined_raft_intermediate_reachable net -> votes_votesWithLog_correspond net cronies_correct_invariant : forall net : network, refined_raft_intermediate_reachable net -> cronies_correct net votes_correct_invariant : forall net : network, refined_raft_intermediate_reachable net -> votes_correct net leaderLogs_votesWithLog_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_votesWithLog net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (deghost net) H4 : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term net H3 : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net X0 : Prop Unable to unify \"forall (h0 h' : Net.name) (t : term) (ll ll' : list entry), In (t, ll) (leaderLogs (fst (nwState ?M10350 h0))) -> In (t, ll') (leaderLogs (fst (nwState ?M10350 h'))) -> ll = ll'\" with \"P {| nwPackets := ps'; nwState := st' |}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: one_leaderLog_per_term,refined_raft_net_invariant.", "qsimpl time: 1 use: one_leaderLog_per_term,refined_raft_net_invariant,one_leaderLog_per_term_invariant.", "-", "qsimpl time: 1 use: one_leaderLog_per_term,refined_raft_net_invariant,one_leaderLog_per_term_invariant,one_leaderLog_per_term_log_invariant."], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["qsimpl time: 1 use: one_leaderLog_per_term,refined_raft_net_invariant.", "qsimpl time: 1 use: one_leaderLog_per_term,refined_raft_net_invariant,one_leaderLog_per_term_invariant.", "-", "qsimpl time: 1 use: one_leaderLog_per_term,refined_raft_net_invariant,one_leaderLog_per_term_invariant,one_leaderLog_per_term_log_invariant.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "-"], "tactic": "apply one_leaderLog_per_term_host_invariant.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params H : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net P : network -> Prop net : network st' : name -> electionsData * raft_data ps' : list packet h : name gd : electionsData d : raft_data H0 : P net H1 : forall h' : name, st' h' = update name_eq_dec (nwState net) h (gd, d) h' H2 : leaderLogs gd = leaderLogs (fst (nwState net h)) leaderLogs_term_sanity_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_term_sanity net leaderLogs_currentTerm_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_currentTerm_sanity net leaderLogs_currentTerm_sanity_candidate_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_currentTerm_sanity_candidate net votes_votesWithLog_correspond_invariant : forall net : network, refined_raft_intermediate_reachable net -> votes_votesWithLog_correspond net cronies_correct_invariant : forall net : network, refined_raft_intermediate_reachable net -> cronies_correct net votes_correct_invariant : forall net : network, refined_raft_intermediate_reachable net -> votes_correct net leaderLogs_votesWithLog_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_votesWithLog net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (deghost net) Unable to unify \"forall (h0 h' : Net.name) (t : term) (ll ll' : list entry), In (t, ll) (leaderLogs (fst (nwState ?M20911 h0))) -> In (t, ll') (leaderLogs (fst (nwState ?M20911 h'))) -> h0 = h'\" with \"one_leaderLog_per_term_interface\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: one_leaderLog_per_term,refined_raft_net_invariant.", "qsimpl time: 1 use: one_leaderLog_per_term,refined_raft_net_invariant,one_leaderLog_per_term_invariant.", "-", "qsimpl time: 1 use: one_leaderLog_per_term,refined_raft_net_invariant,one_leaderLog_per_term_invariant,one_leaderLog_per_term_log_invariant.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "-", "qsimpl time: 1 use: one_leaderLog_per_term_invariant,one_leaderLog_per_term_host_invariant,one_leaderLog_per_term,one_leaderLog_per_term_log_invariant,refined_raft_net_invariant."], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["qsimpl time: 1 use: one_leaderLog_per_term,refined_raft_net_invariant.", "qsimpl time: 1 use: one_leaderLog_per_term,refined_raft_net_invariant,one_leaderLog_per_term_invariant.", "-", "qsimpl time: 1 use: one_leaderLog_per_term,refined_raft_net_invariant,one_leaderLog_per_term_invariant,one_leaderLog_per_term_log_invariant.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "-", "qsimpl time: 1 use: one_leaderLog_per_term_invariant,one_leaderLog_per_term_host_invariant,one_leaderLog_per_term,one_leaderLog_per_term_log_invariant,refined_raft_net_invariant.", "+", "shelve.", "+", "shelve.", "+", "shelve."], "tactic": "-", "exn": "Wrong bullet -: No more subgoals.", "type": "no_more_subgoals", "handled": true}]}, "chat": [], "original": "apply refined_raft_net_invariant with (P := one_leaderLog_per_term). - apply one_leaderLog_per_term_invariant. - apply one_leaderLog_per_term_log_invariant. - apply one_leaderLog_per_term_host_invariant. - apply leaderLogs_term_sanity_interface. - apply llvwli. - apply vci. - apply cci. - apply vvci. - apply lltsi.", "back_times": 0, "succ": false, "time": 165.39308834075928}]