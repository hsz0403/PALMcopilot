[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros n st src t v H.", "pose proof handleRequestVoteReply_type as Htype."], "tactic": "specialize (Htype n st src t v (handleRequestVoteReply n st src t v) eq_refl).", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params aersi : append_entries_reply_sublog_interface si : sorted_interface n : RaftState.raft_data term name entry logIndex serverType data clientId output st : name src : fin N t, v, H : nat Htype : forall (h : name) (st : RaftState.raft_data term name entry logIndex serverType data clientId output) (h' : name) (t : nat) (r : bool) (st' : raft_data), handleRequestVoteReply h st h' t r = st' -> type st' = type st /\\\\ currentTerm st' = currentTerm st \\\\/ type st' = Follower /\\\\ currentTerm st' > currentTerm st \\\\/ type st = Candidate /\\\\ type st' = Leader /\\\\ currentTerm st' = currentTerm st The term \"n\" has type \"RaftState.raft_data term name entry logIndex serverType data clientId output\" while it is expected to have type \"name\".", "type": "wrong_type", "handled": true}]}, "chat": [], "original": "intros n st src t v H. pose proof handleRequestVoteReply_type as Htype. specialize (Htype n st src t v (handleRequestVoteReply n st src t v) eq_refl). rewrite H in Htype. destruct Htype as [[Htype_eq _] | [Hfollower _]]. - split. + auto. + pose proof handleRequestVoteReply_matchIndex as Hmi. specialize (Hmi n st src t v). rewrite H in Hmi. destruct Hmi as [Hleader | _]. left. pose proof handleRequestVoteReply_same_log as Hlog. specialize (Hlog n st src t v). rewrite Hlog. reflexivity. - exfalso. discriminate.", "back_times": 0, "succ": false, "time": 101.23980522155762}]