[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros xs p ys net st' ps' d m t es res H1 H2 H3 H4 H5 H6."], "tactic": "eapply prevLog_leader_sublog_invariant.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params rri : raft_refinement_interface vci : votes_correct_interface cci : cronies_correct_interface lsi : leader_sublog_interface plceti : prevLog_candidateEntriesTerm_interface xs : network p : raft_intermediate_reachable xs ys, net : packet st' : term ps' : name d : logIndex m : term t : list entry es : logIndex res : In ys (nwPackets xs) H1 : pBody ys = AppendEntries st' ps' d m t es H2 : 0 < m H3 : In net (nwPackets xs) H4 : pBody net = RequestVoteReply m true H5 : currentTerm (nwState xs (pDst net)) = m H6 : wonElection (dedup name_eq_dec (pSrc net :: votesReceived (nwState xs (pDst net)))) = true Unable to unify \"let (name, msg, _, _, nodes, _, _, _, _, _) := multi_params in name\" with \"type (nwState xs (pDst net)) = Candidate\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros xs p ys net st' ps' d m t es res H1 H2 H3 H4 H5 H6.", "qsimpl time: 1 use: prevLog_leader_sublog_invariant.", "-", "eapply raft_net_invariant.", "+"], "tactic": "apply H3.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params rri : raft_refinement_interface vci : votes_correct_interface cci : cronies_correct_interface lsi : leader_sublog_interface plceti : prevLog_candidateEntriesTerm_interface xs : network p : raft_intermediate_reachable xs ys, net : packet st' : term ps' : name d : logIndex m : term t : list entry es : logIndex res : In ys (nwPackets xs) H1 : pBody ys = AppendEntries st' ps' d m t es H2 : 0 < m H3 : In net (nwPackets xs) H4 : pBody net = RequestVoteReply m true H5 : currentTerm (nwState xs (pDst net)) = m H6 : wonElection (if in_dec name_eq_dec (pSrc net) (votesReceived (nwState xs (pDst net))) then dedup name_eq_dec (votesReceived (nwState xs (pDst net))) else pSrc net :: dedup name_eq_dec (votesReceived (nwState xs (pDst net)))) = true H : forall net : network, raft_intermediate_reachable net -> prevLog_leader_sublog net H0 : type (nwState xs (pDst net)) = Candidate Unable to unify \"In net (nwPackets xs)\" with \"raft_net_invariant_init (fun _ : network => False)\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros xs p ys net st' ps' d m t es res H1 H2 H3 H4 H5 H6.", "qsimpl time: 1 use: prevLog_leader_sublog_invariant.", "-", "eapply raft_net_invariant.", "+", "qsimpl time: 1 use: prevLog_leader_sublog_invariant."], "tactic": "+", "exn": "Wrong bullet +: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros xs p ys net st' ps' d m t es res H1 H2 H3 H4 H5 H6.", "qsimpl time: 1 use: prevLog_leader_sublog_invariant.", "-", "eapply raft_net_invariant.", "+", "qsimpl time: 1 use: prevLog_leader_sublog_invariant.", "shelve.", "+"], "tactic": "apply H4.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params rri : raft_refinement_interface vci : votes_correct_interface cci : cronies_correct_interface lsi : leader_sublog_interface plceti : prevLog_candidateEntriesTerm_interface xs : network p : raft_intermediate_reachable xs ys, net : packet st' : term ps' : name d : logIndex m : term t : list entry es : logIndex res : In ys (nwPackets xs) H1 : pBody ys = AppendEntries st' ps' d m t es H2 : 0 < m H3 : In net (nwPackets xs) H4 : pBody net = RequestVoteReply m true H5 : currentTerm (nwState xs (pDst net)) = m H6 : wonElection (if in_dec name_eq_dec (pSrc net) (votesReceived (nwState xs (pDst net))) then dedup name_eq_dec (votesReceived (nwState xs (pDst net))) else pSrc net :: dedup name_eq_dec (votesReceived (nwState xs (pDst net)))) = true H : forall net : network, raft_intermediate_reachable net -> prevLog_leader_sublog net H0 : type (nwState xs (pDst net)) = Candidate Unable to unify \"pBody net = RequestVoteReply m true\" with \"raft_net_invariant_client_request (fun _ : network => False)\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros xs p ys net st' ps' d m t es res H1 H2 H3 H4 H5 H6.", "qsimpl time: 1 use: prevLog_leader_sublog_invariant.", "-", "eapply raft_net_invariant.", "+", "qsimpl time: 1 use: prevLog_leader_sublog_invariant.", "shelve.", "+", "qsimpl time: 1 use: prevLog_leader_sublog_invariant.", "+"], "tactic": "apply H5.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params rri : raft_refinement_interface vci : votes_correct_interface cci : cronies_correct_interface lsi : leader_sublog_interface plceti : prevLog_candidateEntriesTerm_interface xs : network p : raft_intermediate_reachable xs ys, net : packet st' : term ps' : name d : logIndex m : term t : list entry es : logIndex res : In ys (nwPackets xs) H1 : pBody ys = AppendEntries st' ps' d m t es H2 : 0 < m H3 : In net (nwPackets xs) H4 : pBody net = RequestVoteReply m true H5 : currentTerm (nwState xs (pDst net)) = m H6 : wonElection (if in_dec name_eq_dec (pSrc net) (votesReceived (nwState xs (pDst net))) then dedup name_eq_dec (votesReceived (nwState xs (pDst net))) else pSrc net :: dedup name_eq_dec (votesReceived (nwState xs (pDst net)))) = true H : forall net : network, raft_intermediate_reachable net -> prevLog_leader_sublog net H0 : type (nwState xs (pDst net)) = Candidate Unable to unify \"currentTerm (nwState xs (pDst net)) = m\" with \"raft_net_invariant_timeout (fun _ : network => False)\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros xs p ys net st' ps' d m t es res H1 H2 H3 H4 H5 H6.", "qsimpl time: 1 use: prevLog_leader_sublog_invariant.", "-", "eapply raft_net_invariant.", "+", "qsimpl time: 1 use: prevLog_leader_sublog_invariant.", "shelve.", "+", "qsimpl time: 1 use: prevLog_leader_sublog_invariant.", "+", "qsimpl time: 1 use: prevLog_leader_sublog_invariant."], "tactic": "-", "exn": "Wrong bullet -: Expecting +.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros xs p ys net st' ps' d m t es res H1 H2 H3 H4 H5 H6.", "qsimpl time: 1 use: prevLog_leader_sublog_invariant.", "-", "eapply raft_net_invariant.", "+", "qsimpl time: 1 use: prevLog_leader_sublog_invariant.", "shelve.", "+", "qsimpl time: 1 use: prevLog_leader_sublog_invariant.", "+", "qsimpl time: 1 use: prevLog_leader_sublog_invariant.", "+"], "tactic": "apply plceti.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params rri : raft_refinement_interface vci : votes_correct_interface cci : cronies_correct_interface lsi : leader_sublog_interface plceti : prevLog_candidateEntriesTerm_interface xs : network p : raft_intermediate_reachable xs ys, net : packet st' : term ps' : name d : logIndex m : term t : list entry es : logIndex res : In ys (nwPackets xs) H1 : pBody ys = AppendEntries st' ps' d m t es H2 : 0 < m H3 : In net (nwPackets xs) H4 : pBody net = RequestVoteReply m true H5 : currentTerm (nwState xs (pDst net)) = m H6 : wonElection (if in_dec name_eq_dec (pSrc net) (votesReceived (nwState xs (pDst net))) then dedup name_eq_dec (votesReceived (nwState xs (pDst net))) else pSrc net :: dedup name_eq_dec (votesReceived (nwState xs (pDst net)))) = true H : forall net : network, raft_intermediate_reachable net -> prevLog_leader_sublog net H0 : type (nwState xs (pDst net)) = Candidate Unable to unify \"prevLog_candidateEntriesTerm_interface\" with \"raft_net_invariant_append_entries (fun _ : network => False)\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros xs p ys net st' ps' d m t es res H1 H2 H3 H4 H5 H6.", "qsimpl time: 1 use: prevLog_leader_sublog_invariant.", "-", "eapply raft_net_invariant.", "+", "qsimpl time: 1 use: prevLog_leader_sublog_invariant.", "shelve.", "+", "qsimpl time: 1 use: prevLog_leader_sublog_invariant.", "+", "qsimpl time: 1 use: prevLog_leader_sublog_invariant.", "+", "qsimpl time: 1 use: prevLog_leader_sublog_invariant."], "tactic": "-", "exn": "Wrong bullet -: Expecting +.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros xs p ys net st' ps' d m t es res H1 H2 H3 H4 H5 H6.", "qsimpl time: 1 use: prevLog_leader_sublog_invariant.", "-", "eapply raft_net_invariant.", "+", "qsimpl time: 1 use: prevLog_leader_sublog_invariant.", "shelve.", "+", "qsimpl time: 1 use: prevLog_leader_sublog_invariant.", "+", "qsimpl time: 1 use: prevLog_leader_sublog_invariant.", "+", "qsimpl time: 1 use: prevLog_leader_sublog_invariant.", "+"], "tactic": "eapply raft_net_invariant_append_entries_reply.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params rri : raft_refinement_interface vci : votes_correct_interface cci : cronies_correct_interface lsi : leader_sublog_interface plceti : prevLog_candidateEntriesTerm_interface xs : network p : raft_intermediate_reachable xs ys, net : packet st' : term ps' : name d : logIndex m : term t : list entry es : logIndex res : In ys (nwPackets xs) H1 : pBody ys = AppendEntries st' ps' d m t es H2 : 0 < m H3 : In net (nwPackets xs) H4 : pBody net = RequestVoteReply m true H5 : currentTerm (nwState xs (pDst net)) = m H6 : wonElection (if in_dec name_eq_dec (pSrc net) (votesReceived (nwState xs (pDst net))) then dedup name_eq_dec (votesReceived (nwState xs (pDst net))) else pSrc net :: dedup name_eq_dec (votesReceived (nwState xs (pDst net)))) = true H : forall net : network, raft_intermediate_reachable net -> prevLog_leader_sublog net H0 : type (nwState xs (pDst net)) = Candidate Unable to unify \"Prop\" with \"raft_net_invariant_append_entries_reply (fun _ : network => False)\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros xs p ys net st' ps' d m t es res H1 H2 H3 H4 H5 H6.", "qsimpl time: 1 use: prevLog_leader_sublog_invariant.", "-", "eapply raft_net_invariant.", "+", "qsimpl time: 1 use: prevLog_leader_sublog_invariant.", "shelve.", "+", "qsimpl time: 1 use: prevLog_leader_sublog_invariant.", "+", "qsimpl time: 1 use: prevLog_leader_sublog_invariant.", "+", "qsimpl time: 1 use: prevLog_leader_sublog_invariant.", "+", "qsimpl time: 1 use: prevLog_leader_sublog_invariant,raft_net_invariant_append_entries_reply."], "tactic": "+", "exn": "Wrong bullet +: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros xs p ys net st' ps' d m t es res H1 H2 H3 H4 H5 H6.", "qsimpl time: 1 use: prevLog_leader_sublog_invariant.", "-", "eapply raft_net_invariant.", "+", "qsimpl time: 1 use: prevLog_leader_sublog_invariant.", "shelve.", "+", "qsimpl time: 1 use: prevLog_leader_sublog_invariant.", "+", "qsimpl time: 1 use: prevLog_leader_sublog_invariant.", "+", "qsimpl time: 1 use: prevLog_leader_sublog_invariant.", "+", "qsimpl time: 1 use: prevLog_leader_sublog_invariant,raft_net_invariant_append_entries_reply.", "shelve.", "+"], "tactic": "apply H2.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params rri : raft_refinement_interface vci : votes_correct_interface cci : cronies_correct_interface lsi : leader_sublog_interface plceti : prevLog_candidateEntriesTerm_interface xs : network p : raft_intermediate_reachable xs ys, net : packet st' : term ps' : name d : logIndex m : term t : list entry es : logIndex res : In ys (nwPackets xs) H1 : pBody ys = AppendEntries st' ps' d m t es H2 : 0 < m H3 : In net (nwPackets xs) H4 : pBody net = RequestVoteReply m true H5 : currentTerm (nwState xs (pDst net)) = m H6 : wonElection (if in_dec name_eq_dec (pSrc net) (votesReceived (nwState xs (pDst net))) then dedup name_eq_dec (votesReceived (nwState xs (pDst net))) else pSrc net :: dedup name_eq_dec (votesReceived (nwState xs (pDst net)))) = true H : forall net : network, raft_intermediate_reachable net -> prevLog_leader_sublog net H0 : type (nwState xs (pDst net)) = Candidate Unable to unify \"0 < m\" with \"raft_net_invariant_request_vote (fun _ : network => False)\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros xs p ys net st' ps' d m t es res H1 H2 H3 H4 H5 H6.", "qsimpl time: 1 use: prevLog_leader_sublog_invariant.", "-", "eapply raft_net_invariant.", "+", "qsimpl time: 1 use: prevLog_leader_sublog_invariant.", "shelve.", "+", "qsimpl time: 1 use: prevLog_leader_sublog_invariant.", "+", "qsimpl time: 1 use: prevLog_leader_sublog_invariant.", "+", "qsimpl time: 1 use: prevLog_leader_sublog_invariant.", "+", "qsimpl time: 1 use: prevLog_leader_sublog_invariant,raft_net_invariant_append_entries_reply.", "shelve.", "+", "qsimpl time: 1 use: prevLog_leader_sublog_invariant,raft_net_invariant_append_entries_reply.", "+"], "tactic": "apply H6.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params rri : raft_refinement_interface vci : votes_correct_interface cci : cronies_correct_interface lsi : leader_sublog_interface plceti : prevLog_candidateEntriesTerm_interface xs : network p : raft_intermediate_reachable xs ys, net : packet st' : term ps' : name d : logIndex m : term t : list entry es : logIndex res : In ys (nwPackets xs) H1 : pBody ys = AppendEntries st' ps' d m t es H2 : 0 < m H3 : In net (nwPackets xs) H4 : pBody net = RequestVoteReply m true H5 : currentTerm (nwState xs (pDst net)) = m H6 : wonElection (if in_dec name_eq_dec (pSrc net) (votesReceived (nwState xs (pDst net))) then dedup name_eq_dec (votesReceived (nwState xs (pDst net))) else pSrc net :: dedup name_eq_dec (votesReceived (nwState xs (pDst net)))) = true H : forall net : network, raft_intermediate_reachable net -> prevLog_leader_sublog net H0 : type (nwState xs (pDst net)) = Candidate Unable to unify \"wonElection (if in_dec name_eq_dec (pSrc net) (votesReceived (nwState xs (pDst net))) then dedup name_eq_dec (votesReceived (nwState xs (pDst net))) else pSrc net :: dedup name_eq_dec (votesReceived (nwState xs (pDst net)))) = true\" with \"raft_net_invariant_request_vote_reply (fun _ : network => False)\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros xs p ys net st' ps' d m t es res H1 H2 H3 H4 H5 H6.", "qsimpl time: 1 use: prevLog_leader_sublog_invariant.", "-", "eapply raft_net_invariant.", "+", "qsimpl time: 1 use: prevLog_leader_sublog_invariant.", "shelve.", "+", "qsimpl time: 1 use: prevLog_leader_sublog_invariant.", "+", "qsimpl time: 1 use: prevLog_leader_sublog_invariant.", "+", "qsimpl time: 1 use: prevLog_leader_sublog_invariant.", "+", "qsimpl time: 1 use: prevLog_leader_sublog_invariant,raft_net_invariant_append_entries_reply.", "shelve.", "+", "qsimpl time: 1 use: prevLog_leader_sublog_invariant,raft_net_invariant_append_entries_reply.", "+", "qsimpl time: 1 use: prevLog_leader_sublog_invariant,raft_net_invariant_append_entries_reply.", "+"], "tactic": "apply lsi.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params rri : raft_refinement_interface vci : votes_correct_interface cci : cronies_correct_interface lsi : leader_sublog_interface plceti : prevLog_candidateEntriesTerm_interface xs : network p : raft_intermediate_reachable xs ys, net : packet st' : term ps' : name d : logIndex m : term t : list entry es : logIndex res : In ys (nwPackets xs) H1 : pBody ys = AppendEntries st' ps' d m t es H2 : 0 < m H3 : In net (nwPackets xs) H4 : pBody net = RequestVoteReply m true H5 : currentTerm (nwState xs (pDst net)) = m H6 : wonElection (if in_dec name_eq_dec (pSrc net) (votesReceived (nwState xs (pDst net))) then dedup name_eq_dec (votesReceived (nwState xs (pDst net))) else pSrc net :: dedup name_eq_dec (votesReceived (nwState xs (pDst net)))) = true H : forall net : network, raft_intermediate_reachable net -> prevLog_leader_sublog net H0 : type (nwState xs (pDst net)) = Candidate Unable to unify \"leader_sublog_interface\" with \"raft_net_invariant_do_leader (fun _ : network => False)\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros xs p ys net st' ps' d m t es res H1 H2 H3 H4 H5 H6. eapply prevLog_leader_sublog_invariant. - eapply raft_net_invariant. + apply H3. + apply H4. + apply H5. - apply plceti. - eapply raft_net_invariant_append_entries_reply. + apply H2. + apply H6. + apply lsi.", "back_times": 0, "succ": false, "time": 147.60149502754211}]