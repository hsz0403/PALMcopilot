[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros h st t n pli plt es ci st' ps.", "intros H."], "tactic": "apply handleAppendEntries_log_term_type in H.", "exn": "Unable to apply lemma of type \"forall (h0 : name) (st0 : raft_data) (t0 : term) (n0 : name) (pli0 : logIndex) (plt0 : term) (es0 : list entry) (ci0 : logIndex) (st'0 : raft_data) (ps0 : msg), handleAppendEntries h0 st0 t0 n0 pli0 plt0 es0 ci0 = (st'0, ps0) -> log st'0 = log st0 /\\\\ currentTerm st'0 = currentTerm st0 /\\\\ type st'0 = type st0 \\\\/ type st'0 = Follower\" on hypothesis of type \"nwPackets h = nwPackets st\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["intros h st t n pli plt es ci st' ps.", "intros H.", "qsimpl time: 1 use: handleAppendEntries_log_term_type."], "tactic": ["destruct H as [[Hlog [Hterm Htype]] | Hfollower].", ""], "exn": "Expects a disjunctive pattern with 1 branch or a conjunctive pattern made of 0 patterns.", "type": "num_branch_both", "handled": false}]}, "chat": [], "original": "intros h st t n pli plt es ci st' ps. intros H. apply handleAppendEntries_log_term_type in H. destruct H as [[Hlog [Hterm Htype]] | Hfollower]. - left. auto. - right. split. + split; auto. + split; auto.", "back_times": 0, "succ": false, "time": 134.66169810295105}]