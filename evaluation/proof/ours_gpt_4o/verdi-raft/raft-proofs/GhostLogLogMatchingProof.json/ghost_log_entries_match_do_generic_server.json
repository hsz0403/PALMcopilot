[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros l l' e H_sorted H_match H_not_exists.", "intros e1 e2 e3 H_index H_term H_in_e1 H_in_e2 H_index_le.", "simpl in H_sorted."], "tactic": "case_eq (eIndex e1 =? eIndex e); intros H_eq.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params rmri : raft_msg_refinement_interface rlmli : refined_log_matching_lemmas_interface glci : ghost_log_correct_interface lphogli : log_properties_hold_on_ghost_logs_interface tsi : term_sanity_interface aelsi : allEntries_leader_sublog_interface glaei : ghost_log_allEntries_interface l : network l' : name -> data e : list packet H_sorted : electionsData H_match : raft_data H_not_exists : list raft_output e1 : raft_data e2 : list (name * msg) e3 : name H_index : doGenericServer e3 H_match = (H_not_exists, e1, e2) H_term : ghost_log_entries_match l H_in_e1 : msg_refined_raft_intermediate_reachable l H_in_e2 : nwState l e3 = (H_sorted, H_match) H_index_le : forall h' : name, l' h' = update name_eq_dec (nwState l) e3 (H_sorted, e1) h' The term \"e1\" has type \"raft_data\" while it is expected to have type \"entry\".", "type": "wrong_type", "handled": true}]}, "chat": [], "original": "intros l l' e H_sorted H_match H_not_exists. unfold entries_match in *. intros e1 e2 e3 H_index H_term H_in_e1 H_in_e2 H_index_le. simpl in H_sorted. case_eq (eIndex e1 =? eIndex e); intros H_eq. - apply PeanoNat.Nat.eqb_eq in H_eq. specialize (H_match e1 e2 e3 H_eq H_term H_in_e1 H_in_e2 H_index_le). apply H_sorted in H_in_e1. destruct H_in_e1 as [H_gt H_ge]. exfalso. apply H_not_exists. exists e2. split; [|split]; auto. - apply PeanoNat.Nat.eqb_neq in H_eq. assert (H_in_l: In e1 l). { apply H_sorted in H_in_e1. destruct H_in_e1 as [H_gt H_ge]. auto. } specialize (H_match e1 e2 e3 H_index H_term H_in_l H_in_e2 H_index_le). apply H_match.", "back_times": 0, "succ": false, "time": 178.3024570941925}]