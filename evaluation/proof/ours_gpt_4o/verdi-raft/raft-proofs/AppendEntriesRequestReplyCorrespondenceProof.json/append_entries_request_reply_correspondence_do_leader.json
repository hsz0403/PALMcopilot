[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros h st d t n pli plt es ci t' es' eq."], "tactic": "destruct (t <? currentTerm st) eqn:Hterm.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params h : network st : name -> data d : list packet t : raft_data n : name pli : list raft_output plt : raft_data es : list (name * msg) ci : doLeader t n = (pli, plt, es) t' : append_entries_request_reply_correspondence h es' : raft_intermediate_reachable h eq : nwState h n = t The term \"t\" has type \"raft_data\" while it is expected to have type \"nat\".", "type": "wrong_type", "handled": true}]}, "chat": [], "original": "intros h st d t n pli plt es ci t' es' eq. unfold handleAppendEntries in eq. destruct (t <? currentTerm st) eqn:Hterm. - discriminate. - destruct (prevLogIndex =? 0) eqn:Hpli0. + destruct (haveNewEntries st entries) eqn:HhaveNew. * discriminate. * inversion eq. subst. split; reflexivity. + discriminate.", "back_times": 0, "succ": false, "time": 79.68503713607788}]