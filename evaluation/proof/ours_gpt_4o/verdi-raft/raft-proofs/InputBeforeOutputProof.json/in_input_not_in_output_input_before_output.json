[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros net H.", "intro Hcontra."], "tactic": "destruct Hcontra as [e [Hclient [Hid Hin]]].", "exn": "Not an inductive product.", "type": "not_inductive_product", "handled": true}]}, "chat": [], "original": "intros net H. intro Hcontra. destruct Hcontra as [e [Hclient [Hid Hin]]]. unfold client_id_in in H. revert H. induction (applied_entries (nwState net)). - simpl. congruence. - simpl. destruct (eClient e) eqn:Hclient_eq. ++ destruct (eId e =? id) eqn:Hid_eq; simpl. -- intros _. apply Bool.andb_false_iff in H. destruct H as [H | _]. * congruence. * congruence. -- intros _. apply Bool.andb_false_iff in H. destruct H as [_ | H']. * congruence. * auto.", "back_times": 0, "succ": false, "time": 104.08588099479675}]