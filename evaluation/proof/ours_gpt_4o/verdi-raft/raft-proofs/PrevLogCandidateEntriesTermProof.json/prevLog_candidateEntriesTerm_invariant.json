[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": [], "tactic": "apply refined_raft_net_invariant.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params rri : raft_refinement_interface cei : candidate_entries_interface cti : cronies_term_interface cci : cronies_correct_interface Unable to unify \"forall (net net' : network) (gd : GhostSimulations.ghost_data) (d : RaftState.raft_data term name entry logIndex serverType data clientId output) (h : Net.name) (d' : raft_data), reboot d = d' -> ?M5303 net -> refined_raft_intermediate_reachable net -> nwState net h = (gd, d) -> (forall h' : Net.name, nwState net' h' = update name_eq_dec (nwState net) h (gd, d') h') -> nwPackets net = nwPackets net' -> ?M5303 net'\" with \"network\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant."], "tactic": "apply prevLog_candidateEntriesTerm_init.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params H : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net net : network H0 : refined_raft_intermediate_reachable net cronies_correct_invariant : forall net : network, refined_raft_intermediate_reachable net -> cronies_correct net cronies_term_invariant : forall net : network, refined_raft_intermediate_reachable net -> cronies_term net candidate_entries_invariant : forall net : network, refined_raft_intermediate_reachable net -> CandidateEntries net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (GhostSimulations.deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (GhostSimulations.deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (GhostSimulations.deghost net) Unable to unify \"refined_raft_net_invariant_init prevLog_candidateEntriesTerm\" with \"prevLog_candidateEntriesTerm net\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "qsimpl time: 1 use: refined_raft_net_invariant,prevLog_candidateEntriesTerm_init."], "tactic": "intros ???? H.", "exn": "H is already used.", "type": "used_var", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "qsimpl time: 1 use: refined_raft_net_invariant,prevLog_candidateEntriesTerm_init.", "intros ???? H'."], "tactic": "intros ?????? H.", "exn": "H is already used.", "type": "used_var", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "qsimpl time: 1 use: refined_raft_net_invariant,prevLog_candidateEntriesTerm_init.", "intros ???? H'."], "tactic": "intros ?????? H'.", "exn": "H' is already used.", "type": "used_var", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "qsimpl time: 1 use: refined_raft_net_invariant,prevLog_candidateEntriesTerm_init.", "intros ???? H'."], "tactic": "intros ?????? H''.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "qsimpl time: 1 use: refined_raft_net_invariant,prevLog_candidateEntriesTerm_init.", "intros ???? H'.", "intros."], "tactic": "intros ??????? H.", "exn": "H is already used.", "type": "used_var", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "qsimpl time: 1 use: refined_raft_net_invariant,prevLog_candidateEntriesTerm_init.", "intros ???? H'.", "intros."], "tactic": "intros ??????? H'.", "exn": "H' is already used.", "type": "used_var", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "qsimpl time: 1 use: refined_raft_net_invariant,prevLog_candidateEntriesTerm_init.", "intros ???? H'.", "intros."], "tactic": "intros ??????? H''.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "qsimpl time: 1 use: refined_raft_net_invariant,prevLog_candidateEntriesTerm_init.", "intros ???? H'.", "intros."], "tactic": "intros ?????? H.", "exn": "H is already used.", "type": "used_var", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "qsimpl time: 1 use: refined_raft_net_invariant,prevLog_candidateEntriesTerm_init.", "intros ???? H'.", "intros."], "tactic": "intros ?????? H'.", "exn": "H' is already used.", "type": "used_var", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "qsimpl time: 1 use: refined_raft_net_invariant,prevLog_candidateEntriesTerm_init.", "intros ???? H'.", "intros."], "tactic": "intros ?????? H''.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "qsimpl time: 1 use: refined_raft_net_invariant,prevLog_candidateEntriesTerm_init.", "intros ???? H'.", "intros."], "tactic": "intros ??????? H.", "exn": "H is already used.", "type": "used_var", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "qsimpl time: 1 use: refined_raft_net_invariant,prevLog_candidateEntriesTerm_init.", "intros ???? H'.", "intros."], "tactic": "intros ??????? H'.", "exn": "H' is already used.", "type": "used_var", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "qsimpl time: 1 use: refined_raft_net_invariant,prevLog_candidateEntriesTerm_init.", "intros ???? H'.", "intros."], "tactic": "intros ??????? H''.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "qsimpl time: 1 use: refined_raft_net_invariant,prevLog_candidateEntriesTerm_init.", "intros ???? H'.", "intros."], "tactic": "intros ????? H.", "exn": "H is already used.", "type": "used_var", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "qsimpl time: 1 use: refined_raft_net_invariant,prevLog_candidateEntriesTerm_init.", "intros ???? H'.", "intros."], "tactic": "intros ????? H'.", "exn": "H' is already used.", "type": "used_var", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "qsimpl time: 1 use: refined_raft_net_invariant,prevLog_candidateEntriesTerm_init.", "intros ???? H'.", "intros."], "tactic": "intros ????? H''.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "qsimpl time: 1 use: refined_raft_net_invariant,prevLog_candidateEntriesTerm_init.", "intros ???? H'.", "intros."], "tactic": "intros ????? H.", "exn": "H is already used.", "type": "used_var", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "qsimpl time: 1 use: refined_raft_net_invariant,prevLog_candidateEntriesTerm_init.", "intros ???? H'.", "intros."], "tactic": "intros ????? H'.", "exn": "H' is already used.", "type": "used_var", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "qsimpl time: 1 use: refined_raft_net_invariant,prevLog_candidateEntriesTerm_init.", "intros ???? H'.", "intros."], "tactic": "intros ????? H''.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "qsimpl time: 1 use: refined_raft_net_invariant,prevLog_candidateEntriesTerm_init.", "intros ???? H'.", "intros."], "tactic": "intros ????? H.", "exn": "H is already used.", "type": "used_var", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "qsimpl time: 1 use: refined_raft_net_invariant,prevLog_candidateEntriesTerm_init.", "intros ???? H'.", "intros."], "tactic": "intros ????? H'.", "exn": "H' is already used.", "type": "used_var", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "qsimpl time: 1 use: refined_raft_net_invariant,prevLog_candidateEntriesTerm_init.", "intros ???? H'.", "intros."], "tactic": "intros ????? H''.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "qsimpl time: 1 use: refined_raft_net_invariant,prevLog_candidateEntriesTerm_init.", "intros ???? H'.", "intros."], "tactic": "intros ????? H.", "exn": "H is already used.", "type": "used_var", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "qsimpl time: 1 use: refined_raft_net_invariant,prevLog_candidateEntriesTerm_init.", "intros ???? H'.", "intros."], "tactic": "intros ????? H'.", "exn": "H' is already used.", "type": "used_var", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "qsimpl time: 1 use: refined_raft_net_invariant,prevLog_candidateEntriesTerm_init.", "intros ???? H'.", "intros."], "tactic": "intros ????? H''.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "qsimpl time: 1 use: refined_raft_net_invariant,prevLog_candidateEntriesTerm_init.", "intros ???? H'.", "intros."], "tactic": "intros ????? H.", "exn": "H is already used.", "type": "used_var", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "qsimpl time: 1 use: refined_raft_net_invariant,prevLog_candidateEntriesTerm_init.", "intros ???? H'.", "intros."], "tactic": "intros ????? H'.", "exn": "H' is already used.", "type": "used_var", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "qsimpl time: 1 use: refined_raft_net_invariant,prevLog_candidateEntriesTerm_init.", "intros ???? H'.", "intros."], "tactic": "intros ????? H''.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}]}, "chat": [], "original": "apply refined_raft_net_invariant. - apply prevLog_candidateEntriesTerm_init. - intros ???? H. auto. - intros ?????? H. auto. - intros ??????? H. auto. - intros ?????? H. auto. - intros ??????? H. auto. - intros ????? H. auto. - intros ????? H. auto. - intros ????? H. auto. - intros ????? H. auto. - intros ????? H. auto.", "back_times": 0, "succ": false, "time": 139.59039068222046}]