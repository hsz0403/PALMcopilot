[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros net p t n pli plt es ci h e e' Hreach HpIn Hbody HinLog HinEs HeIndex HeTerm."], "tactic": "unfold all_entries_leader_logs_interface in aelli.", "exn": "Cannot coerce all_entries_leader_logs_interface to an evaluable reference.", "type": "not_evaluable", "handled": true}, {"ctx": ["intros net p t n pli plt es ci h e e' Hreach HpIn Hbody HinLog HinEs HeIndex HeTerm.", "qsimpl time: 1 use: all_entries_leader_logs_interface."], "tactic": "destruct aelli.", "exn": "The reference aelli was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros net p t n pli plt es ci h e e' Hreach HpIn Hbody HinLog HinEs HeIndex HeTerm.", "qsimpl time: 1 use: all_entries_leader_logs_interface.", "destruct HeTerm."], "tactic": "eapply entries_match_nw_host.", "exn": "In environment X : Prop orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params net : network p : packet t : term n : name pli : logIndex plt : term es : list entry ci : logIndex h : name e, e' : entry Hreach : refined_raft_intermediate_reachable net HpIn : In p (nwPackets net) Hbody : pBody p = AppendEntries t n pli plt es ci HinLog : In e (log (snd (nwState net h))) HinEs : In e' es HeIndex : eIndex e = eIndex e' entries_contiguous_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_contiguous_nw net entries_gt_0_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_gt_0_nw net entries_sorted_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_sorted_nw net entries_gt_0_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_gt_0 net entries_contiguous_invariant : forall net : network, refined_raft_intermediate_reachable net -> RefinedLogMatchingLemmasInterface.entries_contiguous net entries_sorted_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_sorted net entries_match_invariant : forall (net : network) (h h' : name), refined_raft_intermediate_reachable net -> entries_match (log (snd (nwState net h))) (log (snd (nwState net h'))) entries_match_nw_1_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_match_nw_1 net entries_match_nw_host_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_match_nw_host net allEntries_gt_0_invariant : forall (net : network) (h : name) (e : entry), refined_raft_intermediate_reachable net -> In e (map snd (allEntries (fst (nwState net h)))) -> eIndex e > 0 one_leaderLog_per_term_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term net one_leaderLog_per_term_log_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term_log net one_leaderLog_per_term_host_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term_host net logs_leaderLogs_invariant : forall net : network, refined_raft_intermediate_reachable net -> logs_leaderLogs net logs_leaderLogs_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> logs_leaderLogs_nw net leaderLogs_entries_match_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_entries_match_host net leaderLogs_contiguous_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_contiguous net handleAppendEntries_logs_sorted : forall (net : network) (p : packet) (t : term) (n : name) (pli : logIndex) (plt : term) (es : list entry) (ci : logIndex) (st' : raft_data) (m : msg), raft_intermediate_reachable net -> logs_sorted net -> handleAppendEntries (pDst p) (nwState net (pDst p)) t n pli plt es ci = (st', m) -> pBody p = AppendEntries t n pli plt es ci -> In p (nwPackets net) -> sorted (log st') handleClientRequest_logs_sorted : forall (h : name) (client : clientId) (id : nat) (c : input) (out : list raft_output) (st : raft_data) (l : list (name * msg)) (net : network), handleClientRequest h (nwState net h) client id c = (out, st, l) -> raft_intermediate_reachable net -> logs_sorted_host net -> sorted (log st) logs_sorted_invariant : forall net : network, raft_intermediate_reachable net -> logs_sorted net leaderLogs_sorted_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_sorted net append_entries_leaderLogs_invariant : forall net : network, refined_raft_intermediate_reachable net -> append_entries_leaderLogs net UniqueIndices_invariant : forall net : network, raft_intermediate_reachable net -> UniqueIndices net log_matching_invariant : forall net : network, raft_intermediate_reachable net -> log_matching net all_entries_leader_logs_invariant : forall net : network, refined_raft_intermediate_reachable net -> all_entries_leader_logs net leader_completeness_invariant : forall net : network, refined_raft_intermediate_reachable net -> leader_completeness net refined_raft_net_invariant : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (deghost net) Unable to unify \"Prop\" with \"In e es\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros net p t n pli plt es ci h e e' Hreach HpIn Hbody HinLog HinEs HeIndex HeTerm.", "qsimpl time: 1 use: all_entries_leader_logs_interface.", "destruct HeTerm.", "qsimpl time: 1 use: all_entries_leader_logs_interface,entries_match_nw_host."], "tactic": "apply HpIn.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params X0, X : Prop net : network p : packet t : term n : name pli : logIndex plt : term es : list entry ci : logIndex h : name e, e' : entry Hreach : refined_raft_intermediate_reachable net HpIn : In p (nwPackets net) Hbody : pBody p = AppendEntries t n pli plt es ci HinLog : In e (log (snd (nwState net h))) HinEs : In e' es HeIndex : eIndex e = eIndex e' entries_contiguous_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_contiguous_nw net entries_gt_0_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_gt_0_nw net entries_sorted_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_sorted_nw net entries_gt_0_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_gt_0 net entries_contiguous_invariant : forall net : network, refined_raft_intermediate_reachable net -> RefinedLogMatchingLemmasInterface.entries_contiguous net entries_sorted_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_sorted net entries_match_invariant : forall (net : network) (h h' : name), refined_raft_intermediate_reachable net -> entries_match (log (snd (nwState net h))) (log (snd (nwState net h'))) entries_match_nw_1_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_match_nw_1 net entries_match_nw_host_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_match_nw_host net allEntries_gt_0_invariant : forall (net : network) (h : name) (e : entry), refined_raft_intermediate_reachable net -> In e (map snd (allEntries (fst (nwState net h)))) -> eIndex e > 0 one_leaderLog_per_term_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term net one_leaderLog_per_term_log_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term_log net one_leaderLog_per_term_host_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term_host net logs_leaderLogs_invariant : forall net : network, refined_raft_intermediate_reachable net -> logs_leaderLogs net logs_leaderLogs_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> logs_leaderLogs_nw net leaderLogs_entries_match_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_entries_match_host net leaderLogs_contiguous_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_contiguous net handleAppendEntries_logs_sorted : forall (net : network) (p : packet) (t : term) (n : name) (pli : logIndex) (plt : term) (es : list entry) (ci : logIndex) (st' : raft_data) (m : msg), raft_intermediate_reachable net -> logs_sorted net -> handleAppendEntries (pDst p) (nwState net (pDst p)) t n pli plt es ci = (st', m) -> pBody p = AppendEntries t n pli plt es ci -> In p (nwPackets net) -> sorted (log st') handleClientRequest_logs_sorted : forall (h : name) (client : clientId) (id : nat) (c : input) (out : list raft_output) (st : raft_data) (l : list (name * msg)) (net : network), handleClientRequest h (nwState net h) client id c = (out, st, l) -> raft_intermediate_reachable net -> logs_sorted_host net -> sorted (log st) logs_sorted_invariant : forall net : network, raft_intermediate_reachable net -> logs_sorted net leaderLogs_sorted_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_sorted net append_entries_leaderLogs_invariant : forall net : network, refined_raft_intermediate_reachable net -> append_entries_leaderLogs net UniqueIndices_invariant : forall net : network, raft_intermediate_reachable net -> UniqueIndices net log_matching_invariant : forall net : network, raft_intermediate_reachable net -> log_matching net all_entries_leader_logs_invariant : forall net : network, refined_raft_intermediate_reachable net -> all_entries_leader_logs net leader_completeness_invariant : forall net : network, refined_raft_intermediate_reachable net -> leader_completeness net refined_raft_net_invariant : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (deghost net) X2 : Prop Unable to unify \"In p (nwPackets net)\" with \"In e es\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros net p t n pli plt es ci h e e' Hreach HpIn Hbody HinLog HinEs HeIndex HeTerm.", "qsimpl time: 1 use: all_entries_leader_logs_interface.", "destruct HeTerm.", "qsimpl time: 1 use: all_entries_leader_logs_interface,entries_match_nw_host.", "qsimpl time: 1 use: all_entries_leader_logs_interface,entries_match_nw_host."], "tactic": "apply Hbody.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params X1, X0, X : Prop net : network p : packet t : term n : name pli : logIndex plt : term es : list entry ci : logIndex h : name e, e' : entry Hreach : refined_raft_intermediate_reachable net HpIn : In p (nwPackets net) Hbody : pBody p = AppendEntries t n pli plt es ci HinLog : In e (log (snd (nwState net h))) HinEs : In e' es HeIndex : eIndex e = eIndex e' entries_contiguous_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_contiguous_nw net entries_gt_0_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_gt_0_nw net entries_sorted_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_sorted_nw net entries_gt_0_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_gt_0 net entries_contiguous_invariant : forall net : network, refined_raft_intermediate_reachable net -> RefinedLogMatchingLemmasInterface.entries_contiguous net entries_sorted_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_sorted net entries_match_invariant : forall (net : network) (h h' : name), refined_raft_intermediate_reachable net -> entries_match (log (snd (nwState net h))) (log (snd (nwState net h'))) entries_match_nw_1_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_match_nw_1 net entries_match_nw_host_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_match_nw_host net allEntries_gt_0_invariant : forall (net : network) (h : name) (e : entry), refined_raft_intermediate_reachable net -> In e (map snd (allEntries (fst (nwState net h)))) -> eIndex e > 0 one_leaderLog_per_term_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term net one_leaderLog_per_term_log_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term_log net one_leaderLog_per_term_host_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term_host net logs_leaderLogs_invariant : forall net : network, refined_raft_intermediate_reachable net -> logs_leaderLogs net logs_leaderLogs_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> logs_leaderLogs_nw net leaderLogs_entries_match_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_entries_match_host net leaderLogs_contiguous_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_contiguous net handleAppendEntries_logs_sorted : forall (net : network) (p : packet) (t : term) (n : name) (pli : logIndex) (plt : term) (es : list entry) (ci : logIndex) (st' : raft_data) (m : msg), raft_intermediate_reachable net -> logs_sorted net -> handleAppendEntries (pDst p) (nwState net (pDst p)) t n pli plt es ci = (st', m) -> pBody p = AppendEntries t n pli plt es ci -> In p (nwPackets net) -> sorted (log st') handleClientRequest_logs_sorted : forall (h : name) (client : clientId) (id : nat) (c : input) (out : list raft_output) (st : raft_data) (l : list (name * msg)) (net : network), handleClientRequest h (nwState net h) client id c = (out, st, l) -> raft_intermediate_reachable net -> logs_sorted_host net -> sorted (log st) logs_sorted_invariant : forall net : network, raft_intermediate_reachable net -> logs_sorted net leaderLogs_sorted_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_sorted net append_entries_leaderLogs_invariant : forall net : network, refined_raft_intermediate_reachable net -> append_entries_leaderLogs net UniqueIndices_invariant : forall net : network, raft_intermediate_reachable net -> UniqueIndices net log_matching_invariant : forall net : network, raft_intermediate_reachable net -> log_matching net all_entries_leader_logs_invariant : forall net : network, refined_raft_intermediate_reachable net -> all_entries_leader_logs net leader_completeness_invariant : forall net : network, refined_raft_intermediate_reachable net -> leader_completeness net refined_raft_net_invariant : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (deghost net) X2, X4 : Prop Unable to unify \"pBody p = AppendEntries t n pli plt es ci\" with \"In e es\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros net p t n pli plt es ci h e e' Hreach HpIn Hbody HinLog HinEs HeIndex HeTerm.", "qsimpl time: 1 use: all_entries_leader_logs_interface.", "destruct HeTerm.", "qsimpl time: 1 use: all_entries_leader_logs_interface,entries_match_nw_host.", "qsimpl time: 1 use: all_entries_leader_logs_interface,entries_match_nw_host.", "qsimpl time: 1 use: all_entries_leader_logs_interface,entries_match_nw_host."], "tactic": "apply HinEs.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params X3, X1, X0, X : Prop net : network p : packet t : term n : name pli : logIndex plt : term es : list entry ci : logIndex h : name e, e' : entry Hreach : refined_raft_intermediate_reachable net HpIn : In p (nwPackets net) Hbody : pBody p = AppendEntries t n pli plt es ci HinLog : In e (log (snd (nwState net h))) HinEs : In e' es HeIndex : eIndex e = eIndex e' entries_contiguous_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_contiguous_nw net entries_gt_0_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_gt_0_nw net entries_sorted_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_sorted_nw net entries_gt_0_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_gt_0 net entries_contiguous_invariant : forall net : network, refined_raft_intermediate_reachable net -> RefinedLogMatchingLemmasInterface.entries_contiguous net entries_sorted_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_sorted net entries_match_invariant : forall (net : network) (h h' : name), refined_raft_intermediate_reachable net -> entries_match (log (snd (nwState net h))) (log (snd (nwState net h'))) entries_match_nw_1_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_match_nw_1 net entries_match_nw_host_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_match_nw_host net allEntries_gt_0_invariant : forall (net : network) (h : name) (e : entry), refined_raft_intermediate_reachable net -> In e (map snd (allEntries (fst (nwState net h)))) -> eIndex e > 0 one_leaderLog_per_term_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term net one_leaderLog_per_term_log_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term_log net one_leaderLog_per_term_host_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term_host net logs_leaderLogs_invariant : forall net : network, refined_raft_intermediate_reachable net -> logs_leaderLogs net logs_leaderLogs_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> logs_leaderLogs_nw net leaderLogs_entries_match_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_entries_match_host net leaderLogs_contiguous_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_contiguous net handleAppendEntries_logs_sorted : forall (net : network) (p : packet) (t : term) (n : name) (pli : logIndex) (plt : term) (es : list entry) (ci : logIndex) (st' : raft_data) (m : msg), raft_intermediate_reachable net -> logs_sorted net -> handleAppendEntries (pDst p) (nwState net (pDst p)) t n pli plt es ci = (st', m) -> pBody p = AppendEntries t n pli plt es ci -> In p (nwPackets net) -> sorted (log st') handleClientRequest_logs_sorted : forall (h : name) (client : clientId) (id : nat) (c : input) (out : list raft_output) (st : raft_data) (l : list (name * msg)) (net : network), handleClientRequest h (nwState net h) client id c = (out, st, l) -> raft_intermediate_reachable net -> logs_sorted_host net -> sorted (log st) logs_sorted_invariant : forall net : network, raft_intermediate_reachable net -> logs_sorted net leaderLogs_sorted_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_sorted net append_entries_leaderLogs_invariant : forall net : network, refined_raft_intermediate_reachable net -> append_entries_leaderLogs net UniqueIndices_invariant : forall net : network, raft_intermediate_reachable net -> UniqueIndices net log_matching_invariant : forall net : network, raft_intermediate_reachable net -> log_matching net all_entries_leader_logs_invariant : forall net : network, refined_raft_intermediate_reachable net -> all_entries_leader_logs net leader_completeness_invariant : forall net : network, refined_raft_intermediate_reachable net -> leader_completeness net refined_raft_net_invariant : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (deghost net) X2, X4, X6 : Prop Unable to unify \"In e' es\" with \"In e es\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros net p t n pli plt es ci h e e' Hreach HpIn Hbody HinLog HinEs HeIndex HeTerm.", "qsimpl time: 1 use: all_entries_leader_logs_interface.", "destruct HeTerm.", "qsimpl time: 1 use: all_entries_leader_logs_interface,entries_match_nw_host.", "qsimpl time: 1 use: all_entries_leader_logs_interface,entries_match_nw_host.", "qsimpl time: 1 use: all_entries_leader_logs_interface,entries_match_nw_host.", "qsimpl time: 1 use: all_entries_leader_logs_interface,entries_match_nw_host."], "tactic": "apply HinLog.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params X5, X3, X1, X0, X : Prop net : network p : packet t : term n : name pli : logIndex plt : term es : list entry ci : logIndex h : name e, e' : entry Hreach : refined_raft_intermediate_reachable net HpIn : In p (nwPackets net) Hbody : pBody p = AppendEntries t n pli plt es ci HinLog : In e (log (snd (nwState net h))) HinEs : In e' es HeIndex : eIndex e = eIndex e' entries_contiguous_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_contiguous_nw net entries_gt_0_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_gt_0_nw net entries_sorted_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_sorted_nw net entries_gt_0_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_gt_0 net entries_contiguous_invariant : forall net : network, refined_raft_intermediate_reachable net -> RefinedLogMatchingLemmasInterface.entries_contiguous net entries_sorted_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_sorted net entries_match_invariant : forall (net : network) (h h' : name), refined_raft_intermediate_reachable net -> entries_match (log (snd (nwState net h))) (log (snd (nwState net h'))) entries_match_nw_1_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_match_nw_1 net entries_match_nw_host_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_match_nw_host net allEntries_gt_0_invariant : forall (net : network) (h : name) (e : entry), refined_raft_intermediate_reachable net -> In e (map snd (allEntries (fst (nwState net h)))) -> eIndex e > 0 one_leaderLog_per_term_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term net one_leaderLog_per_term_log_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term_log net one_leaderLog_per_term_host_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term_host net logs_leaderLogs_invariant : forall net : network, refined_raft_intermediate_reachable net -> logs_leaderLogs net logs_leaderLogs_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> logs_leaderLogs_nw net leaderLogs_entries_match_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_entries_match_host net leaderLogs_contiguous_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_contiguous net handleAppendEntries_logs_sorted : forall (net : network) (p : packet) (t : term) (n : name) (pli : logIndex) (plt : term) (es : list entry) (ci : logIndex) (st' : raft_data) (m : msg), raft_intermediate_reachable net -> logs_sorted net -> handleAppendEntries (pDst p) (nwState net (pDst p)) t n pli plt es ci = (st', m) -> pBody p = AppendEntries t n pli plt es ci -> In p (nwPackets net) -> sorted (log st') handleClientRequest_logs_sorted : forall (h : name) (client : clientId) (id : nat) (c : input) (out : list raft_output) (st : raft_data) (l : list (name * msg)) (net : network), handleClientRequest h (nwState net h) client id c = (out, st, l) -> raft_intermediate_reachable net -> logs_sorted_host net -> sorted (log st) logs_sorted_invariant : forall net : network, raft_intermediate_reachable net -> logs_sorted net leaderLogs_sorted_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_sorted net append_entries_leaderLogs_invariant : forall net : network, refined_raft_intermediate_reachable net -> append_entries_leaderLogs net UniqueIndices_invariant : forall net : network, raft_intermediate_reachable net -> UniqueIndices net log_matching_invariant : forall net : network, raft_intermediate_reachable net -> log_matching net all_entries_leader_logs_invariant : forall net : network, refined_raft_intermediate_reachable net -> all_entries_leader_logs net leader_completeness_invariant : forall net : network, refined_raft_intermediate_reachable net -> leader_completeness net refined_raft_net_invariant : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (deghost net) X2, X4, X6, X8 : Prop Unable to unify \"In e (log (snd (nwState net h)))\" with \"In e es\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros net p t n pli plt es ci h e e' Hreach HpIn Hbody HinLog HinEs HeIndex HeTerm.", "qsimpl time: 1 use: all_entries_leader_logs_interface.", "destruct HeTerm.", "qsimpl time: 1 use: all_entries_leader_logs_interface,entries_match_nw_host.", "qsimpl time: 1 use: all_entries_leader_logs_interface,entries_match_nw_host.", "qsimpl time: 1 use: all_entries_leader_logs_interface,entries_match_nw_host.", "qsimpl time: 1 use: all_entries_leader_logs_interface,entries_match_nw_host.", "qsimpl time: 1 use: all_entries_leader_logs_interface,entries_match_nw_host."], "tactic": "apply HeIndex.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params X7, X5, X3, X1, X0, X : Prop net : network p : packet t : term n : name pli : logIndex plt : term es : list entry ci : logIndex h : name e, e' : entry Hreach : refined_raft_intermediate_reachable net HpIn : In p (nwPackets net) Hbody : pBody p = AppendEntries t n pli plt es ci HinLog : In e (log (snd (nwState net h))) HinEs : In e' es HeIndex : eIndex e = eIndex e' entries_contiguous_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_contiguous_nw net entries_gt_0_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_gt_0_nw net entries_sorted_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_sorted_nw net entries_gt_0_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_gt_0 net entries_contiguous_invariant : forall net : network, refined_raft_intermediate_reachable net -> RefinedLogMatchingLemmasInterface.entries_contiguous net entries_sorted_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_sorted net entries_match_invariant : forall (net : network) (h h' : name), refined_raft_intermediate_reachable net -> entries_match (log (snd (nwState net h))) (log (snd (nwState net h'))) entries_match_nw_1_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_match_nw_1 net entries_match_nw_host_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_match_nw_host net allEntries_gt_0_invariant : forall (net : network) (h : name) (e : entry), refined_raft_intermediate_reachable net -> In e (map snd (allEntries (fst (nwState net h)))) -> eIndex e > 0 one_leaderLog_per_term_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term net one_leaderLog_per_term_log_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term_log net one_leaderLog_per_term_host_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term_host net logs_leaderLogs_invariant : forall net : network, refined_raft_intermediate_reachable net -> logs_leaderLogs net logs_leaderLogs_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> logs_leaderLogs_nw net leaderLogs_entries_match_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_entries_match_host net leaderLogs_contiguous_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_contiguous net handleAppendEntries_logs_sorted : forall (net : network) (p : packet) (t : term) (n : name) (pli : logIndex) (plt : term) (es : list entry) (ci : logIndex) (st' : raft_data) (m : msg), raft_intermediate_reachable net -> logs_sorted net -> handleAppendEntries (pDst p) (nwState net (pDst p)) t n pli plt es ci = (st', m) -> pBody p = AppendEntries t n pli plt es ci -> In p (nwPackets net) -> sorted (log st') handleClientRequest_logs_sorted : forall (h : name) (client : clientId) (id : nat) (c : input) (out : list raft_output) (st : raft_data) (l : list (name * msg)) (net : network), handleClientRequest h (nwState net h) client id c = (out, st, l) -> raft_intermediate_reachable net -> logs_sorted_host net -> sorted (log st) logs_sorted_invariant : forall net : network, raft_intermediate_reachable net -> logs_sorted net leaderLogs_sorted_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_sorted net append_entries_leaderLogs_invariant : forall net : network, refined_raft_intermediate_reachable net -> append_entries_leaderLogs net UniqueIndices_invariant : forall net : network, raft_intermediate_reachable net -> UniqueIndices net log_matching_invariant : forall net : network, raft_intermediate_reachable net -> log_matching net all_entries_leader_logs_invariant : forall net : network, refined_raft_intermediate_reachable net -> all_entries_leader_logs net leader_completeness_invariant : forall net : network, refined_raft_intermediate_reachable net -> leader_completeness net refined_raft_net_invariant : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (deghost net) X2, X4, X6, X8, X10 : Prop Unable to unify \"eIndex e = eIndex e'\" with \"In e es\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros net p t n pli plt es ci h e e' Hreach HpIn Hbody HinLog HinEs HeIndex HeTerm.", "qsimpl time: 1 use: all_entries_leader_logs_interface.", "destruct HeTerm.", "qsimpl time: 1 use: all_entries_leader_logs_interface,entries_match_nw_host.", "qsimpl time: 1 use: all_entries_leader_logs_interface,entries_match_nw_host.", "qsimpl time: 1 use: all_entries_leader_logs_interface,entries_match_nw_host.", "qsimpl time: 1 use: all_entries_leader_logs_interface,entries_match_nw_host.", "qsimpl time: 1 use: all_entries_leader_logs_interface,entries_match_nw_host.", "qsimpl time: 1 use: all_entries_leader_logs_interface,entries_match_nw_host."], "tactic": "apply HeTerm.", "exn": "The reference HeTerm was not found in the current environment.", "type": "ref_not_found", "handled": true}]}, "chat": [], "original": "intros net p t n pli plt es ci h e e' Hreach HpIn Hbody HinLog HinEs HeIndex HeTerm. unfold all_entries_leader_logs_interface in aelli. destruct aelli. eapply entries_match_nw_host. - apply HpIn. - apply Hbody. - apply HinEs. - apply HinLog. - apply HeIndex. - apply HeTerm.", "back_times": 0, "succ": false, "time": 141.82786345481873}]