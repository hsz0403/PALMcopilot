[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros l1 l2 l3 e e' Hsorted1 Hsorted2 Hin_e_l1 Hin_e'_l2_l3 HeIndex."], "tactic": "apply sorted_app_in_in with (l2 := l3).", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params llli : logs_leaderLogs_interface aerlli : append_entries_leaderLogs_interface rlmli : refined_log_matching_lemmas_interface aellti : allEntries_leaderLogs_term_interface llci : leaderLogs_contiguous_interface ollpti : one_leaderLog_per_term_interface llsi : leaderLogs_sorted_interface tsi : term_sanity_interface rri : raft_refinement_interface aetsi : allEntries_term_sanity_interface l1, l2, l3 : list entry e, e' : entry Hsorted1 : sorted (l1 ++ l3) Hsorted2 : sorted (l2 ++ l3) Hin_e_l1 : In e l1 Hin_e'_l2_l3 : In e' (l2 ++ l3) HeIndex : eIndex e' = eIndex e Unable to unify \"S (eIndex ?M2162) <= eIndex ?M2161\" with \"(fix In (a : entry) (l : list entry) {struct l} : Prop := match l with | [] => False | b :: m => b = a \\\\/ In a m end) e' l2\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros l1 l2 l3 e e' Hsorted1 Hsorted2 Hin_e_l1 Hin_e'_l2_l3 HeIndex.", "qsimpl time: 1 use: sorted_app_in_in.", "apply sorted_app_1 in Hsorted1.", "apply sorted_app_1 in Hsorted2."], "tactic": "apply in_or_app.", "exn": "In environment orig_base_params : BaseParams raft_params : RaftParams orig_base_params H : forall (l1 l2 : list entry) (e e' : entry), sorted (l1 ++ l2) -> In e l1 -> In e' l2 -> eIndex e' < eIndex e one_node_params : OneNodeParams orig_base_params l1, l2, l3 : list entry e, e' : entry Hsorted1 : sorted l1 Hsorted2 : sorted l2 Hin_e_l1 : In e l1 Hin_e'_l2_l3 : In e' (l2 ++ l3) HeIndex : eIndex e' = eIndex e allEntries_term_sanity_invariant : forall net : network, refined_raft_intermediate_reachable net -> allEntries_term_sanity net refined_raft_net_invariant : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (deghost net) no_entries_past_current_term_invariant : forall net : network, raft_intermediate_reachable net -> no_entries_past_current_term net leaderLogs_sorted_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_sorted net one_leaderLog_per_term_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term net one_leaderLog_per_term_log_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term_log net one_leaderLog_per_term_host_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term_host net leaderLogs_contiguous_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_contiguous net allEntries_leaderLogs_term_invariant : forall net : network, refined_raft_intermediate_reachable net -> allEntries_leaderLogs_term net entries_contiguous_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_contiguous_nw net entries_gt_0_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_gt_0_nw net entries_sorted_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_sorted_nw net entries_gt_0_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_gt_0 net entries_contiguous_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_contiguous net entries_sorted_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_sorted net entries_match_invariant : forall (net : network) (h h' : name), refined_raft_intermediate_reachable net -> entries_match (log (snd (nwState net h))) (log (snd (nwState net h'))) entries_match_nw_1_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_match_nw_1 net entries_match_nw_host_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_match_nw_host net allEntries_gt_0_invariant : forall (net : network) (h : name) (e : entry), refined_raft_intermediate_reachable net -> In e (map snd (allEntries (fst (nwState net h)))) -> eIndex e > 0 append_entries_leaderLogs_invariant : forall net : network, refined_raft_intermediate_reachable net -> append_entries_leaderLogs net logs_leaderLogs_invariant : forall net : network, refined_raft_intermediate_reachable net -> logs_leaderLogs net logs_leaderLogs_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> logs_leaderLogs_nw net Unable to unify \"(fix In (a : ?M4778) (l : list ?M4778) {struct l} : Prop := match l with | [] => False | b :: m => b = a \\\\/ In a m end) ?M4781 (?M4779 ++ ?M4780)\" with \"(fix In (a : entry) (l : list entry) {struct l} : Prop := match l with | [] => False | b :: m => b = a \\\\/ In a m end) e' l2\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros l1 l2 l3 e e' Hsorted1 Hsorted2 Hin_e_l1 Hin_e'_l2_l3 HeIndex.", "qsimpl time: 1 use: sorted_app_in_in.", "apply sorted_app_1 in Hsorted1.", "apply sorted_app_1 in Hsorted2.", "qsimpl time: 1 use: in_or_app,sorted_app_in_in."], "tactic": "right.", "exn": "Not an inductive product.", "type": "not_inductive_product", "handled": true}]}, "chat": [], "original": "intros l1 l2 l3 e e' Hsorted1 Hsorted2 Hin_e_l1 Hin_e'_l2_l3 HeIndex. apply sorted_app_in_in with (l2 := l3). - apply sorted_app_1 in Hsorted1. auto. - apply sorted_app_1 in Hsorted2. auto. - auto. - apply in_or_app. right. auto.", "back_times": 0, "succ": false, "time": 204.29506659507751}]