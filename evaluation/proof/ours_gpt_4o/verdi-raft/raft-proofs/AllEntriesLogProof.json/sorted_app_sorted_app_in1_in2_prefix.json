[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros l1 l2 l3 l4 e e' Hs1 Hs2 Hp He He' Heq."], "tactic": "apply Prefix_maxIndex in Hp as Hmax.", "exn": "Unable to find an instance for the variable e.", "type": "no_instance_var", "handled": true}, {"ctx": ["intros l1 l2 l3 l4 e e' Hs1 Hs2 Hp He He' Heq.", "qsimpl time: 1 use: Prefix_maxIndex."], "tactic": "apply sorted_app_sorted_app_in1_in2 with (l3 := l4).", "exn": "Unable to find an instance for the variables l1, e.", "type": "no_instance_var", "handled": true}, {"ctx": ["intros l1 l2 l3 l4 e e' Hs1 Hs2 Hp He He' Heq.", "qsimpl time: 1 use: Prefix_maxIndex.", "qsimpl time: 1 use: sorted_app_sorted_app_in1_in2,Prefix_maxIndex."], "tactic": "rewrite app_nil_r in Hs1.", "exn": "Found no subterm matching \"?M6514 ++ []\" in Hs1.", "type": "no_subterm", "handled": true}, {"ctx": ["intros l1 l2 l3 l4 e e' Hs1 Hs2 Hp He He' Heq.", "qsimpl time: 1 use: Prefix_maxIndex.", "qsimpl time: 1 use: sorted_app_sorted_app_in1_in2,Prefix_maxIndex.", "qsimpl time: 1 use: sorted_app_sorted_app_in1_in2,Prefix_maxIndex,app_nil_r."], "tactic": "apply Hs1.", "exn": "In environment H3 : forall (A : Type) (l : list A), l ++ [] = l orig_base_params : BaseParams raft_params : RaftParams orig_base_params H2 : forall (l l' : list entry) (e : entry), sorted l' -> Prefix l l' -> In e l -> eIndex e <= maxIndex l' H : forall (l1 l2 l3 : list entry) (e e' : entry), sorted (l1 ++ l3) -> sorted (l2 ++ l3) -> In e l1 -> In e' (l2 ++ l3) -> eIndex e' = eIndex e -> In e' l2 one_node_params : OneNodeParams orig_base_params l1, l2, l3, l4 : list entry e, e' : entry Hs1 : sorted (l1 ++ l3) Hs2 : sorted (l2 ++ l4) Hp : Prefix l4 l3 He : In e l1 He' : In e' (l2 ++ l4) Heq : eIndex e' = eIndex e allEntries_term_sanity_invariant : forall net : network, refined_raft_intermediate_reachable net -> allEntries_term_sanity net refined_raft_net_invariant : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (deghost net) no_entries_past_current_term_invariant : forall net : network, raft_intermediate_reachable net -> no_entries_past_current_term net leaderLogs_sorted_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_sorted net one_leaderLog_per_term_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term net one_leaderLog_per_term_log_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term_log net one_leaderLog_per_term_host_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term_host net leaderLogs_contiguous_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_contiguous net allEntries_leaderLogs_term_invariant : forall net : network, refined_raft_intermediate_reachable net -> allEntries_leaderLogs_term net entries_contiguous_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_contiguous_nw net entries_gt_0_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_gt_0_nw net entries_sorted_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_sorted_nw net entries_gt_0_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_gt_0 net entries_contiguous_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_contiguous net entries_sorted_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_sorted net entries_match_invariant : forall (net : network) (h h' : name), refined_raft_intermediate_reachable net -> entries_match (log (snd (nwState net h))) (log (snd (nwState net h'))) entries_match_nw_1_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_match_nw_1 net entries_match_nw_host_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_match_nw_host net allEntries_gt_0_invariant : forall (net : network) (h : name) (e : entry), refined_raft_intermediate_reachable net -> In e (map snd (allEntries (fst (nwState net h)))) -> eIndex e > 0 append_entries_leaderLogs_invariant : forall net : network, refined_raft_intermediate_reachable net -> append_entries_leaderLogs net logs_leaderLogs_invariant : forall net : network, refined_raft_intermediate_reachable net -> logs_leaderLogs net logs_leaderLogs_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> logs_leaderLogs_nw net Unable to unify \"sorted (l1 ++ l3)\" with \"In e' l2\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros l1 l2 l3 l4 e e' Hs1 Hs2 Hp He He' Heq.", "qsimpl time: 1 use: Prefix_maxIndex.", "qsimpl time: 1 use: sorted_app_sorted_app_in1_in2,Prefix_maxIndex.", "qsimpl time: 1 use: sorted_app_sorted_app_in1_in2,Prefix_maxIndex,app_nil_r.", "qsimpl time: 1 use: sorted_app_sorted_app_in1_in2,Prefix_maxIndex,app_nil_r."], "tactic": "rewrite app_nil_r in Hs2.", "exn": "Found no subterm matching \"?M9842 ++ []\" in Hs2.", "type": "no_subterm", "handled": true}, {"ctx": ["intros l1 l2 l3 l4 e e' Hs1 Hs2 Hp He He' Heq.", "qsimpl time: 1 use: Prefix_maxIndex.", "qsimpl time: 1 use: sorted_app_sorted_app_in1_in2,Prefix_maxIndex.", "qsimpl time: 1 use: sorted_app_sorted_app_in1_in2,Prefix_maxIndex,app_nil_r.", "qsimpl time: 1 use: sorted_app_sorted_app_in1_in2,Prefix_maxIndex,app_nil_r.", "qsimpl time: 1 use: sorted_app_sorted_app_in1_in2,Prefix_maxIndex,app_nil_r."], "tactic": "apply sorted_app_in_in with (e := e) in Hs2.", "exn": "Unable to find an instance for the variable e'.", "type": "no_instance_var", "handled": true}, {"ctx": ["intros l1 l2 l3 l4 e e' Hs1 Hs2 Hp He He' Heq.", "qsimpl time: 1 use: Prefix_maxIndex.", "qsimpl time: 1 use: sorted_app_sorted_app_in1_in2,Prefix_maxIndex.", "qsimpl time: 1 use: sorted_app_sorted_app_in1_in2,Prefix_maxIndex,app_nil_r.", "qsimpl time: 1 use: sorted_app_sorted_app_in1_in2,Prefix_maxIndex,app_nil_r.", "qsimpl time: 1 use: sorted_app_sorted_app_in1_in2,Prefix_maxIndex,app_nil_r.", "qsimpl time: 1 use: sorted_app_sorted_app_in1_in2,sorted_app_in_in,Prefix_maxIndex,app_nil_r."], "tactic": "apply He.", "exn": "In environment H5 : forall (A : Type) (l : list A), l ++ [] = l orig_base_params : BaseParams raft_params : RaftParams orig_base_params H4 : forall (l l' : list entry) (e : entry), sorted l' -> Prefix l l' -> In e l -> eIndex e <= maxIndex l' H1 : forall (l1 l2 : list entry) (e e' : entry), sorted (l1 ++ l2) -> In e l1 -> In e' l2 -> eIndex e' < eIndex e H0 : forall (l1 l2 l3 : list entry) (e e' : entry), sorted (l1 ++ l3) -> sorted (l2 ++ l3) -> In e l1 -> In e' (l2 ++ l3) -> eIndex e' = eIndex e -> In e' l2 one_node_params : OneNodeParams orig_base_params l1, l2, l3, l4 : list entry e, e' : entry Hs1 : sorted (l1 ++ l3) Hs2 : sorted (l2 ++ l4) Hp : Prefix l4 l3 He : In e l1 He' : In e' (l2 ++ l4) Heq : eIndex e' = eIndex e allEntries_term_sanity_invariant : forall net : network, refined_raft_intermediate_reachable net -> allEntries_term_sanity net refined_raft_net_invariant : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (deghost net) no_entries_past_current_term_invariant : forall net : network, raft_intermediate_reachable net -> no_entries_past_current_term net leaderLogs_sorted_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_sorted net one_leaderLog_per_term_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term net one_leaderLog_per_term_log_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term_log net one_leaderLog_per_term_host_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term_host net leaderLogs_contiguous_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_contiguous net allEntries_leaderLogs_term_invariant : forall net : network, refined_raft_intermediate_reachable net -> allEntries_leaderLogs_term net entries_contiguous_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_contiguous_nw net entries_gt_0_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_gt_0_nw net entries_sorted_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_sorted_nw net entries_gt_0_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_gt_0 net entries_contiguous_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_contiguous net entries_sorted_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_sorted net entries_match_invariant : forall (net : network) (h h' : name), refined_raft_intermediate_reachable net -> entries_match (log (snd (nwState net h))) (log (snd (nwState net h'))) entries_match_nw_1_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_match_nw_1 net entries_match_nw_host_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_match_nw_host net allEntries_gt_0_invariant : forall (net : network) (h : name) (e : entry), refined_raft_intermediate_reachable net -> In e (map snd (allEntries (fst (nwState net h)))) -> eIndex e > 0 append_entries_leaderLogs_invariant : forall net : network, refined_raft_intermediate_reachable net -> append_entries_leaderLogs net logs_leaderLogs_invariant : forall net : network, refined_raft_intermediate_reachable net -> logs_leaderLogs net logs_leaderLogs_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> logs_leaderLogs_nw net Unable to unify \"In e l1\" with \"In e' l2\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros l1 l2 l3 l4 e e' Hs1 Hs2 Hp He He' Heq.", "qsimpl time: 1 use: Prefix_maxIndex.", "qsimpl time: 1 use: sorted_app_sorted_app_in1_in2,Prefix_maxIndex.", "qsimpl time: 1 use: sorted_app_sorted_app_in1_in2,Prefix_maxIndex,app_nil_r.", "qsimpl time: 1 use: sorted_app_sorted_app_in1_in2,Prefix_maxIndex,app_nil_r.", "qsimpl time: 1 use: sorted_app_sorted_app_in1_in2,Prefix_maxIndex,app_nil_r.", "qsimpl time: 1 use: sorted_app_sorted_app_in1_in2,sorted_app_in_in,Prefix_maxIndex,app_nil_r.", "qsimpl time: 1 use: sorted_app_sorted_app_in1_in2,sorted_app_in_in,Prefix_maxIndex,app_nil_r."], "tactic": "rewrite <- Heq.", "exn": "Found no subterm matching \"eIndex e\" in the current goal.", "type": "no_subterm", "handled": true}, {"ctx": ["intros l1 l2 l3 l4 e e' Hs1 Hs2 Hp He He' Heq.", "qsimpl time: 1 use: Prefix_maxIndex.", "qsimpl time: 1 use: sorted_app_sorted_app_in1_in2,Prefix_maxIndex.", "qsimpl time: 1 use: sorted_app_sorted_app_in1_in2,Prefix_maxIndex,app_nil_r.", "qsimpl time: 1 use: sorted_app_sorted_app_in1_in2,Prefix_maxIndex,app_nil_r.", "qsimpl time: 1 use: sorted_app_sorted_app_in1_in2,Prefix_maxIndex,app_nil_r.", "qsimpl time: 1 use: sorted_app_sorted_app_in1_in2,sorted_app_in_in,Prefix_maxIndex,app_nil_r.", "qsimpl time: 1 use: sorted_app_sorted_app_in1_in2,sorted_app_in_in,Prefix_maxIndex,app_nil_r.", "qsimpl time: 1 use: sorted_app_sorted_app_in1_in2,sorted_app_in_in,Prefix_maxIndex,app_nil_r."], "tactic": ["apply Prefix_maxIndex with (e := e').", ""], "exn": "No such bound variable e (possible names are: l, l' and e0).", "type": "no_such_bound", "handled": false}]}, "chat": [], "original": "intros l1 l2 l3 l4 e e' Hs1 Hs2 Hp He He' Heq. apply Prefix_maxIndex in Hp as Hmax. - apply sorted_app_sorted_app_in1_in2 with (l3 := l4). ++ rewrite app_nil_r in Hs1. apply Hs1. ++ rewrite app_nil_r in Hs2. apply sorted_app_in_in with (e := e) in Hs2. ** apply He. ** rewrite <- Heq. apply Prefix_maxIndex with (e := e'). --- rewrite app_nil_r. auto. --- auto. ** right. apply He'. - apply In_split in He as [l1a [l1b Heq1]]. rewrite Heq1 in *. rewrite app_assoc in Hs1. apply sorted_app_in_in with (e := e') in Hs1. ++ auto. ++ left. apply in_or_app. left. rewrite <- Heq1. apply in_eq. - apply Prefix_maxIndex in Hp. ++ auto. ++ rewrite app_nil_r. auto. - apply sorted_Prefix_in_eq. rewrite app_nil_r. apply sorted_app_in_in with (e := e') in Hs2. ++ intro. intro. rewrite <- Heq. auto. ++ right. apply Hp. ++ auto.", "back_times": 0, "succ": false, "time": 105.7890682220459}]