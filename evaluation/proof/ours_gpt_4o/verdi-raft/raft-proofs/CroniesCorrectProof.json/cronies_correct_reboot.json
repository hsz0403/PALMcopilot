[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros st h os st' ms H."], "tactic": "destruct (type st) eqn:Hsttype.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params rri : raft_refinement_interface vci : votes_correct_interface cvfsi : candidates_vote_for_selves_interface st, h : network os : ghost_data st' : RaftState.raft_data term name entry logIndex serverType data clientId output ms : Net.name H : raft_data The term \"st\" has type \"network\" while it is expected to have type \"RaftState.raft_data term name entry logIndex serverType data clientId output\".", "type": "wrong_type", "handled": true}]}, "chat": [], "original": "intros st h os st' ms H. unfold doLeader in H. destruct (type st) eqn:Hsttype. - destruct (shouldSend (advanceCommitIndex st h)) eqn:HshouldSend. -- inversion H as [H1 H2 H3]. subst. split. ++ reflexivity. ++ split. ** reflexivity. ** rewrite Hsttype. reflexivity. -- inversion H as [H1 H2 H3]. subst. split. ++ reflexivity. ++ split. ** reflexivity. ** rewrite Hsttype. reflexivity. - inversion H as [H1 H2 H3]. subst. split. ++ reflexivity. ++ split. ** reflexivity. ** rewrite Hsttype. reflexivity. - inversion H as [H1 H2 H3]. subst. split. ++ reflexivity. ++ split. ** reflexivity. ** rewrite Hsttype. reflexivity.", "back_times": 0, "succ": false, "time": 96.80137991905212}]