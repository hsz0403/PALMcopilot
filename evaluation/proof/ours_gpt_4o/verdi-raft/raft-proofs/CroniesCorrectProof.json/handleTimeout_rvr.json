[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros."], "tactic": "split.", "exn": "Not an inductive product.", "type": "not_inductive_product", "handled": true}, {"ctx": ["intros.", "qsimpl time: 1."], "tactic": "destruct (currentTerm st <? t) eqn:Hlt.", "exn": "The reference st was not found in the current environment.", "type": "ref_not_found", "handled": true}]}, "chat": [], "original": "intros. split. - destruct (currentTerm st <? t) eqn:Hlt. -- unfold handleRequestVoteReply in *. simpl in *. inversion H. subst. simpl in H0. congruence. -- destruct (t <? currentTerm st) eqn:Hgt. ++ unfold handleRequestVoteReply in *. simpl in *. inversion H. subst. simpl in H0. congruence. ++ unfold handleRequestVoteReply in *. simpl in *. destruct (type st) eqn:Htype. +++ inversion H0. +++ inversion H. subst. simpl. split; auto. apply le_antisym; auto. apply Nat.ltb_ge in Hgt. apply Nat.ltb_lt in Hlt. lia. +++ inversion H0. - unfold handleRequestVoteReply in *. simpl in *. destruct (currentTerm st <? t) eqn:Hlt. -- inversion H. subst. simpl. reflexivity. -- destruct (t <? currentTerm st) eqn:Hgt. ++ inversion H. subst. simpl. reflexivity. ++ inversion H. subst. simpl. reflexivity.", "back_times": 0, "succ": false, "time": 139.99958276748657}]