[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": [], "tactic": "intros h st src t v st' Hrv Htype.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": [], "tactic": "destruct (Nat.ltb (currentTerm st) t) eqn:Heq.", "exn": "The reference t was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": [], "tactic": "simpl in Hrv.", "exn": "No such hypothesis: Hrv", "type": "no_hypos", "handled": true}, {"ctx": ["qsimpl time: 1."], "tactic": "rewrite Hrv in Htype.", "exn": "No such hypothesis: Htype", "type": "no_hypos", "handled": true}]}, "chat": [], "original": "intros h st src t v st' Hrv Htype. destruct (Nat.ltb (currentTerm st) t) eqn:Heq. - simpl in Hrv. rewrite Hrv in Htype. discriminate. - simpl in Hrv. rewrite Heq in Hrv. destruct (Nat.ltb t (currentTerm st)) eqn:Hlt. -- right. split. ++ specialize handleRequestVoteReply_candidate with (1 := Hrv) (2 := Htype). intros [HtypeCand HcurrTerm]. apply HtypeCand. ++ split. ** pose proof handleRequestVoteReply_votesReceived as Hvr. assert (In src (votesReceived st') \\/ ~ In src (votesReceived st')). { apply in_dec. apply name_eq_dec. } destruct H. --- left. apply H. --- pose proof H. rewrite Hvr in H0. assert (Hsrc: In src (votesReceived (handleRequestVoteReply h st src t true))). { specialize (Hvr h st src t true st' src Hrv). destruct Hvr as [[Hsrc _] | _]; auto. } contradiction. ** specialize handleRequestVote_currentTerm_same_or_follower with (1 := Hrv). intros [[HcurrTerm _] | Hd]. --- apply HcurrTerm. --- destruct Hd. - simpl in Hrv. rewrite Heq in Hrv. destruct (andb v (Nat.leb (S (div2 (length nodes))) (length (dedup name_eq_dec (votesReceived st'))))) eqn:Handb. -- right. split. ++ specialize handleRequestVoteReply_candidate with (1 := Hrv) (2 := Htype). intros [HtypeCand HcurrTerm]. apply HtypeCand. ++ split. ** apply Bool.andb_true_eq in Handb as [_ Hwonelec]. specialize (f_equal currentTerm Hrv). intros Hcurrterm. rewrite Hcurrterm. apply Hwonelec. ** pose proof handleRequestVote_currentTerm_same_or_follower as Hcurr. specialize Hcurr with (h0 := h) (st0 := st) (t0 := t) (h'0 := src) (lli := 0) (llt := 0). specialize Hcurr with (st'0 := st') (m := existT p). apply Hcurr in Hrv. destruct Hrv. destruct H. --- apply H. --- discriminate Htype. - left. apply Hrv.", "back_times": 0, "succ": false, "time": 50.099302530288696}]