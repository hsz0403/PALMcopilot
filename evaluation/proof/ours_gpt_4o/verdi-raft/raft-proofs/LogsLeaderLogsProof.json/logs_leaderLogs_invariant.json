[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": [], "tactic": "apply refined_raft_net_invariant_append_entries_reply'_weak.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params rri : raft_refinement_interface llsi : leaderLogs_sorted_interface rlmli : refined_log_matching_lemmas_interface llci : leaderLogs_contiguous_interface lllmi : leaderLogs_entries_match_interface lhllsi : leaders_have_leaderLogs_strong_interface nisi : nextIndex_safety_interface si : sorted_interface lpholli : log_properties_hold_on_leader_logs_interface Unable to unify \"network -> Prop\" with \"network\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak.", "apply refined_raft_net_invariant.", "-"], "tactic": "apply lllmi.", "exn": "The reference lllmi was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak.", "apply refined_raft_net_invariant.", "-"], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak.", "apply refined_raft_net_invariant.", "-", "shelve.", "-"], "tactic": "apply lpholli.", "exn": "The reference lpholli was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak.", "apply refined_raft_net_invariant.", "-", "shelve.", "-"], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak.", "apply refined_raft_net_invariant.", "-", "shelve.", "-", "shelve.", "-"], "tactic": "apply llsi.", "exn": "The reference llsi was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak.", "apply refined_raft_net_invariant.", "-", "shelve.", "-", "shelve.", "-"], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak.", "apply refined_raft_net_invariant.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-"], "tactic": "apply llci.", "exn": "The reference llci was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak.", "apply refined_raft_net_invariant.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-"], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak.", "apply refined_raft_net_invariant.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-"], "tactic": "apply nisi.", "exn": "The reference nisi was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak.", "apply refined_raft_net_invariant.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-"], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak.", "apply refined_raft_net_invariant.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-"], "tactic": "split.", "exn": "Unable to find an instance for the variable x.", "type": "no_instance_var", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak.", "apply refined_raft_net_invariant.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak."], "tactic": "apply logs_leaderLogs.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params H1 : forall net : network -> Prop, refined_raft_net_invariant_append_entries_reply net -> refined_raft_net_invariant_append_entries_reply' net net : network H0 : refined_raft_intermediate_reachable net log_properties_hold_on_leader_logs_invariant : forall net : network, refined_raft_intermediate_reachable net -> log_properties_hold_on_leader_logs net handleAppendEntries_logs_sorted : forall (net : network) (p : packet) (t : term) (n : name) (pli : logIndex) (plt : term) (es : list entry) (ci : logIndex) (st' : raft_data) (m : msg), raft_intermediate_reachable net -> logs_sorted net -> handleAppendEntries (pDst p) (nwState net (pDst p)) t n pli plt es ci = (st', m) -> pBody p = AppendEntries t n pli plt es ci -> In p (nwPackets net) -> sorted (log st') handleClientRequest_logs_sorted : forall (h : name) (client : clientId) (id : nat) (c : input) (out : list raft_output) (st : raft_data) (l : list (name * msg)) (net : network), handleClientRequest h (nwState net h) client id c = (out, st, l) -> raft_intermediate_reachable net -> logs_sorted_host net -> sorted (log st) logs_sorted_invariant : forall net : network, raft_intermediate_reachable net -> logs_sorted net nextIndex_safety_invariant : forall net : network, raft_intermediate_reachable net -> nextIndex_safety net leaders_have_leaderLogs_strong_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaders_have_leaderLogs_strong net leaderLogs_entries_match_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_entries_match_host net leaderLogs_contiguous_invariant : forall net : network, refined_raft_intermediate_reachable net -> LeaderLogsContiguousInterface.leaderLogs_contiguous net entries_contiguous_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_contiguous_nw net entries_gt_0_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_gt_0_nw net entries_sorted_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_sorted_nw net entries_gt_0_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_gt_0 net entries_contiguous_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_contiguous net entries_sorted_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_sorted net entries_match_invariant : forall (net : network) (h h' : name), refined_raft_intermediate_reachable net -> entries_match (log (snd (nwState net h))) (log (snd (nwState net h'))) entries_match_nw_1_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_match_nw_1 net entries_match_nw_host_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_match_nw_host net allEntries_gt_0_invariant : forall (net : network) (h : name) (e : entry), refined_raft_intermediate_reachable net -> In e (map snd (allEntries (fst (nwState net h)))) -> eIndex e > 0 leaderLogs_sorted_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_sorted net refined_raft_net_invariant : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (deghost net) Unable to unify \"Prop\" with \"refined_raft_net_invariant_request_vote logs_leaderLogs\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak.", "apply refined_raft_net_invariant.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak.", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak,logs_leaderLogs."], "tactic": "apply logs_sorted.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params P : network -> Prop H : forall net : network -> Prop, refined_raft_net_invariant_append_entries_reply net -> refined_raft_net_invariant_append_entries_reply' net net : network H0 : refined_raft_intermediate_reachable net log_properties_hold_on_leader_logs_invariant : forall net : network, refined_raft_intermediate_reachable net -> log_properties_hold_on_leader_logs net handleAppendEntries_logs_sorted : forall (net : network) (p : packet) (t : term) (n : name) (pli : logIndex) (plt : term) (es : list entry) (ci : logIndex) (st' : raft_data) (m : msg), raft_intermediate_reachable net -> logs_sorted net -> handleAppendEntries (pDst p) (nwState net (pDst p)) t n pli plt es ci = (st', m) -> pBody p = AppendEntries t n pli plt es ci -> In p (nwPackets net) -> sorted (log st') handleClientRequest_logs_sorted : forall (h : name) (client : clientId) (id : nat) (c : input) (out : list raft_output) (st : raft_data) (l : list (name * msg)) (net : network), handleClientRequest h (nwState net h) client id c = (out, st, l) -> raft_intermediate_reachable net -> logs_sorted_host net -> sorted (log st) logs_sorted_invariant : forall net : network, raft_intermediate_reachable net -> logs_sorted net nextIndex_safety_invariant : forall net : network, raft_intermediate_reachable net -> nextIndex_safety net leaders_have_leaderLogs_strong_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaders_have_leaderLogs_strong net leaderLogs_entries_match_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_entries_match_host net leaderLogs_contiguous_invariant : forall net : network, refined_raft_intermediate_reachable net -> LeaderLogsContiguousInterface.leaderLogs_contiguous net entries_contiguous_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_contiguous_nw net entries_gt_0_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_gt_0_nw net entries_sorted_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_sorted_nw net entries_gt_0_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_gt_0 net entries_contiguous_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_contiguous net entries_sorted_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_sorted net entries_match_invariant : forall (net : network) (h h' : name), refined_raft_intermediate_reachable net -> entries_match (log (snd (nwState net h))) (log (snd (nwState net h'))) entries_match_nw_1_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_match_nw_1 net entries_match_nw_host_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_match_nw_host net allEntries_gt_0_invariant : forall (net : network) (h : name) (e : entry), refined_raft_intermediate_reachable net -> In e (map snd (allEntries (fst (nwState net h)))) -> eIndex e > 0 leaderLogs_sorted_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_sorted net refined_raft_net_invariant : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (deghost net) Unable to unify \"Prop\" with \"refined_raft_net_invariant_request_vote P\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak.", "apply refined_raft_net_invariant.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak.", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak,logs_leaderLogs.", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak,logs_leaderLogs,logs_sorted."], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak.", "apply refined_raft_net_invariant.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak.", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak,logs_leaderLogs.", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak,logs_leaderLogs,logs_sorted.", "shelve.", "-"], "tactic": "apply entries_sorted.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params H : forall net : network -> Prop, refined_raft_net_invariant_append_entries_reply net -> refined_raft_net_invariant_append_entries_reply' net net : network H0 : refined_raft_intermediate_reachable net log_properties_hold_on_leader_logs_invariant : forall net : network, refined_raft_intermediate_reachable net -> log_properties_hold_on_leader_logs net handleAppendEntries_logs_sorted : forall (net : network) (p : packet) (t : term) (n : name) (pli : logIndex) (plt : term) (es : list entry) (ci : logIndex) (st' : raft_data) (m : msg), raft_intermediate_reachable net -> logs_sorted net -> handleAppendEntries (pDst p) (nwState net (pDst p)) t n pli plt es ci = (st', m) -> pBody p = AppendEntries t n pli plt es ci -> In p (nwPackets net) -> sorted (log st') handleClientRequest_logs_sorted : forall (h : name) (client : clientId) (id : nat) (c : input) (out : list raft_output) (st : raft_data) (l : list (name * msg)) (net : network), handleClientRequest h (nwState net h) client id c = (out, st, l) -> raft_intermediate_reachable net -> logs_sorted_host net -> sorted (log st) logs_sorted_invariant : forall net : network, raft_intermediate_reachable net -> logs_sorted net nextIndex_safety_invariant : forall net : network, raft_intermediate_reachable net -> nextIndex_safety net leaders_have_leaderLogs_strong_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaders_have_leaderLogs_strong net leaderLogs_entries_match_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_entries_match_host net leaderLogs_contiguous_invariant : forall net : network, refined_raft_intermediate_reachable net -> LeaderLogsContiguousInterface.leaderLogs_contiguous net entries_contiguous_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_contiguous_nw net entries_gt_0_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_gt_0_nw net entries_sorted_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_sorted_nw net entries_gt_0_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_gt_0 net entries_contiguous_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_contiguous net entries_sorted_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_sorted net entries_match_invariant : forall (net : network) (h h' : name), refined_raft_intermediate_reachable net -> entries_match (log (snd (nwState net h))) (log (snd (nwState net h'))) entries_match_nw_1_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_match_nw_1 net entries_match_nw_host_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_match_nw_host net allEntries_gt_0_invariant : forall (net : network) (h : name) (e : entry), refined_raft_intermediate_reachable net -> In e (map snd (allEntries (fst (nwState net h)))) -> eIndex e > 0 leaderLogs_sorted_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_sorted net refined_raft_net_invariant : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (deghost net) Unable to unify \"Prop\" with \"refined_raft_net_invariant_request_vote_reply logs_leaderLogs\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak.", "apply refined_raft_net_invariant.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak.", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak,logs_leaderLogs.", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak,logs_leaderLogs,logs_sorted.", "shelve.", "-", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak,logs_leaderLogs,entries_sorted,logs_sorted."], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak.", "apply refined_raft_net_invariant.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak.", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak,logs_leaderLogs.", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak,logs_leaderLogs,logs_sorted.", "shelve.", "-", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak,logs_leaderLogs,entries_sorted,logs_sorted.", "shelve.", "-"], "tactic": "apply entries_contiguous.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params H : forall net : network -> Prop, refined_raft_net_invariant_append_entries_reply net -> refined_raft_net_invariant_append_entries_reply' net net : network H0 : refined_raft_intermediate_reachable net log_properties_hold_on_leader_logs_invariant : forall net : network, refined_raft_intermediate_reachable net -> log_properties_hold_on_leader_logs net handleAppendEntries_logs_sorted : forall (net : network) (p : packet) (t : term) (n : name) (pli : logIndex) (plt : term) (es : list entry) (ci : logIndex) (st' : raft_data) (m : msg), raft_intermediate_reachable net -> logs_sorted net -> handleAppendEntries (pDst p) (nwState net (pDst p)) t n pli plt es ci = (st', m) -> pBody p = AppendEntries t n pli plt es ci -> In p (nwPackets net) -> sorted (log st') handleClientRequest_logs_sorted : forall (h : name) (client : clientId) (id : nat) (c : input) (out : list raft_output) (st : raft_data) (l : list (name * msg)) (net : network), handleClientRequest h (nwState net h) client id c = (out, st, l) -> raft_intermediate_reachable net -> logs_sorted_host net -> sorted (log st) logs_sorted_invariant : forall net : network, raft_intermediate_reachable net -> logs_sorted net nextIndex_safety_invariant : forall net : network, raft_intermediate_reachable net -> nextIndex_safety net leaders_have_leaderLogs_strong_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaders_have_leaderLogs_strong net leaderLogs_entries_match_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_entries_match_host net leaderLogs_contiguous_invariant : forall net : network, refined_raft_intermediate_reachable net -> LeaderLogsContiguousInterface.leaderLogs_contiguous net entries_contiguous_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_contiguous_nw net entries_gt_0_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_gt_0_nw net entries_sorted_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_sorted_nw net entries_gt_0_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_gt_0 net entries_contiguous_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_contiguous net entries_sorted_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_sorted net entries_match_invariant : forall (net : network) (h h' : name), refined_raft_intermediate_reachable net -> entries_match (log (snd (nwState net h))) (log (snd (nwState net h'))) entries_match_nw_1_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_match_nw_1 net entries_match_nw_host_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_match_nw_host net allEntries_gt_0_invariant : forall (net : network) (h : name) (e : entry), refined_raft_intermediate_reachable net -> In e (map snd (allEntries (fst (nwState net h)))) -> eIndex e > 0 leaderLogs_sorted_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_sorted net refined_raft_net_invariant : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (deghost net) Unable to unify \"Prop\" with \"refined_raft_net_invariant_do_leader logs_leaderLogs\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak.", "apply refined_raft_net_invariant.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak.", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak,logs_leaderLogs.", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak,logs_leaderLogs,logs_sorted.", "shelve.", "-", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak,logs_leaderLogs,entries_sorted,logs_sorted.", "shelve.", "-", "qsimpl time: 1 use: logs_sorted,entries_sorted,refined_raft_net_invariant_append_entries_reply'_weak,entries_contiguous,logs_leaderLogs."], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak.", "apply refined_raft_net_invariant.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak.", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak,logs_leaderLogs.", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak,logs_leaderLogs,logs_sorted.", "shelve.", "-", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak,logs_leaderLogs,entries_sorted,logs_sorted.", "shelve.", "-", "qsimpl time: 1 use: logs_sorted,entries_sorted,refined_raft_net_invariant_append_entries_reply'_weak,entries_contiguous,logs_leaderLogs.", "shelve.", "-"], "tactic": "apply entries_gt_0.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params H : forall net : network -> Prop, refined_raft_net_invariant_append_entries_reply net -> refined_raft_net_invariant_append_entries_reply' net net : network H0 : refined_raft_intermediate_reachable net log_properties_hold_on_leader_logs_invariant : forall net : network, refined_raft_intermediate_reachable net -> log_properties_hold_on_leader_logs net handleAppendEntries_logs_sorted : forall (net : network) (p : packet) (t : term) (n : name) (pli : logIndex) (plt : term) (es : list entry) (ci : logIndex) (st' : raft_data) (m : msg), raft_intermediate_reachable net -> logs_sorted net -> handleAppendEntries (pDst p) (nwState net (pDst p)) t n pli plt es ci = (st', m) -> pBody p = AppendEntries t n pli plt es ci -> In p (nwPackets net) -> sorted (log st') handleClientRequest_logs_sorted : forall (h : name) (client : clientId) (id : nat) (c : input) (out : list raft_output) (st : raft_data) (l : list (name * msg)) (net : network), handleClientRequest h (nwState net h) client id c = (out, st, l) -> raft_intermediate_reachable net -> logs_sorted_host net -> sorted (log st) logs_sorted_invariant : forall net : network, raft_intermediate_reachable net -> logs_sorted net nextIndex_safety_invariant : forall net : network, raft_intermediate_reachable net -> nextIndex_safety net leaders_have_leaderLogs_strong_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaders_have_leaderLogs_strong net leaderLogs_entries_match_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_entries_match_host net leaderLogs_contiguous_invariant : forall net : network, refined_raft_intermediate_reachable net -> LeaderLogsContiguousInterface.leaderLogs_contiguous net entries_contiguous_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_contiguous_nw net entries_gt_0_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_gt_0_nw net entries_sorted_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_sorted_nw net entries_gt_0_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_gt_0 net entries_contiguous_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_contiguous net entries_sorted_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_sorted net entries_match_invariant : forall (net : network) (h h' : name), refined_raft_intermediate_reachable net -> entries_match (log (snd (nwState net h))) (log (snd (nwState net h'))) entries_match_nw_1_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_match_nw_1 net entries_match_nw_host_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_match_nw_host net allEntries_gt_0_invariant : forall (net : network) (h : name) (e : entry), refined_raft_intermediate_reachable net -> In e (map snd (allEntries (fst (nwState net h)))) -> eIndex e > 0 leaderLogs_sorted_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_sorted net refined_raft_net_invariant : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (deghost net) Unable to unify \"Prop\" with \"refined_raft_net_invariant_do_generic_server logs_leaderLogs\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak.", "apply refined_raft_net_invariant.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak.", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak,logs_leaderLogs.", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak,logs_leaderLogs,logs_sorted.", "shelve.", "-", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak,logs_leaderLogs,entries_sorted,logs_sorted.", "shelve.", "-", "qsimpl time: 1 use: logs_sorted,entries_sorted,refined_raft_net_invariant_append_entries_reply'_weak,entries_contiguous,logs_leaderLogs.", "shelve.", "-", "qsimpl time: 1 use: logs_sorted,entries_sorted,entries_gt_0,refined_raft_net_invariant_append_entries_reply'_weak,entries_contiguous,logs_leaderLogs."], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak.", "apply refined_raft_net_invariant.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak.", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak,logs_leaderLogs.", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak,logs_leaderLogs,logs_sorted.", "shelve.", "-", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak,logs_leaderLogs,entries_sorted,logs_sorted.", "shelve.", "-", "qsimpl time: 1 use: logs_sorted,entries_sorted,refined_raft_net_invariant_append_entries_reply'_weak,entries_contiguous,logs_leaderLogs.", "shelve.", "-", "qsimpl time: 1 use: logs_sorted,entries_sorted,entries_gt_0,refined_raft_net_invariant_append_entries_reply'_weak,entries_contiguous,logs_leaderLogs.", "shelve.", "-"], "tactic": "split.", "exn": "Unable to find an instance for the variable x.", "type": "no_instance_var", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak.", "apply refined_raft_net_invariant.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak.", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak,logs_leaderLogs.", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak,logs_leaderLogs,logs_sorted.", "shelve.", "-", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak,logs_leaderLogs,entries_sorted,logs_sorted.", "shelve.", "-", "qsimpl time: 1 use: logs_sorted,entries_sorted,refined_raft_net_invariant_append_entries_reply'_weak,entries_contiguous,logs_leaderLogs.", "shelve.", "-", "qsimpl time: 1 use: logs_sorted,entries_sorted,entries_gt_0,refined_raft_net_invariant_append_entries_reply'_weak,entries_contiguous,logs_leaderLogs.", "shelve.", "-", "qsimpl time: 1 use: logs_sorted,entries_sorted,entries_gt_0,refined_raft_net_invariant_append_entries_reply'_weak,entries_contiguous,logs_leaderLogs."], "tactic": "apply entries_sorted_nw.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params P : network -> Prop H1 : forall net : network -> Prop, refined_raft_net_invariant_append_entries_reply net -> refined_raft_net_invariant_append_entries_reply' net X : network -> Prop net : network H0 : refined_raft_intermediate_reachable net log_properties_hold_on_leader_logs_invariant : forall net : network, refined_raft_intermediate_reachable net -> log_properties_hold_on_leader_logs net handleAppendEntries_logs_sorted : forall (net : network) (p : packet) (t : term) (n : name) (pli : logIndex) (plt : term) (es : list entry) (ci : logIndex) (st' : raft_data) (m : msg), raft_intermediate_reachable net -> logs_sorted net -> handleAppendEntries (pDst p) (nwState net (pDst p)) t n pli plt es ci = (st', m) -> pBody p = AppendEntries t n pli plt es ci -> In p (nwPackets net) -> sorted (log st') handleClientRequest_logs_sorted : forall (h : name) (client : clientId) (id : nat) (c : input) (out : list raft_output) (st : raft_data) (l : list (name * msg)) (net : network), handleClientRequest h (nwState net h) client id c = (out, st, l) -> raft_intermediate_reachable net -> logs_sorted_host net -> sorted (log st) logs_sorted_invariant : forall net : network, raft_intermediate_reachable net -> logs_sorted net nextIndex_safety_invariant : forall net : network, raft_intermediate_reachable net -> nextIndex_safety net leaders_have_leaderLogs_strong_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaders_have_leaderLogs_strong net leaderLogs_entries_match_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_entries_match_host net leaderLogs_contiguous_invariant : forall net : network, refined_raft_intermediate_reachable net -> LeaderLogsContiguousInterface.leaderLogs_contiguous net entries_contiguous_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_contiguous_nw net entries_gt_0_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_gt_0_nw net entries_sorted_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_sorted_nw net entries_gt_0_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_gt_0 net entries_contiguous_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_contiguous net entries_sorted_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_sorted net entries_match_invariant : forall (net : network) (h h' : name), refined_raft_intermediate_reachable net -> entries_match (log (snd (nwState net h))) (log (snd (nwState net h'))) entries_match_nw_1_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_match_nw_1 net entries_match_nw_host_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_match_nw_host net allEntries_gt_0_invariant : forall (net : network) (h : name) (e : entry), refined_raft_intermediate_reachable net -> In e (map snd (allEntries (fst (nwState net h)))) -> eIndex e > 0 leaderLogs_sorted_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_sorted net refined_raft_net_invariant : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (deghost net) X3, X0, X1 : Prop Unable to unify \"Prop\" with \"refined_raft_net_invariant_state_same_packet_subset P\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak.", "apply refined_raft_net_invariant.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak.", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak,logs_leaderLogs.", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak,logs_leaderLogs,logs_sorted.", "shelve.", "-", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak,logs_leaderLogs,entries_sorted,logs_sorted.", "shelve.", "-", "qsimpl time: 1 use: logs_sorted,entries_sorted,refined_raft_net_invariant_append_entries_reply'_weak,entries_contiguous,logs_leaderLogs.", "shelve.", "-", "qsimpl time: 1 use: logs_sorted,entries_sorted,entries_gt_0,refined_raft_net_invariant_append_entries_reply'_weak,entries_contiguous,logs_leaderLogs.", "shelve.", "-", "qsimpl time: 1 use: logs_sorted,entries_sorted,entries_gt_0,refined_raft_net_invariant_append_entries_reply'_weak,entries_contiguous,logs_leaderLogs.", "qsimpl time: 1 use: logs_sorted,entries_sorted,entries_sorted_nw,entries_gt_0,refined_raft_net_invariant_append_entries_reply'_weak,entries_contiguous,logs_leaderLogs."], "tactic": "apply entries_contiguous_nw.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params H : forall net : network -> Prop, refined_raft_net_invariant_append_entries_reply net -> refined_raft_net_invariant_append_entries_reply' net X2 : network -> Prop P : network -> Prop X : network -> Prop net : network H0 : refined_raft_intermediate_reachable net log_properties_hold_on_leader_logs_invariant : forall net : network, refined_raft_intermediate_reachable net -> log_properties_hold_on_leader_logs net handleAppendEntries_logs_sorted : forall (net : network) (p : packet) (t : term) (n : name) (pli : logIndex) (plt : term) (es : list entry) (ci : logIndex) (st' : raft_data) (m : msg), raft_intermediate_reachable net -> logs_sorted net -> handleAppendEntries (pDst p) (nwState net (pDst p)) t n pli plt es ci = (st', m) -> pBody p = AppendEntries t n pli plt es ci -> In p (nwPackets net) -> sorted (log st') handleClientRequest_logs_sorted : forall (h : name) (client : clientId) (id : nat) (c : input) (out : list raft_output) (st : raft_data) (l : list (name * msg)) (net : network), handleClientRequest h (nwState net h) client id c = (out, st, l) -> raft_intermediate_reachable net -> logs_sorted_host net -> sorted (log st) logs_sorted_invariant : forall net : network, raft_intermediate_reachable net -> logs_sorted net nextIndex_safety_invariant : forall net : network, raft_intermediate_reachable net -> nextIndex_safety net leaders_have_leaderLogs_strong_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaders_have_leaderLogs_strong net leaderLogs_entries_match_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_entries_match_host net leaderLogs_contiguous_invariant : forall net : network, refined_raft_intermediate_reachable net -> LeaderLogsContiguousInterface.leaderLogs_contiguous net entries_contiguous_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_contiguous_nw net entries_gt_0_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_gt_0_nw net entries_sorted_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_sorted_nw net entries_gt_0_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_gt_0 net entries_contiguous_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_contiguous net entries_sorted_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_sorted net entries_match_invariant : forall (net : network) (h h' : name), refined_raft_intermediate_reachable net -> entries_match (log (snd (nwState net h))) (log (snd (nwState net h'))) entries_match_nw_1_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_match_nw_1 net entries_match_nw_host_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_match_nw_host net allEntries_gt_0_invariant : forall (net : network) (h : name) (e : entry), refined_raft_intermediate_reachable net -> In e (map snd (allEntries (fst (nwState net h)))) -> eIndex e > 0 leaderLogs_sorted_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_sorted net refined_raft_net_invariant : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (deghost net) X3, X0, X1, X9, X4, X5, X6, X7 : Prop Unable to unify \"Prop\" with \"refined_raft_net_invariant_state_same_packet_subset P\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak.", "apply refined_raft_net_invariant.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak.", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak,logs_leaderLogs.", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak,logs_leaderLogs,logs_sorted.", "shelve.", "-", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak,logs_leaderLogs,entries_sorted,logs_sorted.", "shelve.", "-", "qsimpl time: 1 use: logs_sorted,entries_sorted,refined_raft_net_invariant_append_entries_reply'_weak,entries_contiguous,logs_leaderLogs.", "shelve.", "-", "qsimpl time: 1 use: logs_sorted,entries_sorted,entries_gt_0,refined_raft_net_invariant_append_entries_reply'_weak,entries_contiguous,logs_leaderLogs.", "shelve.", "-", "qsimpl time: 1 use: logs_sorted,entries_sorted,entries_gt_0,refined_raft_net_invariant_append_entries_reply'_weak,entries_contiguous,logs_leaderLogs.", "qsimpl time: 1 use: logs_sorted,entries_sorted,entries_sorted_nw,entries_gt_0,refined_raft_net_invariant_append_entries_reply'_weak,entries_contiguous,logs_leaderLogs.", "qsimpl time: 1 use: logs_sorted,entries_contiguous_nw,entries_sorted,entries_sorted_nw,entries_gt_0,refined_raft_net_invariant_append_entries_reply'_weak,entries_contiguous,logs_leaderLogs."], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak.", "apply refined_raft_net_invariant.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak.", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak,logs_leaderLogs.", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak,logs_leaderLogs,logs_sorted.", "shelve.", "-", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak,logs_leaderLogs,entries_sorted,logs_sorted.", "shelve.", "-", "qsimpl time: 1 use: logs_sorted,entries_sorted,refined_raft_net_invariant_append_entries_reply'_weak,entries_contiguous,logs_leaderLogs.", "shelve.", "-", "qsimpl time: 1 use: logs_sorted,entries_sorted,entries_gt_0,refined_raft_net_invariant_append_entries_reply'_weak,entries_contiguous,logs_leaderLogs.", "shelve.", "-", "qsimpl time: 1 use: logs_sorted,entries_sorted,entries_gt_0,refined_raft_net_invariant_append_entries_reply'_weak,entries_contiguous,logs_leaderLogs.", "qsimpl time: 1 use: logs_sorted,entries_sorted,entries_sorted_nw,entries_gt_0,refined_raft_net_invariant_append_entries_reply'_weak,entries_contiguous,logs_leaderLogs.", "qsimpl time: 1 use: logs_sorted,entries_contiguous_nw,entries_sorted,entries_sorted_nw,entries_gt_0,refined_raft_net_invariant_append_entries_reply'_weak,entries_contiguous,logs_leaderLogs.", "shelve.", "-"], "tactic": "apply entries_gt_0_nw.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params H : forall net : network -> Prop, refined_raft_net_invariant_append_entries_reply net -> refined_raft_net_invariant_append_entries_reply' net net : network H0 : refined_raft_intermediate_reachable net log_properties_hold_on_leader_logs_invariant : forall net : network, refined_raft_intermediate_reachable net -> log_properties_hold_on_leader_logs net handleAppendEntries_logs_sorted : forall (net : network) (p : packet) (t : term) (n : name) (pli : logIndex) (plt : term) (es : list entry) (ci : logIndex) (st' : raft_data) (m : msg), raft_intermediate_reachable net -> logs_sorted net -> handleAppendEntries (pDst p) (nwState net (pDst p)) t n pli plt es ci = (st', m) -> pBody p = AppendEntries t n pli plt es ci -> In p (nwPackets net) -> sorted (log st') handleClientRequest_logs_sorted : forall (h : name) (client : clientId) (id : nat) (c : input) (out : list raft_output) (st : raft_data) (l : list (name * msg)) (net : network), handleClientRequest h (nwState net h) client id c = (out, st, l) -> raft_intermediate_reachable net -> logs_sorted_host net -> sorted (log st) logs_sorted_invariant : forall net : network, raft_intermediate_reachable net -> logs_sorted net nextIndex_safety_invariant : forall net : network, raft_intermediate_reachable net -> nextIndex_safety net leaders_have_leaderLogs_strong_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaders_have_leaderLogs_strong net leaderLogs_entries_match_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_entries_match_host net leaderLogs_contiguous_invariant : forall net : network, refined_raft_intermediate_reachable net -> LeaderLogsContiguousInterface.leaderLogs_contiguous net entries_contiguous_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_contiguous_nw net entries_gt_0_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_gt_0_nw net entries_sorted_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_sorted_nw net entries_gt_0_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_gt_0 net entries_contiguous_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_contiguous net entries_sorted_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_sorted net entries_match_invariant : forall (net : network) (h h' : name), refined_raft_intermediate_reachable net -> entries_match (log (snd (nwState net h))) (log (snd (nwState net h'))) entries_match_nw_1_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_match_nw_1 net entries_match_nw_host_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_match_nw_host net allEntries_gt_0_invariant : forall (net : network) (h : name) (e : entry), refined_raft_intermediate_reachable net -> In e (map snd (allEntries (fst (nwState net h)))) -> eIndex e > 0 leaderLogs_sorted_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_sorted net refined_raft_net_invariant : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (deghost net) Unable to unify \"Prop\" with \"refined_raft_net_invariant_reboot logs_leaderLogs\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak.", "apply refined_raft_net_invariant.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak.", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak,logs_leaderLogs.", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak,logs_leaderLogs,logs_sorted.", "shelve.", "-", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak,logs_leaderLogs,entries_sorted,logs_sorted.", "shelve.", "-", "qsimpl time: 1 use: logs_sorted,entries_sorted,refined_raft_net_invariant_append_entries_reply'_weak,entries_contiguous,logs_leaderLogs.", "shelve.", "-", "qsimpl time: 1 use: logs_sorted,entries_sorted,entries_gt_0,refined_raft_net_invariant_append_entries_reply'_weak,entries_contiguous,logs_leaderLogs.", "shelve.", "-", "qsimpl time: 1 use: logs_sorted,entries_sorted,entries_gt_0,refined_raft_net_invariant_append_entries_reply'_weak,entries_contiguous,logs_leaderLogs.", "qsimpl time: 1 use: logs_sorted,entries_sorted,entries_sorted_nw,entries_gt_0,refined_raft_net_invariant_append_entries_reply'_weak,entries_contiguous,logs_leaderLogs.", "qsimpl time: 1 use: logs_sorted,entries_contiguous_nw,entries_sorted,entries_sorted_nw,entries_gt_0,refined_raft_net_invariant_append_entries_reply'_weak,entries_contiguous,logs_leaderLogs.", "shelve.", "-", "qsimpl time: 1 use: logs_sorted,entries_contiguous_nw,entries_sorted,entries_sorted_nw,entries_gt_0,refined_raft_net_invariant_append_entries_reply'_weak,entries_gt_0_nw,entries_contiguous,logs_leaderLogs."], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak.", "apply refined_raft_net_invariant.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak.", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak,logs_leaderLogs.", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak,logs_leaderLogs,logs_sorted.", "shelve.", "-", "qsimpl time: 1 use: refined_raft_net_invariant_append_entries_reply'_weak,logs_leaderLogs,entries_sorted,logs_sorted.", "shelve.", "-", "qsimpl time: 1 use: logs_sorted,entries_sorted,refined_raft_net_invariant_append_entries_reply'_weak,entries_contiguous,logs_leaderLogs.", "shelve.", "-", "qsimpl time: 1 use: logs_sorted,entries_sorted,entries_gt_0,refined_raft_net_invariant_append_entries_reply'_weak,entries_contiguous,logs_leaderLogs.", "shelve.", "-", "qsimpl time: 1 use: logs_sorted,entries_sorted,entries_gt_0,refined_raft_net_invariant_append_entries_reply'_weak,entries_contiguous,logs_leaderLogs.", "qsimpl time: 1 use: logs_sorted,entries_sorted,entries_sorted_nw,entries_gt_0,refined_raft_net_invariant_append_entries_reply'_weak,entries_contiguous,logs_leaderLogs.", "qsimpl time: 1 use: logs_sorted,entries_contiguous_nw,entries_sorted,entries_sorted_nw,entries_gt_0,refined_raft_net_invariant_append_entries_reply'_weak,entries_contiguous,logs_leaderLogs.", "shelve.", "-", "qsimpl time: 1 use: logs_sorted,entries_contiguous_nw,entries_sorted,entries_sorted_nw,entries_gt_0,refined_raft_net_invariant_append_entries_reply'_weak,entries_gt_0_nw,entries_contiguous,logs_leaderLogs.", "shelve.", "-"], "tactic": "apply nhill.", "exn": "The reference nhill was not found in the current environment.", "type": "ref_not_found", "handled": true}]}, "chat": [], "original": "apply refined_raft_net_invariant_append_entries_reply'_weak. apply refined_raft_net_invariant. - intros. apply lllmi. - intros. apply lpholli. - intros. apply llsi. - intros. apply llci. - intros. apply nisi. - split. -- apply logs_leaderLogs. -- apply logs_sorted. - intros. apply entries_sorted. - intros. apply entries_contiguous. - intros. apply entries_gt_0. - split. -- apply entries_sorted_nw. -- apply entries_contiguous_nw. - intros. apply entries_gt_0_nw. - intros. apply nhill.", "back_times": 2, "succ": false, "time": 313.00979709625244}]