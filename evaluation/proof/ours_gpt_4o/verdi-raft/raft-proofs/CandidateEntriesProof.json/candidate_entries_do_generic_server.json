[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros ?rri ?cti ?tsi ?vci ?cci."], "tactic": "apply refined_raft_net_invariant.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params rri : raft_refinement_interface cti : cronies_term_interface tsi : term_sanity_interface vci : votes_correct_interface cci : cronies_correct_interface rri0 : network cti0 : name -> data tsi0 : list packet vci0 : GhostSimulations.ghost_data cci0 : raft_data Unable to unify \"forall (net : network) (h : name) (st' : name -> data) (ps' : list packet) (gd : electionsData) (out : list raft_output) (d : raft_data) (l : list (name * msg)), handleTimeout h (snd (nwState net h)) = (out, d, l) -> gd = update_elections_data_timeout h (nwState net h) -> ?M4255 net -> refined_raft_intermediate_reachable net -> (forall h' : name, st' h' = update name_eq_dec (nwState net) h (gd, d) h') -> (forall p' : packet, In p' ps' -> In p' (nwPackets net) \\\\/ In p' (send_packets h l)) -> ?M4255 {| nwPackets := ps'; nwState := st' |}\" with \"list raft_output\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros ?rri ?cti ?tsi ?vci ?cci. apply refined_raft_net_invariant. - intros; apply candidate_entries_invariant; auto. - intros; apply refined_raft_net_invariant_request_vote'_weak; auto. - intros; apply refined_raft_net_invariant. all: auto.", "back_times": 0, "succ": false, "time": 86.55213165283203}]