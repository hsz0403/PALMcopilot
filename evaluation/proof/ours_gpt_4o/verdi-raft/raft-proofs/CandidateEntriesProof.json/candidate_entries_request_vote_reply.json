[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": [], "tactic": "apply refined_raft_net_invariant_client_request'_weak.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params rri : raft_refinement_interface cti : cronies_term_interface tsi : term_sanity_interface vci : votes_correct_interface cci : cronies_correct_interface Unable to unify \"(fix fin (n : nat) : Type := match n with | 0 => False | S n' => option (fin n') end) N\" with \"list packet\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant_client_request'_weak.", "unfold CandidateEntries.", "split.", "-"], "tactic": "apply candidate_entries_invariant.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params H : forall net : network -> Prop, refined_raft_net_invariant_client_request net -> refined_raft_net_invariant_client_request' net cronies_correct_invariant : forall net : network, refined_raft_intermediate_reachable net -> cronies_correct net votes_correct_invariant : forall net : network, refined_raft_intermediate_reachable net -> votes_correct net no_entries_past_current_term_invariant : forall net : network, raft_intermediate_reachable net -> no_entries_past_current_term net cronies_term_invariant : forall net : network, refined_raft_intermediate_reachable net -> cronies_term net refined_raft_net_invariant : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (GhostSimulations.deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (GhostSimulations.deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (GhostSimulations.deghost net) xs : list packet p : packet ys : list packet net : network st' : name -> data ps' : list packet gd : electionsData d : raft_data t : nat v : bool H0 : handleRequestVoteReply (pDst p) (snd (nwState net (pDst p))) (pSrc p) t v = d H1 : gd = update_elections_data_requestVoteReply (pDst p) (pSrc p) t v (nwState net (pDst p)) H2 : pBody p = RequestVoteReply t v H3 : candidateEntries_host_invariant (nwState net) /\\\\ candidateEntries_nw_invariant net H4 : refined_raft_intermediate_reachable net H5 : nwPackets net = xs ++ p :: ys H6 : forall h : name, st' h = update name_eq_dec (nwState net) (pDst p) (gd, d) h H7 : forall p' : packet, In p' ps' -> In p' (xs ++ ys) Unable to unify \"candidateEntries_host_invariant (nwState ?M11237) /\\\\ candidateEntries_nw_invariant ?M11237\" with \"forall (h : name) (e : entry), In e (log (snd (nwState {| nwPackets := ps'; nwState := st' |} h))) -> candidateEntries e (nwState {| nwPackets := ps'; nwState := st' |})\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant_client_request'_weak.", "unfold CandidateEntries.", "split.", "-", "qsimpl time: 1 use: candidate_entries_invariant,refined_raft_net_invariant_client_request'_weak.", "+"], "tactic": "+", "exn": "Wrong bullet +: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant_client_request'_weak.", "unfold CandidateEntries.", "split.", "-", "qsimpl time: 1 use: candidate_entries_invariant,refined_raft_net_invariant_client_request'_weak.", "+", "shelve.", "+"], "tactic": "apply candidate_entries_invariant.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params H : forall net : network -> Prop, refined_raft_net_invariant_client_request net -> refined_raft_net_invariant_client_request' net cronies_correct_invariant : forall net : network, refined_raft_intermediate_reachable net -> cronies_correct net votes_correct_invariant : forall net : network, refined_raft_intermediate_reachable net -> votes_correct net no_entries_past_current_term_invariant : forall net : network, raft_intermediate_reachable net -> no_entries_past_current_term net cronies_term_invariant : forall net : network, refined_raft_intermediate_reachable net -> cronies_term net refined_raft_net_invariant : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (GhostSimulations.deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (GhostSimulations.deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (GhostSimulations.deghost net) xs : list packet p : packet ys : list packet net : network st' : name -> data ps' : list packet gd : electionsData d : raft_data t : nat v : bool H0 : handleRequestVoteReply (pDst p) (snd (nwState net (pDst p))) (pSrc p) t v = d H1 : gd = update_elections_data_requestVoteReply (pDst p) (pSrc p) t v (nwState net (pDst p)) H2 : pBody p = RequestVoteReply t v H3 : candidateEntries_host_invariant (nwState net) /\\\\ candidateEntries_nw_invariant net H4 : refined_raft_intermediate_reachable net H5 : nwPackets net = xs ++ p :: ys H6 : forall h : name, st' h = update name_eq_dec (nwState net) (pDst p) (gd, d) h H7 : forall p' : packet, In p' ps' -> In p' (xs ++ ys) Unable to unify \"candidateEntries_host_invariant (nwState ?M16167) /\\\\ candidateEntries_nw_invariant ?M16167\" with \"candidate_entries_interface\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant_client_request'_weak.", "unfold CandidateEntries.", "split.", "-", "qsimpl time: 1 use: candidate_entries_invariant,refined_raft_net_invariant_client_request'_weak.", "+", "shelve.", "+"], "tactic": "-", "exn": "Wrong bullet -: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant_client_request'_weak.", "unfold CandidateEntries.", "split.", "-", "qsimpl time: 1 use: candidate_entries_invariant,refined_raft_net_invariant_client_request'_weak.", "+", "shelve.", "+", "shelve.", "-"], "tactic": "apply candidate_entries_invariant.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params H : forall net : network -> Prop, refined_raft_net_invariant_client_request net -> refined_raft_net_invariant_client_request' net cronies_correct_invariant : forall net : network, refined_raft_intermediate_reachable net -> cronies_correct net votes_correct_invariant : forall net : network, refined_raft_intermediate_reachable net -> votes_correct net no_entries_past_current_term_invariant : forall net : network, raft_intermediate_reachable net -> no_entries_past_current_term net cronies_term_invariant : forall net : network, refined_raft_intermediate_reachable net -> cronies_term net refined_raft_net_invariant : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (GhostSimulations.deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (GhostSimulations.deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (GhostSimulations.deghost net) xs : list packet p : packet ys : list packet net : network st' : name -> data ps' : list packet gd : electionsData d : raft_data t : nat v : bool H0 : handleRequestVoteReply (pDst p) (snd (nwState net (pDst p))) (pSrc p) t v = d H1 : gd = update_elections_data_requestVoteReply (pDst p) (pSrc p) t v (nwState net (pDst p)) H2 : pBody p = RequestVoteReply t v H3 : candidateEntries_host_invariant (nwState net) /\\\\ candidateEntries_nw_invariant net H4 : refined_raft_intermediate_reachable net H5 : nwPackets net = xs ++ p :: ys H6 : forall h : name, st' h = update name_eq_dec (nwState net) (pDst p) (gd, d) h H7 : forall p' : packet, In p' ps' -> In p' (xs ++ ys) Unable to unify \"candidateEntries_host_invariant (nwState ?M16167) /\\\\ candidateEntries_nw_invariant ?M16167\" with \"forall (p : packet) (t : term) (leaderId : name) (prevLogIndex : logIndex) (prevLogTerm : term) (entries : list entry) (leaderCommit : logIndex), In p (nwPackets {| nwPackets := ps'; nwState := st' |}) -> pBody p = AppendEntries t leaderId prevLogIndex prevLogTerm entries leaderCommit -> forall e : entry, In e entries -> candidateEntries e (nwState {| nwPackets := ps'; nwState := st' |})\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant_client_request'_weak.", "unfold CandidateEntries.", "split.", "-", "qsimpl time: 1 use: candidate_entries_invariant,refined_raft_net_invariant_client_request'_weak.", "+", "shelve.", "+", "shelve.", "-", "qsimpl time: 1 use: candidate_entries_invariant,refined_raft_net_invariant_client_request'_weak.", "+"], "tactic": "+", "exn": "Wrong bullet +: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant_client_request'_weak.", "unfold CandidateEntries.", "split.", "-", "qsimpl time: 1 use: candidate_entries_invariant,refined_raft_net_invariant_client_request'_weak.", "+", "shelve.", "+", "shelve.", "-", "qsimpl time: 1 use: candidate_entries_invariant,refined_raft_net_invariant_client_request'_weak.", "+", "shelve.", "+"], "tactic": "apply candidate_entries_invariant.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params H : forall net : network -> Prop, refined_raft_net_invariant_client_request net -> refined_raft_net_invariant_client_request' net cronies_correct_invariant : forall net : network, refined_raft_intermediate_reachable net -> cronies_correct net votes_correct_invariant : forall net : network, refined_raft_intermediate_reachable net -> votes_correct net no_entries_past_current_term_invariant : forall net : network, raft_intermediate_reachable net -> no_entries_past_current_term net cronies_term_invariant : forall net : network, refined_raft_intermediate_reachable net -> cronies_term net refined_raft_net_invariant : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (GhostSimulations.deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (GhostSimulations.deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (GhostSimulations.deghost net) xs : list packet p : packet ys : list packet net : network st' : name -> data ps' : list packet gd : electionsData d : raft_data t : nat v : bool H0 : handleRequestVoteReply (pDst p) (snd (nwState net (pDst p))) (pSrc p) t v = d H1 : gd = update_elections_data_requestVoteReply (pDst p) (pSrc p) t v (nwState net (pDst p)) H2 : pBody p = RequestVoteReply t v H3 : candidateEntries_host_invariant (nwState net) /\\\\ candidateEntries_nw_invariant net H4 : refined_raft_intermediate_reachable net H5 : nwPackets net = xs ++ p :: ys H6 : forall h : name, st' h = update name_eq_dec (nwState net) (pDst p) (gd, d) h H7 : forall p' : packet, In p' ps' -> In p' (xs ++ ys) Unable to unify \"candidateEntries_host_invariant (nwState ?M22608) /\\\\ candidateEntries_nw_invariant ?M22608\" with \"candidate_entries_interface\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "apply refined_raft_net_invariant_client_request'_weak. intros. unfold CandidateEntries. split. - apply candidate_entries_invariant. + auto. + apply candidate_entries_invariant. auto. - apply candidate_entries_invariant. + auto. + apply candidate_entries_invariant. auto.", "back_times": 0, "succ": false, "time": 201.08642029762268}]