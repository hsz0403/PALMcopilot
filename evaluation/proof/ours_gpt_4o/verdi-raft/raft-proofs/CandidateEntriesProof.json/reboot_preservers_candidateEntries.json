[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": [], "tactic": "intros xs p ys net st' ps' gd d t v Hreq Hgd HpBody Hinv Hreach Hpkts.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros."], "tactic": "split.", "exn": "Unable to find an instance for the variable x.", "type": "no_instance_var", "handled": true}, {"ctx": ["intros.", "qsimpl time: 1."], "tactic": "apply candidate_entries_invariant.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params net : network h : name d : raft_data gd : electionsData e : entry H : nwState net h = (gd, d) x : name H0 : wonElection (dedup name_eq_dec (cronies (fst (nwState net x)) (eTerm e))) = true H2 : currentTerm (snd (nwState net x)) = eTerm e -> type (snd (nwState net x)) = Candidate -> False cronies_correct_invariant : forall net : network, refined_raft_intermediate_reachable net -> cronies_correct net votes_correct_invariant : forall net : network, refined_raft_intermediate_reachable net -> votes_correct net no_entries_past_current_term_invariant : forall net : network, raft_intermediate_reachable net -> no_entries_past_current_term net cronies_term_invariant : forall net : network, refined_raft_intermediate_reachable net -> cronies_term net refined_raft_net_invariant : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (GhostSimulations.deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (GhostSimulations.deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (GhostSimulations.deghost net) Unable to unify \"candidateEntries_host_invariant (nwState ?M6896) /\\\\ candidateEntries_nw_invariant ?M6896\" with \"exists h0 : name, wonElection (dedup name_eq_dec (cronies (fst (update name_eq_dec (nwState net) h (gd, reboot d) h0)) (eTerm e))) = true /\\\\ (currentTerm (snd (update name_eq_dec (nwState net) h (gd, reboot d) h0)) = eTerm e -> type (snd (update name_eq_dec (nwState net) h (gd, reboot d) h0)) <> Candidate)\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros.", "qsimpl time: 1.", "qsimpl time: 1 use: candidate_entries_invariant.", "+"], "tactic": "apply Hreach.", "exn": "The reference Hreach was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros.", "qsimpl time: 1.", "qsimpl time: 1 use: candidate_entries_invariant.", "+"], "tactic": "apply candidateEntries_nw_invariant with (p:=p) (t:=t) (leaderId:=(pDst p)) (prevLogTerm:=0) (prevLogIndex:=0) (entries:=[]) (leaderCommit:=0).", "exn": "The reference p was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros.", "qsimpl time: 1.", "qsimpl time: 1 use: candidate_entries_invariant.", "+"], "tactic": "+", "exn": "Wrong bullet +: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros.", "qsimpl time: 1.", "qsimpl time: 1 use: candidate_entries_invariant.", "+", "shelve.", "+"], "tactic": "apply in_or_app.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params net : network h : name d : raft_data gd : electionsData e : entry H : nwState net h = (gd, d) x : name H0 : wonElection (dedup name_eq_dec (cronies (fst (nwState net x)) (eTerm e))) = true H2 : currentTerm (snd (nwState net x)) = eTerm e -> type (snd (nwState net x)) = Candidate -> False cronies_correct_invariant : forall net : network, refined_raft_intermediate_reachable net -> cronies_correct net votes_correct_invariant : forall net : network, refined_raft_intermediate_reachable net -> votes_correct net no_entries_past_current_term_invariant : forall net : network, raft_intermediate_reachable net -> no_entries_past_current_term net cronies_term_invariant : forall net : network, refined_raft_intermediate_reachable net -> cronies_term net refined_raft_net_invariant : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (GhostSimulations.deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (GhostSimulations.deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (GhostSimulations.deghost net) Unable to unify \"(fix In (a : ?M9859) (l : list ?M9859) {struct l} : Prop := match l with | [] => False | b :: m => b = a \\\\/ In a m end) ?M9862 (?M9860 ++ ?M9861)\" with \"candidate_entries_interface\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros.", "qsimpl time: 1.", "qsimpl time: 1 use: candidate_entries_invariant.", "+", "shelve.", "+"], "tactic": "right.", "exn": "Not an inductive goal with 2 constructors.", "type": "not_inductive_goal", "handled": true}, {"ctx": ["intros.", "qsimpl time: 1.", "qsimpl time: 1 use: candidate_entries_invariant.", "+", "shelve.", "+"], "tactic": "left.", "exn": "Not an inductive goal with 2 constructors.", "type": "not_inductive_goal", "handled": true}, {"ctx": ["intros.", "qsimpl time: 1.", "qsimpl time: 1 use: candidate_entries_invariant.", "+", "shelve.", "+"], "tactic": "+", "exn": "Wrong bullet +: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros.", "qsimpl time: 1.", "qsimpl time: 1 use: candidate_entries_invariant.", "+", "shelve.", "+", "shelve."], "tactic": "+", "exn": "Wrong bullet +: No more subgoals.", "type": "no_more_subgoals", "handled": true}]}, "chat": [], "original": "intros xs p ys net st' ps' gd d t v Hreq Hgd HpBody Hinv Hreach Hpkts. unfold CandidateEntries. split. - apply candidate_entries_invariant. + apply Hreach. - apply candidateEntries_nw_invariant with (p:=p) (t:=t) (leaderId:=(pDst p)) (prevLogTerm:=0) (prevLogIndex:=0) (entries:=[]) (leaderCommit:=0). + apply in_or_app. right. simpl. left. reflexivity. + rewrite HpBody. reflexivity. + intros e Hin. contradiction.", "back_times": 0, "succ": false, "time": 137.46913957595825}]