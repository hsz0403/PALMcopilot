[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": [], "tactic": "apply refined_raft_net_invariant.", "exn": "Unable to find an instance for the variable net.", "type": "no_instance_var", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant."], "tactic": "apply allEntries_candidateEntries_invariant.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params H : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net allEntries_term_sanity_invariant : forall net : network, refined_raft_intermediate_reachable net -> allEntries_term_sanity net candidate_entries_invariant : forall net : network, refined_raft_intermediate_reachable net -> CandidateEntries net cronies_term_invariant : forall net : network, refined_raft_intermediate_reachable net -> cronies_term net cronies_correct_invariant : forall net : network, refined_raft_intermediate_reachable net -> cronies_correct net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (GhostSimulations.deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (GhostSimulations.deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (GhostSimulations.deghost net) Unable to unify \"let (name, msg, _, _, nodes, _, _, _, _, _) := raft_refined_multi_params in name\" with \"list packet\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "qsimpl time: 1 use: refined_raft_net_invariant,allEntries_candidateEntries_invariant.", "-"], "tactic": "apply candidateEntries_nw_invariant.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params H : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net allEntries_term_sanity_invariant : forall net : network, refined_raft_intermediate_reachable net -> allEntries_term_sanity net candidate_entries_invariant : forall net : network, refined_raft_intermediate_reachable net -> CandidateEntries net cronies_term_invariant : forall net : network, refined_raft_intermediate_reachable net -> cronies_term net cronies_correct_invariant : forall net : network, refined_raft_intermediate_reachable net -> cronies_correct net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (GhostSimulations.deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (GhostSimulations.deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (GhostSimulations.deghost net) H1 : forall net : network, refined_raft_intermediate_reachable net -> allEntries_candidateEntries net H0 : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net Unable to unify \"Prop\" with \"refined_raft_net_invariant_request_vote_reply allEntries_candidateEntries\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "qsimpl time: 1 use: refined_raft_net_invariant,allEntries_candidateEntries_invariant.", "-", "qsimpl time: 1 use: refined_raft_net_invariant,candidateEntries_nw_invariant,allEntries_candidateEntries_invariant."], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "qsimpl time: 1 use: refined_raft_net_invariant,allEntries_candidateEntries_invariant.", "-", "qsimpl time: 1 use: refined_raft_net_invariant,candidateEntries_nw_invariant,allEntries_candidateEntries_invariant.", "shelve.", "-"], "tactic": "eapply raft_refinement_interface.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params H : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net allEntries_term_sanity_invariant : forall net : network, refined_raft_intermediate_reachable net -> allEntries_term_sanity net candidate_entries_invariant : forall net : network, refined_raft_intermediate_reachable net -> CandidateEntries net cronies_term_invariant : forall net : network, refined_raft_intermediate_reachable net -> cronies_term net cronies_correct_invariant : forall net : network, refined_raft_intermediate_reachable net -> cronies_correct net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (GhostSimulations.deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (GhostSimulations.deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (GhostSimulations.deghost net) Unable to unify \"Prop\" with \"allEntries_candidate_entries_interface\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "qsimpl time: 1 use: refined_raft_net_invariant,allEntries_candidateEntries_invariant.", "-", "qsimpl time: 1 use: refined_raft_net_invariant,candidateEntries_nw_invariant,allEntries_candidateEntries_invariant.", "shelve.", "-"], "tactic": "apply cci.", "exn": "The reference cci was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "qsimpl time: 1 use: refined_raft_net_invariant,allEntries_candidateEntries_invariant.", "-", "qsimpl time: 1 use: refined_raft_net_invariant,candidateEntries_nw_invariant,allEntries_candidateEntries_invariant.", "shelve.", "-", "apply Build_allEntries_candidate_entries_interface."], "tactic": "apply cti.", "exn": "The reference cti was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "qsimpl time: 1 use: refined_raft_net_invariant,allEntries_candidateEntries_invariant.", "-", "qsimpl time: 1 use: refined_raft_net_invariant,candidateEntries_nw_invariant,allEntries_candidateEntries_invariant.", "shelve.", "-", "apply Build_allEntries_candidate_entries_interface."], "tactic": "apply cei.", "exn": "The reference cei was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "qsimpl time: 1 use: refined_raft_net_invariant,allEntries_candidateEntries_invariant.", "-", "qsimpl time: 1 use: refined_raft_net_invariant,candidateEntries_nw_invariant,allEntries_candidateEntries_invariant.", "shelve.", "-", "apply Build_allEntries_candidate_entries_interface."], "tactic": "apply lltsi.", "exn": "The reference lltsi was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "qsimpl time: 1 use: refined_raft_net_invariant,allEntries_candidateEntries_invariant.", "-", "qsimpl time: 1 use: refined_raft_net_invariant,candidateEntries_nw_invariant,allEntries_candidateEntries_invariant.", "shelve.", "-", "apply Build_allEntries_candidate_entries_interface.", "intros."], "tactic": "apply cronies_correct_invariant.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params H : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net allEntries_term_sanity_invariant : forall net : network, refined_raft_intermediate_reachable net -> allEntries_term_sanity net candidate_entries_invariant : forall net : network, refined_raft_intermediate_reachable net -> CandidateEntries net cronies_term_invariant : forall net : network, refined_raft_intermediate_reachable net -> cronies_term net cronies_correct_invariant : forall net : network, refined_raft_intermediate_reachable net -> cronies_correct net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (GhostSimulations.deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (GhostSimulations.deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (GhostSimulations.deghost net) net : network H0 : refined_raft_intermediate_reachable net Unable to unify \"votes_received_cronies ?M22127 /\\\\ cronies_votes ?M22127 /\\\\ votes_nw ?M22127 /\\\\ votes_received_leaders ?M22127\" with \"forall (h : Net.name) (t : term) (e : entry), In (t, e) (allEntries (fst (nwState net h))) -> candidateEntries e (nwState net)\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "qsimpl time: 1 use: refined_raft_net_invariant,allEntries_candidateEntries_invariant.", "-", "qsimpl time: 1 use: refined_raft_net_invariant,candidateEntries_nw_invariant,allEntries_candidateEntries_invariant.", "shelve.", "-", "apply Build_allEntries_candidate_entries_interface.", "intros.", "qsimpl time: 1 use: refined_raft_net_invariant,raft_refinement_interface,candidateEntries_nw_invariant,allEntries_candidateEntries_invariant."], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["qsimpl time: 1 use: refined_raft_net_invariant.", "qsimpl time: 1 use: refined_raft_net_invariant,allEntries_candidateEntries_invariant.", "-", "qsimpl time: 1 use: refined_raft_net_invariant,candidateEntries_nw_invariant,allEntries_candidateEntries_invariant.", "shelve.", "-", "apply Build_allEntries_candidate_entries_interface.", "intros.", "qsimpl time: 1 use: refined_raft_net_invariant,raft_refinement_interface,candidateEntries_nw_invariant,allEntries_candidateEntries_invariant.", "shelve."], "tactic": "-", "exn": "Wrong bullet -: No more subgoals.", "type": "no_more_subgoals", "handled": true}]}, "chat": [], "original": "apply refined_raft_net_invariant. - simpl. auto. - apply allEntries_candidateEntries_invariant. - apply candidateEntries_nw_invariant. - eapply raft_refinement_interface. + apply cci. + apply cti. + apply cei. + apply lltsi. + intros. apply cronies_correct_invariant. auto. - eapply refined_raft_net_invariant'. + apply cci. + apply cti. + apply cei. + apply lltsi. + intros. apply allEntries_candidateEntries_invariant. auto. - apply lltsi.", "back_times": 0, "succ": false, "time": 226.59863352775574}]