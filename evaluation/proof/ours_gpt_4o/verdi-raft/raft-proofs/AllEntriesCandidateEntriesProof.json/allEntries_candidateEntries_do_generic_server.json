[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": [], "tactic": "apply VotesCorrectInterface.votes_correct_invariant; auto.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params rri : raft_refinement_interface cci : cronies_correct_interface cti : cronies_term_interface cei : candidate_entries_interface lltsi : allEntries_term_sanity_interface Unable to unify \"VotesCorrectInterface.one_vote_per_term ?M1635 /\\\\ VotesCorrectInterface.votes_currentTerm_votedFor_correct ?M1635 /\\\\ VotesCorrectInterface.currentTerm_votedFor_votes_correct ?M1635\" with \"forall (net : network) (st' : name -> data) (ps' : list packet) (gd : GhostSimulations.ghost_data) (d : raft_data) (os : list raft_output) (d' : raft_data) (ms : list (name * msg)) (h : name), doGenericServer h d = (os, d', ms) -> allEntries_candidateEntries net -> refined_raft_intermediate_reachable net -> nwState net h = (gd, d) -> (forall h' : name, st' h' = update name_eq_dec (nwState net) h (gd, d') h') -> (forall p : packet, In p ps' -> In p (nwPackets net) \\\\/ In p (send_packets h ms)) -> allEntries_candidateEntries {| nwPackets := ps'; nwState := st' |}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1."], "tactic": "apply allEntries_candidateEntries_invariant; auto.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params allEntries_term_sanity_invariant : forall net : network, refined_raft_intermediate_reachable net -> allEntries_term_sanity net candidate_entries_invariant : forall net : network, refined_raft_intermediate_reachable net -> CandidateEntries net cronies_term_invariant : forall net : network, refined_raft_intermediate_reachable net -> cronies_term net cronies_correct_invariant : forall net : network, refined_raft_intermediate_reachable net -> cronies_correct net refined_raft_net_invariant : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (GhostSimulations.deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (GhostSimulations.deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (GhostSimulations.deghost net) Unable to unify \"let (name, msg, _, _, nodes, _, _, _, _, _) := raft_refined_multi_params in name\" with \"network\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros. apply VotesCorrectInterface.votes_correct_invariant; auto. apply allEntries_candidateEntries_invariant; auto.", "back_times": 0, "succ": false, "time": 90.50518345832825}]