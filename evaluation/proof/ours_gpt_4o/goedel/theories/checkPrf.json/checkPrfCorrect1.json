[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros l f p.", "induction p.", "-", "simpl."], "tactic": "apply wellFormedFormulaCorrect1.", "exn": "In environment L : Language codeF : Functions L -> nat codeR : Relations L -> nat codeArityF, codeArityR : nat -> nat codeArityFIsPR : isPR 1 codeArityF codeArityFIsCorrect1 : forall f : Functions L, codeArityF (codeF f) = S (arity L (inr f)) codeArityFIsCorrect2 : forall n : nat, codeArityF n <> 0 -> exists f : Functions L, codeF f = n codeArityRIsPR : isPR 1 codeArityR codeArityRIsCorrect1 : forall r : Relations L, codeArityR (codeR r) = S (arity L (inl r)) codeArityRIsCorrect2 : forall n : nat, codeArityR n <> 0 -> exists r : Relations L, codeR r = n codeFInj : forall f g : Functions L, codeF f = codeF g -> f = g codeRInj : forall R S : Relations L, codeR R = codeR S -> R = S Term := fol.Term L : Set Terms := fol.Terms L : nat -> Set var := fol.var L : nat -> fol.Term L apply := fol.apply L : forall f : Functions L, fol.Terms L (arity L (inr f)) -> fol.Term L Formula := fol.Formula L : Set equal := fol.equal L : fol.Term L -> fol.Term L -> fol.Formula L atomic := fol.atomic L : forall r : Relations L, fol.Terms L (arity L (inl r)) -> fol.Formula L impH := fol.impH L : fol.Formula L -> fol.Formula L -> fol.Formula L notH := fol.notH L : fol.Formula L -> fol.Formula L forallH := fol.forallH L : nat -> fol.Formula L -> fol.Formula L wellFormedTerm := wellFormed.wellFormedTerm codeArityF : nat -> nat wellFormedFormula := wellFormed.wellFormedFormula codeArityF codeArityR : nat -> nat Prf := folProof.Prf L : Formulas L -> fol.Formula L -> Set A : fol.Formula L Unable to unify \"wellFormed.wellFormedFormula ?M1496 ?M1499 (codeFormula ?M1494 ?M1495 ?M1498 ?M1501) = 1\" with \"checkPrf (codeFormula L codeF codeR A) (cPair 0 (codeFormula L codeF codeR A)) = S (S (cPair (codeFormula L codeF codeR A) 0))\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros l f p.", "induction p.", "-", "simpl.", "qsimpl time: 1 use: wellFormedFormulaCorrect1."], "tactic": "apply codeArityFIsCorrect1.", "exn": "In environment H : forall (L : Language) (codeF : Functions L -> nat) (codeArityF : nat -> nat), (forall f : Functions L, codeArityF (codeF f) = S (arity L (inr f))) -> forall (codeR : Relations L -> nat) (codeArityR : nat -> nat), (forall r : Relations L, codeArityR (codeR r) = S (arity L (inl r))) -> forall f : fol.Formula L, wellFormed.wellFormedFormula codeArityF codeArityR (codeFormula L codeF codeR f) = 1 L : Language codeF : Functions L -> nat codeR : Relations L -> nat codeArityF, codeArityR : nat -> nat codeArityFIsCorrect1 : forall f : Functions L, codeArityF (codeF f) = S (arity L (inr f)) codeArityFIsCorrect2 : forall n : nat, (codeArityF n = 0 -> False) -> exists f : Functions L, codeF f = n codeArityRIsCorrect1 : forall r : Relations L, codeArityR (codeR r) = S (arity L (inl r)) codeArityRIsCorrect2 : forall n : nat, (codeArityR n = 0 -> False) -> exists r : Relations L, codeR r = n codeFInj : forall f g : Functions L, codeF f = codeF g -> f = g codeRInj : forall R S : Relations L, codeR R = codeR S -> R = S Term := fol.Term L : Set Terms := fol.Terms L : nat -> Set var := fol.var L : nat -> fol.Term L apply := fol.apply L : forall f : Functions L, fol.Terms L (arity L (inr f)) -> fol.Term L Formula := fol.Formula L : Set atomic := fol.atomic L : forall r : Relations L, fol.Terms L (arity L (inl r)) -> fol.Formula L forallH := fol.forallH L : nat -> fol.Formula L -> fol.Formula L wellFormedTerm := wellFormed.wellFormedTerm codeArityF : nat -> nat wellFormedFormula := wellFormed.wellFormedFormula codeArityF codeArityR : nat -> nat A, H0, H2 : fol.Formula L H1 : fol.Term L -> fol.Formula L x : PrimRec 1 H3 : forall c : nat, evalPrimRec 1 x c = codeArityR c x0 : PrimRec 1 H4 : forall c : nat, evalPrimRec 1 x0 c = codeArityF c Unable to unify \"codeArityF (codeF ?M3675) = S (arity L (inr ?M3675))\" with \"checkPrf (codeFormula L codeF codeR A) (cPair 0 (codeFormula L codeF codeR A)) = S (S (cPair (codeFormula L codeF codeR A) 0))\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros l f p.", "induction p.", "-", "simpl.", "qsimpl time: 1 use: wellFormedFormulaCorrect1.", "qsimpl time: 1 use: wellFormedFormulaCorrect1."], "tactic": "apply codeArityRIsCorrect1.", "exn": "In environment H5 : forall (L : Language) (codeF : Functions L -> nat) (codeArityF : nat -> nat), (forall f : Functions L, codeArityF (codeF f) = S (arity L (inr f))) -> forall (codeR : Relations L -> nat) (codeArityR : nat -> nat), (forall r : Relations L, codeArityR (codeR r) = S (arity L (inl r))) -> forall f : fol.Formula L, wellFormed.wellFormedFormula codeArityF codeArityR (codeFormula L codeF codeR f) = 1 L : Language codeF : Functions L -> nat codeR : Relations L -> nat codeArityF, codeArityR : nat -> nat codeArityFIsCorrect1 : forall f : Functions L, codeArityF (codeF f) = S (arity L (inr f)) codeArityFIsCorrect2 : forall n : nat, (codeArityF n = 0 -> False) -> exists f : Functions L, codeF f = n codeArityRIsCorrect1 : forall r : Relations L, codeArityR (codeR r) = S (arity L (inl r)) codeArityRIsCorrect2 : forall n : nat, (codeArityR n = 0 -> False) -> exists r : Relations L, codeR r = n codeFInj : forall f g : Functions L, codeF f = codeF g -> f = g codeRInj : forall R S : Relations L, codeR R = codeR S -> R = S Term := fol.Term L : Set Terms := fol.Terms L : nat -> Set var := fol.var L : nat -> fol.Term L apply := fol.apply L : forall f : Functions L, fol.Terms L (arity L (inr f)) -> fol.Term L Formula := fol.Formula L : Set atomic := fol.atomic L : forall r : Relations L, fol.Terms L (arity L (inl r)) -> fol.Formula L forallH := fol.forallH L : nat -> fol.Formula L -> fol.Formula L wellFormedTerm := wellFormed.wellFormedTerm codeArityF : nat -> nat wellFormedFormula := wellFormed.wellFormedFormula codeArityF codeArityR : nat -> nat A, H0, H2 : fol.Formula L H1 : fol.Term L -> fol.Formula L x : PrimRec 1 H3 : forall c : nat, evalPrimRec 1 x c = codeArityR c x0 : PrimRec 1 H4 : forall c : nat, evalPrimRec 1 x0 c = codeArityF c Unable to unify \"codeArityR (codeR ?M4948) = S (arity L (inl ?M4948))\" with \"checkPrf (codeFormula L codeF codeR A) (cPair 0 (codeFormula L codeF codeR A)) = S (S (cPair (codeFormula L codeF codeR A) 0))\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros l f p.", "induction p.", "-", "simpl.", "qsimpl time: 1 use: wellFormedFormulaCorrect1.", "qsimpl time: 1 use: wellFormedFormulaCorrect1.", "qsimpl time: 1 use: wellFormedFormulaCorrect1."], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros l f p.", "induction p.", "-", "simpl.", "qsimpl time: 1 use: wellFormedFormulaCorrect1.", "qsimpl time: 1 use: wellFormedFormulaCorrect1.", "qsimpl time: 1 use: wellFormedFormulaCorrect1.", "shelve.", "-", "simpl."], "tactic": "apply IHp.", "exn": "The reference IHp was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros l f p.", "induction p.", "-", "simpl.", "qsimpl time: 1 use: wellFormedFormulaCorrect1.", "qsimpl time: 1 use: wellFormedFormulaCorrect1.", "qsimpl time: 1 use: wellFormedFormulaCorrect1.", "shelve.", "-", "simpl."], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros l f p.", "induction p.", "-", "simpl.", "qsimpl time: 1 use: wellFormedFormulaCorrect1.", "qsimpl time: 1 use: wellFormedFormulaCorrect1.", "qsimpl time: 1 use: wellFormedFormulaCorrect1.", "shelve.", "-", "simpl.", "shelve.", "-", "simpl."], "tactic": "rewrite <- codeList.", "exn": "Cannot find a relation to rewrite.", "type": "no_rewrite_relation", "handled": true}, {"ctx": ["intros l f p.", "induction p.", "-", "simpl.", "qsimpl time: 1 use: wellFormedFormulaCorrect1.", "qsimpl time: 1 use: wellFormedFormulaCorrect1.", "qsimpl time: 1 use: wellFormedFormulaCorrect1.", "shelve.", "-", "simpl.", "shelve.", "-", "simpl.", "qsimpl time: 1 use: wellFormedFormulaCorrect1,codeList."], "tactic": "rewrite <- codeFormula.", "exn": "Cannot find a relation to rewrite.", "type": "no_rewrite_relation", "handled": true}, {"ctx": ["intros l f p.", "induction p.", "-", "simpl.", "qsimpl time: 1 use: wellFormedFormulaCorrect1.", "qsimpl time: 1 use: wellFormedFormulaCorrect1.", "qsimpl time: 1 use: wellFormedFormulaCorrect1.", "shelve.", "-", "simpl.", "shelve.", "-", "simpl.", "qsimpl time: 1 use: wellFormedFormulaCorrect1,codeList.", "qsimpl time: 1 use: codeFormula,wellFormedFormulaCorrect1,codeList."], "tactic": "apply codeList_map.", "exn": "The reference codeList_map was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros l f p.", "induction p.", "-", "simpl.", "qsimpl time: 1 use: wellFormedFormulaCorrect1.", "qsimpl time: 1 use: wellFormedFormulaCorrect1.", "qsimpl time: 1 use: wellFormedFormulaCorrect1.", "shelve.", "-", "simpl.", "shelve.", "-", "simpl.", "qsimpl time: 1 use: wellFormedFormulaCorrect1,codeList.", "qsimpl time: 1 use: codeFormula,wellFormedFormulaCorrect1,codeList."], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros l f p.", "induction p.", "-", "simpl.", "qsimpl time: 1 use: wellFormedFormulaCorrect1.", "qsimpl time: 1 use: wellFormedFormulaCorrect1.", "qsimpl time: 1 use: wellFormedFormulaCorrect1.", "shelve.", "-", "simpl.", "shelve.", "-", "simpl.", "qsimpl time: 1 use: wellFormedFormulaCorrect1,codeList.", "qsimpl time: 1 use: codeFormula,wellFormedFormulaCorrect1,codeList.", "shelve.", "-", "simpl."], "tactic": "rewrite <- checkPrf.", "exn": "Cannot find a relation to rewrite.", "type": "no_rewrite_relation", "handled": true}, {"ctx": ["intros l f p.", "induction p.", "-", "simpl.", "qsimpl time: 1 use: wellFormedFormulaCorrect1.", "qsimpl time: 1 use: wellFormedFormulaCorrect1.", "qsimpl time: 1 use: wellFormedFormulaCorrect1.", "shelve.", "-", "simpl.", "shelve.", "-", "simpl.", "qsimpl time: 1 use: wellFormedFormulaCorrect1,codeList.", "qsimpl time: 1 use: codeFormula,wellFormedFormulaCorrect1,codeList.", "shelve.", "-", "simpl.", "qsimpl time: 1 use: codeFormula,wellFormedFormulaCorrect1,codeList,checkPrf."], "tactic": "apply IHp1.", "exn": "The reference IHp1 was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros l f p.", "induction p.", "-", "simpl.", "qsimpl time: 1 use: wellFormedFormulaCorrect1.", "qsimpl time: 1 use: wellFormedFormulaCorrect1.", "qsimpl time: 1 use: wellFormedFormulaCorrect1.", "shelve.", "-", "simpl.", "shelve.", "-", "simpl.", "qsimpl time: 1 use: wellFormedFormulaCorrect1,codeList.", "qsimpl time: 1 use: codeFormula,wellFormedFormulaCorrect1,codeList.", "shelve.", "-", "simpl.", "qsimpl time: 1 use: codeFormula,wellFormedFormulaCorrect1,codeList,checkPrf."], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros l f p.", "induction p.", "-", "simpl.", "qsimpl time: 1 use: wellFormedFormulaCorrect1.", "qsimpl time: 1 use: wellFormedFormulaCorrect1.", "qsimpl time: 1 use: wellFormedFormulaCorrect1.", "shelve.", "-", "simpl.", "shelve.", "-", "simpl.", "qsimpl time: 1 use: wellFormedFormulaCorrect1,codeList.", "qsimpl time: 1 use: codeFormula,wellFormedFormulaCorrect1,codeList.", "shelve.", "-", "simpl.", "qsimpl time: 1 use: codeFormula,wellFormedFormulaCorrect1,codeList,checkPrf.", "shelve.", "-", "simpl."], "tactic": "rewrite <- checkPrf.", "exn": "Cannot find a relation to rewrite.", "type": "no_rewrite_relation", "handled": true}, {"ctx": ["intros l f p.", "induction p.", "-", "simpl.", "qsimpl time: 1 use: wellFormedFormulaCorrect1.", "qsimpl time: 1 use: wellFormedFormulaCorrect1.", "qsimpl time: 1 use: wellFormedFormulaCorrect1.", "shelve.", "-", "simpl.", "shelve.", "-", "simpl.", "qsimpl time: 1 use: wellFormedFormulaCorrect1,codeList.", "qsimpl time: 1 use: codeFormula,wellFormedFormulaCorrect1,codeList.", "shelve.", "-", "simpl.", "qsimpl time: 1 use: codeFormula,wellFormedFormulaCorrect1,codeList,checkPrf.", "shelve.", "-", "simpl.", "qsimpl time: 1 use: codeFormula,wellFormedFormulaCorrect1,codeList,checkPrf."], "tactic": "apply IHp2.", "exn": "The reference IHp2 was not found in the current environment.", "type": "ref_not_found", "handled": true}]}, "chat": [], "original": "intros l f p. induction p. - simpl. apply wellFormedFormulaCorrect1. + apply codeArityFIsCorrect1. + apply codeArityRIsCorrect1. - simpl. apply IHp. - simpl. rewrite <- codeList. rewrite <- codeFormula. apply codeList_map. - simpl. rewrite <- checkPrf. apply IHp1. - simpl. rewrite <- checkPrf. apply IHp2.", "back_times": 0, "succ": false, "time": 139.35341501235962}]