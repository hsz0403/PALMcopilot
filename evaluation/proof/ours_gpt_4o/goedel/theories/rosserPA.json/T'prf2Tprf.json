[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros f Hf.", "apply translateProof with (U := T') (V := T).", "-", "intros g Hg."], "tactic": ["destruct Hg as [Hg|Hg].", ""], "exn": "Expects a disjunctive pattern with 5 branches.", "type": "num_branch", "handled": false}, {"ctx": ["intros f Hf.", "apply translateProof with (U := T') (V := T).", "-", "intros g Hg."], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}]}, "chat": [], "original": "intros f Hf. apply translateProof with (U := T') (V := T). - intros g Hg. unfold T' in Hg. destruct Hg as [Hg|Hg]. ++ apply NN2PA. auto. ++ destruct (classic (mem (fol.Formula LNT) T (LNN2LNT_formula g))) as [Hmem|Hnmem]. * exists nil. split. -- apply Axm. auto. -- intros _ _; contradiction. * exists nil. split. -- apply contradiction with (f := substituteFormula LNT repT v0 (natToTerm (codeFormula (LNN2LNT_formula g)))). ** apply expressT2. auto. ** apply expressT1. auto. -- intros _ _; contradiction. - auto.", "back_times": 1, "succ": false, "time": 96.84142923355103}]