[{"history": {"proof": "qsimpl time: 1 use: evalStrongRecHelp,compose2IsPR. qsimpl time: 1 use: compose1_NIsPR,nat,evalStrongRecHelp,compose2IsPR. qsimpl time: 1 use: compose2IsPR,nat,compose1_NIsPR,evalStrongRecHelp,ignoreParamsIsPR. qsimpl time: 1 use: compose2IsPR,nat,compose1_NIsPR,evalStrongRecHelp,ignoreParamsIsPR.", "repairs": ["cannot_unify", "wrong_type", "cannot_unify", "cannot_unify"], "exceptions": [{"ctx": ["intros n f Hf."], "tactic": "apply compose2IsPR with (g := evalStrongRecHelp n f).", "exn": "In environment n : nat f : naryFunc (S (S n)) Hf : isPR (S (S n)) f Unable to unify \"{p : PrimRec n | extEqual n (evalPrimRec n p) (compose2 n ?M1432 (evalStrongRecHelp n f))}\" with \"{p : PrimRec (S n) | extEqual (S n) (evalPrimRec (S n) p) (evalStrongRec n f)}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros n f Hf.", "qsimpl time: 1 use: evalStrongRecHelp,compose2IsPR."], "tactic": "apply compose1_NIsPR with (f := fun _ : nat => evalStrongRecHelp n f).", "exn": "In environment H0 : forall (n : nat) (f : naryFunc n), isPR n f -> forall g : nat -> naryFunc n, isPR (S n) g -> isPR n (compose2 n f g) H : forall n : nat, (nat -> nat -> naryFunc n) -> nat -> naryFunc n n : nat f : nat -> nat -> naryFunc n x : PrimRec (S (S n)) H1 : forall c c0 : nat, extEqual n (evalPrimRec (S (S n)) x c c0) (f c c0) The term \"fun _ : nat => evalStrongRecHelp n f\" has type \"nat -> naryFunc (S n)\" while it is expected to have type \"nat -> naryFunc 0\" (cannot unify \"naryFunc (S n)\" and \"naryFunc 0\").", "type": "wrong_type", "handled": true}, {"ctx": ["intros n f Hf.", "qsimpl time: 1 use: evalStrongRecHelp,compose2IsPR.", "qsimpl time: 1 use: compose1_NIsPR,nat,evalStrongRecHelp,compose2IsPR."], "tactic": "apply ignoreParamsIsPR with (m := 1).", "exn": "In environment H4 : forall (n : nat) (f : naryFunc n), isPR n f -> forall g : nat -> naryFunc n, isPR (S n) g -> isPR n (compose2 n f g) H3 : forall n : nat, (nat -> nat -> naryFunc n) -> nat -> naryFunc n H2 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H0 : forall (n : nat) (f : naryFunc n), isPR n f -> forall g : nat -> naryFunc n, isPR (S n) g -> isPR n (compose2 n f g) H : forall n : nat, (nat -> nat -> naryFunc n) -> nat -> naryFunc n n : nat f : nat -> nat -> naryFunc n x : PrimRec (S (S n)) H1 : forall c c0 : nat, extEqual n (evalPrimRec (S (S n)) x c c0) (f c c0) Unable to unify \"{p : PrimRec (1 + ?M2778) | extEqual (1 + ?M2778) (evalPrimRec (1 + ?M2778) p) (ignoreParams ?M2778 1 ?M2780)}\" with \"{p : PrimRec (S n) | extEqual (S n) (evalPrimRec (S n) p) (evalStrongRec n f)}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros n f Hf.", "qsimpl time: 1 use: evalStrongRecHelp,compose2IsPR.", "qsimpl time: 1 use: compose1_NIsPR,nat,evalStrongRecHelp,compose2IsPR.", "qsimpl time: 1 use: compose2IsPR,nat,compose1_NIsPR,evalStrongRecHelp,ignoreParamsIsPR."], "tactic": "apply ignoreParamsIsPR with (m := n + n).", "exn": "In environment H8 : forall (n m : nat) (f : naryFunc n), isPR n f -> isPR (m + n) (ignoreParams n m f) H7 : forall n : nat, (nat -> nat -> naryFunc n) -> nat -> naryFunc n H6 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H5, H4 : forall (n : nat) (f : naryFunc n), isPR n f -> forall g : nat -> naryFunc n, isPR (S n) g -> isPR n (compose2 n f g) H3 : forall n : nat, (nat -> nat -> naryFunc n) -> nat -> naryFunc n H2 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H0 : forall (n : nat) (f : naryFunc n), isPR n f -> forall g : nat -> naryFunc n, isPR (S n) g -> isPR n (compose2 n f g) H : forall n : nat, (nat -> nat -> naryFunc n) -> nat -> naryFunc n n : nat f : nat -> nat -> naryFunc n x : PrimRec (S (S n)) H1 : forall c c0 : nat, extEqual n (evalPrimRec (S (S n)) x c c0) (f c c0) Unable to unify \"{p : PrimRec (n + n + ?M3795) | extEqual (n + n + ?M3795) (evalPrimRec (n + n + ?M3795) p) (ignoreParams ?M3795 (n + n) ?M3797)}\" with \"{p : PrimRec (S n) | extEqual (S n) (evalPrimRec (S n) p) (evalStrongRec n f)}\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros n f Hf. apply compose2IsPR with (g := evalStrongRecHelp n f). apply compose1_NIsPR with (f := fun _ : nat => evalStrongRecHelp n f). apply ignoreParamsIsPR with (m := 1). auto. apply ignoreParamsIsPR with (m := n + n). auto.", "back_times": 0, "succ": false, "time": 73.12264347076416}]