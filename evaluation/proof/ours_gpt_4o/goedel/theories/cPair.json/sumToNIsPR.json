[{"history": {"proof": "qsimpl time: 1 use: compose1_2IsPR. qsimpl time: 1 use: succIsPR,compose1_2IsPR. qsimpl time: 1 use: succIsPR,compose1_2IsPR,idIsPR.", "repairs": ["cannot_unify", "cannot_unify", "cannot_unify"], "exceptions": [{"ctx": ["apply indIsPR."], "tactic": "apply compose1_2IsPR.", "exn": "Unable to unify \"{p : PrimRec 1 | extEqual 1 (evalPrimRec 1 p) (fun x : nat => ?M1438 (?M1434 x) (?M1436 x))}\" with \"{p : PrimRec 2 | extEqual 2 (evalPrimRec 2 p) (fun x y : nat => S x + y)}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["apply indIsPR.", "qsimpl time: 1 use: compose1_2IsPR."], "tactic": "apply succIsPR.", "exn": "In environment H : forall f : nat -> nat, isPR 1 f -> forall f' : nat -> nat, isPR 1 f' -> forall g : nat -> nat -> nat, isPR 2 g -> isPR 1 (fun x : nat => g (f x) (f' x)) Unable to unify \"isPR 1 S\" with \"isPR 2 (fun x y : nat => S (x + y))\".", "type": "cannot_unify", "handled": true}, {"ctx": ["apply indIsPR.", "qsimpl time: 1 use: compose1_2IsPR.", "qsimpl time: 1 use: succIsPR,compose1_2IsPR."], "tactic": "apply idIsPR.", "exn": "In environment H1, H : forall f : nat -> nat, isPR 1 f -> forall f' : nat -> nat, isPR 1 f' -> forall g : nat -> nat -> nat, isPR 2 g -> isPR 1 (fun x : nat => g (f x) (f' x)) x : PrimRec 1 H2 : forall c : nat, evalPrimRec 1 x c = S c Unable to unify \"isPR 1 (fun x : nat => x)\" with \"isPR 2 (fun x y : nat => S (x + y))\".", "type": "cannot_unify", "handled": true}, {"ctx": ["apply indIsPR.", "qsimpl time: 1 use: compose1_2IsPR.", "qsimpl time: 1 use: succIsPR,compose1_2IsPR.", "qsimpl time: 1 use: succIsPR,compose1_2IsPR,idIsPR.", "apply compose2_1IsPR with (f := plus).", "++"], "tactic": "apply compose1_2IsPR.", "exn": "In environment H3, H1, H : forall f : nat -> nat, isPR 1 f -> forall f' : nat -> nat, isPR 1 f' -> forall g : nat -> nat -> nat, isPR 2 g -> isPR 1 (fun x : nat => g (f x) (f' x)) x : PrimRec 1 H2 : forall c : nat, evalPrimRec 1 x c = S c x0 : PrimRec 1 H5 : forall c : nat, evalPrimRec 1 x0 c = S c x1 : PrimRec 1 H0 : forall c : nat, evalPrimRec 1 x1 c = c Unable to unify \"{p : PrimRec 1 | extEqual 1 (evalPrimRec 1 p) (fun x : nat => ?M3795 (?M3791 x) (?M3793 x))}\" with \"{p : PrimRec 2 | extEqual 2 (evalPrimRec 2 p) Init.Nat.add}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["apply indIsPR.", "qsimpl time: 1 use: compose1_2IsPR.", "qsimpl time: 1 use: succIsPR,compose1_2IsPR.", "qsimpl time: 1 use: succIsPR,compose1_2IsPR,idIsPR.", "apply compose2_1IsPR with (f := plus).", "++", "qsimpl time: 1 use: succIsPR,compose1_2IsPR,idIsPR."], "tactic": "apply succIsPR.", "exn": "In environment H6, H3, H1, H : forall f : nat -> nat, isPR 1 f -> forall f' : nat -> nat, isPR 1 f' -> forall g : nat -> nat -> nat, isPR 2 g -> isPR 1 (fun x : nat => g (f x) (f' x)) x : PrimRec 1 H2 : forall c : nat, evalPrimRec 1 x c = S c x0 : PrimRec 1 H5 : forall c : nat, evalPrimRec 1 x0 c = S c x1 : PrimRec 1 H0 : forall c : nat, evalPrimRec 1 x1 c = c x2 : PrimRec 1 H8 : forall c : nat, evalPrimRec 1 x2 c = S c x3 : PrimRec 1 H4 : forall c : nat, evalPrimRec 1 x3 c = c Unable to unify \"isPR 1 S\" with \"isPR 2 Init.Nat.add\".", "type": "cannot_unify", "handled": true}, {"ctx": ["apply indIsPR.", "qsimpl time: 1 use: compose1_2IsPR.", "qsimpl time: 1 use: succIsPR,compose1_2IsPR.", "qsimpl time: 1 use: succIsPR,compose1_2IsPR,idIsPR.", "apply compose2_1IsPR with (f := plus).", "++", "qsimpl time: 1 use: succIsPR,compose1_2IsPR,idIsPR.", "qsimpl time: 1 use: succIsPR,compose1_2IsPR,idIsPR."], "tactic": "apply idIsPR.", "exn": "In environment H9, H6, H3, H1, H : forall f : nat -> nat, isPR 1 f -> forall f' : nat -> nat, isPR 1 f' -> forall g : nat -> nat -> nat, isPR 2 g -> isPR 1 (fun x : nat => g (f x) (f' x)) x : PrimRec 1 H2 : forall c : nat, evalPrimRec 1 x c = S c x0 : PrimRec 1 H5 : forall c : nat, evalPrimRec 1 x0 c = S c x1 : PrimRec 1 H0 : forall c : nat, evalPrimRec 1 x1 c = c x2 : PrimRec 1 H8 : forall c : nat, evalPrimRec 1 x2 c = S c x3 : PrimRec 1 H4 : forall c : nat, evalPrimRec 1 x3 c = c x4 : PrimRec 1 H11 : forall c : nat, evalPrimRec 1 x4 c = S c x5 : PrimRec 1 H7 : forall c : nat, evalPrimRec 1 x5 c = c Unable to unify \"isPR 1 (fun x : nat => x)\" with \"isPR 2 Init.Nat.add\".", "type": "cannot_unify", "handled": true}, {"ctx": ["apply indIsPR.", "qsimpl time: 1 use: compose1_2IsPR.", "qsimpl time: 1 use: succIsPR,compose1_2IsPR.", "qsimpl time: 1 use: succIsPR,compose1_2IsPR,idIsPR.", "apply compose2_1IsPR with (f := plus).", "++", "qsimpl time: 1 use: succIsPR,compose1_2IsPR,idIsPR.", "qsimpl time: 1 use: succIsPR,compose1_2IsPR,idIsPR.", "qsimpl time: 1 use: succIsPR,compose1_2IsPR,idIsPR."], "tactic": "apply compose2_1IsPR with (f := plus).", "exn": "In environment H12, H9, H6, H3, H1, H : forall f : nat -> nat, isPR 1 f -> forall f' : nat -> nat, isPR 1 f' -> forall g : nat -> nat -> nat, isPR 2 g -> isPR 1 (fun x : nat => g (f x) (f' x)) x : PrimRec 1 H2 : forall c : nat, evalPrimRec 1 x c = S c x0 : PrimRec 1 H5 : forall c : nat, evalPrimRec 1 x0 c = S c x1 : PrimRec 1 H0 : forall c : nat, evalPrimRec 1 x1 c = c x2 : PrimRec 1 H8 : forall c : nat, evalPrimRec 1 x2 c = S c x3 : PrimRec 1 H4 : forall c : nat, evalPrimRec 1 x3 c = c x4 : PrimRec 1 H11 : forall c : nat, evalPrimRec 1 x4 c = S c x5 : PrimRec 1 H7 : forall c : nat, evalPrimRec 1 x5 c = c x6 : PrimRec 1 H14 : forall c : nat, evalPrimRec 1 x6 c = S c x7 : PrimRec 1 H10 : forall c : nat, evalPrimRec 1 x7 c = c Unable to unify \"{p : PrimRec 2 | extEqual 2 (evalPrimRec 2 p) (fun x y : nat => ?M13951 (x + y))}\" with \"{p : PrimRec 2 | extEqual 2 (evalPrimRec 2 p) Init.Nat.add}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["apply indIsPR.", "qsimpl time: 1 use: compose1_2IsPR.", "qsimpl time: 1 use: succIsPR,compose1_2IsPR.", "qsimpl time: 1 use: succIsPR,compose1_2IsPR,idIsPR.", "apply compose2_1IsPR with (f := plus).", "++", "qsimpl time: 1 use: succIsPR,compose1_2IsPR,idIsPR.", "qsimpl time: 1 use: succIsPR,compose1_2IsPR,idIsPR.", "qsimpl time: 1 use: succIsPR,compose1_2IsPR,idIsPR.", "qsimpl time: 1 use: compose2_1IsPR,succIsPR,compose1_2IsPR,plus,idIsPR."], "tactic": "apply pi2_2IsPR.", "exn": "In environment n : nat -> nat -> nat H16 : forall f : nat -> nat, isPR 1 f -> forall f' : nat -> nat, isPR 1 f' -> forall g : nat -> nat -> nat, isPR 2 g -> isPR 1 (fun x : nat => g (f x) (f' x)) H13 : forall f : nat -> nat -> nat, isPR 2 f -> forall g : nat -> nat, isPR 1 g -> isPR 2 (fun x y : nat => g (f x y)) H12, H9, H6, H3, H1, H : forall f : nat -> nat, isPR 1 f -> forall f' : nat -> nat, isPR 1 f' -> forall g : nat -> nat -> nat, isPR 2 g -> isPR 1 (fun x : nat => g (f x) (f' x)) x : PrimRec 1 H2 : forall c : nat, evalPrimRec 1 x c = S c x0 : PrimRec 1 H5 : forall c : nat, evalPrimRec 1 x0 c = S c x1 : PrimRec 1 H0 : forall c : nat, evalPrimRec 1 x1 c = c x2 : PrimRec 1 H8 : forall c : nat, evalPrimRec 1 x2 c = S c x3 : PrimRec 1 H4 : forall c : nat, evalPrimRec 1 x3 c = c x4 : PrimRec 1 H11 : forall c : nat, evalPrimRec 1 x4 c = S c x5 : PrimRec 1 H7 : forall c : nat, evalPrimRec 1 x5 c = c x6 : PrimRec 1 H14 : forall c : nat, evalPrimRec 1 x6 c = S c x7 : PrimRec 1 H10 : forall c : nat, evalPrimRec 1 x7 c = c x8 : PrimRec 1 H18 : forall c : nat, evalPrimRec 1 x8 c = S c x9 : PrimRec 1 H15 : forall c : nat, evalPrimRec 1 x9 c = c Unable to unify \"isPR 2 (fun _ b : nat => b)\" with \"isPR 2 n\".", "type": "cannot_unify", "handled": true}, {"ctx": ["apply indIsPR.", "qsimpl time: 1 use: compose1_2IsPR.", "qsimpl time: 1 use: succIsPR,compose1_2IsPR.", "qsimpl time: 1 use: succIsPR,compose1_2IsPR,idIsPR.", "apply compose2_1IsPR with (f := plus).", "++", "qsimpl time: 1 use: succIsPR,compose1_2IsPR,idIsPR.", "qsimpl time: 1 use: succIsPR,compose1_2IsPR,idIsPR.", "qsimpl time: 1 use: succIsPR,compose1_2IsPR,idIsPR.", "qsimpl time: 1 use: compose2_1IsPR,succIsPR,compose1_2IsPR,plus,idIsPR.", "qsimpl time: 1 use: compose2_1IsPR,succIsPR,compose1_2IsPR,plus,pi2_2IsPR,idIsPR."], "tactic": "apply idIsPR.", "exn": "In environment H20 : forall f : nat -> nat, isPR 1 f -> forall f' : nat -> nat, isPR 1 f' -> forall g : nat -> nat -> nat, isPR 2 g -> isPR 1 (fun x : nat => g (f x) (f' x)) H17 : forall f : nat -> nat -> nat, isPR 2 f -> forall g : nat -> nat, isPR 1 g -> isPR 2 (fun x y : nat => g (f x y)) n : nat -> nat -> nat H16 : forall f : nat -> nat, isPR 1 f -> forall f' : nat -> nat, isPR 1 f' -> forall g : nat -> nat -> nat, isPR 2 g -> isPR 1 (fun x : nat => g (f x) (f' x)) H13 : forall f : nat -> nat -> nat, isPR 2 f -> forall g : nat -> nat, isPR 1 g -> isPR 2 (fun x y : nat => g (f x y)) H12, H9, H6, H3, H1, H : forall f : nat -> nat, isPR 1 f -> forall f' : nat -> nat, isPR 1 f' -> forall g : nat -> nat -> nat, isPR 2 g -> isPR 1 (fun x : nat => g (f x) (f' x)) x : PrimRec 1 H2 : forall c : nat, evalPrimRec 1 x c = S c x0 : PrimRec 1 H5 : forall c : nat, evalPrimRec 1 x0 c = S c x1 : PrimRec 1 H0 : forall c : nat, evalPrimRec 1 x1 c = c x2 : PrimRec 1 H8 : forall c : nat, evalPrimRec 1 x2 c = S c x3 : PrimRec 1 H4 : forall c : nat, evalPrimRec 1 x3 c = c x4 : PrimRec 1 H11 : forall c : nat, evalPrimRec 1 x4 c = S c x5 : PrimRec 1 H7 : forall c : nat, evalPrimRec 1 x5 c = c x6 : PrimRec 1 H14 : forall c : nat, evalPrimRec 1 x6 c = S c x7 : PrimRec 1 H10 : forall c : nat, evalPrimRec 1 x7 c = c x8 : PrimRec 1 H18 : forall c : nat, evalPrimRec 1 x8 c = S c x9 : PrimRec 1 H15 : forall c : nat, evalPrimRec 1 x9 c = c x10 : PrimRec 1 H21 : forall c : nat, evalPrimRec 1 x10 c = S c x11 : PrimRec 2 H19 : forall c c0 : nat, evalPrimRec 2 x11 c c0 = c0 x12 : PrimRec 1 H22 : forall c : nat, evalPrimRec 1 x12 c = c Unable to unify \"isPR 1 (fun x : nat => x)\" with \"isPR 2 n\".", "type": "cannot_unify", "handled": true}, {"ctx": ["apply indIsPR.", "qsimpl time: 1 use: compose1_2IsPR.", "qsimpl time: 1 use: succIsPR,compose1_2IsPR.", "qsimpl time: 1 use: succIsPR,compose1_2IsPR,idIsPR.", "apply compose2_1IsPR with (f := plus).", "++", "qsimpl time: 1 use: succIsPR,compose1_2IsPR,idIsPR.", "qsimpl time: 1 use: succIsPR,compose1_2IsPR,idIsPR.", "qsimpl time: 1 use: succIsPR,compose1_2IsPR,idIsPR.", "qsimpl time: 1 use: compose2_1IsPR,succIsPR,compose1_2IsPR,plus,idIsPR.", "qsimpl time: 1 use: compose2_1IsPR,succIsPR,compose1_2IsPR,plus,pi2_2IsPR,idIsPR.", "qsimpl time: 1 use: compose2_1IsPR,succIsPR,compose1_2IsPR,plus,pi2_2IsPR,idIsPR."], "tactic": "++", "exn": "Wrong bullet ++: Current bullet ++ is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["apply indIsPR.", "qsimpl time: 1 use: compose1_2IsPR.", "qsimpl time: 1 use: succIsPR,compose1_2IsPR.", "qsimpl time: 1 use: succIsPR,compose1_2IsPR,idIsPR.", "apply compose2_1IsPR with (f := plus).", "++", "qsimpl time: 1 use: succIsPR,compose1_2IsPR,idIsPR.", "qsimpl time: 1 use: succIsPR,compose1_2IsPR,idIsPR.", "qsimpl time: 1 use: succIsPR,compose1_2IsPR,idIsPR.", "qsimpl time: 1 use: compose2_1IsPR,succIsPR,compose1_2IsPR,plus,idIsPR.", "qsimpl time: 1 use: compose2_1IsPR,succIsPR,compose1_2IsPR,plus,pi2_2IsPR,idIsPR.", "qsimpl time: 1 use: compose2_1IsPR,succIsPR,compose1_2IsPR,plus,pi2_2IsPR,idIsPR.", "shelve.", "++"], "tactic": "apply idIsPR.", "exn": "In environment H3, H1, H : forall f : nat -> nat, isPR 1 f -> forall f' : nat -> nat, isPR 1 f' -> forall g : nat -> nat -> nat, isPR 2 g -> isPR 1 (fun x : nat => g (f x) (f' x)) x : PrimRec 1 H2 : forall c : nat, evalPrimRec 1 x c = S c x0 : PrimRec 1 H5 : forall c : nat, evalPrimRec 1 x0 c = S c x1 : PrimRec 1 H0 : forall c : nat, evalPrimRec 1 x1 c = c Unable to unify \"isPR 1 (fun x : nat => x)\" with \"isPR 1 S\".", "type": "cannot_unify", "handled": true}, {"ctx": ["apply indIsPR.", "qsimpl time: 1 use: compose1_2IsPR.", "qsimpl time: 1 use: succIsPR,compose1_2IsPR.", "qsimpl time: 1 use: succIsPR,compose1_2IsPR,idIsPR.", "apply compose2_1IsPR with (f := plus).", "++", "qsimpl time: 1 use: succIsPR,compose1_2IsPR,idIsPR.", "qsimpl time: 1 use: succIsPR,compose1_2IsPR,idIsPR.", "qsimpl time: 1 use: succIsPR,compose1_2IsPR,idIsPR.", "qsimpl time: 1 use: compose2_1IsPR,succIsPR,compose1_2IsPR,plus,idIsPR.", "qsimpl time: 1 use: compose2_1IsPR,succIsPR,compose1_2IsPR,plus,pi2_2IsPR,idIsPR.", "qsimpl time: 1 use: compose2_1IsPR,succIsPR,compose1_2IsPR,plus,pi2_2IsPR,idIsPR.", "shelve.", "++", "qsimpl time: 1 use: compose2_1IsPR,succIsPR,compose1_2IsPR,plus,pi2_2IsPR,idIsPR."], "tactic": "-", "exn": "Wrong bullet -: No more subgoals.", "type": "no_more_subgoals", "handled": true}]}, "chat": [], "original": "apply indIsPR. - apply compose1_2IsPR. -- apply succIsPR. -- apply idIsPR. -- apply compose2_1IsPR with (f := plus). ++ apply compose1_2IsPR. ** apply succIsPR. ** apply idIsPR. ** apply compose2_1IsPR with (f := plus). --- apply pi2_2IsPR. --- apply idIsPR. ++ apply idIsPR. - apply compose1_2IsPR. -- apply idIsPR. -- apply const1_NIsPR. - apply const1_NIsPR.", "back_times": 0, "succ": false, "time": 100.43607521057129}]