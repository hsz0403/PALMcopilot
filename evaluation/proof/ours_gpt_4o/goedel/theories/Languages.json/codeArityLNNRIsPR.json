[{"history": {"proof": "qsimpl time: 1 use: S,pred,eqb,compose1_3IsPR. qsimpl time: 1 use: S,pred,eqb,idIsPR,compose1_3IsPR. qsimpl time: 1 use: succIsPR,S,pred,eqb,idIsPR,compose1_3IsPR. qsimpl time: 1 use: predIsPR,succIsPR,S,pred,eqb,idIsPR,compose1_3IsPR. qsimpl time: 1 use: predIsPR,succIsPR,S,pred,eqb,idIsPR,compose1_3IsPR,compose1_NIsPR. qsimpl time: 1 use: predIsPR,succIsPR,S,pred,eqb,const1_NIsPR,idIsPR,compose1_3IsPR,compose1_NIsPR. qsimpl time: 1 use: predIsPR,boundSearchIsPR,succIsPR,S,pred,eqb,const1_NIsPR,idIsPR,compose1_3IsPR,compose1_NIsPR. qsimpl time: 1 use: predIsPR,boundSearchIsPR,succIsPR,S,pred,eqb,const1_NIsPR,compose3_1IsPR,idIsPR,compose1_3IsPR,compose1_NIsPR. qsimpl time: 1 use: predIsPR,pi1_2IsPR,boundSearchIsPR,succIsPR,S,pred,eqb,const1_NIsPR,compose3_1IsPR,idIsPR,compose1_3IsPR,compose1_NIsPR. qsimpl time: 1 use: predIsPR,pi1_2IsPR,boundSearchIsPR,succIsPR,S,pred,eqb,const1_NIsPR,compose1_1IsPR,compose3_1IsPR,idIsPR,compose1_3IsPR,compose1_NIsPR. qsimpl time: 1 use: predIsPR,pi1_2IsPR,boundSearchIsPR,succIsPR,S,pred,eqb,const1_NIsPR,compose1_1IsPR,compose3_1IsPR,idIsPR,compose1_3IsPR,compose1_NIsPR. qsimpl time: 1 use: predIsPR,pi1_2IsPR,boundSearchIsPR,succIsPR,S,pred,eqb,const1_NIsPR,compose1_1IsPR,compose3_1IsPR,idIsPR,compose1_3IsPR,compose1_NIsPR.", "repairs": ["cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify"], "exceptions": [{"ctx": [], "tactic": "apply compose1_3IsPR with (f1 := fun x => x) (f2 := S) (f3 := Nat.pred) (g := fun x y z => if Nat.eqb z x then y else z).", "exn": "Unable to unify \"isPR 1 (fun x : nat => if Nat.pred x =? x then S x else Nat.pred x)\" with \"isPR 1 codeArityLNNR\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: S,pred,eqb,compose1_3IsPR."], "tactic": "apply idIsPR.", "exn": "In environment n : nat -> nat H1 : forall f1 : nat -> nat, isPR (n 0) f1 -> forall f2 : nat -> nat, isPR (n 0) f2 -> forall f3 : nat -> nat, isPR (n 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n (n (n 0))) g -> isPR (n 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) Unable to unify \"isPR 1 (fun x : nat => x)\" with \"isPR (n 0) codeArityLNNR\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: S,pred,eqb,compose1_3IsPR.", "qsimpl time: 1 use: S,pred,eqb,idIsPR,compose1_3IsPR."], "tactic": "apply succIsPR.", "exn": "In environment n0 : nat -> nat H3 : forall f1 : nat -> nat, isPR (n0 0) f1 -> forall f2 : nat -> nat, isPR (n0 0) f2 -> forall f3 : nat -> nat, isPR (n0 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n0 (n0 (n0 0))) g -> isPR (n0 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H2 : isPR (n0 0) (fun x : nat => x) n : nat -> nat H1 : forall f1 : nat -> nat, isPR (n 0) f1 -> forall f2 : nat -> nat, isPR (n 0) f2 -> forall f3 : nat -> nat, isPR (n 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n (n (n 0))) g -> isPR (n 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) Unable to unify \"isPR 1 S\" with \"isPR (n 0) codeArityLNNR\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: S,pred,eqb,compose1_3IsPR.", "qsimpl time: 1 use: S,pred,eqb,idIsPR,compose1_3IsPR.", "qsimpl time: 1 use: succIsPR,S,pred,eqb,idIsPR,compose1_3IsPR."], "tactic": "apply predIsPR.", "exn": "In environment n1 : nat -> nat H6 : forall f1 : nat -> nat, isPR (n1 0) f1 -> forall f2 : nat -> nat, isPR (n1 0) f2 -> forall f3 : nat -> nat, isPR (n1 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n1 (n1 (n1 0))) g -> isPR (n1 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H5 : isPR (n1 0) (fun x : nat => x) H : isPR 1 S n0 : nat -> nat H3 : forall f1 : nat -> nat, isPR (n0 0) f1 -> forall f2 : nat -> nat, isPR (n0 0) f2 -> forall f3 : nat -> nat, isPR (n0 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n0 (n0 (n0 0))) g -> isPR (n0 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H2 : isPR (n0 0) (fun x : nat => x) n : nat -> nat H1 : forall f1 : nat -> nat, isPR (n 0) f1 -> forall f2 : nat -> nat, isPR (n 0) f2 -> forall f3 : nat -> nat, isPR (n 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n (n (n 0))) g -> isPR (n 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) Unable to unify \"isPR 1 Init.Nat.pred\" with \"isPR (n 0) codeArityLNNR\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: S,pred,eqb,compose1_3IsPR.", "qsimpl time: 1 use: S,pred,eqb,idIsPR,compose1_3IsPR.", "qsimpl time: 1 use: succIsPR,S,pred,eqb,idIsPR,compose1_3IsPR.", "qsimpl time: 1 use: predIsPR,succIsPR,S,pred,eqb,idIsPR,compose1_3IsPR."], "tactic": "apply compose1_NIsPR with (n := 1) (f := fun _ => 0).", "exn": "In environment n2 : nat -> nat H10 : forall f1 : nat -> nat, isPR (n2 0) f1 -> forall f2 : nat -> nat, isPR (n2 0) f2 -> forall f3 : nat -> nat, isPR (n2 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n2 (n2 (n2 0))) g -> isPR (n2 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H9 : isPR (n2 0) (fun x : nat => x) H4 : isPR 1 S H0 : isPR 1 Init.Nat.pred n1 : nat -> nat H6 : forall f1 : nat -> nat, isPR (n1 0) f1 -> forall f2 : nat -> nat, isPR (n1 0) f2 -> forall f3 : nat -> nat, isPR (n1 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n1 (n1 (n1 0))) g -> isPR (n1 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H5 : isPR (n1 0) (fun x : nat => x) H : isPR 1 S n0 : nat -> nat H3 : forall f1 : nat -> nat, isPR (n0 0) f1 -> forall f2 : nat -> nat, isPR (n0 0) f2 -> forall f3 : nat -> nat, isPR (n0 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n0 (n0 (n0 0))) g -> isPR (n0 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H2 : isPR (n0 0) (fun x : nat => x) n : nat -> nat H1 : forall f1 : nat -> nat, isPR (n 0) f1 -> forall f2 : nat -> nat, isPR (n 0) f2 -> forall f3 : nat -> nat, isPR (n 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n (n (n 0))) g -> isPR (n 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) Unable to unify \"{p : PrimRec 2 | extEqualNat.extEqual 2 (evalPrimRec 2 p) (fun _ : nat => ?M3361 0)}\" with \"{p : PrimRec (n 0) | extEqualNat.extEqual (n 0) (evalPrimRec (n 0) p) codeArityLNNR}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: S,pred,eqb,compose1_3IsPR.", "qsimpl time: 1 use: S,pred,eqb,idIsPR,compose1_3IsPR.", "qsimpl time: 1 use: succIsPR,S,pred,eqb,idIsPR,compose1_3IsPR.", "qsimpl time: 1 use: predIsPR,succIsPR,S,pred,eqb,idIsPR,compose1_3IsPR.", "qsimpl time: 1 use: predIsPR,succIsPR,S,pred,eqb,idIsPR,compose1_3IsPR,compose1_NIsPR."], "tactic": "apply const1_NIsPR.", "exn": "In environment n3 : nat -> nat H15 : forall (n : nat) (g : extEqualNat.naryFunc (n3 n)), isPR (n3 n) g -> forall f : extEqualNat.naryFunc (n3 0), isPR (n3 0) f -> isPR (n3 n) (fun x : nat => g (f x)) H14 : forall f1 : nat -> nat, isPR (n3 0) f1 -> forall f2 : nat -> nat, isPR (n3 0) f2 -> forall f3 : nat -> nat, isPR (n3 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n3 (n3 (n3 0))) g -> isPR (n3 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H13 : isPR (n3 0) (fun x : nat => x) H8 : isPR 1 S H7 : isPR 1 Init.Nat.pred n2 : nat -> nat H10 : forall f1 : nat -> nat, isPR (n2 0) f1 -> forall f2 : nat -> nat, isPR (n2 0) f2 -> forall f3 : nat -> nat, isPR (n2 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n2 (n2 (n2 0))) g -> isPR (n2 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H9 : isPR (n2 0) (fun x : nat => x) H4 : isPR 1 S H0 : isPR 1 Init.Nat.pred n1 : nat -> nat H6 : forall f1 : nat -> nat, isPR (n1 0) f1 -> forall f2 : nat -> nat, isPR (n1 0) f2 -> forall f3 : nat -> nat, isPR (n1 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n1 (n1 (n1 0))) g -> isPR (n1 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H5 : isPR (n1 0) (fun x : nat => x) H : isPR 1 S n0 : nat -> nat H3 : forall f1 : nat -> nat, isPR (n0 0) f1 -> forall f2 : nat -> nat, isPR (n0 0) f2 -> forall f3 : nat -> nat, isPR (n0 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n0 (n0 (n0 0))) g -> isPR (n0 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H2 : isPR (n0 0) (fun x : nat => x) n : nat -> nat H1 : forall f1 : nat -> nat, isPR (n 0) f1 -> forall f2 : nat -> nat, isPR (n 0) f2 -> forall f3 : nat -> nat, isPR (n 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n (n (n 0))) g -> isPR (n 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) Unable to unify \"{p : PrimRec 1 | extEqualNat.extEqual 1 (evalPrimRec 1 p) (fun _ : nat => ?M4386)}\" with \"{p : PrimRec (n 0) | extEqualNat.extEqual (n 0) (evalPrimRec (n 0) p) codeArityLNNR}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: S,pred,eqb,compose1_3IsPR.", "qsimpl time: 1 use: S,pred,eqb,idIsPR,compose1_3IsPR.", "qsimpl time: 1 use: succIsPR,S,pred,eqb,idIsPR,compose1_3IsPR.", "qsimpl time: 1 use: predIsPR,succIsPR,S,pred,eqb,idIsPR,compose1_3IsPR.", "qsimpl time: 1 use: predIsPR,succIsPR,S,pred,eqb,idIsPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: predIsPR,succIsPR,S,pred,eqb,const1_NIsPR,idIsPR,compose1_3IsPR,compose1_NIsPR."], "tactic": "apply boundSearchIsPR.", "exn": "In environment n4 : nat -> nat H21 : forall (n : nat) (g : extEqualNat.naryFunc (n4 n)), isPR (n4 n) g -> forall f : extEqualNat.naryFunc (n4 0), isPR (n4 0) f -> isPR (n4 n) (fun x : nat => g (f x)) H20 : forall f1 : nat -> nat, isPR (n4 0) f1 -> forall f2 : nat -> nat, isPR (n4 0) f2 -> forall f3 : nat -> nat, isPR (n4 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n4 (n4 (n4 0))) g -> isPR (n4 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H19 : isPR (n4 0) (fun x : nat => x) H18 : forall n : nat, isPR (n4 0) (fun _ : nat => n) H12 : isPR 1 S H11 : isPR 1 Init.Nat.pred n3 : nat -> nat H15 : forall (n : nat) (g : extEqualNat.naryFunc (n3 n)), isPR (n3 n) g -> forall f : extEqualNat.naryFunc (n3 0), isPR (n3 0) f -> isPR (n3 n) (fun x : nat => g (f x)) H14 : forall f1 : nat -> nat, isPR (n3 0) f1 -> forall f2 : nat -> nat, isPR (n3 0) f2 -> forall f3 : nat -> nat, isPR (n3 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n3 (n3 (n3 0))) g -> isPR (n3 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H13 : isPR (n3 0) (fun x : nat => x) H8 : isPR 1 S H7 : isPR 1 Init.Nat.pred n2 : nat -> nat H10 : forall f1 : nat -> nat, isPR (n2 0) f1 -> forall f2 : nat -> nat, isPR (n2 0) f2 -> forall f3 : nat -> nat, isPR (n2 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n2 (n2 (n2 0))) g -> isPR (n2 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H9 : isPR (n2 0) (fun x : nat => x) H4 : isPR 1 S H0 : isPR 1 Init.Nat.pred n1 : nat -> nat H6 : forall f1 : nat -> nat, isPR (n1 0) f1 -> forall f2 : nat -> nat, isPR (n1 0) f2 -> forall f3 : nat -> nat, isPR (n1 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n1 (n1 (n1 0))) g -> isPR (n1 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H5 : isPR (n1 0) (fun x : nat => x) H : isPR 1 S n0 : nat -> nat H3 : forall f1 : nat -> nat, isPR (n0 0) f1 -> forall f2 : nat -> nat, isPR (n0 0) f2 -> forall f3 : nat -> nat, isPR (n0 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n0 (n0 (n0 0))) g -> isPR (n0 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H2 : isPR (n0 0) (fun x : nat => x) n : nat -> nat H1 : forall f1 : nat -> nat, isPR (n 0) f1 -> forall f2 : nat -> nat, isPR (n 0) f2 -> forall f3 : nat -> nat, isPR (n 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n (n (n 0))) g -> isPR (n 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) Unable to unify \"{p : PrimRec 1 | extEqualNat.extEqual 1 (evalPrimRec 1 p) (fun b : nat => boundedSearch ?M5712 b)}\" with \"{p : PrimRec (n 0) | extEqualNat.extEqual (n 0) (evalPrimRec (n 0) p) codeArityLNNR}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: S,pred,eqb,compose1_3IsPR.", "qsimpl time: 1 use: S,pred,eqb,idIsPR,compose1_3IsPR.", "qsimpl time: 1 use: succIsPR,S,pred,eqb,idIsPR,compose1_3IsPR.", "qsimpl time: 1 use: predIsPR,succIsPR,S,pred,eqb,idIsPR,compose1_3IsPR.", "qsimpl time: 1 use: predIsPR,succIsPR,S,pred,eqb,idIsPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: predIsPR,succIsPR,S,pred,eqb,const1_NIsPR,idIsPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: predIsPR,boundSearchIsPR,succIsPR,S,pred,eqb,const1_NIsPR,idIsPR,compose1_3IsPR,compose1_NIsPR."], "tactic": "apply compose3_1IsPR with (g := fun _ => 0).", "exn": "In environment n5 : nat -> nat H28 : forall (n : nat) (g : extEqualNat.naryFunc (n5 n)), isPR (n5 n) g -> forall f : extEqualNat.naryFunc (n5 0), isPR (n5 0) f -> isPR (n5 n) (fun x : nat => g (f x)) H27 : forall f1 : nat -> nat, isPR (n5 0) f1 -> forall f2 : nat -> nat, isPR (n5 0) f2 -> forall f3 : nat -> nat, isPR (n5 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n5 (n5 (n5 0))) g -> isPR (n5 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H26 : isPR (n5 0) (fun x : nat => x) H25 : forall n : nat, isPR (n5 0) (fun _ : nat => n) H22 : isPR 1 S H17 : forall P : nat -> nat -> bool, isPRrel 2 P -> isPR 1 (fun b : nat => boundedSearch P b) H16 : isPR 1 Init.Nat.pred n4 : nat -> nat H21 : forall (n : nat) (g : extEqualNat.naryFunc (n4 n)), isPR (n4 n) g -> forall f : extEqualNat.naryFunc (n4 0), isPR (n4 0) f -> isPR (n4 n) (fun x : nat => g (f x)) H20 : forall f1 : nat -> nat, isPR (n4 0) f1 -> forall f2 : nat -> nat, isPR (n4 0) f2 -> forall f3 : nat -> nat, isPR (n4 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n4 (n4 (n4 0))) g -> isPR (n4 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H19 : isPR (n4 0) (fun x : nat => x) H18 : forall n : nat, isPR (n4 0) (fun _ : nat => n) H12 : isPR 1 S H11 : isPR 1 Init.Nat.pred n3 : nat -> nat H15 : forall (n : nat) (g : extEqualNat.naryFunc (n3 n)), isPR (n3 n) g -> forall f : extEqualNat.naryFunc (n3 0), isPR (n3 0) f -> isPR (n3 n) (fun x : nat => g (f x)) H14 : forall f1 : nat -> nat, isPR (n3 0) f1 -> forall f2 : nat -> nat, isPR (n3 0) f2 -> forall f3 : nat -> nat, isPR (n3 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n3 (n3 (n3 0))) g -> isPR (n3 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H13 : isPR (n3 0) (fun x : nat => x) H8 : isPR 1 S H7 : isPR 1 Init.Nat.pred n2 : nat -> nat H10 : forall f1 : nat -> nat, isPR (n2 0) f1 -> forall f2 : nat -> nat, isPR (n2 0) f2 -> forall f3 : nat -> nat, isPR (n2 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n2 (n2 (n2 0))) g -> isPR (n2 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H9 : isPR (n2 0) (fun x : nat => x) H4 : isPR 1 S H0 : isPR 1 Init.Nat.pred n1 : nat -> nat H6 : forall f1 : nat -> nat, isPR (n1 0) f1 -> forall f2 : nat -> nat, isPR (n1 0) f2 -> forall f3 : nat -> nat, isPR (n1 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n1 (n1 (n1 0))) g -> isPR (n1 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H5 : isPR (n1 0) (fun x : nat => x) H : isPR 1 S n0 : nat -> nat H3 : forall f1 : nat -> nat, isPR (n0 0) f1 -> forall f2 : nat -> nat, isPR (n0 0) f2 -> forall f3 : nat -> nat, isPR (n0 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n0 (n0 (n0 0))) g -> isPR (n0 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H2 : isPR (n0 0) (fun x : nat => x) n : nat -> nat H1 : forall f1 : nat -> nat, isPR (n 0) f1 -> forall f2 : nat -> nat, isPR (n 0) f2 -> forall f3 : nat -> nat, isPR (n 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n (n (n 0))) g -> isPR (n 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) Unable to unify \"isPR 3 (fun _ _ _ : nat => 0)\" with \"isPR (n 0) codeArityLNNR\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: S,pred,eqb,compose1_3IsPR.", "qsimpl time: 1 use: S,pred,eqb,idIsPR,compose1_3IsPR.", "qsimpl time: 1 use: succIsPR,S,pred,eqb,idIsPR,compose1_3IsPR.", "qsimpl time: 1 use: predIsPR,succIsPR,S,pred,eqb,idIsPR,compose1_3IsPR.", "qsimpl time: 1 use: predIsPR,succIsPR,S,pred,eqb,idIsPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: predIsPR,succIsPR,S,pred,eqb,const1_NIsPR,idIsPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: predIsPR,boundSearchIsPR,succIsPR,S,pred,eqb,const1_NIsPR,idIsPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: predIsPR,boundSearchIsPR,succIsPR,S,pred,eqb,const1_NIsPR,compose3_1IsPR,idIsPR,compose1_3IsPR,compose1_NIsPR."], "tactic": "apply pi1_2IsPR.", "exn": "In environment n6 : nat -> nat H36 : forall (n : nat) (g : extEqualNat.naryFunc (n6 n)), isPR (n6 n) g -> forall f : extEqualNat.naryFunc (n6 0), isPR (n6 0) f -> isPR (n6 n) (fun x : nat => g (f x)) H35 : forall f1 : nat -> nat, isPR (n6 0) f1 -> forall f2 : nat -> nat, isPR (n6 0) f2 -> forall f3 : nat -> nat, isPR (n6 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n6 (n6 (n6 0))) g -> isPR (n6 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H34 : isPR (n6 0) (fun x : nat => x) H33 : forall f : nat -> nat -> nat -> nat, isPR (n6 (n6 (n6 0))) f -> forall g : nat -> nat, isPR (n6 0) g -> isPR (n6 (n6 (n6 0))) (fun x y z : nat => g (f x y z)) H32 : forall n : nat, isPR (n6 0) (fun _ : nat => n) H29 : isPR 1 S H24 : forall P : nat -> nat -> bool, isPRrel 2 P -> isPR 1 (fun b : nat => boundedSearch P b) H23 : isPR 1 Init.Nat.pred n5 : nat -> nat H28 : forall (n : nat) (g : extEqualNat.naryFunc (n5 n)), isPR (n5 n) g -> forall f : extEqualNat.naryFunc (n5 0), isPR (n5 0) f -> isPR (n5 n) (fun x : nat => g (f x)) H27 : forall f1 : nat -> nat, isPR (n5 0) f1 -> forall f2 : nat -> nat, isPR (n5 0) f2 -> forall f3 : nat -> nat, isPR (n5 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n5 (n5 (n5 0))) g -> isPR (n5 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H26 : isPR (n5 0) (fun x : nat => x) H25 : forall n : nat, isPR (n5 0) (fun _ : nat => n) H22 : isPR 1 S H17 : forall P : nat -> nat -> bool, isPRrel 2 P -> isPR 1 (fun b : nat => boundedSearch P b) H16 : isPR 1 Init.Nat.pred n4 : nat -> nat H21 : forall (n : nat) (g : extEqualNat.naryFunc (n4 n)), isPR (n4 n) g -> forall f : extEqualNat.naryFunc (n4 0), isPR (n4 0) f -> isPR (n4 n) (fun x : nat => g (f x)) H20 : forall f1 : nat -> nat, isPR (n4 0) f1 -> forall f2 : nat -> nat, isPR (n4 0) f2 -> forall f3 : nat -> nat, isPR (n4 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n4 (n4 (n4 0))) g -> isPR (n4 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H19 : isPR (n4 0) (fun x : nat => x) H18 : forall n : nat, isPR (n4 0) (fun _ : nat => n) H12 : isPR 1 S H11 : isPR 1 Init.Nat.pred n3 : nat -> nat H15 : forall (n : nat) (g : extEqualNat.naryFunc (n3 n)), isPR (n3 n) g -> forall f : extEqualNat.naryFunc (n3 0), isPR (n3 0) f -> isPR (n3 n) (fun x : nat => g (f x)) H14 : forall f1 : nat -> nat, isPR (n3 0) f1 -> forall f2 : nat -> nat, isPR (n3 0) f2 -> forall f3 : nat -> nat, isPR (n3 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n3 (n3 (n3 0))) g -> isPR (n3 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H13 : isPR (n3 0) (fun x : nat => x) H8 : isPR 1 S H7 : isPR 1 Init.Nat.pred n2 : nat -> nat H10 : forall f1 : nat -> nat, isPR (n2 0) f1 -> forall f2 : nat -> nat, isPR (n2 0) f2 -> forall f3 : nat -> nat, isPR (n2 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n2 (n2 (n2 0))) g -> isPR (n2 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H9 : isPR (n2 0) (fun x : nat => x) H4 : isPR 1 S H0 : isPR 1 Init.Nat.pred n1 : nat -> nat H6 : forall f1 : nat -> nat, isPR (n1 0) f1 -> forall f2 : nat -> nat, isPR (n1 0) f2 -> forall f3 : nat -> nat, isPR (n1 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n1 (n1 (n1 0))) g -> isPR (n1 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H5 : isPR (n1 0) (fun x : nat => x) H : isPR 1 S n0 : nat -> nat H3 : forall f1 : nat -> nat, isPR (n0 0) f1 -> forall f2 : nat -> nat, isPR (n0 0) f2 -> forall f3 : nat -> nat, isPR (n0 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n0 (n0 (n0 0))) g -> isPR (n0 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H2 : isPR (n0 0) (fun x : nat => x) n : nat -> nat H1 : forall f1 : nat -> nat, isPR (n 0) f1 -> forall f2 : nat -> nat, isPR (n 0) f2 -> forall f3 : nat -> nat, isPR (n 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n (n (n 0))) g -> isPR (n 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) Unable to unify \"isPR 2 (fun a _ : nat => a)\" with \"isPR (n 0) codeArityLNNR\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: S,pred,eqb,compose1_3IsPR.", "qsimpl time: 1 use: S,pred,eqb,idIsPR,compose1_3IsPR.", "qsimpl time: 1 use: succIsPR,S,pred,eqb,idIsPR,compose1_3IsPR.", "qsimpl time: 1 use: predIsPR,succIsPR,S,pred,eqb,idIsPR,compose1_3IsPR.", "qsimpl time: 1 use: predIsPR,succIsPR,S,pred,eqb,idIsPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: predIsPR,succIsPR,S,pred,eqb,const1_NIsPR,idIsPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: predIsPR,boundSearchIsPR,succIsPR,S,pred,eqb,const1_NIsPR,idIsPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: predIsPR,boundSearchIsPR,succIsPR,S,pred,eqb,const1_NIsPR,compose3_1IsPR,idIsPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: predIsPR,pi1_2IsPR,boundSearchIsPR,succIsPR,S,pred,eqb,const1_NIsPR,compose3_1IsPR,idIsPR,compose1_3IsPR,compose1_NIsPR."], "tactic": "apply compose1_1IsPR with (g := fun _ => 0).", "exn": "In environment n7 : nat -> nat H45 : forall (n : nat) (g : extEqualNat.naryFunc (n7 n)), isPR (n7 n) g -> forall f : extEqualNat.naryFunc (n7 0), isPR (n7 0) f -> isPR (n7 n) (fun x : nat => g (f x)) H44 : forall f1 : nat -> nat, isPR (n7 0) f1 -> forall f2 : nat -> nat, isPR (n7 0) f2 -> forall f3 : nat -> nat, isPR (n7 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n7 (n7 (n7 0))) g -> isPR (n7 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H43 : isPR (n7 0) (fun x : nat => x) H42 : forall f : nat -> nat -> nat -> nat, isPR (n7 (n7 (n7 0))) f -> forall g : nat -> nat, isPR (n7 0) g -> isPR (n7 (n7 (n7 0))) (fun x y z : nat => g (f x y z)) H41 : forall n : nat, isPR (n7 0) (fun _ : nat => n) H38 : isPR 1 S H37 : forall P : nat -> nat -> bool, isPRrel 2 P -> isPR 1 (fun b : nat => boundedSearch P b) H31 : isPR 2 (fun a _ : nat => a) H30 : isPR 1 Init.Nat.pred n6 : nat -> nat H36 : forall (n : nat) (g : extEqualNat.naryFunc (n6 n)), isPR (n6 n) g -> forall f : extEqualNat.naryFunc (n6 0), isPR (n6 0) f -> isPR (n6 n) (fun x : nat => g (f x)) H35 : forall f1 : nat -> nat, isPR (n6 0) f1 -> forall f2 : nat -> nat, isPR (n6 0) f2 -> forall f3 : nat -> nat, isPR (n6 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n6 (n6 (n6 0))) g -> isPR (n6 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H34 : isPR (n6 0) (fun x : nat => x) H33 : forall f : nat -> nat -> nat -> nat, isPR (n6 (n6 (n6 0))) f -> forall g : nat -> nat, isPR (n6 0) g -> isPR (n6 (n6 (n6 0))) (fun x y z : nat => g (f x y z)) H32 : forall n : nat, isPR (n6 0) (fun _ : nat => n) H29 : isPR 1 S H24 : forall P : nat -> nat -> bool, isPRrel 2 P -> isPR 1 (fun b : nat => boundedSearch P b) H23 : isPR 1 Init.Nat.pred n5 : nat -> nat H28 : forall (n : nat) (g : extEqualNat.naryFunc (n5 n)), isPR (n5 n) g -> forall f : extEqualNat.naryFunc (n5 0), isPR (n5 0) f -> isPR (n5 n) (fun x : nat => g (f x)) H27 : forall f1 : nat -> nat, isPR (n5 0) f1 -> forall f2 : nat -> nat, isPR (n5 0) f2 -> forall f3 : nat -> nat, isPR (n5 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n5 (n5 (n5 0))) g -> isPR (n5 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H26 : isPR (n5 0) (fun x : nat => x) H25 : forall n : nat, isPR (n5 0) (fun _ : nat => n) H22 : isPR 1 S H17 : forall P : nat -> nat -> bool, isPRrel 2 P -> isPR 1 (fun b : nat => boundedSearch P b) H16 : isPR 1 Init.Nat.pred n4 : nat -> nat H21 : forall (n : nat) (g : extEqualNat.naryFunc (n4 n)), isPR (n4 n) g -> forall f : extEqualNat.naryFunc (n4 0), isPR (n4 0) f -> isPR (n4 n) (fun x : nat => g (f x)) H20 : forall f1 : nat -> nat, isPR (n4 0) f1 -> forall f2 : nat -> nat, isPR (n4 0) f2 -> forall f3 : nat -> nat, isPR (n4 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n4 (n4 (n4 0))) g -> isPR (n4 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H19 : isPR (n4 0) (fun x : nat => x) H18 : forall n : nat, isPR (n4 0) (fun _ : nat => n) H12 : isPR 1 S H11 : isPR 1 Init.Nat.pred n3 : nat -> nat H15 : forall (n : nat) (g : extEqualNat.naryFunc (n3 n)), isPR (n3 n) g -> forall f : extEqualNat.naryFunc (n3 0), isPR (n3 0) f -> isPR (n3 n) (fun x : nat => g (f x)) H14 : forall f1 : nat -> nat, isPR (n3 0) f1 -> forall f2 : nat -> nat, isPR (n3 0) f2 -> forall f3 : nat -> nat, isPR (n3 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n3 (n3 (n3 0))) g -> isPR (n3 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H13 : isPR (n3 0) (fun x : nat => x) H8 : isPR 1 S H7 : isPR 1 Init.Nat.pred n2 : nat -> nat H10 : forall f1 : nat -> nat, isPR (n2 0) f1 -> forall f2 : nat -> nat, isPR (n2 0) f2 -> forall f3 : nat -> nat, isPR (n2 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n2 (n2 (n2 0))) g -> isPR (n2 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H9 : isPR (n2 0) (fun x : nat => x) H4 : isPR 1 S H0 : isPR 1 Init.Nat.pred n1 : nat -> nat H6 : forall f1 : nat -> nat, isPR (n1 0) f1 -> forall f2 : nat -> nat, isPR (n1 0) f2 -> forall f3 : nat -> nat, isPR (n1 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n1 (n1 (n1 0))) g -> isPR (n1 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H5 : isPR (n1 0) (fun x : nat => x) H : isPR 1 S n0 : nat -> nat H3 : forall f1 : nat -> nat, isPR (n0 0) f1 -> forall f2 : nat -> nat, isPR (n0 0) f2 -> forall f3 : nat -> nat, isPR (n0 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n0 (n0 (n0 0))) g -> isPR (n0 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H2 : isPR (n0 0) (fun x : nat => x) n : nat -> nat H1 : forall f1 : nat -> nat, isPR (n 0) f1 -> forall f2 : nat -> nat, isPR (n 0) f2 -> forall f3 : nat -> nat, isPR (n 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n (n (n 0))) g -> isPR (n 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) Unable to unify \"isPR 1 (fun _ : nat => 0)\" with \"isPR (n 0) codeArityLNNR\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: S,pred,eqb,compose1_3IsPR.", "qsimpl time: 1 use: S,pred,eqb,idIsPR,compose1_3IsPR.", "qsimpl time: 1 use: succIsPR,S,pred,eqb,idIsPR,compose1_3IsPR.", "qsimpl time: 1 use: predIsPR,succIsPR,S,pred,eqb,idIsPR,compose1_3IsPR.", "qsimpl time: 1 use: predIsPR,succIsPR,S,pred,eqb,idIsPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: predIsPR,succIsPR,S,pred,eqb,const1_NIsPR,idIsPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: predIsPR,boundSearchIsPR,succIsPR,S,pred,eqb,const1_NIsPR,idIsPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: predIsPR,boundSearchIsPR,succIsPR,S,pred,eqb,const1_NIsPR,compose3_1IsPR,idIsPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: predIsPR,pi1_2IsPR,boundSearchIsPR,succIsPR,S,pred,eqb,const1_NIsPR,compose3_1IsPR,idIsPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: predIsPR,pi1_2IsPR,boundSearchIsPR,succIsPR,S,pred,eqb,const1_NIsPR,compose1_1IsPR,compose3_1IsPR,idIsPR,compose1_3IsPR,compose1_NIsPR."], "tactic": "apply const1_NIsPR.", "exn": "In environment n8 : nat -> nat H55 : forall (n : nat) (g : extEqualNat.naryFunc (n8 n)), isPR (n8 n) g -> forall f : extEqualNat.naryFunc (n8 0), isPR (n8 0) f -> isPR (n8 n) (fun x : nat => g (f x)) H54 : forall f1 : nat -> nat, isPR (n8 0) f1 -> forall f2 : nat -> nat, isPR (n8 0) f2 -> forall f3 : nat -> nat, isPR (n8 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n8 (n8 (n8 0))) g -> isPR (n8 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H53 : isPR (n8 0) (fun x : nat => x) H52 : forall f : nat -> nat -> nat -> nat, isPR (n8 (n8 (n8 0))) f -> forall g : nat -> nat, isPR (n8 0) g -> isPR (n8 (n8 (n8 0))) (fun x y z : nat => g (f x y z)) H51 : forall f : nat -> nat, isPR (n8 0) f -> forall g : nat -> nat, isPR (n8 0) g -> isPR (n8 0) (fun x : nat => g (f x)) H50 : forall n : nat, isPR (n8 0) (fun _ : nat => n) H47 : isPR 1 S H46 : forall P : nat -> nat -> bool, isPRrel 2 P -> isPR 1 (fun b : nat => boundedSearch P b) H40 : isPR 2 (fun a _ : nat => a) H39 : isPR 1 Init.Nat.pred n7 : nat -> nat H45 : forall (n : nat) (g : extEqualNat.naryFunc (n7 n)), isPR (n7 n) g -> forall f : extEqualNat.naryFunc (n7 0), isPR (n7 0) f -> isPR (n7 n) (fun x : nat => g (f x)) H44 : forall f1 : nat -> nat, isPR (n7 0) f1 -> forall f2 : nat -> nat, isPR (n7 0) f2 -> forall f3 : nat -> nat, isPR (n7 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n7 (n7 (n7 0))) g -> isPR (n7 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H43 : isPR (n7 0) (fun x : nat => x) H42 : forall f : nat -> nat -> nat -> nat, isPR (n7 (n7 (n7 0))) f -> forall g : nat -> nat, isPR (n7 0) g -> isPR (n7 (n7 (n7 0))) (fun x y z : nat => g (f x y z)) H41 : forall n : nat, isPR (n7 0) (fun _ : nat => n) H38 : isPR 1 S H37 : forall P : nat -> nat -> bool, isPRrel 2 P -> isPR 1 (fun b : nat => boundedSearch P b) H31 : isPR 2 (fun a _ : nat => a) H30 : isPR 1 Init.Nat.pred n6 : nat -> nat H36 : forall (n : nat) (g : extEqualNat.naryFunc (n6 n)), isPR (n6 n) g -> forall f : extEqualNat.naryFunc (n6 0), isPR (n6 0) f -> isPR (n6 n) (fun x : nat => g (f x)) H35 : forall f1 : nat -> nat, isPR (n6 0) f1 -> forall f2 : nat -> nat, isPR (n6 0) f2 -> forall f3 : nat -> nat, isPR (n6 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n6 (n6 (n6 0))) g -> isPR (n6 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H34 : isPR (n6 0) (fun x : nat => x) H33 : forall f : nat -> nat -> nat -> nat, isPR (n6 (n6 (n6 0))) f -> forall g : nat -> nat, isPR (n6 0) g -> isPR (n6 (n6 (n6 0))) (fun x y z : nat => g (f x y z)) H32 : forall n : nat, isPR (n6 0) (fun _ : nat => n) H29 : isPR 1 S H24 : forall P : nat -> nat -> bool, isPRrel 2 P -> isPR 1 (fun b : nat => boundedSearch P b) H23 : isPR 1 Init.Nat.pred n5 : nat -> nat H28 : forall (n : nat) (g : extEqualNat.naryFunc (n5 n)), isPR (n5 n) g -> forall f : extEqualNat.naryFunc (n5 0), isPR (n5 0) f -> isPR (n5 n) (fun x : nat => g (f x)) H27 : forall f1 : nat -> nat, isPR (n5 0) f1 -> forall f2 : nat -> nat, isPR (n5 0) f2 -> forall f3 : nat -> nat, isPR (n5 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n5 (n5 (n5 0))) g -> isPR (n5 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H26 : isPR (n5 0) (fun x : nat => x) H25 : forall n : nat, isPR (n5 0) (fun _ : nat => n) H22 : isPR 1 S H17 : forall P : nat -> nat -> bool, isPRrel 2 P -> isPR 1 (fun b : nat => boundedSearch P b) H16 : isPR 1 Init.Nat.pred n4 : nat -> nat H21 : forall (n : nat) (g : extEqualNat.naryFunc (n4 n)), isPR (n4 n) g -> forall f : extEqualNat.naryFunc (n4 0), isPR (n4 0) f -> isPR (n4 n) (fun x : nat => g (f x)) H20 : forall f1 : nat -> nat, isPR (n4 0) f1 -> forall f2 : nat -> nat, isPR (n4 0) f2 -> forall f3 : nat -> nat, isPR (n4 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n4 (n4 (n4 0))) g -> isPR (n4 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H19 : isPR (n4 0) (fun x : nat => x) H18 : forall n : nat, isPR (n4 0) (fun _ : nat => n) H12 : isPR 1 S H11 : isPR 1 Init.Nat.pred n3 : nat -> nat H15 : forall (n : nat) (g : extEqualNat.naryFunc (n3 n)), isPR (n3 n) g -> forall f : extEqualNat.naryFunc (n3 0), isPR (n3 0) f -> isPR (n3 n) (fun x : nat => g (f x)) H14 : forall f1 : nat -> nat, isPR (n3 0) f1 -> forall f2 : nat -> nat, isPR (n3 0) f2 -> forall f3 : nat -> nat, isPR (n3 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n3 (n3 (n3 0))) g -> isPR (n3 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H13 : isPR (n3 0) (fun x : nat => x) H8 : isPR 1 S H7 : isPR 1 Init.Nat.pred n2 : nat -> nat H10 : forall f1 : nat -> nat, isPR (n2 0) f1 -> forall f2 : nat -> nat, isPR (n2 0) f2 -> forall f3 : nat -> nat, isPR (n2 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n2 (n2 (n2 0))) g -> isPR (n2 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H9 : isPR (n2 0) (fun x : nat => x) H4 : isPR 1 S H0 : isPR 1 Init.Nat.pred n1 : nat -> nat H6 : forall f1 : nat -> nat, isPR (n1 0) f1 -> forall f2 : nat -> nat, isPR (n1 0) f2 -> forall f3 : nat -> nat, isPR (n1 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n1 (n1 (n1 0))) g -> isPR (n1 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H5 : isPR (n1 0) (fun x : nat => x) H : isPR 1 S n0 : nat -> nat H3 : forall f1 : nat -> nat, isPR (n0 0) f1 -> forall f2 : nat -> nat, isPR (n0 0) f2 -> forall f3 : nat -> nat, isPR (n0 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n0 (n0 (n0 0))) g -> isPR (n0 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H2 : isPR (n0 0) (fun x : nat => x) n : nat -> nat H1 : forall f1 : nat -> nat, isPR (n 0) f1 -> forall f2 : nat -> nat, isPR (n 0) f2 -> forall f3 : nat -> nat, isPR (n 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n (n (n 0))) g -> isPR (n 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) Unable to unify \"{p : PrimRec 1 | extEqualNat.extEqual 1 (evalPrimRec 1 p) (fun _ : nat => ?M14976)}\" with \"{p : PrimRec (n 0) | extEqualNat.extEqual (n 0) (evalPrimRec (n 0) p) codeArityLNNR}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: S,pred,eqb,compose1_3IsPR.", "qsimpl time: 1 use: S,pred,eqb,idIsPR,compose1_3IsPR.", "qsimpl time: 1 use: succIsPR,S,pred,eqb,idIsPR,compose1_3IsPR.", "qsimpl time: 1 use: predIsPR,succIsPR,S,pred,eqb,idIsPR,compose1_3IsPR.", "qsimpl time: 1 use: predIsPR,succIsPR,S,pred,eqb,idIsPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: predIsPR,succIsPR,S,pred,eqb,const1_NIsPR,idIsPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: predIsPR,boundSearchIsPR,succIsPR,S,pred,eqb,const1_NIsPR,idIsPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: predIsPR,boundSearchIsPR,succIsPR,S,pred,eqb,const1_NIsPR,compose3_1IsPR,idIsPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: predIsPR,pi1_2IsPR,boundSearchIsPR,succIsPR,S,pred,eqb,const1_NIsPR,compose3_1IsPR,idIsPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: predIsPR,pi1_2IsPR,boundSearchIsPR,succIsPR,S,pred,eqb,const1_NIsPR,compose1_1IsPR,compose3_1IsPR,idIsPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: predIsPR,pi1_2IsPR,boundSearchIsPR,succIsPR,S,pred,eqb,const1_NIsPR,compose1_1IsPR,compose3_1IsPR,idIsPR,compose1_3IsPR,compose1_NIsPR."], "tactic": "apply const1_NIsPR.", "exn": "In environment n9 : nat -> nat H65 : forall (n : nat) (g : extEqualNat.naryFunc (n9 n)), isPR (n9 n) g -> forall f : extEqualNat.naryFunc (n9 0), isPR (n9 0) f -> isPR (n9 n) (fun x : nat => g (f x)) H64 : forall f1 : nat -> nat, isPR (n9 0) f1 -> forall f2 : nat -> nat, isPR (n9 0) f2 -> forall f3 : nat -> nat, isPR (n9 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n9 (n9 (n9 0))) g -> isPR (n9 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H63 : isPR (n9 0) (fun x : nat => x) H62 : forall f : nat -> nat -> nat -> nat, isPR (n9 (n9 (n9 0))) f -> forall g : nat -> nat, isPR (n9 0) g -> isPR (n9 (n9 (n9 0))) (fun x y z : nat => g (f x y z)) H61 : forall f : nat -> nat, isPR (n9 0) f -> forall g : nat -> nat, isPR (n9 0) g -> isPR (n9 0) (fun x : nat => g (f x)) H60 : forall n : nat, isPR (n9 0) (fun _ : nat => n) H57 : isPR 1 S H56 : forall P : nat -> nat -> bool, isPRrel 2 P -> isPR 1 (fun b : nat => boundedSearch P b) H49 : isPR 2 (fun a _ : nat => a) H48 : isPR 1 Init.Nat.pred n8 : nat -> nat H55 : forall (n : nat) (g : extEqualNat.naryFunc (n8 n)), isPR (n8 n) g -> forall f : extEqualNat.naryFunc (n8 0), isPR (n8 0) f -> isPR (n8 n) (fun x : nat => g (f x)) H54 : forall f1 : nat -> nat, isPR (n8 0) f1 -> forall f2 : nat -> nat, isPR (n8 0) f2 -> forall f3 : nat -> nat, isPR (n8 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n8 (n8 (n8 0))) g -> isPR (n8 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H53 : isPR (n8 0) (fun x : nat => x) H52 : forall f : nat -> nat -> nat -> nat, isPR (n8 (n8 (n8 0))) f -> forall g : nat -> nat, isPR (n8 0) g -> isPR (n8 (n8 (n8 0))) (fun x y z : nat => g (f x y z)) H51 : forall f : nat -> nat, isPR (n8 0) f -> forall g : nat -> nat, isPR (n8 0) g -> isPR (n8 0) (fun x : nat => g (f x)) H50 : forall n : nat, isPR (n8 0) (fun _ : nat => n) H47 : isPR 1 S H46 : forall P : nat -> nat -> bool, isPRrel 2 P -> isPR 1 (fun b : nat => boundedSearch P b) H40 : isPR 2 (fun a _ : nat => a) H39 : isPR 1 Init.Nat.pred n7 : nat -> nat H45 : forall (n : nat) (g : extEqualNat.naryFunc (n7 n)), isPR (n7 n) g -> forall f : extEqualNat.naryFunc (n7 0), isPR (n7 0) f -> isPR (n7 n) (fun x : nat => g (f x)) H44 : forall f1 : nat -> nat, isPR (n7 0) f1 -> forall f2 : nat -> nat, isPR (n7 0) f2 -> forall f3 : nat -> nat, isPR (n7 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n7 (n7 (n7 0))) g -> isPR (n7 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H43 : isPR (n7 0) (fun x : nat => x) H42 : forall f : nat -> nat -> nat -> nat, isPR (n7 (n7 (n7 0))) f -> forall g : nat -> nat, isPR (n7 0) g -> isPR (n7 (n7 (n7 0))) (fun x y z : nat => g (f x y z)) H41 : forall n : nat, isPR (n7 0) (fun _ : nat => n) H38 : isPR 1 S H37 : forall P : nat -> nat -> bool, isPRrel 2 P -> isPR 1 (fun b : nat => boundedSearch P b) H31 : isPR 2 (fun a _ : nat => a) H30 : isPR 1 Init.Nat.pred n6 : nat -> nat H36 : forall (n : nat) (g : extEqualNat.naryFunc (n6 n)), isPR (n6 n) g -> forall f : extEqualNat.naryFunc (n6 0), isPR (n6 0) f -> isPR (n6 n) (fun x : nat => g (f x)) H35 : forall f1 : nat -> nat, isPR (n6 0) f1 -> forall f2 : nat -> nat, isPR (n6 0) f2 -> forall f3 : nat -> nat, isPR (n6 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n6 (n6 (n6 0))) g -> isPR (n6 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H34 : isPR (n6 0) (fun x : nat => x) H33 : forall f : nat -> nat -> nat -> nat, isPR (n6 (n6 (n6 0))) f -> forall g : nat -> nat, isPR (n6 0) g -> isPR (n6 (n6 (n6 0))) (fun x y z : nat => g (f x y z)) H32 : forall n : nat, isPR (n6 0) (fun _ : nat => n) H29 : isPR 1 S H24 : forall P : nat -> nat -> bool, isPRrel 2 P -> isPR 1 (fun b : nat => boundedSearch P b) H23 : isPR 1 Init.Nat.pred n5 : nat -> nat H28 : forall (n : nat) (g : extEqualNat.naryFunc (n5 n)), isPR (n5 n) g -> forall f : extEqualNat.naryFunc (n5 0), isPR (n5 0) f -> isPR (n5 n) (fun x : nat => g (f x)) H27 : forall f1 : nat -> nat, isPR (n5 0) f1 -> forall f2 : nat -> nat, isPR (n5 0) f2 -> forall f3 : nat -> nat, isPR (n5 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n5 (n5 (n5 0))) g -> isPR (n5 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H26 : isPR (n5 0) (fun x : nat => x) H25 : forall n : nat, isPR (n5 0) (fun _ : nat => n) H22 : isPR 1 S H17 : forall P : nat -> nat -> bool, isPRrel 2 P -> isPR 1 (fun b : nat => boundedSearch P b) H16 : isPR 1 Init.Nat.pred n4 : nat -> nat H21 : forall (n : nat) (g : extEqualNat.naryFunc (n4 n)), isPR (n4 n) g -> forall f : extEqualNat.naryFunc (n4 0), isPR (n4 0) f -> isPR (n4 n) (fun x : nat => g (f x)) H20 : forall f1 : nat -> nat, isPR (n4 0) f1 -> forall f2 : nat -> nat, isPR (n4 0) f2 -> forall f3 : nat -> nat, isPR (n4 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n4 (n4 (n4 0))) g -> isPR (n4 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H19 : isPR (n4 0) (fun x : nat => x) H18 : forall n : nat, isPR (n4 0) (fun _ : nat => n) H12 : isPR 1 S H11 : isPR 1 Init.Nat.pred n3 : nat -> nat H15 : forall (n : nat) (g : extEqualNat.naryFunc (n3 n)), isPR (n3 n) g -> forall f : extEqualNat.naryFunc (n3 0), isPR (n3 0) f -> isPR (n3 n) (fun x : nat => g (f x)) H14 : forall f1 : nat -> nat, isPR (n3 0) f1 -> forall f2 : nat -> nat, isPR (n3 0) f2 -> forall f3 : nat -> nat, isPR (n3 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n3 (n3 (n3 0))) g -> isPR (n3 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H13 : isPR (n3 0) (fun x : nat => x) H8 : isPR 1 S H7 : isPR 1 Init.Nat.pred n2 : nat -> nat H10 : forall f1 : nat -> nat, isPR (n2 0) f1 -> forall f2 : nat -> nat, isPR (n2 0) f2 -> forall f3 : nat -> nat, isPR (n2 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n2 (n2 (n2 0))) g -> isPR (n2 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H9 : isPR (n2 0) (fun x : nat => x) H4 : isPR 1 S H0 : isPR 1 Init.Nat.pred n1 : nat -> nat H6 : forall f1 : nat -> nat, isPR (n1 0) f1 -> forall f2 : nat -> nat, isPR (n1 0) f2 -> forall f3 : nat -> nat, isPR (n1 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n1 (n1 (n1 0))) g -> isPR (n1 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H5 : isPR (n1 0) (fun x : nat => x) H : isPR 1 S n0 : nat -> nat H3 : forall f1 : nat -> nat, isPR (n0 0) f1 -> forall f2 : nat -> nat, isPR (n0 0) f2 -> forall f3 : nat -> nat, isPR (n0 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n0 (n0 (n0 0))) g -> isPR (n0 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) H2 : isPR (n0 0) (fun x : nat => x) n : nat -> nat H1 : forall f1 : nat -> nat, isPR (n 0) f1 -> forall f2 : nat -> nat, isPR (n 0) f2 -> forall f3 : nat -> nat, isPR (n 0) f3 -> forall g : nat -> nat -> nat -> nat, isPR (n (n (n 0))) g -> isPR (n 0) (fun x : nat => g (f1 x) (f2 x) (f3 x)) Unable to unify \"{p : PrimRec 1 | extEqualNat.extEqual 1 (evalPrimRec 1 p) (fun _ : nat => ?M18482)}\" with \"{p : PrimRec (n 0) | extEqualNat.extEqual (n 0) (evalPrimRec (n 0) p) codeArityLNNR}\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "apply compose1_3IsPR with (f1 := fun x => x) (f2 := S) (f3 := Nat.pred) (g := fun x y z => if Nat.eqb z x then y else z). - apply idIsPR. - apply succIsPR. - apply predIsPR. - apply compose1_NIsPR with (n := 1) (f := fun _ => 0). -- apply const1_NIsPR. -- apply boundSearchIsPR. apply compose3_1IsPR with (g := fun _ => 0). ++ apply pi1_2IsPR. ++ apply compose1_1IsPR with (g := fun _ => 0). ** apply const1_NIsPR. ** apply const1_NIsPR.", "back_times": 0, "succ": false, "time": 40.95470476150513}]