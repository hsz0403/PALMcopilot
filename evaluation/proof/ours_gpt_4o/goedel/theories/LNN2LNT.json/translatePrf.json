[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros f axm H H0."], "tactic": ["induction H as [| | | | S1 S2 S3 H IH |].", ""], "exn": "Expects a disjunctive pattern with 14 branches.", "type": "num_branch", "handled": false}]}, "chat": [], "original": "intros f axm H H0. induction H as [| | | | S1 S2 S3 H IH |]. - destruct (H0 _ (or_introl eq_refl)) as [H1 H2]. exists (LNN2LNT_formula f). split. ++ exists (H1). intros g H4. apply H2. auto. ++ intros v H3. apply LNN2LNT_freeVarFormula2 in H3. apply In_freeVarListFormulaE in H3. destruct H3 as [s [H5 H6]]. apply LNN2LNT_freeVarFormula1 in H5. apply In_freeVarListFormula in H5. apply H6. - destruct (H0 _ (or_intror (or_introl eq_refl))) as [H1 H2]. exists (LNN2LNT_formula f). split. ++ exists (H1). intros g H3. apply H2, H3. ++ intros v H3. apply LNN2LNT_freeVarFormula2 in H3. apply In_freeVarListFormulaE in H3. destruct H3 as [s [H4 H5]]. apply LNN2LNT_freeVarFormula1 in H4. apply In_freeVarListFormula in H4. apply H5. - destruct (IH (fun g H1 => H0 _ (or_intror (or_intror H1)))) as [Axm [H1 H2]]. exists Axm. split. ++ apply H1. ++ intros v H4. apply H2. apply In_freeVarListFormula in H4. apply H4. - destruct IH as [Axm [H2 H3]]. exists Axm. split. ++ apply H2. ++ intros v H6. apply H3 in H6. destruct (H0 _ (or_introl eq_refl)) as [[_ H5] _]. apply H5, H6. - destruct (IH (fun g H1 => H0 _ (or_intror g H1))) as [Axm [H1 H3]]. exists Axm. split. ++ apply H1. ++ intros v H4. apply H3. apply In_freeVarListFormula in H4. apply H4.", "back_times": 0, "succ": false, "time": 67.41661143302917}]