[{"history": {"proof": "intros f1 f2 f3 f4 f5 g Hf1 Hf2 Hf3 Hf4 Hf5 Hg. qsimpl time: 1 use: switchPR,pred,compose1_NIsPR. apply swapIsPR. apply swapIsPR. qsimpl time: 1 use: switchPR,compose1_3IsPR,pred,compose1_NIsPR. apply swapIsPR. qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR. apply swapIsPR. qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR. qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR. apply swapIsPR. qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR. apply H18. ++ qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR. apply H15. qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR. - apply H15. + shelve. + shelve. - qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR. apply H15. + shelve. + shelve. ++ qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR. qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR. qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR. qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR. apply H15. - qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR. apply H15. + qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR. apply H15. * qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR. apply H15. -- shelve. -- shelve. * qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR. qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR. shelve. + qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR. qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR. apply H15. * qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "repairs": ["", "wrong_type", "ref_not_found", "ref_not_found", "cannot_unify", "ref_not_found", "cannot_unify", "ref_not_found", "cannot_unify", "cannot_unify", "", "cannot_unify", "ref_not_found", "", "cannot_unify", "ref_not_found", "cannot_unify", "transform_curly", "ref_not_found", "unfinished_bullet", "unfinished_bullet", "unfinished_bullet", "unfinished_bullet", "transform_curly", "cannot_unify", "ref_not_found", "unfinished_bullet", "unfinished_bullet", "unfinished_bullet", "unfinished_bullet", "wrong_bullet", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "ref_not_found", "transform_curly", "cannot_unify", "ref_not_found", "transform_curly", "cannot_unify", "ref_not_found", "transform_curly", "cannot_unify", "ref_not_found", "unfinished_bullet", "unfinished_bullet", "unfinished_bullet", "unfinished_bullet", "transform_curly", "cannot_unify", "cannot_unify", "unfinished_bullet", "wrong_bullet", "cannot_unify", "cannot_unify", "ref_not_found", "transform_curly", "cannot_unify"], "exceptions": [{"ctx": ["intros f1 f2 f3 f4 f5 g Hf1 Hf2 Hf3 Hf4 Hf5 Hg."], "tactic": "apply compose1_NIsPR with (g := fun x => switchPR (g x) (switchPR (Init.Nat.pred (g x)) (switchPR (Init.Nat.pred (Init.Nat.pred (g x))) (switchPR (Init.Nat.pred (Init.Nat.pred (Init.Nat.pred (g x)))) (f1 x) (f2 x)) (f3 x)) (f4 x)) (f5 x)).", "exn": "In environment L : Language codeF : Functions L -> nat codeR : Relations L -> nat var := fol.var L : nat -> fol.Term L apply := fol.apply L : forall f : Functions L, fol.Terms L (arity L (inr f)) -> fol.Term L codeFormula := code.codeFormula L codeF codeR : fol.Formula L -> nat codeTerm := code.codeTerm L codeF : fol.Term L -> nat f1, f2, f3, f4, f5 : nat -> nat -> nat g : nat -> nat Hf1 : isPR 2 f1 Hf2 : isPR 2 f2 Hf3 : isPR 2 f3 Hf4 : isPR 2 f4 Hf5 : isPR 2 f5 Hg : isPR 1 g x : nat The term \"f1 x\" has type \"nat -> nat\" while it is expected to have type \"nat\".", "type": "wrong_type", "handled": true}, {"ctx": ["intros f1 f2 f3 f4 f5 g Hf1 Hf2 Hf3 Hf4 Hf5 Hg.", "qsimpl time: 1 use: switchPR,pred,compose1_NIsPR."], "tactic": "apply Hg.", "exn": "The reference Hg was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros f1 f2 f3 f4 f5 g Hf1 Hf2 Hf3 Hf4 Hf5 Hg.", "qsimpl time: 1 use: switchPR,pred,compose1_NIsPR.", "apply swapIsPR."], "tactic": "apply compose2_1IsPR with (f := fun y x => f1 x (init y)).", "exn": "The reference init was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros f1 f2 f3 f4 f5 g Hf1 Hf2 Hf3 Hf4 Hf5 Hg.", "qsimpl time: 1 use: switchPR,pred,compose1_NIsPR.", "apply swapIsPR."], "tactic": "apply Hf1.", "exn": "The reference Hf1 was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros f1 f2 f3 f4 f5 g Hf1 Hf2 Hf3 Hf4 Hf5 Hg.", "qsimpl time: 1 use: switchPR,pred,compose1_NIsPR.", "apply swapIsPR.", "apply swapIsPR."], "tactic": "apply compose1_3IsPR.", "exn": "In environment H : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) n0 : nat -> nat n : nat -> nat -> nat -> nat L : Language codeF : Functions L -> nat codeR : Relations L -> nat f1, f2, f3, f4, f5 : nat -> nat -> nat g : nat -> nat x : PrimRec 1 H0 : forall c : nat, evalPrimRec 1 x c = g c x0 : PrimRec 2 H1 : forall c c0 : nat, evalPrimRec 2 x0 c c0 = f5 c c0 x1 : PrimRec 2 H2 : forall c c0 : nat, evalPrimRec 2 x1 c c0 = f4 c c0 x2 : PrimRec 2 H3 : forall c c0 : nat, evalPrimRec 2 x2 c c0 = f3 c c0 x3 : PrimRec 2 H4 : forall c c0 : nat, evalPrimRec 2 x3 c c0 = f2 c c0 x4 : PrimRec 2 H5 : forall c c0 : nat, evalPrimRec 2 x4 c c0 = f1 c c0 Unable to unify \"{p : PrimRec 1 | extEqual 1 (evalPrimRec 1 p) (fun x : nat => ?M4750 (?M4744 x) (?M4746 x) (?M4748 x))}\" with \"{p : PrimRec 2 | extEqual 2 (evalPrimRec 2 p) (fun y x : nat => n (g y) (n (n0 (g y)) (n (n0 (n0 (g y))) (n (n0 (n0 (n0 (g y)))) (f1 y x) (f2 y x)) (f3 y x)) (f4 y x)) (f5 y x))}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros f1 f2 f3 f4 f5 g Hf1 Hf2 Hf3 Hf4 Hf5 Hg.", "qsimpl time: 1 use: switchPR,pred,compose1_NIsPR.", "apply swapIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: switchPR,compose1_3IsPR,pred,compose1_NIsPR."], "tactic": "apply Hg.", "exn": "The reference Hg was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros f1 f2 f3 f4 f5 g Hf1 Hf2 Hf3 Hf4 Hf5 Hg.", "qsimpl time: 1 use: switchPR,pred,compose1_NIsPR.", "apply swapIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: switchPR,compose1_3IsPR,pred,compose1_NIsPR.", "apply swapIsPR."], "tactic": "apply filter10IsPR.", "exn": "In environment H9 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H7 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) n0 : nat -> nat n : nat -> nat -> nat -> nat L : Language codeF : Functions L -> nat codeR : Relations L -> nat f1, f2, f3, f4, f5 : nat -> nat -> nat g : nat -> nat x : PrimRec 1 H0 : forall c : nat, evalPrimRec 1 x c = g c x0 : PrimRec 2 H1 : forall c c0 : nat, evalPrimRec 2 x0 c c0 = f5 c c0 x1 : PrimRec 2 H2 : forall c c0 : nat, evalPrimRec 2 x1 c c0 = f4 c c0 x2 : PrimRec 2 H3 : forall c c0 : nat, evalPrimRec 2 x2 c c0 = f3 c c0 x3 : PrimRec 2 H4 : forall c c0 : nat, evalPrimRec 2 x3 c c0 = f2 c c0 x4 : PrimRec 2 H5 : forall c c0 : nat, evalPrimRec 2 x4 c c0 = f1 c c0 Unable to unify \"{p : PrimRec 2 | extEqual 2 (evalPrimRec 2 p) (fun a _ : nat => ?M7386 a)}\" with \"{p : PrimRec 2 | extEqual 2 (evalPrimRec 2 p) (fun y x : nat => n (g x) (n (n0 (g x)) (n (n0 (n0 (g x))) (n (n0 (n0 (n0 (g x)))) (f1 x y) (f2 x y)) (f3 x y)) (f4 x y)) (f5 x y))}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros f1 f2 f3 f4 f5 g Hf1 Hf2 Hf3 Hf4 Hf5 Hg.", "qsimpl time: 1 use: switchPR,pred,compose1_NIsPR.", "apply swapIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: switchPR,compose1_3IsPR,pred,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR."], "tactic": "apply Hg.", "exn": "The reference Hg was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros f1 f2 f3 f4 f5 g Hf1 Hf2 Hf3 Hf4 Hf5 Hg.", "qsimpl time: 1 use: switchPR,pred,compose1_NIsPR.", "apply swapIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: switchPR,compose1_3IsPR,pred,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR."], "tactic": "apply filter10IsPR.", "exn": "In environment H12 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H11 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H6 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H9 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H7 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) n0 : nat -> nat n : nat -> nat -> nat -> nat L : Language codeF : Functions L -> nat codeR : Relations L -> nat f1, f2, f3, f4, f5 : nat -> nat -> nat g : nat -> nat x : PrimRec 1 H0 : forall c : nat, evalPrimRec 1 x c = g c x0 : PrimRec 2 H1 : forall c c0 : nat, evalPrimRec 2 x0 c c0 = f5 c c0 x1 : PrimRec 2 H2 : forall c c0 : nat, evalPrimRec 2 x1 c c0 = f4 c c0 x2 : PrimRec 2 H3 : forall c c0 : nat, evalPrimRec 2 x2 c c0 = f3 c c0 x3 : PrimRec 2 H4 : forall c c0 : nat, evalPrimRec 2 x3 c c0 = f2 c c0 x4 : PrimRec 2 H5 : forall c c0 : nat, evalPrimRec 2 x4 c c0 = f1 c c0 Unable to unify \"{p : PrimRec 2 | extEqual 2 (evalPrimRec 2 p) (fun a _ : nat => ?M10538 a)}\" with \"{p : PrimRec 2 | extEqual 2 (evalPrimRec 2 p) (fun y x : nat => n (g y) (n (n0 (g y)) (n (n0 (n0 (g y))) (n (n0 (n0 (n0 (g y)))) (f1 y x) (f2 y x)) (f3 y x)) (f4 y x)) (f5 y x))}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros f1 f2 f3 f4 f5 g Hf1 Hf2 Hf3 Hf4 Hf5 Hg.", "qsimpl time: 1 use: switchPR,pred,compose1_NIsPR.", "apply swapIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: switchPR,compose1_3IsPR,pred,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR."], "tactic": "apply compose1_3IsPR; [apply Hg|apply Hg|apply Hg].", "exn": "In environment H15 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H14 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H8 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H12 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H11 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H6 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H9 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H7 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) n0 : nat -> nat n : nat -> nat -> nat -> nat L : Language codeF : Functions L -> nat codeR : Relations L -> nat f1, f2, f3, f4, f5 : nat -> nat -> nat g : nat -> nat x : PrimRec 1 H0 : forall c : nat, evalPrimRec 1 x c = g c x0 : PrimRec 2 H1 : forall c c0 : nat, evalPrimRec 2 x0 c c0 = f5 c c0 x1 : PrimRec 2 H2 : forall c c0 : nat, evalPrimRec 2 x1 c c0 = f4 c c0 x2 : PrimRec 2 H3 : forall c c0 : nat, evalPrimRec 2 x2 c c0 = f3 c c0 x3 : PrimRec 2 H4 : forall c c0 : nat, evalPrimRec 2 x3 c c0 = f2 c c0 x4 : PrimRec 2 H5 : forall c c0 : nat, evalPrimRec 2 x4 c c0 = f1 c c0 Unable to unify \"{p : PrimRec 1 | extEqual 1 (evalPrimRec 1 p) (fun x : nat => ?M14204 (?M14198 x) (?M14200 x) (?M14202 x))}\" with \"{p : PrimRec 2 | extEqual 2 (evalPrimRec 2 p) (fun y x : nat => n (g y) (n (n0 (g y)) (n (n0 (n0 (g y))) (n (n0 (n0 (n0 (g y)))) (f1 y x) (f2 y x)) (f3 y x)) (f4 y x)) (f5 y x))}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros f1 f2 f3 f4 f5 g Hf1 Hf2 Hf3 Hf4 Hf5 Hg.", "qsimpl time: 1 use: switchPR,pred,compose1_NIsPR.", "apply swapIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: switchPR,compose1_3IsPR,pred,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR."], "tactic": "apply filter10IsPR.", "exn": "In environment H18 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H17 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H10 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H15 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H14 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H8 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H12 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H11 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H6 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H9 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H7 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) n0 : nat -> nat n : nat -> nat -> nat -> nat L : Language codeF : Functions L -> nat codeR : Relations L -> nat f1, f2, f3, f4, f5 : nat -> nat -> nat g : nat -> nat x : PrimRec 1 H0 : forall c : nat, evalPrimRec 1 x c = g c x0 : PrimRec 2 H1 : forall c c0 : nat, evalPrimRec 2 x0 c c0 = f5 c c0 x1 : PrimRec 2 H2 : forall c c0 : nat, evalPrimRec 2 x1 c c0 = f4 c c0 x2 : PrimRec 2 H3 : forall c c0 : nat, evalPrimRec 2 x2 c c0 = f3 c c0 x3 : PrimRec 2 H4 : forall c c0 : nat, evalPrimRec 2 x3 c c0 = f2 c c0 x4 : PrimRec 2 H5 : forall c c0 : nat, evalPrimRec 2 x4 c c0 = f1 c c0 Unable to unify \"{p : PrimRec 2 | extEqual 2 (evalPrimRec 2 p) (fun a _ : nat => ?M18370 a)}\" with \"{p : PrimRec 2 | extEqual 2 (evalPrimRec 2 p) (fun y x : nat => n (g x) (n (n0 (g x)) (n (n0 (n0 (g x))) (n (n0 (n0 (n0 (g x)))) (f1 x y) (f2 x y)) (f3 x y)) (f4 x y)) (f5 x y))}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros f1 f2 f3 f4 f5 g Hf1 Hf2 Hf3 Hf4 Hf5 Hg.", "qsimpl time: 1 use: switchPR,pred,compose1_NIsPR.", "apply swapIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: switchPR,compose1_3IsPR,pred,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR."], "tactic": "apply Hg.", "exn": "The reference Hg was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros f1 f2 f3 f4 f5 g Hf1 Hf2 Hf3 Hf4 Hf5 Hg.", "qsimpl time: 1 use: switchPR,pred,compose1_NIsPR.", "apply swapIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: switchPR,compose1_3IsPR,pred,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply H18.", "++"], "tactic": "apply I.", "exn": "In environment H21 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H20 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H13 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H18 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H17 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H10 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H15 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H14 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H8 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H12 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H11 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H6 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H9 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H7 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) n0 : nat -> nat n : nat -> nat -> nat -> nat L : Language codeF : Functions L -> nat codeR : Relations L -> nat f1, f2, f3, f4, f5 : nat -> nat -> nat g : nat -> nat x : PrimRec 1 H0 : forall c : nat, evalPrimRec 1 x c = g c x0 : PrimRec 2 H1 : forall c c0 : nat, evalPrimRec 2 x0 c c0 = f5 c c0 x1 : PrimRec 2 H2 : forall c c0 : nat, evalPrimRec 2 x1 c c0 = f4 c c0 x2 : PrimRec 2 H3 : forall c c0 : nat, evalPrimRec 2 x2 c c0 = f3 c c0 x3 : PrimRec 2 H4 : forall c c0 : nat, evalPrimRec 2 x3 c c0 = f2 c c0 x4 : PrimRec 2 H5 : forall c c0 : nat, evalPrimRec 2 x4 c c0 = f1 c c0 Unable to unify \"True\" with \"isPR 2 (fun y x : nat => n (g x) (n (n0 (g x)) (n (n0 (n0 (g x))) (n (n0 (n0 (n0 (g x)))) (f1 x y) (f2 x y)) (f3 x y)) (f4 x y)) (f5 x y))\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros f1 f2 f3 f4 f5 g Hf1 Hf2 Hf3 Hf4 Hf5 Hg.", "qsimpl time: 1 use: switchPR,pred,compose1_NIsPR.", "apply swapIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: switchPR,compose1_3IsPR,pred,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply H18.", "++", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR."], "tactic": "apply compose2_1IsPR with (f := fun y x => f2 x (init y)).", "exn": "The reference init was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros f1 f2 f3 f4 f5 g Hf1 Hf2 Hf3 Hf4 Hf5 Hg.", "qsimpl time: 1 use: switchPR,pred,compose1_NIsPR.", "apply swapIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: switchPR,compose1_3IsPR,pred,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply H18.", "++", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR."], "tactic": "apply Hf2.", "exn": "The reference Hf2 was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros f1 f2 f3 f4 f5 g Hf1 Hf2 Hf3 Hf4 Hf5 Hg.", "qsimpl time: 1 use: switchPR,pred,compose1_NIsPR.", "apply swapIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: switchPR,compose1_3IsPR,pred,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply H18.", "++", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15."], "tactic": "apply compose1_3IsPR.", "exn": "In environment H25 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H24 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H16 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H21 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H20 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H13 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H18 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H17 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H10 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H15 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H14 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H8 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H12 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H11 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H6 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H9 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H7 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) n0 : nat -> nat n : nat -> nat -> nat -> nat L : Language codeF : Functions L -> nat codeR : Relations L -> nat f1, f2, f3, f4, f5 : nat -> nat -> nat g : nat -> nat x : PrimRec 1 H0 : forall c : nat, evalPrimRec 1 x c = g c x0 : PrimRec 2 H1 : forall c c0 : nat, evalPrimRec 2 x0 c c0 = f5 c c0 x1 : PrimRec 2 H2 : forall c c0 : nat, evalPrimRec 2 x1 c c0 = f4 c c0 x2 : PrimRec 2 H3 : forall c c0 : nat, evalPrimRec 2 x2 c c0 = f3 c c0 x3 : PrimRec 2 H4 : forall c c0 : nat, evalPrimRec 2 x3 c c0 = f2 c c0 x4 : PrimRec 2 H5 : forall c c0 : nat, evalPrimRec 2 x4 c c0 = f1 c c0 Unable to unify \"{p : PrimRec 1 | extEqual 1 (evalPrimRec 1 p) (fun x : nat => ?M28256 (?M28250 x) (?M28252 x) (?M28254 x))}\" with \"{p : PrimRec 2 | extEqual 2 (evalPrimRec 2 p) (fun y x : nat => n (g x) (n (n0 (g x)) (n (n0 (n0 (g x))) (n (n0 (n0 (n0 (g x)))) (f1 x y) (f2 x y)) (f3 x y)) (f4 x y)) (f5 x y))}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros f1 f2 f3 f4 f5 g Hf1 Hf2 Hf3 Hf4 Hf5 Hg.", "qsimpl time: 1 use: switchPR,pred,compose1_NIsPR.", "apply swapIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: switchPR,compose1_3IsPR,pred,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply H18.", "++", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "-"], "tactic": "apply Hg.", "exn": "The reference Hg was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros f1 f2 f3 f4 f5 g Hf1 Hf2 Hf3 Hf4 Hf5 Hg.", "qsimpl time: 1 use: switchPR,pred,compose1_NIsPR.", "apply swapIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: switchPR,compose1_3IsPR,pred,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply H18.", "++", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "-", "apply H15."], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros f1 f2 f3 f4 f5 g Hf1 Hf2 Hf3 Hf4 Hf5 Hg.", "qsimpl time: 1 use: switchPR,pred,compose1_NIsPR.", "apply swapIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: switchPR,compose1_3IsPR,pred,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply H18.", "++", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "-", "apply H15.", "+", "shelve.", "+", "shelve.", "-"], "tactic": "apply filter10IsPR.", "exn": "In environment H25 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H24 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H16 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H21 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H20 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H13 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H18 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H17 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H10 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H15 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H14 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H8 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H12 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H11 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H6 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H9 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H7 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) n0 : nat -> nat n : nat -> nat -> nat -> nat L : Language codeF : Functions L -> nat codeR : Relations L -> nat f1, f2, f3, f4, f5 : nat -> nat -> nat g : nat -> nat x : PrimRec 1 H0 : forall c : nat, evalPrimRec 1 x c = g c x0 : PrimRec 2 H1 : forall c c0 : nat, evalPrimRec 2 x0 c c0 = f5 c c0 x1 : PrimRec 2 H2 : forall c c0 : nat, evalPrimRec 2 x1 c c0 = f4 c c0 x2 : PrimRec 2 H3 : forall c c0 : nat, evalPrimRec 2 x2 c c0 = f3 c c0 x3 : PrimRec 2 H4 : forall c c0 : nat, evalPrimRec 2 x3 c c0 = f2 c c0 x4 : PrimRec 2 H5 : forall c c0 : nat, evalPrimRec 2 x4 c c0 = f1 c c0 Unable to unify \"{p : PrimRec 2 | extEqual 2 (evalPrimRec 2 p) (fun a _ : nat => ?M33955 a)}\" with \"{p : PrimRec 1 | extEqual 1 (evalPrimRec 1 p) (fun c : nat => c)}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros f1 f2 f3 f4 f5 g Hf1 Hf2 Hf3 Hf4 Hf5 Hg.", "qsimpl time: 1 use: switchPR,pred,compose1_NIsPR.", "apply swapIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: switchPR,compose1_3IsPR,pred,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply H18.", "++", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "-", "apply H15.", "+", "shelve.", "+", "shelve.", "-", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR."], "tactic": "apply Hg.", "exn": "The reference Hg was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros f1 f2 f3 f4 f5 g Hf1 Hf2 Hf3 Hf4 Hf5 Hg.", "qsimpl time: 1 use: switchPR,pred,compose1_NIsPR.", "apply swapIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: switchPR,compose1_3IsPR,pred,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply H18.", "++", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "-", "apply H15.", "+", "shelve.", "+", "shelve.", "-", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15."], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros f1 f2 f3 f4 f5 g Hf1 Hf2 Hf3 Hf4 Hf5 Hg.", "qsimpl time: 1 use: switchPR,pred,compose1_NIsPR.", "apply swapIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: switchPR,compose1_3IsPR,pred,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply H18.", "++", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "-", "apply H15.", "+", "shelve.", "+", "shelve.", "-", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "+", "shelve.", "+", "shelve."], "tactic": "-", "exn": "Wrong bullet -: Expecting ++.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros f1 f2 f3 f4 f5 g Hf1 Hf2 Hf3 Hf4 Hf5 Hg.", "qsimpl time: 1 use: switchPR,pred,compose1_NIsPR.", "apply swapIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: switchPR,compose1_3IsPR,pred,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply H18.", "++", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "-", "apply H15.", "+", "shelve.", "+", "shelve.", "-", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "+", "shelve.", "+", "shelve.", "++"], "tactic": "apply filter10IsPR.", "exn": "In environment H21 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H20 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H13 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H18 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H17 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H10 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H15 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H14 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H8 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H12 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H11 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H6 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H9 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H7 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) n0 : nat -> nat n : nat -> nat -> nat -> nat L : Language codeF : Functions L -> nat codeR : Relations L -> nat f1, f2, f3, f4, f5 : nat -> nat -> nat g : nat -> nat x : PrimRec 1 H0 : forall c : nat, evalPrimRec 1 x c = g c x0 : PrimRec 2 H1 : forall c c0 : nat, evalPrimRec 2 x0 c c0 = f5 c c0 x1 : PrimRec 2 H2 : forall c c0 : nat, evalPrimRec 2 x1 c c0 = f4 c c0 x2 : PrimRec 2 H3 : forall c c0 : nat, evalPrimRec 2 x2 c c0 = f3 c c0 x3 : PrimRec 2 H4 : forall c c0 : nat, evalPrimRec 2 x3 c c0 = f2 c c0 x4 : PrimRec 2 H5 : forall c c0 : nat, evalPrimRec 2 x4 c c0 = f1 c c0 Unable to unify \"{p : PrimRec 2 | extEqual 2 (evalPrimRec 2 p) (fun a _ : nat => ?M39526 a)}\" with \"{p : PrimRec 1 | extEqual 1 (evalPrimRec 1 p) (fun c : nat => c)}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros f1 f2 f3 f4 f5 g Hf1 Hf2 Hf3 Hf4 Hf5 Hg.", "qsimpl time: 1 use: switchPR,pred,compose1_NIsPR.", "apply swapIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: switchPR,compose1_3IsPR,pred,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply H18.", "++", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "-", "apply H15.", "+", "shelve.", "+", "shelve.", "-", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "+", "shelve.", "+", "shelve.", "++", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR."], "tactic": "apply compose1_3IsPR; [apply Hg|apply Hg|apply Hg].", "exn": "In environment H25 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H24 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H16 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H21 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H20 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H13 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H18 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H17 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H10 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H15 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H14 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H8 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H12 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H11 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H6 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H9 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H7 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) L : Language codeF : Functions L -> nat codeR : Relations L -> nat f1, f2, f3, f4, f5 : nat -> nat -> nat g : nat -> nat x : PrimRec 1 H0 : forall c : nat, evalPrimRec 1 x c = g c x0 : PrimRec 2 H1 : forall c c0 : nat, evalPrimRec 2 x0 c c0 = f5 c c0 x1 : PrimRec 2 H2 : forall c c0 : nat, evalPrimRec 2 x1 c c0 = f4 c c0 x2 : PrimRec 2 H3 : forall c c0 : nat, evalPrimRec 2 x2 c c0 = f3 c c0 x3 : PrimRec 2 H4 : forall c c0 : nat, evalPrimRec 2 x3 c c0 = f2 c c0 x4 : PrimRec 2 H5 : forall c c0 : nat, evalPrimRec 2 x4 c c0 = f1 c c0 Unable to unify \"{p : PrimRec 1 | extEqual 1 (evalPrimRec 1 p) (fun x : nat => ?M44588 (?M44582 x) (?M44584 x) (?M44586 x))}\" with \"{p : PrimRec 1 | extEqual 1 (evalPrimRec 1 p) (fun c : nat => c)}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros f1 f2 f3 f4 f5 g Hf1 Hf2 Hf3 Hf4 Hf5 Hg.", "qsimpl time: 1 use: switchPR,pred,compose1_NIsPR.", "apply swapIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: switchPR,compose1_3IsPR,pred,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply H18.", "++", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "-", "apply H15.", "+", "shelve.", "+", "shelve.", "-", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "+", "shelve.", "+", "shelve.", "++", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR."], "tactic": "apply swapIsPR.", "exn": "In environment H28 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H27 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H19 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H25 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H24 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H16 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H21 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H20 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H13 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H18 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H17 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H10 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H15 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H14 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H8 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H12 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H11 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H6 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H9 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H7 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) L : Language codeF : Functions L -> nat codeR : Relations L -> nat f1, f2, f3, f4, f5 : nat -> nat -> nat g : nat -> nat x : PrimRec 1 H0 : forall c : nat, evalPrimRec 1 x c = g c x0 : PrimRec 2 H1 : forall c c0 : nat, evalPrimRec 2 x0 c c0 = f5 c c0 x1 : PrimRec 2 H2 : forall c c0 : nat, evalPrimRec 2 x1 c c0 = f4 c c0 x2 : PrimRec 2 H3 : forall c c0 : nat, evalPrimRec 2 x2 c c0 = f3 c c0 x3 : PrimRec 2 H4 : forall c c0 : nat, evalPrimRec 2 x3 c c0 = f2 c c0 x4 : PrimRec 2 H5 : forall c c0 : nat, evalPrimRec 2 x4 c c0 = f1 c c0 Unable to unify \"{p : PrimRec 2 | extEqual 2 (evalPrimRec 2 p) (fun x y : nat => ?M50146 y x)}\" with \"{p : PrimRec 1 | extEqual 1 (evalPrimRec 1 p) (fun c : nat => c)}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros f1 f2 f3 f4 f5 g Hf1 Hf2 Hf3 Hf4 Hf5 Hg.", "qsimpl time: 1 use: switchPR,pred,compose1_NIsPR.", "apply swapIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: switchPR,compose1_3IsPR,pred,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply H18.", "++", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "-", "apply H15.", "+", "shelve.", "+", "shelve.", "-", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "+", "shelve.", "+", "shelve.", "++", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR."], "tactic": "apply filter10IsPR.", "exn": "In environment H32 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H31 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H26 : forall f : nat -> nat -> nat, isPR 2 f -> isPR 2 (fun x y : nat => f y x) H22 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H28 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H27 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H19 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H25 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H24 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H16 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H21 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H20 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H13 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H18 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H17 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H10 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H15 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H14 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H8 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H12 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H11 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H6 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H9 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H7 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) L : Language codeF : Functions L -> nat codeR : Relations L -> nat f1, f2, f3, f4, f5 : nat -> nat -> nat g : nat -> nat x : PrimRec 1 H0 : forall c : nat, evalPrimRec 1 x c = g c x0 : PrimRec 2 H1 : forall c c0 : nat, evalPrimRec 2 x0 c c0 = f5 c c0 x1 : PrimRec 2 H2 : forall c c0 : nat, evalPrimRec 2 x1 c c0 = f4 c c0 x2 : PrimRec 2 H3 : forall c c0 : nat, evalPrimRec 2 x2 c c0 = f3 c c0 x3 : PrimRec 2 H4 : forall c c0 : nat, evalPrimRec 2 x3 c c0 = f2 c c0 x4 : PrimRec 2 H5 : forall c c0 : nat, evalPrimRec 2 x4 c c0 = f1 c c0 Unable to unify \"{p : PrimRec 2 | extEqual 2 (evalPrimRec 2 p) (fun a _ : nat => ?M56288 a)}\" with \"{p : PrimRec 1 | extEqual 1 (evalPrimRec 1 p) (fun c : nat => c)}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros f1 f2 f3 f4 f5 g Hf1 Hf2 Hf3 Hf4 Hf5 Hg.", "qsimpl time: 1 use: switchPR,pred,compose1_NIsPR.", "apply swapIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: switchPR,compose1_3IsPR,pred,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply H18.", "++", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "-", "apply H15.", "+", "shelve.", "+", "shelve.", "-", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "+", "shelve.", "+", "shelve.", "++", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR."], "tactic": "apply Hg.", "exn": "The reference Hg was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros f1 f2 f3 f4 f5 g Hf1 Hf2 Hf3 Hf4 Hf5 Hg.", "qsimpl time: 1 use: switchPR,pred,compose1_NIsPR.", "apply swapIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: switchPR,compose1_3IsPR,pred,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply H18.", "++", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "-", "apply H15.", "+", "shelve.", "+", "shelve.", "-", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "+", "shelve.", "+", "shelve.", "++", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "-"], "tactic": "apply I.", "exn": "In environment H36 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H35 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H30 : forall f : nat -> nat -> nat, isPR 2 f -> isPR 2 (fun x y : nat => f y x) H23 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H32 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H31 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H26 : forall f : nat -> nat -> nat, isPR 2 f -> isPR 2 (fun x y : nat => f y x) H22 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H28 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H27 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H19 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H25 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H24 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H16 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H21 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H20 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H13 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H18 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H17 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H10 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H15 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H14 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H8 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H12 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H11 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H6 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H9 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H7 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) L : Language codeF : Functions L -> nat codeR : Relations L -> nat f1, f2, f3, f4, f5 : nat -> nat -> nat g : nat -> nat x : PrimRec 1 H0 : forall c : nat, evalPrimRec 1 x c = g c x0 : PrimRec 2 H1 : forall c c0 : nat, evalPrimRec 2 x0 c c0 = f5 c c0 x1 : PrimRec 2 H2 : forall c c0 : nat, evalPrimRec 2 x1 c c0 = f4 c c0 x2 : PrimRec 2 H3 : forall c c0 : nat, evalPrimRec 2 x2 c c0 = f3 c c0 x3 : PrimRec 2 H4 : forall c c0 : nat, evalPrimRec 2 x3 c c0 = f2 c c0 x4 : PrimRec 2 H5 : forall c c0 : nat, evalPrimRec 2 x4 c c0 = f1 c c0 Unable to unify \"True\" with \"isPR 1 (fun c : nat => c)\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros f1 f2 f3 f4 f5 g Hf1 Hf2 Hf3 Hf4 Hf5 Hg.", "qsimpl time: 1 use: switchPR,pred,compose1_NIsPR.", "apply swapIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: switchPR,compose1_3IsPR,pred,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply H18.", "++", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "-", "apply H15.", "+", "shelve.", "+", "shelve.", "-", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "+", "shelve.", "+", "shelve.", "++", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "-", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR."], "tactic": "apply compose2_1IsPR with (f := fun y x => f3 x (init y)).", "exn": "The reference init was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros f1 f2 f3 f4 f5 g Hf1 Hf2 Hf3 Hf4 Hf5 Hg.", "qsimpl time: 1 use: switchPR,pred,compose1_NIsPR.", "apply swapIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: switchPR,compose1_3IsPR,pred,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply H18.", "++", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "-", "apply H15.", "+", "shelve.", "+", "shelve.", "-", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "+", "shelve.", "+", "shelve.", "++", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "-", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR."], "tactic": "apply Hf3.", "exn": "The reference Hf3 was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros f1 f2 f3 f4 f5 g Hf1 Hf2 Hf3 Hf4 Hf5 Hg.", "qsimpl time: 1 use: switchPR,pred,compose1_NIsPR.", "apply swapIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: switchPR,compose1_3IsPR,pred,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply H18.", "++", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "-", "apply H15.", "+", "shelve.", "+", "shelve.", "-", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "+", "shelve.", "+", "shelve.", "++", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "-", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "+"], "tactic": "apply compose1_3IsPR.", "exn": "In environment H40 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H39 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H34 : forall f : nat -> nat -> nat, isPR 2 f -> isPR 2 (fun x y : nat => f y x) H29 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H36 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H35 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H30 : forall f : nat -> nat -> nat, isPR 2 f -> isPR 2 (fun x y : nat => f y x) H23 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H32 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H31 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H26 : forall f : nat -> nat -> nat, isPR 2 f -> isPR 2 (fun x y : nat => f y x) H22 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H28 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H27 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H19 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H25 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H24 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H16 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H21 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H20 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H13 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H18 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H17 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H10 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H15 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H14 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H8 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H12 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H11 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H6 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H9 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H7 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) L : Language codeF : Functions L -> nat codeR : Relations L -> nat f1, f2, f3, f4, f5 : nat -> nat -> nat g : nat -> nat x : PrimRec 1 H0 : forall c : nat, evalPrimRec 1 x c = g c x0 : PrimRec 2 H1 : forall c c0 : nat, evalPrimRec 2 x0 c c0 = f5 c c0 x1 : PrimRec 2 H2 : forall c c0 : nat, evalPrimRec 2 x1 c c0 = f4 c c0 x2 : PrimRec 2 H3 : forall c c0 : nat, evalPrimRec 2 x2 c c0 = f3 c c0 x3 : PrimRec 2 H4 : forall c c0 : nat, evalPrimRec 2 x3 c c0 = f2 c c0 x4 : PrimRec 2 H5 : forall c c0 : nat, evalPrimRec 2 x4 c c0 = f1 c c0 Unable to unify \"{p : PrimRec 1 | extEqual 1 (evalPrimRec 1 p) (fun x : nat => ?M70322 (?M70316 x) (?M70318 x) (?M70320 x))}\" with \"{p : PrimRec 1 | extEqual 1 (evalPrimRec 1 p) (fun c : nat => c)}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros f1 f2 f3 f4 f5 g Hf1 Hf2 Hf3 Hf4 Hf5 Hg.", "qsimpl time: 1 use: switchPR,pred,compose1_NIsPR.", "apply swapIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: switchPR,compose1_3IsPR,pred,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply H18.", "++", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "-", "apply H15.", "+", "shelve.", "+", "shelve.", "-", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "+", "shelve.", "+", "shelve.", "++", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "-", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "+", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR."], "tactic": "apply Hg.", "exn": "The reference Hg was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros f1 f2 f3 f4 f5 g Hf1 Hf2 Hf3 Hf4 Hf5 Hg.", "qsimpl time: 1 use: switchPR,pred,compose1_NIsPR.", "apply swapIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: switchPR,compose1_3IsPR,pred,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply H18.", "++", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "-", "apply H15.", "+", "shelve.", "+", "shelve.", "-", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "+", "shelve.", "+", "shelve.", "++", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "-", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "+", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "*"], "tactic": "apply filter10IsPR.", "exn": "In environment H44 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H43 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H38 : forall f : nat -> nat -> nat, isPR 2 f -> isPR 2 (fun x y : nat => f y x) H33 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H40 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H39 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H34 : forall f : nat -> nat -> nat, isPR 2 f -> isPR 2 (fun x y : nat => f y x) H29 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H36 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H35 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H30 : forall f : nat -> nat -> nat, isPR 2 f -> isPR 2 (fun x y : nat => f y x) H23 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H32 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H31 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H26 : forall f : nat -> nat -> nat, isPR 2 f -> isPR 2 (fun x y : nat => f y x) H22 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H28 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H27 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H19 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H25 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H24 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H16 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H21 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H20 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H13 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H18 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H17 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H10 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H15 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H14 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H8 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H12 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H11 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H6 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H9 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H7 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) L : Language codeF : Functions L -> nat codeR : Relations L -> nat f1, f2, f3, f4, f5 : nat -> nat -> nat g : nat -> nat x : PrimRec 1 H0 : forall c : nat, evalPrimRec 1 x c = g c x0 : PrimRec 2 H1 : forall c c0 : nat, evalPrimRec 2 x0 c c0 = f5 c c0 x1 : PrimRec 2 H2 : forall c c0 : nat, evalPrimRec 2 x1 c c0 = f4 c c0 x2 : PrimRec 2 H3 : forall c c0 : nat, evalPrimRec 2 x2 c c0 = f3 c c0 x3 : PrimRec 2 H4 : forall c c0 : nat, evalPrimRec 2 x3 c c0 = f2 c c0 x4 : PrimRec 2 H5 : forall c c0 : nat, evalPrimRec 2 x4 c c0 = f1 c c0 Unable to unify \"{p : PrimRec 2 | extEqual 2 (evalPrimRec 2 p) (fun a _ : nat => ?M78197 a)}\" with \"{p : PrimRec 1 | extEqual 1 (evalPrimRec 1 p) (fun c : nat => c)}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros f1 f2 f3 f4 f5 g Hf1 Hf2 Hf3 Hf4 Hf5 Hg.", "qsimpl time: 1 use: switchPR,pred,compose1_NIsPR.", "apply swapIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: switchPR,compose1_3IsPR,pred,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply H18.", "++", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "-", "apply H15.", "+", "shelve.", "+", "shelve.", "-", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "+", "shelve.", "+", "shelve.", "++", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "-", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "+", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "*", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR."], "tactic": "apply Hg.", "exn": "The reference Hg was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros f1 f2 f3 f4 f5 g Hf1 Hf2 Hf3 Hf4 Hf5 Hg.", "qsimpl time: 1 use: switchPR,pred,compose1_NIsPR.", "apply swapIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: switchPR,compose1_3IsPR,pred,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply H18.", "++", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "-", "apply H15.", "+", "shelve.", "+", "shelve.", "-", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "+", "shelve.", "+", "shelve.", "++", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "-", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "+", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "*", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15."], "tactic": "*", "exn": "Wrong bullet *: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros f1 f2 f3 f4 f5 g Hf1 Hf2 Hf3 Hf4 Hf5 Hg.", "qsimpl time: 1 use: switchPR,pred,compose1_NIsPR.", "apply swapIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: switchPR,compose1_3IsPR,pred,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply H18.", "++", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "-", "apply H15.", "+", "shelve.", "+", "shelve.", "-", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "+", "shelve.", "+", "shelve.", "++", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "-", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "+", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "*", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "--", "shelve.", "--", "shelve.", "*"], "tactic": "apply filter10IsPR.", "exn": "In environment H44 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H43 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H38 : forall f : nat -> nat -> nat, isPR 2 f -> isPR 2 (fun x y : nat => f y x) H33 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H40 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H39 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H34 : forall f : nat -> nat -> nat, isPR 2 f -> isPR 2 (fun x y : nat => f y x) H29 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H36 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H35 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H30 : forall f : nat -> nat -> nat, isPR 2 f -> isPR 2 (fun x y : nat => f y x) H23 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H32 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H31 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H26 : forall f : nat -> nat -> nat, isPR 2 f -> isPR 2 (fun x y : nat => f y x) H22 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H28 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H27 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H19 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H25 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H24 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H16 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H21 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H20 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H13 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H18 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H17 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H10 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H15 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H14 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H8 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H12 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H11 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H6 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H9 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H7 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) L : Language codeF : Functions L -> nat codeR : Relations L -> nat f1, f2, f3, f4, f5 : nat -> nat -> nat g : nat -> nat x : PrimRec 1 H0 : forall c : nat, evalPrimRec 1 x c = g c x0 : PrimRec 2 H1 : forall c c0 : nat, evalPrimRec 2 x0 c c0 = f5 c c0 x1 : PrimRec 2 H2 : forall c c0 : nat, evalPrimRec 2 x1 c c0 = f4 c c0 x2 : PrimRec 2 H3 : forall c c0 : nat, evalPrimRec 2 x2 c c0 = f3 c c0 x3 : PrimRec 2 H4 : forall c c0 : nat, evalPrimRec 2 x3 c c0 = f2 c c0 x4 : PrimRec 2 H5 : forall c c0 : nat, evalPrimRec 2 x4 c c0 = f1 c c0 Unable to unify \"{p : PrimRec 2 | extEqual 2 (evalPrimRec 2 p) (fun a _ : nat => ?M86656 a)}\" with \"{p : PrimRec 1 | extEqual 1 (evalPrimRec 1 p) (fun c : nat => c)}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros f1 f2 f3 f4 f5 g Hf1 Hf2 Hf3 Hf4 Hf5 Hg.", "qsimpl time: 1 use: switchPR,pred,compose1_NIsPR.", "apply swapIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: switchPR,compose1_3IsPR,pred,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply H18.", "++", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "-", "apply H15.", "+", "shelve.", "+", "shelve.", "-", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "+", "shelve.", "+", "shelve.", "++", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "-", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "+", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "*", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR."], "tactic": "apply compose1_3IsPR; [apply Hg|apply Hg|apply Hg].", "exn": "In environment H48 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H47 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H42 : forall f : nat -> nat -> nat, isPR 2 f -> isPR 2 (fun x y : nat => f y x) H37 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H44 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H43 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H38 : forall f : nat -> nat -> nat, isPR 2 f -> isPR 2 (fun x y : nat => f y x) H33 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H40 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H39 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H34 : forall f : nat -> nat -> nat, isPR 2 f -> isPR 2 (fun x y : nat => f y x) H29 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H36 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H35 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H30 : forall f : nat -> nat -> nat, isPR 2 f -> isPR 2 (fun x y : nat => f y x) H23 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H32 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H31 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H26 : forall f : nat -> nat -> nat, isPR 2 f -> isPR 2 (fun x y : nat => f y x) H22 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H28 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H27 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H19 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H25 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H24 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H16 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H21 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H20 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H13 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H18 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H17 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H10 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H15 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H14 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H8 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H12 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H11 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H6 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H9 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H7 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) L : Language codeF : Functions L -> nat codeR : Relations L -> nat f1, f2, f3, f4, f5 : nat -> nat -> nat g : nat -> nat x : PrimRec 1 H0 : forall c : nat, evalPrimRec 1 x c = g c x0 : PrimRec 2 H1 : forall c c0 : nat, evalPrimRec 2 x0 c c0 = f5 c c0 x1 : PrimRec 2 H2 : forall c c0 : nat, evalPrimRec 2 x1 c c0 = f4 c c0 x2 : PrimRec 2 H3 : forall c c0 : nat, evalPrimRec 2 x2 c c0 = f3 c c0 x3 : PrimRec 2 H4 : forall c c0 : nat, evalPrimRec 2 x3 c c0 = f2 c c0 x4 : PrimRec 2 H5 : forall c c0 : nat, evalPrimRec 2 x4 c c0 = f1 c c0 Unable to unify \"{p : PrimRec 1 | extEqual 1 (evalPrimRec 1 p) (fun x : nat => ?M95116 (?M95110 x) (?M95112 x) (?M95114 x))}\" with \"{p : PrimRec 1 | extEqual 1 (evalPrimRec 1 p) (fun c : nat => c)}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros f1 f2 f3 f4 f5 g Hf1 Hf2 Hf3 Hf4 Hf5 Hg.", "qsimpl time: 1 use: switchPR,pred,compose1_NIsPR.", "apply swapIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: switchPR,compose1_3IsPR,pred,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply H18.", "++", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "-", "apply H15.", "+", "shelve.", "+", "shelve.", "-", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "+", "shelve.", "+", "shelve.", "++", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "-", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "+", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "*", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR."], "tactic": "*", "exn": "Wrong bullet *: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros f1 f2 f3 f4 f5 g Hf1 Hf2 Hf3 Hf4 Hf5 Hg.", "qsimpl time: 1 use: switchPR,pred,compose1_NIsPR.", "apply swapIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: switchPR,compose1_3IsPR,pred,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply H18.", "++", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "-", "apply H15.", "+", "shelve.", "+", "shelve.", "-", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "+", "shelve.", "+", "shelve.", "++", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "-", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "+", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "*", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "shelve."], "tactic": "*", "exn": "Wrong bullet *: Expecting +.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros f1 f2 f3 f4 f5 g Hf1 Hf2 Hf3 Hf4 Hf5 Hg.", "qsimpl time: 1 use: switchPR,pred,compose1_NIsPR.", "apply swapIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: switchPR,compose1_3IsPR,pred,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply H18.", "++", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "-", "apply H15.", "+", "shelve.", "+", "shelve.", "-", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "+", "shelve.", "+", "shelve.", "++", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "-", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "+", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "*", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "shelve.", "+"], "tactic": "apply swapIsPR.", "exn": "In environment H40 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H39 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H34 : forall f : nat -> nat -> nat, isPR 2 f -> isPR 2 (fun x y : nat => f y x) H29 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H36 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H35 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H30 : forall f : nat -> nat -> nat, isPR 2 f -> isPR 2 (fun x y : nat => f y x) H23 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H32 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H31 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H26 : forall f : nat -> nat -> nat, isPR 2 f -> isPR 2 (fun x y : nat => f y x) H22 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H28 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H27 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H19 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H25 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H24 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H16 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H21 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H20 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H13 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H18 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H17 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H10 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H15 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H14 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H8 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H12 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H11 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H6 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H9 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H7 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) L : Language codeF : Functions L -> nat codeR : Relations L -> nat f1, f2, f3, f4, f5 : nat -> nat -> nat g : nat -> nat x : PrimRec 1 H0 : forall c : nat, evalPrimRec 1 x c = g c x0 : PrimRec 2 H1 : forall c c0 : nat, evalPrimRec 2 x0 c c0 = f5 c c0 x1 : PrimRec 2 H2 : forall c c0 : nat, evalPrimRec 2 x1 c c0 = f4 c c0 x2 : PrimRec 2 H3 : forall c c0 : nat, evalPrimRec 2 x2 c c0 = f3 c c0 x3 : PrimRec 2 H4 : forall c c0 : nat, evalPrimRec 2 x3 c c0 = f2 c c0 x4 : PrimRec 2 H5 : forall c c0 : nat, evalPrimRec 2 x4 c c0 = f1 c c0 Unable to unify \"{p : PrimRec 2 | extEqual 2 (evalPrimRec 2 p) (fun x y : nat => ?M104142 y x)}\" with \"{p : PrimRec 1 | extEqual 1 (evalPrimRec 1 p) (fun c : nat => c)}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros f1 f2 f3 f4 f5 g Hf1 Hf2 Hf3 Hf4 Hf5 Hg.", "qsimpl time: 1 use: switchPR,pred,compose1_NIsPR.", "apply swapIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: switchPR,compose1_3IsPR,pred,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply H18.", "++", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "-", "apply H15.", "+", "shelve.", "+", "shelve.", "-", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "+", "shelve.", "+", "shelve.", "++", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "-", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "+", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "*", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "shelve.", "+", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR."], "tactic": "apply filter10IsPR.", "exn": "In environment H44 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H43 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H38 : forall f : nat -> nat -> nat, isPR 2 f -> isPR 2 (fun x y : nat => f y x) H33 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H40 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H39 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H34 : forall f : nat -> nat -> nat, isPR 2 f -> isPR 2 (fun x y : nat => f y x) H29 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H36 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H35 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H30 : forall f : nat -> nat -> nat, isPR 2 f -> isPR 2 (fun x y : nat => f y x) H23 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H32 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H31 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H26 : forall f : nat -> nat -> nat, isPR 2 f -> isPR 2 (fun x y : nat => f y x) H22 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H28 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H27 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H19 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H25 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H24 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H16 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H21 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H20 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H13 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H18 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H17 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H10 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H15 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H14 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H8 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H12 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H11 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H6 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H9 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H7 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) L : Language codeF : Functions L -> nat codeR : Relations L -> nat f1, f2, f3, f4, f5 : nat -> nat -> nat g : nat -> nat x : PrimRec 1 H0 : forall c : nat, evalPrimRec 1 x c = g c x0 : PrimRec 2 H1 : forall c c0 : nat, evalPrimRec 2 x0 c c0 = f5 c c0 x1 : PrimRec 2 H2 : forall c c0 : nat, evalPrimRec 2 x1 c c0 = f4 c c0 x2 : PrimRec 2 H3 : forall c c0 : nat, evalPrimRec 2 x2 c c0 = f3 c c0 x3 : PrimRec 2 H4 : forall c c0 : nat, evalPrimRec 2 x3 c c0 = f2 c c0 x4 : PrimRec 2 H5 : forall c c0 : nat, evalPrimRec 2 x4 c c0 = f1 c c0 Unable to unify \"{p : PrimRec 2 | extEqual 2 (evalPrimRec 2 p) (fun a _ : nat => ?M112018 a)}\" with \"{p : PrimRec 1 | extEqual 1 (evalPrimRec 1 p) (fun c : nat => c)}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros f1 f2 f3 f4 f5 g Hf1 Hf2 Hf3 Hf4 Hf5 Hg.", "qsimpl time: 1 use: switchPR,pred,compose1_NIsPR.", "apply swapIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: switchPR,compose1_3IsPR,pred,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply H18.", "++", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "-", "apply H15.", "+", "shelve.", "+", "shelve.", "-", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "+", "shelve.", "+", "shelve.", "++", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "-", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "+", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "*", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "shelve.", "+", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR."], "tactic": "apply Hg.", "exn": "The reference Hg was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros f1 f2 f3 f4 f5 g Hf1 Hf2 Hf3 Hf4 Hf5 Hg.", "qsimpl time: 1 use: switchPR,pred,compose1_NIsPR.", "apply swapIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: switchPR,compose1_3IsPR,pred,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply H18.", "++", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "-", "apply H15.", "+", "shelve.", "+", "shelve.", "-", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "+", "shelve.", "+", "shelve.", "++", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "-", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "+", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "*", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "shelve.", "+", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "*"], "tactic": "apply I.", "exn": "In environment H48 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H47 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H42 : forall f : nat -> nat -> nat, isPR 2 f -> isPR 2 (fun x y : nat => f y x) H37 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H44 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H43 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H38 : forall f : nat -> nat -> nat, isPR 2 f -> isPR 2 (fun x y : nat => f y x) H33 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H40 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H39 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H34 : forall f : nat -> nat -> nat, isPR 2 f -> isPR 2 (fun x y : nat => f y x) H29 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H36 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H35 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H30 : forall f : nat -> nat -> nat, isPR 2 f -> isPR 2 (fun x y : nat => f y x) H23 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H32 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H31 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H26 : forall f : nat -> nat -> nat, isPR 2 f -> isPR 2 (fun x y : nat => f y x) H22 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H28 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H27 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H19 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H25 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H24 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H16 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H21 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H20 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H13 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H18 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H17 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H10 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H15 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H14 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H8 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H12 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H11 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H6 : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a _ : nat => g a) H9 : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) H7 : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)) H : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) L : Language codeF : Functions L -> nat codeR : Relations L -> nat f1, f2, f3, f4, f5 : nat -> nat -> nat g : nat -> nat x : PrimRec 1 H0 : forall c : nat, evalPrimRec 1 x c = g c x0 : PrimRec 2 H1 : forall c c0 : nat, evalPrimRec 2 x0 c c0 = f5 c c0 x1 : PrimRec 2 H2 : forall c c0 : nat, evalPrimRec 2 x1 c c0 = f4 c c0 x2 : PrimRec 2 H3 : forall c c0 : nat, evalPrimRec 2 x2 c c0 = f3 c c0 x3 : PrimRec 2 H4 : forall c c0 : nat, evalPrimRec 2 x3 c c0 = f2 c c0 x4 : PrimRec 2 H5 : forall c c0 : nat, evalPrimRec 2 x4 c c0 = f1 c c0 Unable to unify \"True\" with \"isPR 1 (fun c : nat => c)\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros f1 f2 f3 f4 f5 g Hf1 Hf2 Hf3 Hf4 Hf5 Hg.", "qsimpl time: 1 use: switchPR,pred,compose1_NIsPR.", "apply swapIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: switchPR,compose1_3IsPR,pred,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply swapIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,compose1_3IsPR,compose1_NIsPR.", "apply H18.", "++", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "-", "apply H15.", "+", "shelve.", "+", "shelve.", "-", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "+", "shelve.", "+", "shelve.", "++", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "-", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "+", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "*", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "shelve.", "+", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR.", "apply H15.", "*", "qsimpl time: 1 use: filter10IsPR,pred,swapIsPR,switchPR,I,compose1_3IsPR,compose1_NIsPR."], "tactic": "apply compose2_1IsPR with (f := fun y x => f4 x (init y)).", "exn": "The reference init was not found in the current environment.", "type": "ref_not_found", "handled": true}]}, "chat": [], "original": "", "back_times": 0, "succ": false, "time": 125.69521307945251}]