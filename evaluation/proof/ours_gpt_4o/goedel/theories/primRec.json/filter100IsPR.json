[{"history": {"proof": "qsimpl time: 1 use: PrimRec_PrimRecs_ind,evalPrimRec,isPR. qsimpl time: 1 use: succIsPR,PrimRec_PrimRecs_ind,evalPrimRec,isPR. qsimpl time: 1 use: PrimRec_PrimRecs_ind,evalPrimRec,const1_NIsPR,succIsPR,isPR. qsimpl time: 1 use: PrimRec_PrimRecs_ind,evalPrimRec,const1_NIsPR,pi4_4IsPR,succIsPR,isPR. qsimpl time: 1 use: PrimRec_PrimRecs_ind,evalPrimRec,pi2_4IsPR,const1_NIsPR,pi4_4IsPR,succIsPR,isPR. qsimpl time: 1 use: PrimRec_PrimRecs_ind,evalPrimRec,pi2_4IsPR,const1_NIsPR,pi4_4IsPR,pi3_4IsPR,succIsPR,isPR. qsimpl time: 1 use: PrimRec_PrimRecs_ind,pi1_4IsPR,evalPrimRec,pi2_4IsPR,const1_NIsPR,pi4_4IsPR,pi3_4IsPR,succIsPR,isPR.", "repairs": ["wrong_type", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify"], "exceptions": [{"ctx": ["intros g Hg."], "tactic": "apply (PrimRec_PrimRecs_ind (fun n p => isPR n (evalPrimRec n p))).", "exn": "In environment g : nat -> nat Hg : isPR 1 g n : nat p : PrimRec n The term \"isPR n (evalPrimRec n p)\" has type \"Set\" while it is expected to have type \"Prop\" (universe inconsistency).", "type": "wrong_type", "handled": true}, {"ctx": ["intros g Hg.", "qsimpl time: 1 use: PrimRec_PrimRecs_ind,evalPrimRec,isPR."], "tactic": "apply succIsPR.", "exn": "In environment S : forall n : nat, naryFunc n -> Set H0 : forall n : nat, PrimRec n -> naryFunc n H : forall (P : forall n : nat, PrimRec n -> Prop) (P0 : forall n n0 : nat, PrimRecs n n0 -> Prop), P 1 succFunc -> P 0 zeroFunc -> (forall (n m : nat) (l : m < n), P n (projFunc n m l)) -> (forall (n m : nat) (g : PrimRecs n m), P0 n m g -> forall h : PrimRec m, P m h -> P n (composeFunc n m g h)) -> (forall (n : nat) (g : PrimRec n), P n g -> forall h : PrimRec (Datatypes.S (Datatypes.S n)), P (Datatypes.S (Datatypes.S n)) h -> P (Datatypes.S n) (primRecFunc n g h)) -> (forall n : nat, P0 n 0 (PRnil n)) -> (forall (n m : nat) (p : PrimRec n), P n p -> forall p0 : PrimRecs n m, P0 n m p0 -> P0 n (Datatypes.S m) (PRcons n m p p0)) -> forall (n : nat) (p : PrimRec n), P n p g : nat -> nat x : PrimRec 1 H1 : forall c : nat, evalPrimRec 1 x c = g c Unable to unify \"isPR 1 Datatypes.S\" with \"S 3 (fun a _ _ : nat => g a)\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros g Hg.", "qsimpl time: 1 use: PrimRec_PrimRecs_ind,evalPrimRec,isPR.", "qsimpl time: 1 use: succIsPR,PrimRec_PrimRecs_ind,evalPrimRec,isPR."], "tactic": "apply const1_NIsPR.", "exn": "In environment X : forall n : nat, naryFunc n -> Set H4 : forall n : nat, PrimRec n -> naryFunc n H3 : forall (P : forall n : nat, PrimRec n -> Prop) (P0 : forall n n0 : nat, PrimRecs n n0 -> Prop), P 1 succFunc -> P 0 zeroFunc -> (forall (n m : nat) (l : m < n), P n (projFunc n m l)) -> (forall (n m : nat) (g : PrimRecs n m), P0 n m g -> forall h : PrimRec m, P m h -> P n (composeFunc n m g h)) -> (forall (n : nat) (g : PrimRec n), P n g -> forall h : PrimRec (Datatypes.S (Datatypes.S n)), P (Datatypes.S (Datatypes.S n)) h -> P (Datatypes.S n) (primRecFunc n g h)) -> (forall n : nat, P0 n 0 (PRnil n)) -> (forall (n m : nat) (p : PrimRec n), P n p -> forall p0 : PrimRecs n m, P0 n m p0 -> P0 n (Datatypes.S m) (PRcons n m p p0)) -> forall (n : nat) (p : PrimRec n), P n p S : forall n : nat, naryFunc n -> Set H0 : forall n : nat, PrimRec n -> naryFunc n g : nat -> nat x : PrimRec 1 H1 : forall c : nat, evalPrimRec 1 x c = g c x0 : PrimRec 1 H : forall c : nat, evalPrimRec 1 x0 c = Datatypes.S c Unable to unify \"{p : PrimRec 1 | extEqual 1 (evalPrimRec 1 p) (fun _ : nat => ?M2702)}\" with \"S 3 (fun a _ _ : nat => g a)\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros g Hg.", "qsimpl time: 1 use: PrimRec_PrimRecs_ind,evalPrimRec,isPR.", "qsimpl time: 1 use: succIsPR,PrimRec_PrimRecs_ind,evalPrimRec,isPR.", "qsimpl time: 1 use: PrimRec_PrimRecs_ind,evalPrimRec,const1_NIsPR,succIsPR,isPR."], "tactic": "intros n' m l.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros g Hg.", "qsimpl time: 1 use: PrimRec_PrimRecs_ind,evalPrimRec,isPR.", "qsimpl time: 1 use: succIsPR,PrimRec_PrimRecs_ind,evalPrimRec,isPR.", "qsimpl time: 1 use: PrimRec_PrimRecs_ind,evalPrimRec,const1_NIsPR,succIsPR,isPR."], "tactic": "destruct m.", "exn": "The reference m was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros g Hg.", "qsimpl time: 1 use: PrimRec_PrimRecs_ind,evalPrimRec,isPR.", "qsimpl time: 1 use: succIsPR,PrimRec_PrimRecs_ind,evalPrimRec,isPR.", "qsimpl time: 1 use: PrimRec_PrimRecs_ind,evalPrimRec,const1_NIsPR,succIsPR,isPR.", "destruct pi3_4IsPR."], "tactic": "apply pi4_4IsPR.", "exn": "In environment X0 : forall n : nat, naryFunc n -> Set H6 : forall n : nat, isPR 1 (fun _ : nat => n) H5 : forall n : nat, PrimRec n -> naryFunc n H2 : forall (P : forall n : nat, PrimRec n -> Prop) (P0 : forall n n0 : nat, PrimRecs n n0 -> Prop), P 1 succFunc -> P 0 zeroFunc -> (forall (n m : nat) (l : m < n), P n (projFunc n m l)) -> (forall (n m : nat) (g : PrimRecs n m), P0 n m g -> forall h : PrimRec m, P m h -> P n (composeFunc n m g h)) -> (forall (n : nat) (g : PrimRec n), P n g -> forall h : PrimRec (Datatypes.S (Datatypes.S n)), P (Datatypes.S (Datatypes.S n)) h -> P (Datatypes.S n) (primRecFunc n g h)) -> (forall n : nat, P0 n 0 (PRnil n)) -> (forall (n m : nat) (p : PrimRec n), P n p -> forall p0 : PrimRecs n m, P0 n m p0 -> P0 n (Datatypes.S m) (PRcons n m p p0)) -> forall (n : nat) (p : PrimRec n), P n p X : forall n : nat, naryFunc n -> Set H4 : forall n : nat, PrimRec n -> naryFunc n S : forall n : nat, naryFunc n -> Set H0 : forall n : nat, PrimRec n -> naryFunc n g : nat -> nat x : PrimRec 1 H1 : forall c : nat, evalPrimRec 1 x c = g c x0 : PrimRec 1 H : forall c : nat, evalPrimRec 1 x0 c = Datatypes.S c x1 : PrimRec 1 H3 : forall c : nat, evalPrimRec 1 x1 c = Datatypes.S c x2 : PrimRec 4 e : extEqual 4 (evalPrimRec 4 x2) (fun _ _ c _ : nat => c) Unable to unify \"isPR 4 (fun _ _ _ d : nat => d)\" with \"S 3 (fun a _ _ : nat => g a)\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros g Hg.", "qsimpl time: 1 use: PrimRec_PrimRecs_ind,evalPrimRec,isPR.", "qsimpl time: 1 use: succIsPR,PrimRec_PrimRecs_ind,evalPrimRec,isPR.", "qsimpl time: 1 use: PrimRec_PrimRecs_ind,evalPrimRec,const1_NIsPR,succIsPR,isPR.", "destruct pi3_4IsPR.", "qsimpl time: 1 use: PrimRec_PrimRecs_ind,evalPrimRec,const1_NIsPR,pi4_4IsPR,succIsPR,isPR."], "tactic": "destruct (lt_dec m 2).", "exn": "The reference m was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros g Hg.", "qsimpl time: 1 use: PrimRec_PrimRecs_ind,evalPrimRec,isPR.", "qsimpl time: 1 use: succIsPR,PrimRec_PrimRecs_ind,evalPrimRec,isPR.", "qsimpl time: 1 use: PrimRec_PrimRecs_ind,evalPrimRec,const1_NIsPR,succIsPR,isPR.", "destruct pi3_4IsPR.", "qsimpl time: 1 use: PrimRec_PrimRecs_ind,evalPrimRec,const1_NIsPR,pi4_4IsPR,succIsPR,isPR."], "tactic": "destruct m.", "exn": "The reference m was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros g Hg.", "qsimpl time: 1 use: PrimRec_PrimRecs_ind,evalPrimRec,isPR.", "qsimpl time: 1 use: succIsPR,PrimRec_PrimRecs_ind,evalPrimRec,isPR.", "qsimpl time: 1 use: PrimRec_PrimRecs_ind,evalPrimRec,const1_NIsPR,succIsPR,isPR.", "destruct pi3_4IsPR.", "qsimpl time: 1 use: PrimRec_PrimRecs_ind,evalPrimRec,const1_NIsPR,pi4_4IsPR,succIsPR,isPR.", "destruct pi3_4IsPR."], "tactic": "apply pi2_4IsPR.", "exn": "In environment X1 : forall n : nat, naryFunc n -> Set H9 : forall n : nat, isPR 1 (fun _ : nat => n) H8 : forall n : nat, PrimRec n -> naryFunc n H7 : forall (P : forall n : nat, PrimRec n -> Prop) (P0 : forall n n0 : nat, PrimRecs n n0 -> Prop), P 1 succFunc -> P 0 zeroFunc -> (forall (n m : nat) (l : m < n), P n (projFunc n m l)) -> (forall (n m : nat) (g : PrimRecs n m), P0 n m g -> forall h : PrimRec m, P m h -> P n (composeFunc n m g h)) -> (forall (n : nat) (g : PrimRec n), P n g -> forall h : PrimRec (Datatypes.S (Datatypes.S n)), P (Datatypes.S (Datatypes.S n)) h -> P (Datatypes.S n) (primRecFunc n g h)) -> (forall n : nat, P0 n 0 (PRnil n)) -> (forall (n m : nat) (p : PrimRec n), P n p -> forall p0 : PrimRecs n m, P0 n m p0 -> P0 n (Datatypes.S m) (PRcons n m p p0)) -> forall (n : nat) (p : PrimRec n), P n p X0 : forall n : nat, naryFunc n -> Set H6 : forall n : nat, isPR 1 (fun _ : nat => n) H5 : forall n : nat, PrimRec n -> naryFunc n X : forall n : nat, naryFunc n -> Set H4 : forall n : nat, PrimRec n -> naryFunc n S : forall n : nat, naryFunc n -> Set H0 : forall n : nat, PrimRec n -> naryFunc n g : nat -> nat x : PrimRec 1 H1 : forall c : nat, evalPrimRec 1 x c = g c x0 : PrimRec 1 H : forall c : nat, evalPrimRec 1 x0 c = Datatypes.S c x1 : PrimRec 1 H3 : forall c : nat, evalPrimRec 1 x1 c = Datatypes.S c x2 : PrimRec 4 e : forall c c0 c1 c2 : nat, evalPrimRec 4 x2 c c0 c1 c2 = c1 x3 : PrimRec 4 H2 : forall c c0 c1 c2 : nat, evalPrimRec 4 x3 c c0 c1 c2 = c2 x4 : PrimRec 1 H10 : forall c : nat, evalPrimRec 1 x4 c = Datatypes.S c x5 : PrimRec 4 e0 : extEqual 4 (evalPrimRec 4 x5) (fun _ _ c _ : nat => c) Unable to unify \"isPR 4 (fun _ b _ _ : nat => b)\" with \"S 3 (fun a _ _ : nat => g a)\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros g Hg.", "qsimpl time: 1 use: PrimRec_PrimRecs_ind,evalPrimRec,isPR.", "qsimpl time: 1 use: succIsPR,PrimRec_PrimRecs_ind,evalPrimRec,isPR.", "qsimpl time: 1 use: PrimRec_PrimRecs_ind,evalPrimRec,const1_NIsPR,succIsPR,isPR.", "destruct pi3_4IsPR.", "qsimpl time: 1 use: PrimRec_PrimRecs_ind,evalPrimRec,const1_NIsPR,pi4_4IsPR,succIsPR,isPR.", "destruct pi3_4IsPR.", "qsimpl time: 1 use: PrimRec_PrimRecs_ind,evalPrimRec,pi2_4IsPR,const1_NIsPR,pi4_4IsPR,succIsPR,isPR."], "tactic": "apply pi3_4IsPR.", "exn": "In environment X2 : forall n : nat, naryFunc n -> Set H14 : forall n : nat, isPR 1 (fun _ : nat => n) H12 : forall n : nat, PrimRec n -> naryFunc n H11 : forall (P : forall n : nat, PrimRec n -> Prop) (P0 : forall n n0 : nat, PrimRecs n n0 -> Prop), P 1 succFunc -> P 0 zeroFunc -> (forall (n m : nat) (l : m < n), P n (projFunc n m l)) -> (forall (n m : nat) (g : PrimRecs n m), P0 n m g -> forall h : PrimRec m, P m h -> P n (composeFunc n m g h)) -> (forall (n : nat) (g : PrimRec n), P n g -> forall h : PrimRec (Datatypes.S (Datatypes.S n)), P (Datatypes.S (Datatypes.S n)) h -> P (Datatypes.S n) (primRecFunc n g h)) -> (forall n : nat, P0 n 0 (PRnil n)) -> (forall (n m : nat) (p : PrimRec n), P n p -> forall p0 : PrimRecs n m, P0 n m p0 -> P0 n (Datatypes.S m) (PRcons n m p p0)) -> forall (n : nat) (p : PrimRec n), P n p X1 : forall n : nat, naryFunc n -> Set H9 : forall n : nat, isPR 1 (fun _ : nat => n) H8 : forall n : nat, PrimRec n -> naryFunc n X0 : forall n : nat, naryFunc n -> Set H6 : forall n : nat, isPR 1 (fun _ : nat => n) H5 : forall n : nat, PrimRec n -> naryFunc n X : forall n : nat, naryFunc n -> Set H4 : forall n : nat, PrimRec n -> naryFunc n S : forall n : nat, naryFunc n -> Set H0 : forall n : nat, PrimRec n -> naryFunc n g : nat -> nat x : PrimRec 1 H1 : forall c : nat, evalPrimRec 1 x c = g c x0 : PrimRec 1 H : forall c : nat, evalPrimRec 1 x0 c = Datatypes.S c x1 : PrimRec 1 H3 : forall c : nat, evalPrimRec 1 x1 c = Datatypes.S c x2 : PrimRec 4 e : forall c c0 c1 c2 : nat, evalPrimRec 4 x2 c c0 c1 c2 = c1 x3 : PrimRec 4 H2 : forall c c0 c1 c2 : nat, evalPrimRec 4 x3 c c0 c1 c2 = c2 x4 : PrimRec 1 H10 : forall c : nat, evalPrimRec 1 x4 c = Datatypes.S c x5 : PrimRec 4 e0 : forall c c0 c1 c2 : nat, evalPrimRec 4 x5 c c0 c1 c2 = c1 x6 : PrimRec 4 H7 : forall c c0 c1 c2 : nat, evalPrimRec 4 x6 c c0 c1 c2 = c0 x7 : PrimRec 4 H13 : forall c c0 c1 c2 : nat, evalPrimRec 4 x7 c c0 c1 c2 = c2 x8 : PrimRec 1 H15 : forall c : nat, evalPrimRec 1 x8 c = Datatypes.S c Unable to unify \"isPR 4 (fun _ _ c _ : nat => c)\" with \"S 3 (fun a _ _ : nat => g a)\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros g Hg.", "qsimpl time: 1 use: PrimRec_PrimRecs_ind,evalPrimRec,isPR.", "qsimpl time: 1 use: succIsPR,PrimRec_PrimRecs_ind,evalPrimRec,isPR.", "qsimpl time: 1 use: PrimRec_PrimRecs_ind,evalPrimRec,const1_NIsPR,succIsPR,isPR.", "destruct pi3_4IsPR.", "qsimpl time: 1 use: PrimRec_PrimRecs_ind,evalPrimRec,const1_NIsPR,pi4_4IsPR,succIsPR,isPR.", "destruct pi3_4IsPR.", "qsimpl time: 1 use: PrimRec_PrimRecs_ind,evalPrimRec,pi2_4IsPR,const1_NIsPR,pi4_4IsPR,succIsPR,isPR.", "qsimpl time: 1 use: PrimRec_PrimRecs_ind,evalPrimRec,pi2_4IsPR,const1_NIsPR,pi4_4IsPR,pi3_4IsPR,succIsPR,isPR."], "tactic": "apply pi1_4IsPR.", "exn": "In environment X3 : forall n : nat, naryFunc n -> Set H19 : forall n : nat, isPR 1 (fun _ : nat => n) H17 : forall n : nat, PrimRec n -> naryFunc n H16 : forall (P : forall n : nat, PrimRec n -> Prop) (P0 : forall n n0 : nat, PrimRecs n n0 -> Prop), P 1 succFunc -> P 0 zeroFunc -> (forall (n m : nat) (l : m < n), P n (projFunc n m l)) -> (forall (n m : nat) (g : PrimRecs n m), P0 n m g -> forall h : PrimRec m, P m h -> P n (composeFunc n m g h)) -> (forall (n : nat) (g : PrimRec n), P n g -> forall h : PrimRec (Datatypes.S (Datatypes.S n)), P (Datatypes.S (Datatypes.S n)) h -> P (Datatypes.S n) (primRecFunc n g h)) -> (forall n : nat, P0 n 0 (PRnil n)) -> (forall (n m : nat) (p : PrimRec n), P n p -> forall p0 : PrimRecs n m, P0 n m p0 -> P0 n (Datatypes.S m) (PRcons n m p p0)) -> forall (n : nat) (p : PrimRec n), P n p X2 : forall n : nat, naryFunc n -> Set H14 : forall n : nat, isPR 1 (fun _ : nat => n) H12 : forall n : nat, PrimRec n -> naryFunc n X1 : forall n : nat, naryFunc n -> Set H9 : forall n : nat, isPR 1 (fun _ : nat => n) H8 : forall n : nat, PrimRec n -> naryFunc n X0 : forall n : nat, naryFunc n -> Set H6 : forall n : nat, isPR 1 (fun _ : nat => n) H5 : forall n : nat, PrimRec n -> naryFunc n X : forall n : nat, naryFunc n -> Set H4 : forall n : nat, PrimRec n -> naryFunc n S : forall n : nat, naryFunc n -> Set H0 : forall n : nat, PrimRec n -> naryFunc n g : nat -> nat x : PrimRec 1 H1 : forall c : nat, evalPrimRec 1 x c = g c x0 : PrimRec 1 H : forall c : nat, evalPrimRec 1 x0 c = Datatypes.S c x1 : PrimRec 1 H3 : forall c : nat, evalPrimRec 1 x1 c = Datatypes.S c x2 : PrimRec 4 e : forall c c0 c1 c2 : nat, evalPrimRec 4 x2 c c0 c1 c2 = c1 x3 : PrimRec 4 H2 : forall c c0 c1 c2 : nat, evalPrimRec 4 x3 c c0 c1 c2 = c2 x4 : PrimRec 1 H10 : forall c : nat, evalPrimRec 1 x4 c = Datatypes.S c x5 : PrimRec 4 e0 : forall c c0 c1 c2 : nat, evalPrimRec 4 x5 c c0 c1 c2 = c1 x6 : PrimRec 4 H7 : forall c c0 c1 c2 : nat, evalPrimRec 4 x6 c c0 c1 c2 = c0 x7 : PrimRec 4 H13 : forall c c0 c1 c2 : nat, evalPrimRec 4 x7 c c0 c1 c2 = c2 x8 : PrimRec 1 H15 : forall c : nat, evalPrimRec 1 x8 c = Datatypes.S c x9 : PrimRec 4 H11 : forall c c0 c1 c2 : nat, evalPrimRec 4 x9 c c0 c1 c2 = c0 x10 : PrimRec 4 H18 : forall c c0 c1 c2 : nat, evalPrimRec 4 x10 c c0 c1 c2 = c2 x11 : PrimRec 4 H20 : forall c c0 c1 c2 : nat, evalPrimRec 4 x11 c c0 c1 c2 = c1 x12 : PrimRec 1 H21 : forall c : nat, evalPrimRec 1 x12 c = Datatypes.S c Unable to unify \"isPR 4 (fun a _ _ _ : nat => a)\" with \"S 3 (fun a _ _ : nat => g a)\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros g Hg.", "qsimpl time: 1 use: PrimRec_PrimRecs_ind,evalPrimRec,isPR.", "qsimpl time: 1 use: succIsPR,PrimRec_PrimRecs_ind,evalPrimRec,isPR.", "qsimpl time: 1 use: PrimRec_PrimRecs_ind,evalPrimRec,const1_NIsPR,succIsPR,isPR.", "destruct pi3_4IsPR.", "qsimpl time: 1 use: PrimRec_PrimRecs_ind,evalPrimRec,const1_NIsPR,pi4_4IsPR,succIsPR,isPR.", "destruct pi3_4IsPR.", "qsimpl time: 1 use: PrimRec_PrimRecs_ind,evalPrimRec,pi2_4IsPR,const1_NIsPR,pi4_4IsPR,succIsPR,isPR.", "qsimpl time: 1 use: PrimRec_PrimRecs_ind,evalPrimRec,pi2_4IsPR,const1_NIsPR,pi4_4IsPR,pi3_4IsPR,succIsPR,isPR.", "qsimpl time: 1 use: PrimRec_PrimRecs_ind,pi1_4IsPR,evalPrimRec,pi2_4IsPR,const1_NIsPR,pi4_4IsPR,pi3_4IsPR,succIsPR,isPR."], "tactic": "intros n' m' g' Hg' h' HiH.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros g Hg.", "qsimpl time: 1 use: PrimRec_PrimRecs_ind,evalPrimRec,isPR.", "qsimpl time: 1 use: succIsPR,PrimRec_PrimRecs_ind,evalPrimRec,isPR.", "qsimpl time: 1 use: PrimRec_PrimRecs_ind,evalPrimRec,const1_NIsPR,succIsPR,isPR.", "destruct pi3_4IsPR.", "qsimpl time: 1 use: PrimRec_PrimRecs_ind,evalPrimRec,const1_NIsPR,pi4_4IsPR,succIsPR,isPR.", "destruct pi3_4IsPR.", "qsimpl time: 1 use: PrimRec_PrimRecs_ind,evalPrimRec,pi2_4IsPR,const1_NIsPR,pi4_4IsPR,succIsPR,isPR.", "qsimpl time: 1 use: PrimRec_PrimRecs_ind,evalPrimRec,pi2_4IsPR,const1_NIsPR,pi4_4IsPR,pi3_4IsPR,succIsPR,isPR.", "qsimpl time: 1 use: PrimRec_PrimRecs_ind,pi1_4IsPR,evalPrimRec,pi2_4IsPR,const1_NIsPR,pi4_4IsPR,pi3_4IsPR,succIsPR,isPR."], "tactic": "apply filter10IsPR.", "exn": "In environment X4 : forall n : nat, naryFunc n -> Set H26 : forall n : nat, isPR 1 (fun _ : nat => n) H24 : forall n : nat, PrimRec n -> naryFunc n H22 : forall (P : forall n : nat, PrimRec n -> Prop) (P0 : forall n n0 : nat, PrimRecs n n0 -> Prop), P 1 succFunc -> P 0 zeroFunc -> (forall (n m : nat) (l : m < n), P n (projFunc n m l)) -> (forall (n m : nat) (g : PrimRecs n m), P0 n m g -> forall h : PrimRec m, P m h -> P n (composeFunc n m g h)) -> (forall (n : nat) (g : PrimRec n), P n g -> forall h : PrimRec (Datatypes.S (Datatypes.S n)), P (Datatypes.S (Datatypes.S n)) h -> P (Datatypes.S n) (primRecFunc n g h)) -> (forall n : nat, P0 n 0 (PRnil n)) -> (forall (n m : nat) (p : PrimRec n), P n p -> forall p0 : PrimRecs n m, P0 n m p0 -> P0 n (Datatypes.S m) (PRcons n m p p0)) -> forall (n : nat) (p : PrimRec n), P n p X3 : forall n : nat, naryFunc n -> Set H19 : forall n : nat, isPR 1 (fun _ : nat => n) H17 : forall n : nat, PrimRec n -> naryFunc n X2 : forall n : nat, naryFunc n -> Set H14 : forall n : nat, isPR 1 (fun _ : nat => n) H12 : forall n : nat, PrimRec n -> naryFunc n X1 : forall n : nat, naryFunc n -> Set H9 : forall n : nat, isPR 1 (fun _ : nat => n) H8 : forall n : nat, PrimRec n -> naryFunc n X0 : forall n : nat, naryFunc n -> Set H6 : forall n : nat, isPR 1 (fun _ : nat => n) H5 : forall n : nat, PrimRec n -> naryFunc n X : forall n : nat, naryFunc n -> Set H4 : forall n : nat, PrimRec n -> naryFunc n S : forall n : nat, naryFunc n -> Set H0 : forall n : nat, PrimRec n -> naryFunc n g : nat -> nat x : PrimRec 1 H1 : forall c : nat, evalPrimRec 1 x c = g c x0 : PrimRec 1 H : forall c : nat, evalPrimRec 1 x0 c = Datatypes.S c x1 : PrimRec 1 H3 : forall c : nat, evalPrimRec 1 x1 c = Datatypes.S c x2 : PrimRec 4 e : forall c c0 c1 c2 : nat, evalPrimRec 4 x2 c c0 c1 c2 = c1 x3 : PrimRec 4 H2 : forall c c0 c1 c2 : nat, evalPrimRec 4 x3 c c0 c1 c2 = c2 x4 : PrimRec 1 H10 : forall c : nat, evalPrimRec 1 x4 c = Datatypes.S c x5 : PrimRec 4 e0 : forall c c0 c1 c2 : nat, evalPrimRec 4 x5 c c0 c1 c2 = c1 x6 : PrimRec 4 H7 : forall c c0 c1 c2 : nat, evalPrimRec 4 x6 c c0 c1 c2 = c0 x7 : PrimRec 4 H13 : forall c c0 c1 c2 : nat, evalPrimRec 4 x7 c c0 c1 c2 = c2 x8 : PrimRec 1 H15 : forall c : nat, evalPrimRec 1 x8 c = Datatypes.S c x9 : PrimRec 4 H11 : forall c c0 c1 c2 : nat, evalPrimRec 4 x9 c c0 c1 c2 = c0 x10 : PrimRec 4 H18 : forall c c0 c1 c2 : nat, evalPrimRec 4 x10 c c0 c1 c2 = c2 x11 : PrimRec 4 H20 : forall c c0 c1 c2 : nat, evalPrimRec 4 x11 c c0 c1 c2 = c1 x12 : PrimRec 1 H21 : forall c : nat, evalPrimRec 1 x12 c = Datatypes.S c x13 : PrimRec 4 H16 : forall c c0 c1 c2 : nat, evalPrimRec 4 x13 c c0 c1 c2 = c x14 : PrimRec 4 H23 : forall c c0 c1 c2 : nat, evalPrimRec 4 x14 c c0 c1 c2 = c0 x15 : PrimRec 4 H25 : forall c c0 c1 c2 : nat, evalPrimRec 4 x15 c c0 c1 c2 = c2 x16 : PrimRec 4 H27 : forall c c0 c1 c2 : nat, evalPrimRec 4 x16 c c0 c1 c2 = c1 x17 : PrimRec 1 H28 : forall c : nat, evalPrimRec 1 x17 c = Datatypes.S c Unable to unify \"{p : PrimRec 2 | extEqual 2 (evalPrimRec 2 p) (fun a _ : nat => ?M30343 a)}\" with \"S 3 (fun a _ _ : nat => g a)\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros g Hg. apply (PrimRec_PrimRecs_ind (fun n p => isPR n (evalPrimRec n p))). - apply succIsPR. - apply const1_NIsPR. - intros n' m l. destruct m. * apply pi4_4IsPR. * destruct (lt_dec m 2). + destruct m. ++ apply pi2_4IsPR. ++ apply pi3_4IsPR. + apply pi1_4IsPR. - intros n' m' g' Hg' h' HiH. apply filter10IsPR. apply Hg'. - intros n' g' Hg' h' Hh'. apply filter01IsPR. apply Hg'. - intros n' g' h' Hg' Hh'. apply Hg'. - intros n. apply (PrimRec_PrimRecs_ind (fun n0 p => isPR n0 (evalPrimRecs n n0 p))). * apply idIsPR. * apply const1_NIsPR. * intros n0 m l. destruct m. + apply pi3_3IsPR. + destruct (lt_dec m 1). ++ apply pi2_3IsPR. ++ apply pi1_3IsPR. * intros n0 m g Hg0 h B _ _. apply B. * intros n0 g Hg0 h H H0. apply filter10IsPR. apply H0.", "back_times": 0, "succ": false, "time": 147.79999780654907}]