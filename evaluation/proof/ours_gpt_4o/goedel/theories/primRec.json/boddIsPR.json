[{"history": {"proof": "qsimpl time: 1 use: isPRrel. qsimpl time: 1 use: orRelPR,isPRrel. qsimpl time: 1 use: orRelPR,andRelPR,isPRrel. qsimpl time: 1 use: orRelPR,andRelPR,isPRrel. qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel. qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel. qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel. qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel. qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel. qsimpl time: 1 use: notRelPR,orRelPR,andRelPR,isPRrel,compose1_2IsPR. qsimpl time: 1 use: notRelPR,orRelPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR. qsimpl time: 1 use: notRelPR,orRelPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR. qsimpl time: 1 use: notRelPR,orRelPR,compose1_1IsPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR. qsimpl time: 1 use: notRelPR,orRelPR,compose1_1IsPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR. qsimpl time: 1 use: notRelPR,orRelPR,compose1_1IsPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR. qsimpl time: 1 use: notRelPR,orRelPR,compose1_1IsPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR. qsimpl time: 1 use: notRelPR,orRelPR,compose1_1IsPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR.", "repairs": ["wrong_type", "cannot_unify", "cannot_unify", "wrong_type", "cannot_unify", "not_inductive_product", "cannot_unify", "not_inductive_product", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "wrong_type", "cannot_unify", "cannot_unify", "cannot_unify", "wrong_type"], "exceptions": [{"ctx": [], "tactic": "assert (H: isPRrel 2 (fun a b => Nat.Odd (a + b))).", "exn": "In environment a : nat b : nat The term \"Nat.Odd (a + b)\" has type \"Prop\" while it is expected to have type \"bool\".", "type": "wrong_type", "handled": true}, {"ctx": ["qsimpl time: 1 use: isPRrel."], "tactic": "apply orRelPR with (R := fun a b => Nat.Even a /\\ Nat.Even b) (R' := fun a b => Nat.Odd a /\\ Nat.Odd b).", "exn": "In environment S : forall n : nat, naryRel n -> Set Unable to unify \"{p : PrimRec ?M1428 | extEqual ?M1428 (evalPrimRec ?M1428 p) (charFunction ?M1428 (orRel ?M1428 (fun a b : nat => Nat.Even a /\\\\ Nat.Even b) (fun a b : nat => Nat.Odd a /\\\\ Nat.Odd b)))}\" with \"S 1 bodd\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: isPRrel.", "qsimpl time: 1 use: orRelPR,isPRrel."], "tactic": "apply andRelPR.", "exn": "In environment X : forall n : nat, naryRel n -> Set H : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') S : forall n : nat, naryRel n -> Set Unable to unify \"{p : PrimRec ?M1540 | extEqual ?M1540 (evalPrimRec ?M1540 p) (charFunction ?M1540 (andRel ?M1540 ?M1541 ?M1542))}\" with \"S 1 bodd\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: isPRrel.", "qsimpl time: 1 use: orRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,andRelPR,isPRrel."], "tactic": "assert (Hp: isPRrel 1 (fun a => Nat.Odd a)).", "exn": "In environment X0 : forall n : nat, naryRel n -> Set H1 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H0 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X : forall n : nat, naryRel n -> Set H : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') S : forall n : nat, naryRel n -> Set a : nat The term \"Nat.Odd a\" has type \"Prop\" while it is expected to have type \"bool\".", "type": "wrong_type", "handled": true}, {"ctx": ["qsimpl time: 1 use: isPRrel.", "qsimpl time: 1 use: orRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,andRelPR,isPRrel."], "tactic": "apply notRelPR.", "exn": "In environment X1 : forall n : nat, naryRel n -> Set H3 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H2 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X0 : forall n : nat, naryRel n -> Set H1 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H0 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X : forall n : nat, naryRel n -> Set H : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') S : forall n : nat, naryRel n -> Set Unable to unify \"{p : PrimRec ?M2292 | extEqual ?M2292 (evalPrimRec ?M2292 p) (charFunction ?M2292 (notRel ?M2292 ?M2293))}\" with \"S 1 bodd\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: isPRrel.", "qsimpl time: 1 use: orRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel."], "tactic": "intros a.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["qsimpl time: 1 use: isPRrel.", "qsimpl time: 1 use: orRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel."], "tactic": "destruct (Nat.odd a) eqn:Ha.", "exn": "The reference a was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["qsimpl time: 1 use: isPRrel.", "qsimpl time: 1 use: orRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel."], "tactic": "exists 0.", "exn": "Not an inductive product.", "type": "not_inductive_product", "handled": true}, {"ctx": ["qsimpl time: 1 use: isPRrel.", "qsimpl time: 1 use: orRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel."], "tactic": "rewrite <- Ha.", "exn": "The reference Ha was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["qsimpl time: 1 use: isPRrel.", "qsimpl time: 1 use: orRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel."], "tactic": "apply Nat.Odd_succ.", "exn": "In environment X3 : forall n : nat, naryRel n -> Set H9 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H8 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H7 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X2 : forall n : nat, naryRel n -> Set H6 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H5 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H4 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X1 : forall n : nat, naryRel n -> Set H3 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H2 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X0 : forall n : nat, naryRel n -> Set H1 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H0 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X : forall n : nat, naryRel n -> Set H : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') S : forall n : nat, naryRel n -> Set Unable to unify \"(Nat.Odd (Datatypes.S ?M3892) -> Nat.Even ?M3892) /\\\\ (Nat.Even ?M3892 -> Nat.Odd (Datatypes.S ?M3892))\" with \"S 1 bodd\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: isPRrel.", "qsimpl time: 1 use: orRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel."], "tactic": "apply Nat.Odd_odd.", "exn": "The reference Nat.Odd_odd was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["qsimpl time: 1 use: isPRrel.", "qsimpl time: 1 use: orRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel."], "tactic": "exists 1.", "exn": "Not an inductive product.", "type": "not_inductive_product", "handled": true}, {"ctx": ["qsimpl time: 1 use: isPRrel.", "qsimpl time: 1 use: orRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel."], "tactic": "rewrite <- Ha.", "exn": "The reference Ha was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["qsimpl time: 1 use: isPRrel.", "qsimpl time: 1 use: orRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel."], "tactic": "apply Nat.Odd_succ.", "exn": "In environment X5 : forall n : nat, naryRel n -> Set H15 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H14 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H13 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X4 : forall n : nat, naryRel n -> Set H12 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H11 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H10 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X3 : forall n : nat, naryRel n -> Set H9 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H8 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H7 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X2 : forall n : nat, naryRel n -> Set H6 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H5 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H4 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X1 : forall n : nat, naryRel n -> Set H3 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H2 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X0 : forall n : nat, naryRel n -> Set H1 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H0 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X : forall n : nat, naryRel n -> Set H : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') S : forall n : nat, naryRel n -> Set Unable to unify \"(Nat.Odd (Datatypes.S ?M6388) -> Nat.Even ?M6388) /\\\\ (Nat.Even ?M6388 -> Nat.Odd (Datatypes.S ?M6388))\" with \"S 1 bodd\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: isPRrel.", "qsimpl time: 1 use: orRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel."], "tactic": "apply Nat.Even_even.", "exn": "The reference Nat.Even_even was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["qsimpl time: 1 use: isPRrel.", "qsimpl time: 1 use: orRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel."], "tactic": "apply compose1_2IsPR with (f := fun a b => a) (f' := fun a b => b).", "exn": "In environment X6 : forall n : nat, naryRel n -> Set H18 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H17 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H16 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X5 : forall n : nat, naryRel n -> Set H15 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H14 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H13 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X4 : forall n : nat, naryRel n -> Set H12 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H11 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H10 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X3 : forall n : nat, naryRel n -> Set H9 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H8 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H7 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X2 : forall n : nat, naryRel n -> Set H6 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H5 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H4 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X1 : forall n : nat, naryRel n -> Set H3 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H2 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X0 : forall n : nat, naryRel n -> Set H1 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H0 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X : forall n : nat, naryRel n -> Set H : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') S : forall n : nat, naryRel n -> Set Unable to unify \"{p : PrimRec 1 | extEqual 1 (evalPrimRec 1 p) (fun x : nat => ?M7976 (fun _ : ?T0@{a:=x} => x) (fun b : ?T2@{a:=x} => b))}\" with \"S 1 bodd\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: isPRrel.", "qsimpl time: 1 use: orRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: notRelPR,orRelPR,andRelPR,isPRrel,compose1_2IsPR."], "tactic": "apply pi3_3IsPR.", "exn": "In environment H22 : forall f : nat -> nat, isPR 1 f -> forall f' : nat -> nat, isPR 1 f' -> forall g : nat -> nat -> nat, isPR 2 g -> isPR 1 (fun x : nat => g (f x) (f' x)) X7 : forall n : nat, naryRel n -> Set H21 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H20 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') H19 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) X6 : forall n : nat, naryRel n -> Set H18 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H17 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H16 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X5 : forall n : nat, naryRel n -> Set H15 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H14 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H13 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X4 : forall n : nat, naryRel n -> Set H12 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H11 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H10 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X3 : forall n : nat, naryRel n -> Set H9 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H8 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H7 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X2 : forall n : nat, naryRel n -> Set H6 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H5 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H4 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X1 : forall n : nat, naryRel n -> Set H3 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H2 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X0 : forall n : nat, naryRel n -> Set H1 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H0 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X : forall n : nat, naryRel n -> Set H : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') S : forall n : nat, naryRel n -> Set Unable to unify \"isPR 3 (fun _ _ c : nat => c)\" with \"S 1 bodd\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: isPRrel.", "qsimpl time: 1 use: orRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: notRelPR,orRelPR,andRelPR,isPRrel,compose1_2IsPR.", "qsimpl time: 1 use: notRelPR,orRelPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR."], "tactic": "apply pi3_3IsPR.", "exn": "In environment H27 : forall f : nat -> nat, isPR 1 f -> forall f' : nat -> nat, isPR 1 f' -> forall g : nat -> nat -> nat, isPR 2 g -> isPR 1 (fun x : nat => g (f x) (f' x)) X8 : forall n : nat, naryRel n -> Set H26 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H24 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') H23 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H22 : forall f : nat -> nat, isPR 1 f -> forall f' : nat -> nat, isPR 1 f' -> forall g : nat -> nat -> nat, isPR 2 g -> isPR 1 (fun x : nat => g (f x) (f' x)) X7 : forall n : nat, naryRel n -> Set H21 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H20 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') H19 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) X6 : forall n : nat, naryRel n -> Set H18 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H17 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H16 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X5 : forall n : nat, naryRel n -> Set H15 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H14 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H13 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X4 : forall n : nat, naryRel n -> Set H12 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H11 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H10 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X3 : forall n : nat, naryRel n -> Set H9 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H8 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H7 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X2 : forall n : nat, naryRel n -> Set H6 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H5 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H4 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X1 : forall n : nat, naryRel n -> Set H3 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H2 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X0 : forall n : nat, naryRel n -> Set H1 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H0 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X : forall n : nat, naryRel n -> Set H : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') S : forall n : nat, naryRel n -> Set x : PrimRec 3 H28 : forall c c0 c1 : nat, evalPrimRec 3 x c c0 c1 = c1 Unable to unify \"isPR 3 (fun _ _ c : nat => c)\" with \"S 1 bodd\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: isPRrel.", "qsimpl time: 1 use: orRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: notRelPR,orRelPR,andRelPR,isPRrel,compose1_2IsPR.", "qsimpl time: 1 use: notRelPR,orRelPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR.", "qsimpl time: 1 use: notRelPR,orRelPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR."], "tactic": "apply compose1_1IsPR with (f := Nat.Odd).", "exn": "In environment H32 : forall f : nat -> nat, isPR 1 f -> forall f' : nat -> nat, isPR 1 f' -> forall g : nat -> nat -> nat, isPR 2 g -> isPR 1 (fun x : nat => g (f x) (f' x)) X9 : forall n : nat, naryRel n -> Set H31 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H29 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') H25 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H27 : forall f : nat -> nat, isPR 1 f -> forall f' : nat -> nat, isPR 1 f' -> forall g : nat -> nat -> nat, isPR 2 g -> isPR 1 (fun x : nat => g (f x) (f' x)) X8 : forall n : nat, naryRel n -> Set H26 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H24 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') H23 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H22 : forall f : nat -> nat, isPR 1 f -> forall f' : nat -> nat, isPR 1 f' -> forall g : nat -> nat -> nat, isPR 2 g -> isPR 1 (fun x : nat => g (f x) (f' x)) X7 : forall n : nat, naryRel n -> Set H21 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H20 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') H19 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) X6 : forall n : nat, naryRel n -> Set H18 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H17 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H16 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X5 : forall n : nat, naryRel n -> Set H15 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H14 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H13 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X4 : forall n : nat, naryRel n -> Set H12 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H11 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H10 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X3 : forall n : nat, naryRel n -> Set H9 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H8 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H7 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X2 : forall n : nat, naryRel n -> Set H6 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H5 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H4 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X1 : forall n : nat, naryRel n -> Set H3 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H2 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X0 : forall n : nat, naryRel n -> Set H1 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H0 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X : forall n : nat, naryRel n -> Set H : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') S : forall n : nat, naryRel n -> Set x : PrimRec 3 H28 : forall c c0 c1 : nat, evalPrimRec 3 x c c0 c1 = c1 x0 : PrimRec 3 H33 : forall c c0 c1 : nat, evalPrimRec 3 x0 c c0 c1 = c1 The term \"Nat.Odd\" has type \"nat -> Prop\" while it is expected to have type \"nat -> nat\" (cannot unify \"Prop\" and \"nat\").", "type": "wrong_type", "handled": true}, {"ctx": ["qsimpl time: 1 use: isPRrel.", "qsimpl time: 1 use: orRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: notRelPR,orRelPR,andRelPR,isPRrel,compose1_2IsPR.", "qsimpl time: 1 use: notRelPR,orRelPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR.", "qsimpl time: 1 use: notRelPR,orRelPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR.", "qsimpl time: 1 use: notRelPR,orRelPR,compose1_1IsPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR."], "tactic": "apply Hp.", "exn": "The reference Hp was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["qsimpl time: 1 use: isPRrel.", "qsimpl time: 1 use: orRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: notRelPR,orRelPR,andRelPR,isPRrel,compose1_2IsPR.", "qsimpl time: 1 use: notRelPR,orRelPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR.", "qsimpl time: 1 use: notRelPR,orRelPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR.", "qsimpl time: 1 use: notRelPR,orRelPR,compose1_1IsPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR."], "tactic": "apply Hp.", "exn": "The reference Hp was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["qsimpl time: 1 use: isPRrel.", "qsimpl time: 1 use: orRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: notRelPR,orRelPR,andRelPR,isPRrel,compose1_2IsPR.", "qsimpl time: 1 use: notRelPR,orRelPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR.", "qsimpl time: 1 use: notRelPR,orRelPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR.", "qsimpl time: 1 use: notRelPR,orRelPR,compose1_1IsPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR."], "tactic": "apply compose1_2IsPR with (f := fun a b => a) (f' := fun a b => b).", "exn": "In environment H38 : forall f : nat -> nat, isPR 1 f -> forall f' : nat -> nat, isPR 1 f' -> forall g : nat -> nat -> nat, isPR 2 g -> isPR 1 (fun x : nat => g (f x) (f' x)) X10 : forall n : nat, naryRel n -> Set H37 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H35 : forall f : nat -> nat, isPR 1 f -> forall g : nat -> nat, isPR 1 g -> isPR 1 (fun x : nat => g (f x)) H34 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') H30 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H32 : forall f : nat -> nat, isPR 1 f -> forall f' : nat -> nat, isPR 1 f' -> forall g : nat -> nat -> nat, isPR 2 g -> isPR 1 (fun x : nat => g (f x) (f' x)) X9 : forall n : nat, naryRel n -> Set H31 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H29 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') H25 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H27 : forall f : nat -> nat, isPR 1 f -> forall f' : nat -> nat, isPR 1 f' -> forall g : nat -> nat -> nat, isPR 2 g -> isPR 1 (fun x : nat => g (f x) (f' x)) X8 : forall n : nat, naryRel n -> Set H26 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H24 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') H23 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H22 : forall f : nat -> nat, isPR 1 f -> forall f' : nat -> nat, isPR 1 f' -> forall g : nat -> nat -> nat, isPR 2 g -> isPR 1 (fun x : nat => g (f x) (f' x)) X7 : forall n : nat, naryRel n -> Set H21 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H20 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') H19 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) X6 : forall n : nat, naryRel n -> Set H18 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H17 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H16 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X5 : forall n : nat, naryRel n -> Set H15 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H14 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H13 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X4 : forall n : nat, naryRel n -> Set H12 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H11 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H10 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X3 : forall n : nat, naryRel n -> Set H9 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H8 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H7 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X2 : forall n : nat, naryRel n -> Set H6 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H5 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H4 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X1 : forall n : nat, naryRel n -> Set H3 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H2 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X0 : forall n : nat, naryRel n -> Set H1 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H0 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X : forall n : nat, naryRel n -> Set H : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') S : forall n : nat, naryRel n -> Set x : PrimRec 3 H28 : forall c c0 c1 : nat, evalPrimRec 3 x c c0 c1 = c1 x0 : PrimRec 3 H33 : forall c c0 c1 : nat, evalPrimRec 3 x0 c c0 c1 = c1 x1 : PrimRec 3 H39 : forall c c0 c1 : nat, evalPrimRec 3 x1 c c0 c1 = c1 Unable to unify \"{p : PrimRec 1 | extEqual 1 (evalPrimRec 1 p) (fun x2 : nat => ?M24294 (fun _ : ?T0@{a:=x2} => x2) (fun b : ?T2@{a:=x2} => b))}\" with \"S 1 bodd\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: isPRrel.", "qsimpl time: 1 use: orRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: notRelPR,orRelPR,andRelPR,isPRrel,compose1_2IsPR.", "qsimpl time: 1 use: notRelPR,orRelPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR.", "qsimpl time: 1 use: notRelPR,orRelPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR.", "qsimpl time: 1 use: notRelPR,orRelPR,compose1_1IsPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR.", "qsimpl time: 1 use: notRelPR,orRelPR,compose1_1IsPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR."], "tactic": "apply pi3_3IsPR.", "exn": "In environment H44 : forall f : nat -> nat, isPR 1 f -> forall f' : nat -> nat, isPR 1 f' -> forall g : nat -> nat -> nat, isPR 2 g -> isPR 1 (fun x : nat => g (f x) (f' x)) X11 : forall n : nat, naryRel n -> Set H43 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H41 : forall f : nat -> nat, isPR 1 f -> forall g : nat -> nat, isPR 1 g -> isPR 1 (fun x : nat => g (f x)) H40 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') H36 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H38 : forall f : nat -> nat, isPR 1 f -> forall f' : nat -> nat, isPR 1 f' -> forall g : nat -> nat -> nat, isPR 2 g -> isPR 1 (fun x : nat => g (f x) (f' x)) X10 : forall n : nat, naryRel n -> Set H37 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H35 : forall f : nat -> nat, isPR 1 f -> forall g : nat -> nat, isPR 1 g -> isPR 1 (fun x : nat => g (f x)) H34 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') H30 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H32 : forall f : nat -> nat, isPR 1 f -> forall f' : nat -> nat, isPR 1 f' -> forall g : nat -> nat -> nat, isPR 2 g -> isPR 1 (fun x : nat => g (f x) (f' x)) X9 : forall n : nat, naryRel n -> Set H31 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H29 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') H25 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H27 : forall f : nat -> nat, isPR 1 f -> forall f' : nat -> nat, isPR 1 f' -> forall g : nat -> nat -> nat, isPR 2 g -> isPR 1 (fun x : nat => g (f x) (f' x)) X8 : forall n : nat, naryRel n -> Set H26 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H24 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') H23 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H22 : forall f : nat -> nat, isPR 1 f -> forall f' : nat -> nat, isPR 1 f' -> forall g : nat -> nat -> nat, isPR 2 g -> isPR 1 (fun x : nat => g (f x) (f' x)) X7 : forall n : nat, naryRel n -> Set H21 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H20 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') H19 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) X6 : forall n : nat, naryRel n -> Set H18 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H17 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H16 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X5 : forall n : nat, naryRel n -> Set H15 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H14 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H13 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X4 : forall n : nat, naryRel n -> Set H12 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H11 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H10 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X3 : forall n : nat, naryRel n -> Set H9 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H8 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H7 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X2 : forall n : nat, naryRel n -> Set H6 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H5 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H4 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X1 : forall n : nat, naryRel n -> Set H3 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H2 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X0 : forall n : nat, naryRel n -> Set H1 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H0 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X : forall n : nat, naryRel n -> Set H : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') S : forall n : nat, naryRel n -> Set x : PrimRec 3 H28 : forall c c0 c1 : nat, evalPrimRec 3 x c c0 c1 = c1 x0 : PrimRec 3 H33 : forall c c0 c1 : nat, evalPrimRec 3 x0 c c0 c1 = c1 x1 : PrimRec 3 H39 : forall c c0 c1 : nat, evalPrimRec 3 x1 c c0 c1 = c1 x2 : PrimRec 3 H45 : forall c c0 c1 : nat, evalPrimRec 3 x2 c c0 c1 = c1 Unable to unify \"isPR 3 (fun _ _ c : nat => c)\" with \"S 1 bodd\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: isPRrel.", "qsimpl time: 1 use: orRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: notRelPR,orRelPR,andRelPR,isPRrel,compose1_2IsPR.", "qsimpl time: 1 use: notRelPR,orRelPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR.", "qsimpl time: 1 use: notRelPR,orRelPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR.", "qsimpl time: 1 use: notRelPR,orRelPR,compose1_1IsPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR.", "qsimpl time: 1 use: notRelPR,orRelPR,compose1_1IsPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR.", "qsimpl time: 1 use: notRelPR,orRelPR,compose1_1IsPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR."], "tactic": "apply pi3_3IsPR.", "exn": "In environment H50 : forall f : nat -> nat, isPR 1 f -> forall f' : nat -> nat, isPR 1 f' -> forall g : nat -> nat -> nat, isPR 2 g -> isPR 1 (fun x : nat => g (f x) (f' x)) X12 : forall n : nat, naryRel n -> Set H49 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H47 : forall f : nat -> nat, isPR 1 f -> forall g : nat -> nat, isPR 1 g -> isPR 1 (fun x : nat => g (f x)) H46 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') H42 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H44 : forall f : nat -> nat, isPR 1 f -> forall f' : nat -> nat, isPR 1 f' -> forall g : nat -> nat -> nat, isPR 2 g -> isPR 1 (fun x : nat => g (f x) (f' x)) X11 : forall n : nat, naryRel n -> Set H43 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H41 : forall f : nat -> nat, isPR 1 f -> forall g : nat -> nat, isPR 1 g -> isPR 1 (fun x : nat => g (f x)) H40 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') H36 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H38 : forall f : nat -> nat, isPR 1 f -> forall f' : nat -> nat, isPR 1 f' -> forall g : nat -> nat -> nat, isPR 2 g -> isPR 1 (fun x : nat => g (f x) (f' x)) X10 : forall n : nat, naryRel n -> Set H37 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H35 : forall f : nat -> nat, isPR 1 f -> forall g : nat -> nat, isPR 1 g -> isPR 1 (fun x : nat => g (f x)) H34 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') H30 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H32 : forall f : nat -> nat, isPR 1 f -> forall f' : nat -> nat, isPR 1 f' -> forall g : nat -> nat -> nat, isPR 2 g -> isPR 1 (fun x : nat => g (f x) (f' x)) X9 : forall n : nat, naryRel n -> Set H31 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H29 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') H25 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H27 : forall f : nat -> nat, isPR 1 f -> forall f' : nat -> nat, isPR 1 f' -> forall g : nat -> nat -> nat, isPR 2 g -> isPR 1 (fun x : nat => g (f x) (f' x)) X8 : forall n : nat, naryRel n -> Set H26 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H24 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') H23 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H22 : forall f : nat -> nat, isPR 1 f -> forall f' : nat -> nat, isPR 1 f' -> forall g : nat -> nat -> nat, isPR 2 g -> isPR 1 (fun x : nat => g (f x) (f' x)) X7 : forall n : nat, naryRel n -> Set H21 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H20 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') H19 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) X6 : forall n : nat, naryRel n -> Set H18 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H17 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H16 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X5 : forall n : nat, naryRel n -> Set H15 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H14 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H13 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X4 : forall n : nat, naryRel n -> Set H12 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H11 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H10 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X3 : forall n : nat, naryRel n -> Set H9 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H8 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H7 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X2 : forall n : nat, naryRel n -> Set H6 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H5 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H4 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X1 : forall n : nat, naryRel n -> Set H3 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H2 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X0 : forall n : nat, naryRel n -> Set H1 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H0 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X : forall n : nat, naryRel n -> Set H : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') S : forall n : nat, naryRel n -> Set x : PrimRec 3 H28 : forall c c0 c1 : nat, evalPrimRec 3 x c c0 c1 = c1 x0 : PrimRec 3 H33 : forall c c0 c1 : nat, evalPrimRec 3 x0 c c0 c1 = c1 x1 : PrimRec 3 H39 : forall c c0 c1 : nat, evalPrimRec 3 x1 c c0 c1 = c1 x2 : PrimRec 3 H45 : forall c c0 c1 : nat, evalPrimRec 3 x2 c c0 c1 = c1 x3 : PrimRec 3 H51 : forall c c0 c1 : nat, evalPrimRec 3 x3 c c0 c1 = c1 Unable to unify \"isPR 3 (fun _ _ c : nat => c)\" with \"S 1 bodd\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl time: 1 use: isPRrel.", "qsimpl time: 1 use: orRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: notRelPR,orRelPR,andRelPR,isPRrel,compose1_2IsPR.", "qsimpl time: 1 use: notRelPR,orRelPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR.", "qsimpl time: 1 use: notRelPR,orRelPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR.", "qsimpl time: 1 use: notRelPR,orRelPR,compose1_1IsPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR.", "qsimpl time: 1 use: notRelPR,orRelPR,compose1_1IsPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR.", "qsimpl time: 1 use: notRelPR,orRelPR,compose1_1IsPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR.", "qsimpl time: 1 use: notRelPR,orRelPR,compose1_1IsPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR."], "tactic": "apply compose1_1IsPR with (f := Nat.Odd).", "exn": "In environment H56 : forall f : nat -> nat, isPR 1 f -> forall f' : nat -> nat, isPR 1 f' -> forall g : nat -> nat -> nat, isPR 2 g -> isPR 1 (fun x : nat => g (f x) (f' x)) X13 : forall n : nat, naryRel n -> Set H55 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H53 : forall f : nat -> nat, isPR 1 f -> forall g : nat -> nat, isPR 1 g -> isPR 1 (fun x : nat => g (f x)) H52 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') H48 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H50 : forall f : nat -> nat, isPR 1 f -> forall f' : nat -> nat, isPR 1 f' -> forall g : nat -> nat -> nat, isPR 2 g -> isPR 1 (fun x : nat => g (f x) (f' x)) X12 : forall n : nat, naryRel n -> Set H49 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H47 : forall f : nat -> nat, isPR 1 f -> forall g : nat -> nat, isPR 1 g -> isPR 1 (fun x : nat => g (f x)) H46 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') H42 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H44 : forall f : nat -> nat, isPR 1 f -> forall f' : nat -> nat, isPR 1 f' -> forall g : nat -> nat -> nat, isPR 2 g -> isPR 1 (fun x : nat => g (f x) (f' x)) X11 : forall n : nat, naryRel n -> Set H43 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H41 : forall f : nat -> nat, isPR 1 f -> forall g : nat -> nat, isPR 1 g -> isPR 1 (fun x : nat => g (f x)) H40 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') H36 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H38 : forall f : nat -> nat, isPR 1 f -> forall f' : nat -> nat, isPR 1 f' -> forall g : nat -> nat -> nat, isPR 2 g -> isPR 1 (fun x : nat => g (f x) (f' x)) X10 : forall n : nat, naryRel n -> Set H37 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H35 : forall f : nat -> nat, isPR 1 f -> forall g : nat -> nat, isPR 1 g -> isPR 1 (fun x : nat => g (f x)) H34 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') H30 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H32 : forall f : nat -> nat, isPR 1 f -> forall f' : nat -> nat, isPR 1 f' -> forall g : nat -> nat -> nat, isPR 2 g -> isPR 1 (fun x : nat => g (f x) (f' x)) X9 : forall n : nat, naryRel n -> Set H31 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H29 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') H25 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H27 : forall f : nat -> nat, isPR 1 f -> forall f' : nat -> nat, isPR 1 f' -> forall g : nat -> nat -> nat, isPR 2 g -> isPR 1 (fun x : nat => g (f x) (f' x)) X8 : forall n : nat, naryRel n -> Set H26 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H24 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') H23 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H22 : forall f : nat -> nat, isPR 1 f -> forall f' : nat -> nat, isPR 1 f' -> forall g : nat -> nat -> nat, isPR 2 g -> isPR 1 (fun x : nat => g (f x) (f' x)) X7 : forall n : nat, naryRel n -> Set H21 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H20 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') H19 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) X6 : forall n : nat, naryRel n -> Set H18 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H17 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H16 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X5 : forall n : nat, naryRel n -> Set H15 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H14 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H13 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X4 : forall n : nat, naryRel n -> Set H12 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H11 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H10 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X3 : forall n : nat, naryRel n -> Set H9 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H8 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H7 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X2 : forall n : nat, naryRel n -> Set H6 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H5 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H4 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X1 : forall n : nat, naryRel n -> Set H3 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H2 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X0 : forall n : nat, naryRel n -> Set H1 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H0 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X : forall n : nat, naryRel n -> Set H : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') S : forall n : nat, naryRel n -> Set x : PrimRec 3 H28 : forall c c0 c1 : nat, evalPrimRec 3 x c c0 c1 = c1 x0 : PrimRec 3 H33 : forall c c0 c1 : nat, evalPrimRec 3 x0 c c0 c1 = c1 x1 : PrimRec 3 H39 : forall c c0 c1 : nat, evalPrimRec 3 x1 c c0 c1 = c1 x2 : PrimRec 3 H45 : forall c c0 c1 : nat, evalPrimRec 3 x2 c c0 c1 = c1 x3 : PrimRec 3 H51 : forall c c0 c1 : nat, evalPrimRec 3 x3 c c0 c1 = c1 x4 : PrimRec 3 H57 : forall c c0 c1 : nat, evalPrimRec 3 x4 c c0 c1 = c1 The term \"Nat.Odd\" has type \"nat -> Prop\" while it is expected to have type \"nat -> nat\" (cannot unify \"Prop\" and \"nat\").", "type": "wrong_type", "handled": true}, {"ctx": ["qsimpl time: 1 use: isPRrel.", "qsimpl time: 1 use: orRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: notRelPR,orRelPR,andRelPR,isPRrel,compose1_2IsPR.", "qsimpl time: 1 use: notRelPR,orRelPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR.", "qsimpl time: 1 use: notRelPR,orRelPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR.", "qsimpl time: 1 use: notRelPR,orRelPR,compose1_1IsPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR.", "qsimpl time: 1 use: notRelPR,orRelPR,compose1_1IsPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR.", "qsimpl time: 1 use: notRelPR,orRelPR,compose1_1IsPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR.", "qsimpl time: 1 use: notRelPR,orRelPR,compose1_1IsPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR.", "qsimpl time: 1 use: notRelPR,orRelPR,compose1_1IsPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR."], "tactic": "apply Hp.", "exn": "The reference Hp was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["qsimpl time: 1 use: isPRrel.", "qsimpl time: 1 use: orRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: notRelPR,orRelPR,andRelPR,isPRrel,compose1_2IsPR.", "qsimpl time: 1 use: notRelPR,orRelPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR.", "qsimpl time: 1 use: notRelPR,orRelPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR.", "qsimpl time: 1 use: notRelPR,orRelPR,compose1_1IsPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR.", "qsimpl time: 1 use: notRelPR,orRelPR,compose1_1IsPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR.", "qsimpl time: 1 use: notRelPR,orRelPR,compose1_1IsPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR.", "qsimpl time: 1 use: notRelPR,orRelPR,compose1_1IsPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR.", "qsimpl time: 1 use: notRelPR,orRelPR,compose1_1IsPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR."], "tactic": "apply Hp.", "exn": "The reference Hp was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["qsimpl time: 1 use: isPRrel.", "qsimpl time: 1 use: orRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: orRelPR,notRelPR,andRelPR,isPRrel.", "qsimpl time: 1 use: notRelPR,orRelPR,andRelPR,isPRrel,compose1_2IsPR.", "qsimpl time: 1 use: notRelPR,orRelPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR.", "qsimpl time: 1 use: notRelPR,orRelPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR.", "qsimpl time: 1 use: notRelPR,orRelPR,compose1_1IsPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR.", "qsimpl time: 1 use: notRelPR,orRelPR,compose1_1IsPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR.", "qsimpl time: 1 use: notRelPR,orRelPR,compose1_1IsPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR.", "qsimpl time: 1 use: notRelPR,orRelPR,compose1_1IsPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR.", "qsimpl time: 1 use: notRelPR,orRelPR,compose1_1IsPR,pi3_3IsPR,andRelPR,isPRrel,compose1_2IsPR."], "tactic": "apply andRelPR.", "exn": "In environment H62 : forall f : nat -> nat, isPR 1 f -> forall f' : nat -> nat, isPR 1 f' -> forall g : nat -> nat -> nat, isPR 2 g -> isPR 1 (fun x : nat => g (f x) (f' x)) X14 : forall n : nat, naryRel n -> Set H61 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H59 : forall f : nat -> nat, isPR 1 f -> forall g : nat -> nat, isPR 1 g -> isPR 1 (fun x : nat => g (f x)) H58 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') H54 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H56 : forall f : nat -> nat, isPR 1 f -> forall f' : nat -> nat, isPR 1 f' -> forall g : nat -> nat -> nat, isPR 2 g -> isPR 1 (fun x : nat => g (f x) (f' x)) X13 : forall n : nat, naryRel n -> Set H55 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H53 : forall f : nat -> nat, isPR 1 f -> forall g : nat -> nat, isPR 1 g -> isPR 1 (fun x : nat => g (f x)) H52 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') H48 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H50 : forall f : nat -> nat, isPR 1 f -> forall f' : nat -> nat, isPR 1 f' -> forall g : nat -> nat -> nat, isPR 2 g -> isPR 1 (fun x : nat => g (f x) (f' x)) X12 : forall n : nat, naryRel n -> Set H49 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H47 : forall f : nat -> nat, isPR 1 f -> forall g : nat -> nat, isPR 1 g -> isPR 1 (fun x : nat => g (f x)) H46 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') H42 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H44 : forall f : nat -> nat, isPR 1 f -> forall f' : nat -> nat, isPR 1 f' -> forall g : nat -> nat -> nat, isPR 2 g -> isPR 1 (fun x : nat => g (f x) (f' x)) X11 : forall n : nat, naryRel n -> Set H43 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H41 : forall f : nat -> nat, isPR 1 f -> forall g : nat -> nat, isPR 1 g -> isPR 1 (fun x : nat => g (f x)) H40 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') H36 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H38 : forall f : nat -> nat, isPR 1 f -> forall f' : nat -> nat, isPR 1 f' -> forall g : nat -> nat -> nat, isPR 2 g -> isPR 1 (fun x : nat => g (f x) (f' x)) X10 : forall n : nat, naryRel n -> Set H37 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H35 : forall f : nat -> nat, isPR 1 f -> forall g : nat -> nat, isPR 1 g -> isPR 1 (fun x : nat => g (f x)) H34 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') H30 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H32 : forall f : nat -> nat, isPR 1 f -> forall f' : nat -> nat, isPR 1 f' -> forall g : nat -> nat -> nat, isPR 2 g -> isPR 1 (fun x : nat => g (f x) (f' x)) X9 : forall n : nat, naryRel n -> Set H31 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H29 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') H25 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H27 : forall f : nat -> nat, isPR 1 f -> forall f' : nat -> nat, isPR 1 f' -> forall g : nat -> nat -> nat, isPR 2 g -> isPR 1 (fun x : nat => g (f x) (f' x)) X8 : forall n : nat, naryRel n -> Set H26 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H24 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') H23 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H22 : forall f : nat -> nat, isPR 1 f -> forall f' : nat -> nat, isPR 1 f' -> forall g : nat -> nat -> nat, isPR 2 g -> isPR 1 (fun x : nat => g (f x) (f' x)) X7 : forall n : nat, naryRel n -> Set H21 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H20 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') H19 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) X6 : forall n : nat, naryRel n -> Set H18 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H17 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H16 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X5 : forall n : nat, naryRel n -> Set H15 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H14 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H13 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X4 : forall n : nat, naryRel n -> Set H12 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H11 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H10 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X3 : forall n : nat, naryRel n -> Set H9 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H8 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H7 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X2 : forall n : nat, naryRel n -> Set H6 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H5 : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R) H4 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X1 : forall n : nat, naryRel n -> Set H3 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H2 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X0 : forall n : nat, naryRel n -> Set H1 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') H0 : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') X : forall n : nat, naryRel n -> Set H : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R') S : forall n : nat, naryRel n -> Set x : PrimRec 3 H28 : forall c c0 c1 : nat, evalPrimRec 3 x c c0 c1 = c1 x0 : PrimRec 3 H33 : forall c c0 c1 : nat, evalPrimRec 3 x0 c c0 c1 = c1 x1 : PrimRec 3 H39 : forall c c0 c1 : nat, evalPrimRec 3 x1 c c0 c1 = c1 x2 : PrimRec 3 H45 : forall c c0 c1 : nat, evalPrimRec 3 x2 c c0 c1 = c1 x3 : PrimRec 3 H51 : forall c c0 c1 : nat, evalPrimRec 3 x3 c c0 c1 = c1 x4 : PrimRec 3 H57 : forall c c0 c1 : nat, evalPrimRec 3 x4 c c0 c1 = c1 x5 : PrimRec 3 H63 : forall c c0 c1 : nat, evalPrimRec 3 x5 c c0 c1 = c1 Unable to unify \"{p : PrimRec ?M57356 | extEqual ?M57356 (evalPrimRec ?M57356 p) (charFunction ?M57356 (andRel ?M57356 ?M57357 ?M57358))}\" with \"S 1 bodd\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "assert (H: isPRrel 2 (fun a b => Nat.Odd (a + b))). - apply orRelPR with (R := fun a b => Nat.Even a /\\ Nat.Even b) (R' := fun a b => Nat.Odd a /\\ Nat.Odd b). -- apply andRelPR. ++ assert (Hp: isPRrel 1 (fun a => Nat.Odd a)). { apply notRelPR. intros a. destruct (Nat.odd a) eqn:Ha. - exists 0. rewrite <- Ha. apply Nat.Odd_succ. apply Nat.Odd_odd. - exists 1. rewrite <- Ha. apply Nat.Odd_succ. apply Nat.Even_even. } apply compose1_2IsPR with (f := fun a b => a) (f' := fun a b => b). apply pi3_3IsPR. apply pi3_3IsPR. apply compose1_1IsPR with (f := Nat.Odd). apply Hp. apply Hp. ++ apply compose1_2IsPR with (f := fun a b => a) (f' := fun a b => b). apply pi3_3IsPR. apply pi3_3IsPR. apply compose1_1IsPR with (f := Nat.Odd). apply Hp. apply Hp. -- apply andRelPR. ++ assert (Hp: isPRrel 1 (fun a => Nat.Even a)). { apply notRelPR. intros a. destruct (Nat.even a) eqn:Ha. - exists 0. rewrite <- Ha. apply Nat.Even_succ. apply Nat.Odd_odd. - exists 1. rewrite <- Ha. apply Nat.Even_succ. apply Nat.Even_even. } apply compose1_2IsPR with (f := fun a b => a) (f' := fun a b => b). apply pi3_3IsPR. apply pi3_3IsPR. apply compose1_1IsPR with (f := Nat.Even). apply Hp. apply Hp. ++ apply compose1_2IsPR with (f := fun a b => a) (f' := fun a b => b). apply pi3_3IsPR. apply pi3_3IsPR. apply compose1_1IsPR with (f := Nat.Even). apply Hp. apply Hp. apply compose1_1IsPR with (f := Nat.pred). -- apply predIsPR. -- apply compose1_2IsPR with (f := fun a => a) (f' := fun a => 1) (g := fun a b => Nat.Odd (a + b)). ++ apply pi3_3IsPR. ++ apply idIsPR. ++ apply idIsPR. ++ apply H.", "back_times": 0, "succ": false, "time": 72.06324744224548}]