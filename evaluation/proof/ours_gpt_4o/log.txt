zorns-lemma/Quotients.json well_defined_induced1
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 119, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 294, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 331, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: sfirstorder failed

zorns-lemma/CSB.json CSB_comp2
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 119, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 294, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 331, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal.

fundamental-arithmetics/permutation.json in_insertion
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 119, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 294, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 331, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet +.

weak-up-to/Relations.json star_plus_plus
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 305, in back
    bullets_cur = self.history.get_structure(self.history.cur)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 342, in focus
    for nd in self.history[self.history.cur + 1 : ind]:
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet *.

buchberger/Pminus.json minusP_inv2
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 248, in prove
    self.execute_and_update(self.next_indicator())
                            ^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 150, in next_indicator
    raise 'next_indicator error'
TypeError: exceptions must derive from BaseException

buchberger/Monomials.json mdiv_trans
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 229, in prove
    state_id, exn = self.execute_and_update(t, source)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 185, in execute_and_update
    state_ids, response, exn = self.serapi.try_add_and_execute(tactic, timeout=1 if tactic.startswith('qsimpl') else -1)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 423, in try_add_and_execute
    self.ctr_c()
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 126, in ctr_c
    self.proc.expect(['\(Answer \d+ Ack\)\x00.*\(Answer \d+ Completed\)\x00',
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/pexpect/spawnbase.py", line 354, in expect
    return self.expect_list(compiled_pattern_list,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/pexpect/spawnbase.py", line 383, in expect_list
    return exp.expect_loop(timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/pexpect/expect.py", line 181, in expect_loop
    return self.timeout(e)
           ^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/pexpect/expect.py", line 144, in timeout
    raise exc
pexpect.exceptions.TIMEOUT: <pexpect.popen_spawn.PopenSpawn object at 0x7fcaa4730210>
searcher: searcher_re:
    0: re.compile('\\(Answer \\d+ Ack\\)\x00.*\\(Answer \\d+ Completed\\)\x00')
    1: re.compile('\\(Answer \\d+ Ack\\)\x00.*\\(Answer \\d+\\(CoqExn.*\\)\x00')
<pexpect.popen_spawn.PopenSpawn object at 0x7fcaa4730210>
searcher: searcher_re:
    0: re.compile('\\(Answer \\d+ Ack\\)\x00.*\\(Answer \\d+ Completed\\)\x00')
    1: re.compile('\\(Answer \\d+ Ack\\)\x00.*\\(Answer \\d+\\(CoqExn.*\\)\x00')

jordan-curve-theorem/Jordan3.json eqc_cA_1_eqc
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet -.

dblib/src/DeBruijn.json lift_lift_reversed
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/DemoLambda.json lift_TAbs
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/DemoLambda.json subst_TVar
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/DemoLambda.json subst_TAbs
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/DemoLambda.json red_weakening
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/DemoLambda.json inversion_closed_TAbs
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/DeBruijn.json lift_lift_reversed
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/DeBruijn.json traverse_extensional
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/DeBruijn.json LiftInjective_idx
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/DeBruijn.json LiftLift_idx
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/DeBruijn.json LiftLiftFuse_idx
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/DemoExplicitSystemF.json term_weakening
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/DemoExplicitSystemF.json type_weakening
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/DemoExplicitSystemF.json term_substitution
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/DemoExplicitSystemF.json type_substitution
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/DemoExplicitSystemF.json type_preservation
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/DemoImplicitSystemF.json TraverseVarInjective_term
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/DemoImplicitSystemF.json TraverseFunctorial_term
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/DemoImplicitSystemF.json TraverseRelative_term
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/DemoImplicitSystemF.json TraverseVarIsIdentity_term
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/DemoImplicitSystemF.json TraverseVarInjective_ty
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/DemoValueTerm.json TraverseVarInjective_my_value_my_value
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/DemoValueTerm.json TraverseVarInjective_my_value_my_term
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/DemoValueTerm.json TraverseFunctorial_my_value_my_value
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/DemoValueTerm.json TraverseFunctorial_my_term_my_term
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/DemoValueTerm.json TraverseRelative_my_value_my_value
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/Environments.json lookup_insert_bingo
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/Environments.json lookup_shift_insert
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/Environments.json lookup_map_none
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/Environments.json lookup_map_some
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/Environments.json insert_insert
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

disel/Core/Domain.json sub_supM
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: sfirstorder failed

disel/Examples/TwoPhaseCommit/TwoPhaseProtocol.json this_not_pts
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: sfirstorder failed

disel/Examples/TwoPhaseCommit/TwoPhaseProtocol.json pn_safe_in
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: sauto failed

disel/Examples/Querying/QueryHooked.json prEqC
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 277, in back
    succ = self.prove_with_hammer(strict=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 326, in prove_with_hammer
    state_id, exn = self.automation('hammer')
                    ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 87, in automation
    succ, res = self.serapi.solve(tactic)
                ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 492, in solve
    succ, responses = self.add_and_execute_once(tactic)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 437, in add_and_execute_once
    responses = self.execute(state_ids[-1], timeout=timeout)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 145, in send
    assert int(num) == ack_num
           ^^^^^^^^^^^^^^^^^^^
AssertionError

disel/Examples/Querying/QueryHooked.json send_lc_all_cases
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

disel/Examples/Querying/QueryHooked.json recv_lq_case1
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

disel/Examples/Querying/QueryHooked.json recv_lq_case2
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

disel/Examples/TwoPhaseCommit/TwoPhaseProtocol.json this_not_pts
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: sfirstorder failed

disel/Core/Domain.json sub_supM
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: sfirstorder failed

disel/Examples/TwoPhaseCommit/TwoPhaseProtocol.json pn_safe_in
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: sauto failed

disel/Examples/Querying/QueryHooked.json prEqC
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 277, in back
    succ = self.prove_with_hammer(strict=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 326, in prove_with_hammer
    state_id, exn = self.automation('hammer')
                    ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 87, in automation
    succ, res = self.serapi.solve(tactic)
                ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 492, in solve
    succ, responses = self.add_and_execute_once(tactic)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 437, in add_and_execute_once
    responses = self.execute(state_ids[-1], timeout=timeout)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 145, in send
    assert int(num) == ack_num
           ^^^^^^^^^^^^^^^^^^^
AssertionError

disel/Examples/Querying/QueryHooked.json send_lc_all_cases
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

disel/Examples/Querying/QueryHooked.json recv_lq_case1
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

disel/Examples/Querying/QueryHooked.json recv_lq_case2
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

disel/Examples/Querying/QueryHooked.json recv_lq_case3
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/DemoLambda.json lift_TAbs
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/DemoLambda.json subst_TVar
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/DemoLambda.json subst_TAbs
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/DemoLambda.json red_weakening
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/DemoLambda.json inversion_closed_TAbs
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/DeBruijn.json lift_lift_reversed
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/DeBruijn.json traverse_extensional
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/DeBruijn.json LiftInjective_idx
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/DeBruijn.json LiftLift_idx
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/DeBruijn.json LiftLiftFuse_idx
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/DemoExplicitSystemF.json term_weakening
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/DemoExplicitSystemF.json type_weakening
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/DemoExplicitSystemF.json term_substitution
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/DemoExplicitSystemF.json type_substitution
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/DemoExplicitSystemF.json type_preservation
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/DemoImplicitSystemF.json TraverseVarInjective_term
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/DemoImplicitSystemF.json TraverseFunctorial_term
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/DemoImplicitSystemF.json TraverseRelative_term
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/DemoImplicitSystemF.json TraverseVarIsIdentity_term
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/DemoImplicitSystemF.json TraverseVarInjective_ty
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/DemoValueTerm.json TraverseVarInjective_my_value_my_value
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/DemoValueTerm.json TraverseVarInjective_my_value_my_term
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/DemoValueTerm.json TraverseFunctorial_my_value_my_value
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/DemoValueTerm.json TraverseFunctorial_my_term_my_term
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/DemoValueTerm.json TraverseRelative_my_value_my_value
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/Environments.json lookup_insert_bingo
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/Environments.json lookup_shift_insert
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/Environments.json lookup_map_none
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/Environments.json lookup_map_some
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

dblib/src/Environments.json insert_insert
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

zfc/zfc.json EQ_sym
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 277, in back
    succ = self.prove_with_hammer(strict=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 326, in prove_with_hammer
    state_id, exn = self.automation('hammer')
                    ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 87, in automation
    succ, res = self.serapi.solve(tactic)
                ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 492, in solve
    succ, responses = self.add_and_execute_once(tactic)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 437, in add_and_execute_once
    responses = self.execute(state_ids[-1], timeout=timeout)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 145, in send
    assert int(num) == ack_num
           ^^^^^^^^^^^^^^^^^^^
AssertionError

zfc/Constructive.json EQC_tran
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 277, in back
    succ = self.prove_with_hammer(strict=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 326, in prove_with_hammer
    state_id, exn = self.automation('hammer')
                    ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 87, in automation
    succ, res = self.serapi.solve(tactic)
                ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 492, in solve
    succ, responses = self.add_and_execute_once(tactic)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 437, in add_and_execute_once
    responses = self.execute(state_ids[-1], timeout=timeout)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 145, in send
    assert int(num) == ack_num
           ^^^^^^^^^^^^^^^^^^^
AssertionError

zfc/Constructive.json EQC_INC
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 277, in back
    succ = self.prove_with_hammer(strict=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 326, in prove_with_hammer
    state_id, exn = self.automation('hammer')
                    ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 87, in automation
    succ, res = self.serapi.solve(tactic)
                ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 492, in solve
    succ, responses = self.add_and_execute_once(tactic)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 437, in add_and_execute_once
    responses = self.execute(state_ids[-1], timeout=timeout)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 145, in send
    assert int(num) == ack_num
           ^^^^^^^^^^^^^^^^^^^
AssertionError

zfc/Ordinal_theory.json Vee_sound
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 277, in back
    succ = self.prove_with_hammer(strict=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 326, in prove_with_hammer
    state_id, exn = self.automation('hammer')
                    ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 87, in automation
    succ, res = self.serapi.solve(tactic)
                ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 492, in solve
    succ, responses = self.add_and_execute_once(tactic)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 437, in add_and_execute_once
    responses = self.execute(state_ids[-1], timeout=timeout)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 145, in send
    assert int(num) == ack_num
           ^^^^^^^^^^^^^^^^^^^
AssertionError

dep-map/DepMapFactsImplementation.json map_None
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet -.

chinese/Zmult.json tech_div5
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal.

hoare-tut/hoarelogic.json exec_Iif_true
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

hoare-tut/hoarelogic.json exec_Iif_false
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

hoare-tut/hoarelogic.json wp_entails_wlp
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

hoare-tut/totalhoarelogic.json synt_wp_monotonic
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

hoare-tut/totalhoarelogic.json exec_inversion
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

hoare-tut/totalhoarelogic.json exec_test_inversion
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

hoare-tut/totalhoarelogic.json exec_deterministic
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

hoare-tut/totalhoarelogic.json exec_execn
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

hoare-tut/exgcd.json Zgcd_minus
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

hoare-tut/exgcd.json Zneq_bool_false
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

hoare-tut/exgcd.json Zneq_bool_true
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

hoare-tut/exgcd.json gcd_partial_proof
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

hoare-tut/exgcd.json gcd_total_proof
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

UnifySL/PropositionalLogic/Complete/Canonical_Kripke.json classical_canonical_ident
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: sauto failed

UnifySL/PropositionalLogic/Complete/Lindenbaum_Kripke.json Lindenbaum_for_consistent
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: Wrong bullet *: Expecting +.

jordan-curve-theorem/Jordan3.json planar_V
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 135, in send
    self.proc.expect(['\(Answer \d+ Ack\)\x00.*\(Answer \d+ Completed\)\x00',
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/pexpect/spawnbase.py", line 354, in expect
    return self.expect_list(compiled_pattern_list,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/pexpect/spawnbase.py", line 383, in expect_list
    return exp.expect_loop(timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/pexpect/expect.py", line 181, in expect_loop
    return self.timeout(e)
           ^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/pexpect/expect.py", line 144, in timeout
    raise exc
pexpect.exceptions.TIMEOUT: <pexpect.popen_spawn.PopenSpawn object at 0x7fc854e95550>
searcher: searcher_re:
    0: re.compile('\\(Answer \\d+ Ack\\)\x00.*\\(Answer \\d+ Completed\\)\x00')
    1: re.compile('\\(Answer \\d+ Ack\\)\x00.*\\(Answer \\d+\\(CoqExn.*\\)\x00')
<pexpect.popen_spawn.PopenSpawn object at 0x7fc854e95550>
searcher: searcher_re:
    0: re.compile('\\(Answer \\d+ Ack\\)\x00.*\\(Answer \\d+ Completed\\)\x00')
    1: re.compile('\\(Answer \\d+ Ack\\)\x00.*\\(Answer \\d+\\(CoqExn.*\\)\x00')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 229, in prove
    state_id, exn = self.execute_and_update(t, source)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 190, in execute_and_update
    fg_goals, bg_goals, shelved_goals = self.serapi.query_all_goals_pretty()
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 324, in query_all_goals_pretty
    fg_goals, bg_goals, shelved_goals, _ = self.query_goals()
                                           ^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 285, in query_goals
    responses, _ = self.send('(Query () Goals)')
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 139, in send
    raise CoqTimeout
src.serapi.CoqTimeout: CoqTimeout

UnifySL/lib/Coqlib.json Forall_app_iff
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet --.

UnifySL/lib/Ensembles_ext.json Intersection_Union_distr_l
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet -.

UnifySL/lib/Stream/SigStream.json at_most_n_stream_or_at_least_n_stream
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet -.

jordan-curve-theorem/Jordan2.json eqs_orb
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 277, in back
    succ = self.prove_with_hammer(strict=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 326, in prove_with_hammer
    state_id, exn = self.automation('hammer')
                    ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 87, in automation
    succ, res = self.serapi.solve(tactic)
                ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 492, in solve
    succ, responses = self.add_and_execute_once(tactic)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 437, in add_and_execute_once
    responses = self.execute(state_ids[-1], timeout=timeout)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 145, in send
    assert int(num) == ack_num
           ^^^^^^^^^^^^^^^^^^^
AssertionError

UnifySL/PropositionalLogic/Complete/Canonical_Kripke.json classical_canonical_ident
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: sauto failed

UnifySL/PropositionalLogic/Complete/Lindenbaum_Kripke.json Lindenbaum_for_consistent
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: Wrong bullet *: Expecting +.

UnifySL/lib/Coqlib.json Forall_app_iff
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet --.

UnifySL/lib/Ensembles_ext.json Intersection_Union_distr_l
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet -.

UnifySL/lib/Stream/SigStream.json at_most_n_stream_or_at_least_n_stream
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet -.

jordan-curve-theorem/Jordan2.json eqs_orb
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 277, in back
    succ = self.prove_with_hammer(strict=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 326, in prove_with_hammer
    state_id, exn = self.automation('hammer')
                    ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 87, in automation
    succ, res = self.serapi.solve(tactic)
                ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 492, in solve
    succ, responses = self.add_and_execute_once(tactic)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 437, in add_and_execute_once
    responses = self.execute(state_ids[-1], timeout=timeout)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 145, in send
    assert int(num) == ack_num
           ^^^^^^^^^^^^^^^^^^^
AssertionError

tree-automata/non_coacc_kill.json predta_kill_non_coacc_lazy_semantics
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet -.

UnifySL/SeparationLogic/DeepEmbedded/FlatSemantics.json kpSM
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

UnifySL/SeparationLogic/DeepEmbedded/ParametricCompleteness.json AL_DC
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

UnifySL/SeparationLogic/DeepEmbedded/ParametricCompleteness.json AL_OW
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

UnifySL/SeparationLogic/DeepEmbedded/ParametricCompleteness.json AL_CONSI
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

UnifySL/SeparationLogic/DeepEmbedded/ParametricCompleteness.json LIN_CD
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

UnifySL/SeparationLogic/DeepEmbedded/ParametricCompleteness.json LIN_SL
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

tree-automata/union.json u_conv_1_invar_8
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet -.

tree-automata/union.json u_conv1_5
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet -.

tree-automata/union.json union_pl_r_0
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet -.

tree-automata/union.json union_s0d_1
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet -.

UnifySL/GeneralLogic/Complete/Lindenbaum.json Lindenbaum_constructable_Same_set
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet -.

tree-automata/coacc_test.json predta_coacc_contain_coacc_ads_3
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet -.

jordan-curve-theorem/Jordan2.json eqs_orb
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 277, in back
    succ = self.prove_with_hammer(strict=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 326, in prove_with_hammer
    state_id, exn = self.automation('hammer')
                    ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 87, in automation
    succ, res = self.serapi.solve(tactic)
                ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 492, in solve
    succ, responses = self.add_and_execute_once(tactic)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 437, in add_and_execute_once
    responses = self.execute(state_ids[-1], timeout=timeout)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 145, in send
    assert int(num) == ack_num
           ^^^^^^^^^^^^^^^^^^^
AssertionError

UnifySL/PropositionalLogic/Complete/Canonical_Kripke.json classical_canonical_ident
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: sauto failed

tree-automata/empty_test.json dta_app_ne_inc_1
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet -.

UnifySL/PropositionalLogic/Complete/Lindenbaum_Kripke.json Lindenbaum_for_consistent
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: Wrong bullet *: Expecting +.

UnifySL/lib/Coqlib.json Forall_app_iff
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet --.

UnifySL/lib/Ensembles_ext.json Intersection_Union_distr_l
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet -.

UnifySL/lib/Stream/SigStream.json at_most_n_stream_or_at_least_n_stream
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet -.

UnifySL/SeparationLogic/DeepEmbedded/FlatSemantics.json kpSM
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

UnifySL/SeparationLogic/DeepEmbedded/ParametricCompleteness.json AL_DC
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

UnifySL/SeparationLogic/DeepEmbedded/ParametricCompleteness.json AL_OW
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

UnifySL/SeparationLogic/DeepEmbedded/ParametricCompleteness.json AL_CONSI
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

UnifySL/SeparationLogic/DeepEmbedded/ParametricCompleteness.json LIN_CD
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

UnifySL/SeparationLogic/DeepEmbedded/ParametricCompleteness.json LIN_SL
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

UnifySL/GeneralLogic/Complete/Lindenbaum.json Lindenbaum_constructable_Same_set
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet -.

tree-automata/semantics.json invar_2_2
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 132, in prove_file
    serapi.add_and_execute('Set Hammer ATPLimit 20.')
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet +.

coq-library-undecidability/theories/HOU/std/enumerable.json T_prod_cum
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 136, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal.

jordan-curve-theorem/Jordan2.json eqs_orb
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 136, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 277, in back
    succ = self.prove_with_hammer(strict=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 326, in prove_with_hammer
    state_id, exn = self.automation('hammer')
                    ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 87, in automation
    succ, res = self.serapi.solve(tactic)
                ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 492, in solve
    succ, responses = self.add_and_execute_once(tactic)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 437, in add_and_execute_once
    responses = self.execute(state_ids[-1], timeout=timeout)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 145, in send
    assert int(num) == ack_num
           ^^^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/Shared/Libs/DLW/Utils/utils_nat.json bounded_min
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 136, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet +.

coq-library-undecidability/theories/Shared/Libs/DLW/Utils/utils_nat.json bounded_min
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 136, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet +.

coq-library-undecidability/theories/HOU/std/enumerable.json T_prod_cum
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 136, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal.

coq-library-undecidability/theories/L/Tactics/Lproc.json proc_closed
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 136, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/FRACTRAN/FRACTRAN/mm_fractran.json encode_mm_instr_in_inv
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 136, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 277, in back
    succ = self.prove_with_hammer(strict=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 326, in prove_with_hammer
    state_id, exn = self.automation('hammer')
                    ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 87, in automation
    succ, res = self.serapi.solve(tactic)
                ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 492, in solve
    succ, responses = self.add_and_execute_once(tactic)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 437, in add_and_execute_once
    responses = self.execute(state_ids[-1], timeout=timeout)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 145, in send
    assert int(num) == ack_num
           ^^^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/Shared/Libs/DLW/Utils/utils_nat.json bounded_min
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 136, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet +.

coq-library-undecidability/theories/HOU/std/enumerable.json T_prod_cum
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 136, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal.

coq-library-undecidability/theories/L/Tactics/Lproc.json proc_closed
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 136, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/FRACTRAN/FRACTRAN/mm_fractran.json encode_mm_instr_in_inv
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 136, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 277, in back
    succ = self.prove_with_hammer(strict=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 326, in prove_with_hammer
    state_id, exn = self.automation('hammer')
                    ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 87, in automation
    succ, res = self.serapi.solve(tactic)
                ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 492, in solve
    succ, responses = self.add_and_execute_once(tactic)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 437, in add_and_execute_once
    responses = self.execute(state_ids[-1], timeout=timeout)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 145, in send
    assert int(num) == ack_num
           ^^^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/Shared/Libs/DLW/Utils/list_bool.json list_bool_choose
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 136, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 248, in prove
    self.execute_and_update(self.next_indicator())
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 185, in execute_and_update
    state_ids, response, exn = self.serapi.try_add_and_execute(tactic, timeout=1 if tactic.startswith('qsimpl') else -1)
                                                                                    ^^^^^^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'startswith'

coq-library-undecidability/theories/Shared/Libs/DLW/Utils/list_bool.json list_bool_succ_nil
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 136, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet -.

coq-library-undecidability/theories/Shared/Libs/PSL/FiniteTypes/BasicDefinitions.json notInZero
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 136, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet -.

coq-library-undecidability/theories/H10/Matija/cipher.json is_cipher_of_equiv
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 136, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet -.

coq-library-undecidability/theories/H10/ArithLibs/Zp.json Zp_plus_monoid
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 136, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet -.

coq-library-undecidability/theories/H10/ArithLibs/Zp.json Zp_opp_plus_eq
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 136, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet -.

coq-library-undecidability/theories/H10/Matija/cipher.json is_cipher_of_equiv
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 136, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet -.

coq-library-undecidability/theories/Shared/Libs/DLW/Utils/utils_nat.json bounded_min
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 136, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet +.

coq-library-undecidability/theories/Shared/Libs/DLW/Utils/list_bool.json list_bool_choose
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 136, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 248, in prove
    self.execute_and_update(self.next_indicator())
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 185, in execute_and_update
    state_ids, response, exn = self.serapi.try_add_and_execute(tactic, timeout=1 if tactic.startswith('qsimpl') else -1)
                                                                                    ^^^^^^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'startswith'

coq-library-undecidability/theories/HOU/std/enumerable.json T_prod_cum
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 136, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal.

coq-library-undecidability/theories/L/Tactics/Lproc.json proc_closed
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 136, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/FRACTRAN/FRACTRAN/mm_fractran.json encode_mm_instr_in_inv
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 136, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 277, in back
    succ = self.prove_with_hammer(strict=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 326, in prove_with_hammer
    state_id, exn = self.automation('hammer')
                    ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 87, in automation
    succ, res = self.serapi.solve(tactic)
                ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 492, in solve
    succ, responses = self.add_and_execute_once(tactic)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 437, in add_and_execute_once
    responses = self.execute(state_ids[-1], timeout=timeout)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 145, in send
    assert int(num) == ack_num
           ^^^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/H10/ArithLibs/Zp.json Zp_plus_monoid
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 136, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet -.

coq-library-undecidability/theories/Shared/Libs/DLW/Utils/list_bool.json list_bool_succ_nil
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 136, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet -.

coq-library-undecidability/theories/H10/ArithLibs/Zp.json Zp_opp_plus_eq
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 136, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet -.

coq-library-undecidability/theories/Shared/Libs/DLW/Utils/utils_nat.json bounded_min
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 136, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet +.

coq-library-undecidability/theories/Shared/Libs/DLW/Utils/list_bool.json list_bool_choose
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 136, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 248, in prove
    self.execute_and_update(self.next_indicator())
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 185, in execute_and_update
    state_ids, response, exn = self.serapi.try_add_and_execute(tactic, timeout=1 if tactic.startswith('qsimpl') else -1)
                                                                                    ^^^^^^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'startswith'

coq-library-undecidability/theories/HOU/std/enumerable.json T_prod_cum
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 136, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal.

coq-library-undecidability/theories/H10/Matija/cipher.json is_cipher_of_equiv
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 136, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet -.

coq-library-undecidability/theories/Shared/Libs/DLW/Utils/list_bool.json list_bool_succ_nil
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 136, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet -.

coq-library-undecidability/theories/L/Tactics/Lproc.json proc_closed
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 136, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/FRACTRAN/FRACTRAN/mm_fractran.json encode_mm_instr_in_inv
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 136, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 277, in back
    succ = self.prove_with_hammer(strict=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 326, in prove_with_hammer
    state_id, exn = self.automation('hammer')
                    ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 87, in automation
    succ, res = self.serapi.solve(tactic)
                ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 492, in solve
    succ, responses = self.add_and_execute_once(tactic)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 437, in add_and_execute_once
    responses = self.execute(state_ids[-1], timeout=timeout)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 145, in send
    assert int(num) == ack_num
           ^^^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_defs.json bsm_sss_fun
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 136, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_defs.json bsm_sss_total
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 136, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_defs.json bsm_sss_total'
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 136, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_defs.json bsm_compute_POP_E
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 136, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_defs.json bsm_compute_POP_0
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 136, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_utils.json empty_stack_length
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 136, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_utils.json empty_stack_spec
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 136, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_utils.json length_move_rev_stack
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 136, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_utils.json move_rev_stack_spec
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 136, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_utils.json length_copy_rev_stack
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 136, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/H10/ArithLibs/Zp.json Zp_plus_monoid
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 136, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet -.

coq-library-undecidability/theories/HOU/std/enumerable.json T_prod_cum
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 136, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal.

coquelicot/theories/Lim_seq.json is_inf_opp_sup_seq
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 136, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 229, in prove
    state_id, exn = self.execute_and_update(t, source)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 190, in execute_and_update
    fg_goals, bg_goals, shelved_goals = self.serapi.query_all_goals_pretty()
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 324, in query_all_goals_pretty
    fg_goals, bg_goals, shelved_goals, _ = self.query_goals()
                                           ^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 285, in query_goals
    responses, _ = self.send('(Query () Goals)')
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 157, in send
    parsed_item = sexpdata.loads(item, nil=None, true=None)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/sexpdata.py", line 199, in loads
    obj = parse(string, **kwds)
          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/sexpdata.py", line 802, in parse
    return Parser(string, **kwds).parse()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/sexpdata.py", line 781, in parse
    (i, sexp) = self.parse_sexp(0)
                ^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/sexpdata.py", line 752, in parse_sexp
    (i, subsexp) = self.parse_sexp(i + 1)
                   ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/sexpdata.py", line 752, in parse_sexp
    (i, subsexp) = self.parse_sexp(i + 1)
                   ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/sexpdata.py", line 752, in parse_sexp
    (i, subsexp) = self.parse_sexp(i + 1)
                   ^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 964 more times]
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/sexpdata.py", line 776, in parse_sexp
    (i, subsexp) = self.parse_atom(i)
                   ^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/sexpdata.py", line 720, in parse_atom
    return (i, self.atom(''.join(chars)))
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/sexpdata.py", line 723, in atom
    if token == self.nil:
       ^^^^^^^^^^^^^^^^^
RecursionError: maximum recursion depth exceeded in comparison

coquelicot/theories/AutoDerive.json foldr_prop_nth
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 136, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 277, in back
    succ = self.prove_with_hammer(strict=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 326, in prove_with_hammer
    state_id, exn = self.automation('hammer')
                    ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 87, in automation
    succ, res = self.serapi.solve(tactic)
                ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 492, in solve
    succ, responses = self.add_and_execute_once(tactic)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 437, in add_and_execute_once
    responses = self.execute(state_ids[-1], timeout=timeout)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 145, in send
    assert int(num) == ack_num
           ^^^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/HOU/std/enumerable.json T_prod_cum
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 136, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal.

coquelicot/theories/SF_seq.json SF_rev_inj
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 136, in prove_file
    succ = prove_hammer_only(state)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet -.

coquelicot/theories/Lim_seq.json ex_finite_lim_seq_correct
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 136, in prove_file
    succ = prove_hammer_only(state)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal.

coq-library-undecidability/theories/Shared/Libs/DLW/Utils/utils_tac.json forall_bound_equiv
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet -.

coquelicot/theories/PSeries.json PSeries_scal_r
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 136, in prove_file
    succ = prove_hammer_only(state)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 248, in prove
    self.execute_and_update(self.next_indicator())
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 185, in execute_and_update
    state_ids, response, exn = self.serapi.try_add_and_execute(tactic, timeout=1 if tactic.startswith('qsimpl') else -1)
                                                                                    ^^^^^^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'startswith'

coquelicot/theories/Derive.json incr_function
OSError: [Errno 28] No space left on device

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 139, in prove_file
    end_time = time.time()
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 28, in log
    with open(out_file, 'w') as f:
OSError: [Errno 28] No space left on device

coquelicot/theories/Hierarchy.json coeff_Tn_ext
OSError: [Errno 28] No space left on device

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 139, in prove_file
    end_time = time.time()
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 28, in log
    with open(out_file, 'w') as f:
OSError: [Errno 28] No space left on device

coquelicot/theories/AutoDerive.json foldr_prop_nth
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 437, in add_and_execute_once
    responses = self.execute(state_ids[-1], timeout=timeout)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: Anomaly \"Not a sort.\" Please report at http://coq.inria.fr/bugs/.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 277, in back
    succ = self.prove_with_hammer(strict=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 320, in prove_with_hammer
    state_id, exn = self.automation('best', 3)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 87, in automation
    succ, res = self.serapi.solve(tactic)
                ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 492, in solve
    succ, responses = self.add_and_execute_once(tactic)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 448, in add_and_execute_once
    self.cancel(state_ids)
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 518, in cancel
    self.send('(Cancel (%s))' % ' '.join([str(s) for s in states]))
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 145, in send
    assert int(num) == ack_num
           ^^^^^^^^^^^^^^^^^^^
AssertionError

coquelicot/theories/SF_seq.json SF_rev_inj
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet -.

coquelicot/theories/PSeries.json PSeries_scal_r
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 248, in prove
    self.execute_and_update(self.next_indicator())
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 185, in execute_and_update
    state_ids, response, exn = self.serapi.try_add_and_execute(tactic, timeout=1 if tactic.startswith('qsimpl') else -1)
                                                                                    ^^^^^^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'startswith'

coq-library-undecidability/theories/Shared/Libs/DLW/Utils/utils_tac.json forall_bound_equiv
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet -.

coquelicot/theories/Lim_seq.json ex_finite_lim_seq_correct
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal.

coq-library-undecidability/theories/HOU/std/enumerable.json T_prod_cum
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal.

coq-library-undecidability/theories/HOU/std/enumerable.json T_prod_cum
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal.

coq-library-undecidability/theories/Shared/Libs/DLW/Utils/utils_nat.json bounded_min
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet +.

coq-library-undecidability/theories/Shared/Libs/DLW/Utils/list_bool.json list_bool_choose
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 248, in prove
    self.execute_and_update(self.next_indicator())
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 185, in execute_and_update
    state_ids, response, exn = self.serapi.try_add_and_execute(tactic, timeout=1 if tactic.startswith('qsimpl') else -1)
                                                                                    ^^^^^^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'startswith'

coq-library-undecidability/theories/Shared/Libs/DLW/Utils/list_bool.json list_bool_succ_nil
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet -.

coq-library-undecidability/theories/H10/Matija/cipher.json is_cipher_of_equiv
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet -.

coq-library-undecidability/theories/H10/ArithLibs/Zp.json Zp_plus_monoid
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet -.

coq-library-undecidability/theories/L/Tactics/Lproc.json proc_closed
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/FRACTRAN/FRACTRAN/mm_fractran.json encode_mm_instr_in_inv
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 277, in back
    succ = self.prove_with_hammer(strict=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 326, in prove_with_hammer
    state_id, exn = self.automation('hammer')
                    ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 87, in automation
    succ, res = self.serapi.solve(tactic)
                ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 492, in solve
    succ, responses = self.add_and_execute_once(tactic)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 437, in add_and_execute_once
    responses = self.execute(state_ids[-1], timeout=timeout)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 145, in send
    assert int(num) == ack_num
           ^^^^^^^^^^^^^^^^^^^
AssertionError

coquelicot/theories/Derive_2d.json ex_diff_n_deriv_aux2
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal.

coquelicot/theories/RInt_gen.json RInt_gen_at_point
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coquelicot/theories/Iter.json iter_iter'
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coquelicot/theories/Iter.json iter_cat
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coquelicot/theories/Iter.json iter_comp
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coquelicot/theories/Iter.json iter_const
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coquelicot/theories/Iter.json In_mem
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coquelicot/theories/Rbar.json Rbar_min_comm
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal.

coquelicot/theories/Rbar.json Rbar_min_r
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: Wrong bullet --: Current bullet -- is not finished.

coq-library-undecidability/theories/HOU/std/enumerable.json T_prod_cum
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal.

coq-library-undecidability/theories/Shared/Libs/DLW/Utils/utils_nat.json bounded_min
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet +.

coq-library-undecidability/theories/Shared/Libs/DLW/Utils/list_bool.json list_bool_choose
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 248, in prove
    self.execute_and_update(self.next_indicator())
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 185, in execute_and_update
    state_ids, response, exn = self.serapi.try_add_and_execute(tactic, timeout=1 if tactic.startswith('qsimpl') else -1)
                                                                                    ^^^^^^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'startswith'

coqrel/RelOperators.json rel_incr_rdestruct
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 248, in prove
    self.execute_and_update(self.next_indicator())
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 185, in execute_and_update
    state_ids, response, exn = self.serapi.try_add_and_execute(tactic, timeout=1 if tactic.startswith('qsimpl') else -1)
                                                                                    ^^^^^^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'startswith'

coq-library-undecidability/theories/Shared/Libs/DLW/Utils/list_bool.json list_bool_succ_nil
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet -.

coq-library-undecidability/theories/H10/Matija/cipher.json is_cipher_of_equiv
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet -.

coq-library-undecidability/theories/H10/ArithLibs/Zp.json Zp_plus_monoid
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet -.

coq-library-undecidability/theories/L/Tactics/Lproc.json proc_closed
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/FRACTRAN/FRACTRAN/mm_fractran.json encode_mm_instr_in_inv
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 277, in back
    succ = self.prove_with_hammer(strict=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 326, in prove_with_hammer
    state_id, exn = self.automation('hammer')
                    ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 87, in automation
    succ, res = self.serapi.solve(tactic)
                ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 492, in solve
    succ, responses = self.add_and_execute_once(tactic)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 437, in add_and_execute_once
    responses = self.execute(state_ids[-1], timeout=timeout)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 145, in send
    assert int(num) == ack_num
           ^^^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_pcp.json HS1
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_pcp.json HS2
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_pcp.json HS3
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_pcp.json pcp_bsm_sound
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_defs.json bsm_sss_fun
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_defs.json bsm_sss_total
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_defs.json bsm_sss_total'
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_defs.json bsm_compute_POP_E
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_defs.json bsm_compute_POP_0
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_utils.json empty_stack_length
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_utils.json empty_stack_spec
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_utils.json length_move_rev_stack
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_utils.json move_rev_stack_spec
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_utils.json length_copy_rev_stack
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/H10/Matija/cipher.json is_cipher_of_equiv
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet -.

coq-library-undecidability/theories/HOU/std/enumerable.json T_prod_cum
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal.

coq-library-undecidability/theories/L/Tactics/Lproc.json proc_closed
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/Shared/Libs/DLW/Utils/utils_nat.json bounded_min
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet +.

coq-library-undecidability/theories/Shared/Libs/DLW/Utils/list_bool.json list_bool_choose
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 248, in prove
    self.execute_and_update(self.next_indicator())
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 185, in execute_and_update
    state_ids, response, exn = self.serapi.try_add_and_execute(tactic, timeout=1 if tactic.startswith('qsimpl') else -1)
                                                                                    ^^^^^^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'startswith'

coq-library-undecidability/theories/FRACTRAN/FRACTRAN/mm_fractran.json encode_mm_instr_in_inv
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 277, in back
    succ = self.prove_with_hammer(strict=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 326, in prove_with_hammer
    state_id, exn = self.automation('hammer')
                    ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 87, in automation
    succ, res = self.serapi.solve(tactic)
                ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 492, in solve
    succ, responses = self.add_and_execute_once(tactic)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 437, in add_and_execute_once
    responses = self.execute(state_ids[-1], timeout=timeout)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 145, in send
    assert int(num) == ack_num
           ^^^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_pcp.json HS1
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_pcp.json HS2
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_pcp.json HS3
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_pcp.json pcp_bsm_sound
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_defs.json bsm_sss_fun
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_defs.json bsm_sss_total
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_defs.json bsm_sss_total'
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_defs.json bsm_compute_POP_E
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_defs.json bsm_compute_POP_0
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_utils.json empty_stack_length
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_utils.json empty_stack_spec
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_utils.json length_move_rev_stack
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_utils.json move_rev_stack_spec
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_utils.json length_copy_rev_stack
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/H10/ArithLibs/Zp.json Zp_plus_monoid
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet -.

coq-library-undecidability/theories/Shared/Libs/DLW/Utils/list_bool.json list_bool_succ_nil
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet -.

coq-library-undecidability/theories/Shared/Libs/DLW/Code/compiler_correction.json gen_compiler_sound
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/Shared/Libs/DLW/Code/compiler_correction.json gen_compiler_sound
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/Shared/Libs/DLW/Utils/utils_tac.json forall_bound_equiv
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet -.

goedel/theories/LNN.json andE1
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 277, in back
    succ = self.prove_with_hammer(strict=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 320, in prove_with_hammer
    state_id, exn = self.automation('best', 3)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 87, in automation
    succ, res = self.serapi.solve(tactic)
                ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 492, in solve
    succ, responses = self.add_and_execute_once(tactic)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 437, in add_and_execute_once
    responses = self.execute(state_ids[-1], timeout=timeout)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 145, in send
    assert int(num) == ack_num
           ^^^^^^^^^^^^^^^^^^^
AssertionError

goedel/theories/LNN.json existSys
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 277, in back
    succ = self.prove_with_hammer(strict=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 326, in prove_with_hammer
    state_id, exn = self.automation('hammer')
                    ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 87, in automation
    succ, res = self.serapi.solve(tactic)
                ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 492, in solve
    succ, responses = self.add_and_execute_once(tactic)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 437, in add_and_execute_once
    responses = self.execute(state_ids[-1], timeout=timeout)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 145, in send
    assert int(num) == ack_num
           ^^^^^^^^^^^^^^^^^^^
AssertionError

goedel/theories/LNN.json nImp
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 277, in back
    succ = self.prove_with_hammer(strict=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 320, in prove_with_hammer
    state_id, exn = self.automation('best', 3)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 87, in automation
    succ, res = self.serapi.solve(tactic)
                ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 492, in solve
    succ, responses = self.add_and_execute_once(tactic)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 437, in add_and_execute_once
    responses = self.execute(state_ids[-1], timeout=timeout)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 145, in send
    assert int(num) == ack_num
           ^^^^^^^^^^^^^^^^^^^
AssertionError

goedel/theories/codeSubFormula.json cTriplePi1IsPR
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 248, in prove
    self.execute_and_update(self.next_indicator())
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 185, in execute_and_update
    state_ids, response, exn = self.serapi.try_add_and_execute(tactic, timeout=1 if tactic.startswith('qsimpl') else -1)
                                                                                    ^^^^^^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'startswith'

coq-library-undecidability/theories/Shared/Libs/DLW/Utils/utils_tac.json forall_bound_equiv
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet -.

coq-library-undecidability/theories/Shared/Libs/DLW/Utils/utils_tac.json forall_bound_equiv
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet -.

goedel/theories/LNN.json andE1
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 274, in back
    self.focus(index)
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 339, in focus
    self.serapi.cancel([node.state_id])
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 518, in cancel
    self.send('(Cancel (%s))' % ' '.join([str(s) for s in states]))
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 145, in send
    assert int(num) == ack_num
           ^^^^^^^^^^^^^^^^^^^
AssertionError

goedel/theories/LNN.json existSys
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 277, in back
    succ = self.prove_with_hammer(strict=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 326, in prove_with_hammer
    state_id, exn = self.automation('hammer')
                    ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 87, in automation
    succ, res = self.serapi.solve(tactic)
                ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 492, in solve
    succ, responses = self.add_and_execute_once(tactic)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 437, in add_and_execute_once
    responses = self.execute(state_ids[-1], timeout=timeout)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 145, in send
    assert int(num) == ack_num
           ^^^^^^^^^^^^^^^^^^^
AssertionError

goedel/theories/LNN.json nImp
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 274, in back
    self.focus(index)
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 346, in focus
    self.fg_goals, self.bg_goals, self.shelved_goals = self.serapi.query_all_goals_pretty()
                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 324, in query_all_goals_pretty
    fg_goals, bg_goals, shelved_goals, _ = self.query_goals()
                                           ^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 286, in query_goals
    assert responses[1][2][0] == Symbol('ObjList')
           ~~~~~~~~~~~~^^^
IndexError: list index out of range

goedel/theories/codeSubFormula.json cTriplePi1IsPR
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 248, in prove
    self.execute_and_update(self.next_indicator())
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 185, in execute_and_update
    state_ids, response, exn = self.serapi.try_add_and_execute(tactic, timeout=1 if tactic.startswith('qsimpl') else -1)
                                                                                    ^^^^^^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'startswith'

coq-library-undecidability/theories/Shared/Libs/DLW/Utils/utils_tac.json forall_bound_equiv
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet -.

coq-library-undecidability/theories/Shared/Libs/DLW/Utils/gcd.json rem_prop
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 277, in back
    succ = self.prove_with_hammer(strict=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 320, in prove_with_hammer
    state_id, exn = self.automation('best', 3)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 95, in automation
    state_id, exn = self.execute_and_update(res, 'hammer')
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 190, in execute_and_update
    fg_goals, bg_goals, shelved_goals = self.serapi.query_all_goals_pretty()
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 324, in query_all_goals_pretty
    fg_goals, bg_goals, shelved_goals, _ = self.query_goals()
                                           ^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 285, in query_goals
    responses, _ = self.send('(Query () Goals)')
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 157, in send
    parsed_item = sexpdata.loads(item, nil=None, true=None)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/sexpdata.py", line 199, in loads
    obj = parse(string, **kwds)
          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/sexpdata.py", line 802, in parse
    return Parser(string, **kwds).parse()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/sexpdata.py", line 781, in parse
    (i, sexp) = self.parse_sexp(0)
                ^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/sexpdata.py", line 752, in parse_sexp
    (i, subsexp) = self.parse_sexp(i + 1)
                   ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/sexpdata.py", line 752, in parse_sexp
    (i, subsexp) = self.parse_sexp(i + 1)
                   ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/sexpdata.py", line 752, in parse_sexp
    (i, subsexp) = self.parse_sexp(i + 1)
                   ^^^^^^^^^^^^^^^^^^^^^^
  [Previous line repeated 976 more times]
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/sexpdata.py", line 776, in parse_sexp
    (i, subsexp) = self.parse_atom(i)
                   ^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/sexpdata.py", line 720, in parse_atom
    return (i, self.atom(''.join(chars)))
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/sexpdata.py", line 723, in atom
    if token == self.nil:
       ^^^^^^^^^^^^^^^^^
RecursionError: maximum recursion depth exceeded in comparison

coq-library-undecidability/theories/Shared/Libs/DLW/Utils/utils_tac.json forall_bound_equiv
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet -.

zorns-lemma/Quotients.json well_defined_induced1
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

verdi-raft/raft/Linearizability.json good_op_move_cases
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 306, in back
    bullets_cur = self.history.get_structure(self.history.cur)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 343, in focus
    for nd in self.history[self.history.cur + 1 : ind]:
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: No such goal. Focus next goal with bullet -.

coq-library-undecidability/theories/Shared/Libs/DLW/Utils/list_bool.json list_bool_choose
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 248, in prove
    self.execute_and_update(self.next_indicator())
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 185, in execute_and_update
    state_ids, response, exn = self.serapi.try_add_and_execute(tactic, timeout=1 if tactic.startswith('qsimpl') else -1)
                                                                                    ^^^^^^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'startswith'

coq-library-undecidability/theories/L/Tactics/Lproc.json proc_closed
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/FRACTRAN/FRACTRAN/mm_fractran.json encode_mm_instr_in_inv
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 277, in back
    succ = self.prove_with_hammer(strict=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 327, in prove_with_hammer
    state_id, exn = self.automation('hammer')
                    ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 87, in automation
    succ, res = self.serapi.solve(tactic)
                ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 492, in solve
    succ, responses = self.add_and_execute_once(tactic)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 437, in add_and_execute_once
    responses = self.execute(state_ids[-1], timeout=timeout)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 145, in send
    assert int(num) == ack_num
           ^^^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_pcp.json HS1
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_pcp.json HS2
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_pcp.json HS3
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_pcp.json pcp_bsm_sound
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_defs.json bsm_sss_fun
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_defs.json bsm_sss_total
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_defs.json bsm_sss_total'
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_defs.json bsm_compute_POP_E
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_defs.json bsm_compute_POP_0
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_utils.json empty_stack_length
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_utils.json empty_stack_spec
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_utils.json length_move_rev_stack
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_utils.json move_rev_stack_spec
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_utils.json length_copy_rev_stack
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

verdi-raft/raft/CommonTheorems.json contiguous_app_prefix_contiguous
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 248, in prove
    self.execute_and_update(self.next_indicator())
                            ^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 150, in next_indicator
    raise 'next_indicator error'
TypeError: exceptions must derive from BaseException

coq-library-undecidability/theories/HOU/std/enumerable.json T_prod_cum
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/Shared/Libs/DLW/Utils/list_bool.json list_bool_choose
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/L/Tactics/Lproc.json proc_closed
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/FRACTRAN/FRACTRAN/mm_fractran.json encode_mm_instr_in_inv
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/Shared/Libs/DLW/Utils/list_bool.json list_bool_choose
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/L/Tactics/Lproc.json proc_closed
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/FRACTRAN/FRACTRAN/mm_fractran.json encode_mm_instr_in_inv
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_pcp.json HS1
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_pcp.json HS2
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_pcp.json HS3
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_pcp.json pcp_bsm_sound
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_defs.json bsm_sss_fun
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_defs.json bsm_sss_total
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_defs.json bsm_sss_total'
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_defs.json bsm_compute_POP_E
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_defs.json bsm_compute_POP_0
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_utils.json empty_stack_length
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_utils.json empty_stack_spec
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_utils.json length_move_rev_stack
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_utils.json move_rev_stack_spec
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/StackMachines/BSM/bsm_utils.json length_copy_rev_stack
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 210, in prove
    assert tactics_ori != ''
           ^^^^^^^^^^^^^^^^^
AssertionError

coq-library-undecidability/theories/L/Tactics/Lproc.json proc_closed
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 212, in prove
    tactics_ori = self.query_gpt(self.fg_goals)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 159, in query_gpt
    premises, defs, lemmas = self.get_premises()
                             ^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 155, in get_premises
    return self.retrieval.retrieve_predict(self.serapi, goals)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/retrieval.py", line 187, in retrieve_predict
    query_bm25 = bm25(list(context))
                 ^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/retrieval.py", line 16, in bm25
    bm25 = BM25Okapi(corpus)
           ^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/rank_bm25.py", line 83, in __init__
    super().__init__(corpus, tokenizer)
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/rank_bm25.py", line 27, in __init__
    nd = self._initialize(corpus)
         ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/rank_bm25.py", line 52, in _initialize
    self.avgdl = num_doc / self.corpus_size
                 ~~~~~~~~^~~~~~~~~~~~~~~~~~
ZeroDivisionError: division by zero

verdi-raft/raft-proofs/AllEntriesIndicesGt0Proof.json aeigt0
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 277, in back
    succ = self.prove_with_hammer(strict=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 327, in prove_with_hammer
    state_id, exn = self.automation('hammer')
                    ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 87, in automation
    succ, res = self.serapi.solve(tactic)
                ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 492, in solve
    succ, responses = self.add_and_execute_once(tactic)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 437, in add_and_execute_once
    responses = self.execute(state_ids[-1], timeout=timeout)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 145, in send
    assert int(num) == ack_num
           ^^^^^^^^^^^^^^^^^^^
AssertionError

verdi-raft/raft-proofs/AllEntriesIndicesGt0Proof.json aeigt0
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 277, in back
    succ = self.prove_with_hammer(strict=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 327, in prove_with_hammer
    state_id, exn = self.automation('hammer')
                    ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 87, in automation
    succ, res = self.serapi.solve(tactic)
                ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 492, in solve
    succ, responses = self.add_and_execute_once(tactic)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 437, in add_and_execute_once
    responses = self.execute(state_ids[-1], timeout=timeout)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 145, in send
    assert int(num) == ack_num
           ^^^^^^^^^^^^^^^^^^^
AssertionError

verdi-raft/raft-proofs/PrevLogCandidateEntriesTermProof.json plceti
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 248, in prove
    self.execute_and_update(self.next_indicator())
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 185, in execute_and_update
    state_ids, response, exn = self.serapi.try_add_and_execute(tactic, timeout=1 if tactic.startswith('qsimpl') else -1)
                                                                                    ^^^^^^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'startswith'

coq-library-undecidability/theories/L/Tactics/Lproc.json proc_closed
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 212, in prove
    tactics_ori = self.query_gpt(self.fg_goals)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 159, in query_gpt
    premises, defs, lemmas = self.get_premises()
                             ^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 155, in get_premises
    return self.retrieval.retrieve_predict(self.serapi, goals)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/retrieval.py", line 187, in retrieve_predict
    query_bm25 = bm25(list(context))
                 ^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/retrieval.py", line 16, in bm25
    bm25 = BM25Okapi(corpus)
           ^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/rank_bm25.py", line 83, in __init__
    super().__init__(corpus, tokenizer)
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/rank_bm25.py", line 27, in __init__
    nd = self._initialize(corpus)
         ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/rank_bm25.py", line 52, in _initialize
    self.avgdl = num_doc / self.corpus_size
                 ~~~~~~~~^~~~~~~~~~~~~~~~~~
ZeroDivisionError: division by zero

coq-library-undecidability/theories/StackMachines/BSM/bsm_utils.json main_loop_complete
Traceback (most recent call last):
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/httpcore/_backends/sync.py", line 206, in connect_tcp
    sock = socket.create_connection(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/socket.py", line 827, in create_connection
    for res in getaddrinfo(host, port, 0, SOCK_STREAM):
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/socket.py", line 962, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno -5] No address associated with hostname

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/httpx/_transports/default.py", line 67, in map_httpcore_exceptions
    yield
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/httpx/_transports/default.py", line 231, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/httpcore/_sync/connection_pool.py", line 268, in handle_request
    raise exc
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/httpcore/_sync/connection_pool.py", line 251, in handle_request
    response = connection.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/httpcore/_sync/connection.py", line 99, in handle_request
    raise exc
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/httpcore/_sync/connection.py", line 76, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/httpcore/_sync/connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/httpcore/_backends/sync.py", line 205, in connect_tcp
    with map_exceptions(exc_map):
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/contextlib.py", line 155, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno -5] No address associated with hostname

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/openai/_base_client.py", line 952, in _request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/httpx/_client.py", line 915, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/httpx/_client.py", line 943, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/httpx/_client.py", line 980, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/httpx/_client.py", line 1016, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/httpx/_transports/default.py", line 230, in handle_request
    with map_httpcore_exceptions():
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/contextlib.py", line 155, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/httpx/_transports/default.py", line 84, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -5] No address associated with hostname

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/httpcore/_backends/sync.py", line 206, in connect_tcp
    sock = socket.create_connection(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/socket.py", line 827, in create_connection
    for res in getaddrinfo(host, port, 0, SOCK_STREAM):
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/socket.py", line 962, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno -5] No address associated with hostname

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/httpx/_transports/default.py", line 67, in map_httpcore_exceptions
    yield
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/httpx/_transports/default.py", line 231, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/httpcore/_sync/connection_pool.py", line 268, in handle_request
    raise exc
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/httpcore/_sync/connection_pool.py", line 251, in handle_request
    response = connection.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/httpcore/_sync/connection.py", line 99, in handle_request
    raise exc
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/httpcore/_sync/connection.py", line 76, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/httpcore/_sync/connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/httpcore/_backends/sync.py", line 205, in connect_tcp
    with map_exceptions(exc_map):
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/contextlib.py", line 155, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno -5] No address associated with hostname

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/openai/_base_client.py", line 952, in _request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/httpx/_client.py", line 915, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/httpx/_client.py", line 943, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/httpx/_client.py", line 980, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/httpx/_client.py", line 1016, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/httpx/_transports/default.py", line 230, in handle_request
    with map_httpcore_exceptions():
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/contextlib.py", line 155, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/httpx/_transports/default.py", line 84, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno -5] No address associated with hostname

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/httpcore/_backends/sync.py", line 206, in connect_tcp
    sock = socket.create_connection(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/socket.py", line 851, in create_connection
    raise exceptions[0]
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/socket.py", line 836, in create_connection
    sock.connect(sa)
OSError: [Errno 113] No route to host

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/httpx/_transports/default.py", line 67, in map_httpcore_exceptions
    yield
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/httpx/_transports/default.py", line 231, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/httpcore/_sync/connection_pool.py", line 268, in handle_request
    raise exc
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/httpcore/_sync/connection_pool.py", line 251, in handle_request
    response = connection.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/httpcore/_sync/connection.py", line 99, in handle_request
    raise exc
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/httpcore/_sync/connection.py", line 76, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/httpcore/_sync/connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/httpcore/_backends/sync.py", line 205, in connect_tcp
    with map_exceptions(exc_map):
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/contextlib.py", line 155, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 113] No route to host

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/openai/_base_client.py", line 952, in _request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/httpx/_client.py", line 915, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/httpx/_client.py", line 943, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/httpx/_client.py", line 980, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/httpx/_client.py", line 1016, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/httpx/_transports/default.py", line 230, in handle_request
    with map_httpcore_exceptions():
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/contextlib.py", line 155, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/httpx/_transports/default.py", line 84, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 113] No route to host

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 212, in prove
    tactics_ori = self.query_gpt(self.fg_goals)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 162, in query_gpt
    return self.gpt.query(prompt.strip())
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/gpt.py", line 132, in query
    return self.query_gpt(prompt)
           ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/gpt.py", line 171, in query_gpt
    response = client.chat.completions.create(model=self.model,
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/openai/_utils/_utils.py", line 277, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/openai/resources/chat/completions.py", line 590, in create
    return self._post(
           ^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/openai/_base_client.py", line 1240, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/openai/_base_client.py", line 921, in request
    return self._request(
           ^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/openai/_base_client.py", line 976, in _request
    return self._retry_request(
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/openai/_base_client.py", line 1053, in _retry_request
    return self._request(
           ^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/openai/_base_client.py", line 976, in _request
    return self._retry_request(
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/openai/_base_client.py", line 1053, in _retry_request
    return self._request(
           ^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/openai/_base_client.py", line 986, in _request
    raise APIConnectionError(request=request) from err
openai.APIConnectionError: Connection error.

verdi-raft/raft-proofs/PrevLogCandidateEntriesTermProof.json plceti
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 248, in prove
    self.execute_and_update(self.next_indicator())
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 185, in execute_and_update
    state_ids, response, exn = self.serapi.try_add_and_execute(tactic, timeout=1 if tactic.startswith('qsimpl') else -1)
                                                                                    ^^^^^^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'startswith'

dblib/src/DeBruijn.json lift_lift_fuse_successor
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 212, in prove
    tactics_ori = self.query_gpt(self.fg_goals)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 159, in query_gpt
    premises, defs, lemmas = self.get_premises()
                             ^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 155, in get_premises
    return self.retrieval.retrieve_predict(self.serapi, goals)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/retrieval.py", line 187, in retrieve_predict
    query_bm25 = bm25(list(context))
                 ^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/retrieval.py", line 16, in bm25
    bm25 = BM25Okapi(corpus)
           ^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/rank_bm25.py", line 83, in __init__
    super().__init__(corpus, tokenizer)
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/rank_bm25.py", line 27, in __init__
    nd = self._initialize(corpus)
         ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/rank_bm25.py", line 52, in _initialize
    self.avgdl = num_doc / self.corpus_size
                 ~~~~~~~~^~~~~~~~~~~~~~~~~~
ZeroDivisionError: division by zero

verdi-raft/raft-proofs/RaftMsgRefinementProof.json lift_prop_all_the_way
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 49, in prove
    succ = state.back()
           ^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 307, in back
    self.focus(len(self.history))
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 344, in focus
    state_ids, _ = self.serapi.add_and_execute(nd.tactic)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 405, in add_and_execute
    responses = self.execute(state_ids[-1])
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 411, in execute
    responses, _ = self.send(cmd, timeout=timeout)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 161, in send
    raise CoqExn(msg)
src.serapi.CoqExn: hauto failed

verdi-raft/raft-proofs/AllEntriesTermSanityProof.json allEntries_term_sanity_reboot
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 135, in send
    self.proc.expect(['\(Answer \d+ Ack\)\x00.*\(Answer \d+ Completed\)\x00',
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/pexpect/spawnbase.py", line 354, in expect
    return self.expect_list(compiled_pattern_list,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/pexpect/spawnbase.py", line 383, in expect_list
    return exp.expect_loop(timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/pexpect/expect.py", line 181, in expect_loop
    return self.timeout(e)
           ^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/pexpect/expect.py", line 144, in timeout
    raise exc
pexpect.exceptions.TIMEOUT: <pexpect.popen_spawn.PopenSpawn object at 0x7fb451728510>
searcher: searcher_re:
    0: re.compile('\\(Answer \\d+ Ack\\)\x00.*\\(Answer \\d+ Completed\\)\x00')
    1: re.compile('\\(Answer \\d+ Ack\\)\x00.*\\(Answer \\d+\\(CoqExn.*\\)\x00')
<pexpect.popen_spawn.PopenSpawn object at 0x7fb451728510>
searcher: searcher_re:
    0: re.compile('\\(Answer \\d+ Ack\\)\x00.*\\(Answer \\d+ Completed\\)\x00')
    1: re.compile('\\(Answer \\d+ Ack\\)\x00.*\\(Answer \\d+\\(CoqExn.*\\)\x00')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 229, in prove
    state_id, exn = self.execute_and_update(t, source)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 190, in execute_and_update
    fg_goals, bg_goals, shelved_goals = self.serapi.query_all_goals_pretty()
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 324, in query_all_goals_pretty
    fg_goals, bg_goals, shelved_goals, _ = self.query_goals()
                                           ^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 285, in query_goals
    responses, _ = self.send('(Query () Goals)')
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 139, in send
    raise CoqTimeout
src.serapi.CoqTimeout: CoqTimeout

verdi-raft/raft-proofs/PrevLogCandidateEntriesTermProof.json plceti
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 248, in prove
    self.execute_and_update(self.next_indicator())
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 185, in execute_and_update
    state_ids, response, exn = self.serapi.try_add_and_execute(tactic, timeout=1 if tactic.startswith('qsimpl') else -1)
                                                                                    ^^^^^^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'startswith'

UnifySL/SeparationLogic/DeepEmbedded/FlatSemantics.json kpSM
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 212, in prove
    tactics_ori = self.query_gpt(self.fg_goals)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 159, in query_gpt
    premises, defs, lemmas = self.get_premises()
                             ^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 155, in get_premises
    return self.retrieval.retrieve_predict(self.serapi, goals)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/retrieval.py", line 181, in retrieve_predict
    content = self.check_print(serapi, tp, ident)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/retrieval.py", line 140, in check_print
    prt = serapi.print(ident)
          ^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 383, in print
    succ, responses = self.add_and_execute_once('Print %s.' % term, timeout=5)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 442, in add_and_execute_once
    self.ctr_c()
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 126, in ctr_c
    self.proc.expect(['\(Answer \d+ Ack\)\x00.*\(Answer \d+ Completed\)\x00',
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/pexpect/spawnbase.py", line 354, in expect
    return self.expect_list(compiled_pattern_list,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/pexpect/spawnbase.py", line 383, in expect_list
    return exp.expect_loop(timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/pexpect/expect.py", line 181, in expect_loop
    return self.timeout(e)
           ^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/pexpect/expect.py", line 144, in timeout
    raise exc
pexpect.exceptions.TIMEOUT: <pexpect.popen_spawn.PopenSpawn object at 0x7f0869809b50>
searcher: searcher_re:
    0: re.compile('\\(Answer \\d+ Ack\\)\x00.*\\(Answer \\d+ Completed\\)\x00')
    1: re.compile('\\(Answer \\d+ Ack\\)\x00.*\\(Answer \\d+\\(CoqExn.*\\)\x00')
<pexpect.popen_spawn.PopenSpawn object at 0x7f0869809b50>
searcher: searcher_re:
    0: re.compile('\\(Answer \\d+ Ack\\)\x00.*\\(Answer \\d+ Completed\\)\x00')
    1: re.compile('\\(Answer \\d+ Ack\\)\x00.*\\(Answer \\d+\\(CoqExn.*\\)\x00')

verdi-raft/raft-proofs/AllEntriesTermSanityProof.json allEntries_term_sanity_reboot
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 135, in send
    self.proc.expect(['\(Answer \d+ Ack\)\x00.*\(Answer \d+ Completed\)\x00',
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/pexpect/spawnbase.py", line 354, in expect
    return self.expect_list(compiled_pattern_list,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/pexpect/spawnbase.py", line 383, in expect_list
    return exp.expect_loop(timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/pexpect/expect.py", line 181, in expect_loop
    return self.timeout(e)
           ^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/pexpect/expect.py", line 144, in timeout
    raise exc
pexpect.exceptions.TIMEOUT: <pexpect.popen_spawn.PopenSpawn object at 0x7f05eded8cd0>
searcher: searcher_re:
    0: re.compile('\\(Answer \\d+ Ack\\)\x00.*\\(Answer \\d+ Completed\\)\x00')
    1: re.compile('\\(Answer \\d+ Ack\\)\x00.*\\(Answer \\d+\\(CoqExn.*\\)\x00')
<pexpect.popen_spawn.PopenSpawn object at 0x7f05eded8cd0>
searcher: searcher_re:
    0: re.compile('\\(Answer \\d+ Ack\\)\x00.*\\(Answer \\d+ Completed\\)\x00')
    1: re.compile('\\(Answer \\d+ Ack\\)\x00.*\\(Answer \\d+\\(CoqExn.*\\)\x00')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 229, in prove
    state_id, exn = self.execute_and_update(t, source)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 190, in execute_and_update
    fg_goals, bg_goals, shelved_goals = self.serapi.query_all_goals_pretty()
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 324, in query_all_goals_pretty
    fg_goals, bg_goals, shelved_goals, _ = self.query_goals()
                                           ^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 285, in query_goals
    responses, _ = self.send('(Query () Goals)')
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 139, in send
    raise CoqTimeout
src.serapi.CoqTimeout: CoqTimeout

UnifySL/SeparationLogic/DeepEmbedded/ParametricCompleteness.json AL_CONSI
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 212, in prove
    tactics_ori = self.query_gpt(self.fg_goals)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 159, in query_gpt
    premises, defs, lemmas = self.get_premises()
                             ^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 155, in get_premises
    return self.retrieval.retrieve_predict(self.serapi, goals)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/retrieval.py", line 181, in retrieve_predict
    content = self.check_print(serapi, tp, ident)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/retrieval.py", line 140, in check_print
    prt = serapi.print(ident)
          ^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 383, in print
    succ, responses = self.add_and_execute_once('Print %s.' % term, timeout=5)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 442, in add_and_execute_once
    self.ctr_c()
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 126, in ctr_c
    self.proc.expect(['\(Answer \d+ Ack\)\x00.*\(Answer \d+ Completed\)\x00',
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/pexpect/spawnbase.py", line 354, in expect
    return self.expect_list(compiled_pattern_list,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/pexpect/spawnbase.py", line 383, in expect_list
    return exp.expect_loop(timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/pexpect/expect.py", line 181, in expect_loop
    return self.timeout(e)
           ^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/pexpect/expect.py", line 144, in timeout
    raise exc
pexpect.exceptions.TIMEOUT: <pexpect.popen_spawn.PopenSpawn object at 0x7fef491b7850>
searcher: searcher_re:
    0: re.compile('\\(Answer \\d+ Ack\\)\x00.*\\(Answer \\d+ Completed\\)\x00')
    1: re.compile('\\(Answer \\d+ Ack\\)\x00.*\\(Answer \\d+\\(CoqExn.*\\)\x00')
<pexpect.popen_spawn.PopenSpawn object at 0x7fef491b7850>
searcher: searcher_re:
    0: re.compile('\\(Answer \\d+ Ack\\)\x00.*\\(Answer \\d+ Completed\\)\x00')
    1: re.compile('\\(Answer \\d+ Ack\\)\x00.*\\(Answer \\d+\\(CoqExn.*\\)\x00')

coquelicot/theories/AutoDerive.json apply_ext
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 212, in prove
    tactics_ori = self.query_gpt(self.fg_goals)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 162, in query_gpt
    return self.gpt.query(prompt.strip())
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/gpt.py", line 132, in query
    return self.query_gpt(prompt)
           ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/gpt.py", line 171, in query_gpt
    response = client.chat.completions.create(model=self.model,
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/openai/_utils/_utils.py", line 277, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/openai/resources/chat/completions.py", line 590, in create
    return self._post(
           ^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/openai/_base_client.py", line 1240, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/openai/_base_client.py", line 921, in request
    return self._request(
           ^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/openai/_base_client.py", line 1005, in _request
    return self._retry_request(
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/openai/_base_client.py", line 1053, in _retry_request
    return self._request(
           ^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/openai/_base_client.py", line 1005, in _request
    return self._retry_request(
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/openai/_base_client.py", line 1053, in _retry_request
    return self._request(
           ^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/openai/_base_client.py", line 1020, in _request
    raise self._make_status_error_from_response(err.response) from None
openai.RateLimitError: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}

coquelicot/theories/AutoDerive.json foldr_prop_nth
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 212, in prove
    tactics_ori = self.query_gpt(self.fg_goals)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 162, in query_gpt
    return self.gpt.query(prompt.strip())
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/gpt.py", line 132, in query
    return self.query_gpt(prompt)
           ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/gpt.py", line 171, in query_gpt
    response = client.chat.completions.create(model=self.model,
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/openai/_utils/_utils.py", line 277, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/openai/resources/chat/completions.py", line 590, in create
    return self._post(
           ^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/openai/_base_client.py", line 1240, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/openai/_base_client.py", line 921, in request
    return self._request(
           ^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/openai/_base_client.py", line 1005, in _request
    return self._retry_request(
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/openai/_base_client.py", line 1053, in _retry_request
    return self._request(
           ^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/openai/_base_client.py", line 1005, in _request
    return self._retry_request(
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/openai/_base_client.py", line 1053, in _retry_request
    return self._request(
           ^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/openai/_base_client.py", line 1020, in _request
    raise self._make_status_error_from_response(err.response) from None
openai.RateLimitError: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}

coquelicot/theories/Lim_seq.json is_inf_seq_ext
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 212, in prove
    tactics_ori = self.query_gpt(self.fg_goals)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 162, in query_gpt
    return self.gpt.query(prompt.strip())
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/gpt.py", line 132, in query
    return self.query_gpt(prompt)
           ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/gpt.py", line 171, in query_gpt
    response = client.chat.completions.create(model=self.model,
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/openai/_utils/_utils.py", line 277, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/openai/resources/chat/completions.py", line 590, in create
    return self._post(
           ^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/openai/_base_client.py", line 1240, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/openai/_base_client.py", line 921, in request
    return self._request(
           ^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/openai/_base_client.py", line 1020, in _request
    raise self._make_status_error_from_response(err.response) from None
openai.AuthenticationError: Error code: 401 - {'error': {'message': '无效的令牌 (request id: 2024082210011419281901161481273)', 'type': 'routetoai_error'}}

coquelicot/theories/Lim_seq.json is_inf_seq_ext
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 212, in prove
    tactics_ori = self.query_gpt(self.fg_goals)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 162, in query_gpt
    return self.gpt.query(prompt.strip())
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/gpt.py", line 133, in query
    return self.query_gpt(prompt)
           ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/gpt.py", line 172, in query_gpt
    response = client.chat.completions.create(model=self.model,
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/openai/_utils/_utils.py", line 277, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/openai/resources/chat/completions.py", line 590, in create
    return self._post(
           ^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/openai/_base_client.py", line 1240, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/openai/_base_client.py", line 921, in request
    return self._request(
           ^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/openai/_base_client.py", line 1020, in _request
    raise self._make_status_error_from_response(err.response) from None
openai.PermissionDeniedError: Error code: 403 - {'error': {'message': 'user quota is not enough (request id: 2024082210053692805037308720209)', 'type': 'routetoai_error', 'param': '', 'code': 'insufficient_user_quota'}}

coquelicot/theories/Lim_seq.json is_inf_seq_ext
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 212, in prove
    tactics_ori = self.query_gpt(self.fg_goals)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 162, in query_gpt
    return self.gpt.query(prompt.strip())
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/gpt.py", line 133, in query
    return self.query_gpt(prompt)
           ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/gpt.py", line 172, in query_gpt
    response = client.chat.completions.create(model=self.model,
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/openai/_utils/_utils.py", line 277, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/openai/resources/chat/completions.py", line 590, in create
    return self._post(
           ^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/openai/_base_client.py", line 1240, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/openai/_base_client.py", line 921, in request
    return self._request(
           ^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/openai/_base_client.py", line 1005, in _request
    return self._retry_request(
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/openai/_base_client.py", line 1053, in _retry_request
    return self._request(
           ^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/openai/_base_client.py", line 1005, in _request
    return self._retry_request(
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/openai/_base_client.py", line 1053, in _retry_request
    return self._request(
           ^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/openai/_base_client.py", line 1020, in _request
    raise self._make_status_error_from_response(err.response) from None
openai.RateLimitError: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}

coquelicot/theories/Hierarchy.json locally_2d_1d_const_y
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 212, in prove
    tactics_ori = self.query_gpt(self.fg_goals)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 159, in query_gpt
    premises, defs, lemmas = self.get_premises()
                             ^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 155, in get_premises
    return self.retrieval.retrieve_predict(self.serapi, goals)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/retrieval.py", line 187, in retrieve_predict
    query_bm25 = bm25(list(context))
                 ^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/retrieval.py", line 16, in bm25
    bm25 = BM25Okapi(corpus)
           ^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/rank_bm25.py", line 83, in __init__
    super().__init__(corpus, tokenizer)
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/rank_bm25.py", line 27, in __init__
    nd = self._initialize(corpus)
         ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/rank_bm25.py", line 52, in _initialize
    self.avgdl = num_doc / self.corpus_size
                 ~~~~~~~~^~~~~~~~~~~~~~~~~~
ZeroDivisionError: division by zero

verdi-raft/raft-proofs/StateMachineCorrectProof.json max_id_for_client_default_ge_default
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 229, in prove
    state_id, exn = self.execute_and_update(t, source)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 185, in execute_and_update
    state_ids, response, exn = self.serapi.try_add_and_execute(tactic, timeout=1 if tactic.startswith('qsimpl') else -1)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 423, in try_add_and_execute
    self.ctr_c()
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 126, in ctr_c
    self.proc.expect(['\(Answer \d+ Ack\)\x00.*\(Answer \d+ Completed\)\x00',
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/pexpect/spawnbase.py", line 354, in expect
    return self.expect_list(compiled_pattern_list,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/pexpect/spawnbase.py", line 383, in expect_list
    return exp.expect_loop(timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/pexpect/expect.py", line 181, in expect_loop
    return self.timeout(e)
           ^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/pexpect/expect.py", line 144, in timeout
    raise exc
pexpect.exceptions.TIMEOUT: <pexpect.popen_spawn.PopenSpawn object at 0x7f936e430b90>
searcher: searcher_re:
    0: re.compile('\\(Answer \\d+ Ack\\)\x00.*\\(Answer \\d+ Completed\\)\x00')
    1: re.compile('\\(Answer \\d+ Ack\\)\x00.*\\(Answer \\d+\\(CoqExn.*\\)\x00')
<pexpect.popen_spawn.PopenSpawn object at 0x7f936e430b90>
searcher: searcher_re:
    0: re.compile('\\(Answer \\d+ Ack\\)\x00.*\\(Answer \\d+ Completed\\)\x00')
    1: re.compile('\\(Answer \\d+ Ack\\)\x00.*\\(Answer \\d+\\(CoqExn.*\\)\x00')

coquelicot/theories/RInt_gen.json RInt_gen_at_point
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 212, in prove
    tactics_ori = self.query_gpt(self.fg_goals)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 159, in query_gpt
    premises, defs, lemmas = self.get_premises()
                             ^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 155, in get_premises
    return self.retrieval.retrieve_predict(self.serapi, goals)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/retrieval.py", line 187, in retrieve_predict
    query_bm25 = bm25(list(context))
                 ^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/retrieval.py", line 15, in bm25
    corpus = [s.split(sp) for s in contexts]
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/retrieval.py", line 15, in <listcomp>
    corpus = [s.split(sp) for s in contexts]
              ^^^^^^^
AttributeError: 'NoneType' object has no attribute 'split'

coq-library-undecidability/theories/L/Tactics/Lproc.json proc_closed
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 212, in prove
    tactics_ori = self.query_gpt(self.fg_goals)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 159, in query_gpt
    premises, defs, lemmas = self.get_premises()
                             ^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 155, in get_premises
    return self.retrieval.retrieve_predict(self.serapi, goals)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/retrieval.py", line 187, in retrieve_predict
    query_bm25 = bm25(list(context))
                 ^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/retrieval.py", line 16, in bm25
    bm25 = BM25Okapi(corpus)
           ^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/rank_bm25.py", line 83, in __init__
    super().__init__(corpus, tokenizer)
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/rank_bm25.py", line 27, in __init__
    nd = self._initialize(corpus)
         ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/rank_bm25.py", line 52, in _initialize
    self.avgdl = num_doc / self.corpus_size
                 ~~~~~~~~^~~~~~~~~~~~~~~~~~
ZeroDivisionError: division by zero

tree-automata/non_coacc_kill.json rec_co_8
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 212, in prove
    tactics_ori = self.query_gpt(self.fg_goals)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 159, in query_gpt
    premises, defs, lemmas = self.get_premises()
                             ^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 155, in get_premises
    return self.retrieval.retrieve_predict(self.serapi, goals)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/retrieval.py", line 187, in retrieve_predict
    query_bm25 = bm25(list(context))
                 ^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/retrieval.py", line 16, in bm25
    bm25 = BM25Okapi(corpus)
           ^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/rank_bm25.py", line 83, in __init__
    super().__init__(corpus, tokenizer)
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/rank_bm25.py", line 27, in __init__
    nd = self._initialize(corpus)
         ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/rank_bm25.py", line 52, in _initialize
    self.avgdl = num_doc / self.corpus_size
                 ~~~~~~~~^~~~~~~~~~~~~~~~~~
ZeroDivisionError: division by zero

tree-automata/inter.json sproductl_1_2
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 212, in prove
    tactics_ori = self.query_gpt(self.fg_goals)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 159, in query_gpt
    premises, defs, lemmas = self.get_premises()
                             ^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 155, in get_premises
    return self.retrieval.retrieve_predict(self.serapi, goals)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/retrieval.py", line 187, in retrieve_predict
    query_bm25 = bm25(list(context))
                 ^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/retrieval.py", line 16, in bm25
    bm25 = BM25Okapi(corpus)
           ^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/rank_bm25.py", line 83, in __init__
    super().__init__(corpus, tokenizer)
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/rank_bm25.py", line 27, in __init__
    nd = self._initialize(corpus)
         ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/rank_bm25.py", line 52, in _initialize
    self.avgdl = num_doc / self.corpus_size
                 ~~~~~~~~^~~~~~~~~~~~~~~~~~
ZeroDivisionError: division by zero

disel/Examples/Querying/QueryHooked.json send_lc_all_cases
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 212, in prove
    tactics_ori = self.query_gpt(self.fg_goals)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 159, in query_gpt
    premises, defs, lemmas = self.get_premises()
                             ^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 155, in get_premises
    return self.retrieval.retrieve_predict(self.serapi, goals)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/retrieval.py", line 187, in retrieve_predict
    query_bm25 = bm25(list(context))
                 ^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/retrieval.py", line 15, in bm25
    corpus = [s.split(sp) for s in contexts]
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/retrieval.py", line 15, in <listcomp>
    corpus = [s.split(sp) for s in contexts]
              ^^^^^^^
AttributeError: 'NoneType' object has no attribute 'split'

disel/Examples/Querying/QueryHooked.json recv_lq_case1
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 212, in prove
    tactics_ori = self.query_gpt(self.fg_goals)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 159, in query_gpt
    premises, defs, lemmas = self.get_premises()
                             ^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 155, in get_premises
    return self.retrieval.retrieve_predict(self.serapi, goals)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/retrieval.py", line 187, in retrieve_predict
    query_bm25 = bm25(list(context))
                 ^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/retrieval.py", line 15, in bm25
    corpus = [s.split(sp) for s in contexts]
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/retrieval.py", line 15, in <listcomp>
    corpus = [s.split(sp) for s in contexts]
              ^^^^^^^
AttributeError: 'NoneType' object has no attribute 'split'

disel/Examples/Querying/QueryHooked.json recv_lq_case2
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 212, in prove
    tactics_ori = self.query_gpt(self.fg_goals)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 159, in query_gpt
    premises, defs, lemmas = self.get_premises()
                             ^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 155, in get_premises
    return self.retrieval.retrieve_predict(self.serapi, goals)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/retrieval.py", line 187, in retrieve_predict
    query_bm25 = bm25(list(context))
                 ^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/retrieval.py", line 15, in bm25
    corpus = [s.split(sp) for s in contexts]
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/retrieval.py", line 15, in <listcomp>
    corpus = [s.split(sp) for s in contexts]
              ^^^^^^^
AttributeError: 'NoneType' object has no attribute 'split'

disel/Examples/Querying/QueryHooked.json recv_lq_case3
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 212, in prove
    tactics_ori = self.query_gpt(self.fg_goals)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 159, in query_gpt
    premises, defs, lemmas = self.get_premises()
                             ^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 155, in get_premises
    return self.retrieval.retrieve_predict(self.serapi, goals)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/retrieval.py", line 187, in retrieve_predict
    query_bm25 = bm25(list(context))
                 ^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/retrieval.py", line 15, in bm25
    corpus = [s.split(sp) for s in contexts]
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/retrieval.py", line 15, in <listcomp>
    corpus = [s.split(sp) for s in contexts]
              ^^^^^^^
AttributeError: 'NoneType' object has no attribute 'split'

coquelicot/theories/SF_seq.json sorted_last
Traceback (most recent call last):
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 138, in prove_file
    succ = prove(state, file, proof, resume_from, back=back)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/prover.py", line 47, in prove
    succ = state.prove(tactics_ori=tactics)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 229, in prove
    state_id, exn = self.execute_and_update(t, source)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/state.py", line 185, in execute_and_update
    state_ids, response, exn = self.serapi.try_add_and_execute(tactic, timeout=1 if tactic.startswith('qsimpl') else -1)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 423, in try_add_and_execute
    self.ctr_c()
  File "/home/minghai/data/PALM_ano/coqllm/src/serapi.py", line 126, in ctr_c
    self.proc.expect(['\(Answer \d+ Ack\)\x00.*\(Answer \d+ Completed\)\x00',
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/pexpect/spawnbase.py", line 354, in expect
    return self.expect_list(compiled_pattern_list,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/pexpect/spawnbase.py", line 383, in expect_list
    return exp.expect_loop(timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/pexpect/expect.py", line 181, in expect_loop
    return self.timeout(e)
           ^^^^^^^^^^^^^^^
  File "/home/minghai/anaconda3/envs/coq/lib/python3.11/site-packages/pexpect/expect.py", line 144, in timeout
    raise exc
pexpect.exceptions.TIMEOUT: <pexpect.popen_spawn.PopenSpawn object at 0x7f47deffa3d0>
searcher: searcher_re:
    0: re.compile('\\(Answer \\d+ Ack\\)\x00.*\\(Answer \\d+ Completed\\)\x00')
    1: re.compile('\\(Answer \\d+ Ack\\)\x00.*\\(Answer \\d+\\(CoqExn.*\\)\x00')
<pexpect.popen_spawn.PopenSpawn object at 0x7f47deffa3d0>
searcher: searcher_re:
    0: re.compile('\\(Answer \\d+ Ack\\)\x00.*\\(Answer \\d+ Completed\\)\x00')
    1: re.compile('\\(Answer \\d+ Ack\\)\x00.*\\(Answer \\d+\\(CoqExn.*\\)\x00')

