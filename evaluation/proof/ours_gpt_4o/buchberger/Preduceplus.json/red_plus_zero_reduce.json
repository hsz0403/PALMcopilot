[{"history": {"proof": "qsimpl time: 1 use: rep_plus_zero_reduce,pO.", "repairs": ["cannot_apply_in"], "exceptions": [{"ctx": ["intros Q p q Hp Hq Hreduceplus."], "tactic": "apply rep_plus_zero_reduce with (s := pO A n) in Hreduceplus; auto.", "exn": "Unable to apply lemma of type \"forall (Q : list (poly A0 eqA ltM)) (s t : list (Term A n)), reduceplus Q s t -> canonical A0 eqA ltM s -> forall p q : list (Term A n), eqP A eqA n s (pluspf A0 (eqA:=eqA) plusA eqA_dec (ltM:=ltM) ltM_dec p q) -> canonical A0 eqA ltM p -> canonical A0 eqA ltM q -> eqP A eqA n t (pO A n) -> exists r1 : list (Term A n), reduceplus Q p r1 /\\\\ reduceplus Q q (mults multA (n:=n) (invTerm invA (n:=n) (T1 A1 n)) r1)\" on hypothesis of type \"reduceplus Q (pluspf A0 (eqA:=eqA) plusA eqA_dec (ltM:=ltM) ltM_dec p q) (pO A n)\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["intros Q p q Hp Hq Hreduceplus.", "qsimpl time: 1 use: rep_plus_zero_reduce,pO."], "tactic": ["destruct Hreduceplus as [r1 [Hr1 Hr2]].", ""], "exn": "Expects a disjunctive pattern with 2 branches.", "type": "num_branch", "handled": false}]}, "chat": [], "original": "intros Q p q Hp Hq Hreduceplus. apply rep_plus_zero_reduce with (s := pO A n) in Hreduceplus; auto. destruct Hreduceplus as [r1 [Hr1 Hr2]]. exists r1. split; auto. eapply Rstar_0. eapply pluspf_is_minuspf. - eapply Hr2. - apply Hq.", "back_times": 0, "succ": false, "time": 61.83938550949097}]