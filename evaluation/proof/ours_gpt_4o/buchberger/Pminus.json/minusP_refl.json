[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros p q r Hminus Heq.", "induction Hminus.", "-", "subst."], "tactic": "apply mults_invTerm.", "exn": "In environment A : Set A0, A1 : A eqA : A -> A -> Prop plusA : A -> A -> A invA : A -> A minusA, multA : A -> A -> A divA : A -> forall b : A, ~ eqA b A0 -> A cs : CoefStructure A A0 A1 eqA plusA invA minusA multA divA eqA_dec : forall a b : A, {eqA a b} + {~ eqA a b} n : nat ltM : mon n -> mon n -> Prop ltM_dec : forall a b : mon n, {ltM a b} + {ltM b a} + {a = b} os : OrderStructure (mon n) (zero_mon n) ltM (mult_mon n) Unable to unify \"eqP ?M2209 ?M2212 ?M2220 (pluspf ?M2210 ?M2213 ?M2219 ?M2222 ?M2224 (mults ?M2216 (invTerm ?M2214 ?M2225) ?M2224)) (pO ?M2209 ?M2220)\" with \"mults multA (n:=n) (invTerm invA (n:=n) (T1 A1 n)) (pO A n) = pO A n\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros p q r Hminus Heq.", "induction Hminus.", "-", "subst.", "qsimpl time: 1 use: mults_invTerm."], "tactic": "apply cs.", "exn": "No such goal. Focus next goal with bullet -.", "type": "next_goal", "handled": true}, {"ctx": ["intros p q r Hminus Heq.", "induction Hminus.", "-", "subst.", "qsimpl time: 1 use: mults_invTerm.", "-"], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros p q r Hminus Heq.", "induction Hminus.", "-", "subst.", "qsimpl time: 1 use: mults_invTerm.", "-", "shelve.", "-"], "tactic": "eapply eqP_trans.", "exn": "The reference eqP_trans was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros p q r Hminus Heq.", "induction Hminus.", "-", "subst.", "qsimpl time: 1 use: mults_invTerm.", "-", "shelve.", "-", "eapply eqP_ind.", "++"], "tactic": "apply eqp_pluspf_com.", "exn": "In environment A : Set A0, A1 : A eqA : A -> A -> Prop plusA : A -> A -> A invA : A -> A minusA, multA : A -> A -> A divA : A -> forall b : A, ~ eqA b A0 -> A cs : CoefStructure A A0 A1 eqA plusA invA minusA multA divA eqA_dec : forall a b : A, {eqA a b} + {~ eqA a b} n : nat ltM : mon n -> mon n -> Prop ltM_dec : forall a b : mon n, {ltM a b} + {ltM b a} + {a = b} os : OrderStructure (mon n) (zero_mon n) ltM (mult_mon n) a1, a2 : Term A n l1, l2, l3 : list (Term A n) H : ltT (A:=A) ltM a2 a1 Hminus : minusP l1 (pX (A:=A) (n:=n) a2 l2) l3 Heq : pX (A:=A) (n:=n) a1 l1 = pX (A:=A) (n:=n) a2 l2 IHHminus : l1 = pX (A:=A) (n:=n) a2 l2 -> l3 = pO A n Unable to unify \"eqP ?M2232 ?M2235 ?M2243 (pluspf ?M2233 ?M2236 ?M2242 ?M2245 ?M2247 ?M2248) (pluspf ?M2233 ?M2236 ?M2242 ?M2245 ?M2249 ?M2250)\" with \"pO A n = pO A n\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros p q r Hminus Heq.", "induction Hminus.", "-", "subst.", "qsimpl time: 1 use: mults_invTerm.", "-", "shelve.", "-", "eapply eqP_ind.", "++", "qsimpl time: 1 use: T1,pO,mults,plusP_uniq_eqP,invTerm,mults_invTerm,eqp_pluspf_com."], "tactic": "apply cs.", "exn": "No such goal. Focus next goal with bullet ++.", "type": "next_goal", "handled": true}, {"ctx": ["intros p q r Hminus Heq.", "induction Hminus.", "-", "subst.", "qsimpl time: 1 use: mults_invTerm.", "-", "shelve.", "-", "eapply eqP_ind.", "++", "qsimpl time: 1 use: T1,pO,mults,plusP_uniq_eqP,invTerm,mults_invTerm,eqp_pluspf_com.", "++"], "tactic": "apply eqp_pluspf_com_r.", "exn": "In environment A : Set A0, A1 : A eqA : A -> A -> Prop plusA : A -> A -> A invA : A -> A minusA, multA : A -> A -> A divA : A -> forall b : A, ~ eqA b A0 -> A cs : CoefStructure A A0 A1 eqA plusA invA minusA multA divA eqA_dec : forall a b : A, {eqA a b} + {~ eqA a b} n : nat ltM : mon n -> mon n -> Prop ltM_dec : forall a b : mon n, {ltM a b} + {ltM b a} + {a = b} os : OrderStructure (mon n) (zero_mon n) ltM (mult_mon n) a1, a2 : Term A n l1, l2, l3 : list (Term A n) H : ltT (A:=A) ltM a2 a1 Hminus : minusP l1 (pX (A:=A) (n:=n) a2 l2) l3 Heq : pX (A:=A) (n:=n) a1 l1 = pX (A:=A) (n:=n) a2 l2 IHHminus : l1 = pX (A:=A) (n:=n) a2 l2 -> l3 = pO A n Unable to unify \"list (Term ?M2274 ?M2285)\" with \"(A * mon n)%type\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros p q r Hminus Heq.", "induction Hminus.", "-", "subst.", "qsimpl time: 1 use: mults_invTerm.", "-", "shelve.", "-", "eapply eqP_ind.", "++", "qsimpl time: 1 use: T1,pO,mults,plusP_uniq_eqP,invTerm,mults_invTerm,eqp_pluspf_com.", "++", "qsimpl time: 1 use: T1,pO,mults,eqp_pluspf_com_r,plusP_uniq_eqP,invTerm,mults_invTerm,eqp_pluspf_com."], "tactic": "apply cs.", "exn": "The reference cs was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros p q r Hminus Heq.", "induction Hminus.", "-", "subst.", "qsimpl time: 1 use: mults_invTerm.", "-", "shelve.", "-", "eapply eqP_ind.", "++", "qsimpl time: 1 use: T1,pO,mults,plusP_uniq_eqP,invTerm,mults_invTerm,eqp_pluspf_com.", "++", "qsimpl time: 1 use: T1,pO,mults,eqp_pluspf_com_r,plusP_uniq_eqP,invTerm,mults_invTerm,eqp_pluspf_com.", "apply Build_equivalence."], "tactic": "apply ltM_dec.", "exn": "In environment H3 : forall (A : Set) (A0 A1 : A) (eqA : A -> A -> Prop) (plusA : A -> A -> A) (invA : A -> A) (minusA multA : A -> A -> A) (divA : A -> forall b : A, (eqA b A0 -> False) -> A), CoefStructure A A0 A1 eqA plusA invA minusA multA divA -> forall (eqA_dec : forall a b : A, {eqA a b} + {eqA a b -> False}) (n : nat) (ltM : mon n -> mon n -> Prop) (ltM_dec : forall a b : mon n, {ltM a b} + {ltM b a} + {a = b}), OrderStructure (mon n) (zero_mon n) ltM (mult_mon n) -> forall p q r t : list (Term A n), canonical A0 eqA ltM p -> canonical A0 eqA ltM q -> canonical A0 eqA ltM r -> canonical A0 eqA ltM t -> eqP A eqA n p r -> eqP A eqA n q t -> eqP A eqA n (pluspf A0 (eqA:=eqA) plusA eqA_dec (ltM:=ltM) ltM_dec p q) (pluspf A0 (eqA:=eqA) plusA eqA_dec (ltM:=ltM) ltM_dec r t) t0 : forall A : Set, (A -> A) -> forall n : nat, Term A n -> Term A n l0 : forall A : Set, (A -> A -> A) -> forall n : nat, Term A n -> list (Term A n) -> list (Term A n) l : forall (A : Set) (n : nat), list (Term A n) t : forall A : Set, A -> forall n : nat, Term A n H2 : forall (A : Set) (A0 A1 : A) (eqA : A -> A -> Prop) (plusA : A -> A -> A) (invA : A -> A) (minusA multA : A -> A -> A) (divA : A -> forall b : A, (eqA b A0 -> False) -> A), CoefStructure A A0 A1 eqA plusA invA minusA multA divA -> forall (eqA_dec : forall a b : A, {eqA a b} + {eqA a b -> False}) (n : nat) (ltM : mon n -> mon n -> Prop) (ltM_dec : forall a b : mon n, {ltM a b} + {ltM b a} + {a = b}), OrderStructure (mon n) (zero_mon n) ltM (mult_mon n) -> forall (p : list (Term A n)) (a : Term A n), eqTerm eqA (n:=n) a (t A A1 n) -> eqP A eqA n (pluspf A0 (eqA:=eqA) plusA eqA_dec (ltM:=ltM) ltM_dec p (l0 A multA n (t0 A invA n a) p)) (l A n) H1 : forall (A : Set) (A0 A1 : A) (eqA : A -> A -> Prop) (plusA : A -> A -> A) (invA : A -> A) (minusA multA : A -> A -> A) (divA : A -> forall b : A, (eqA b A0 -> False) -> A), CoefStructure A A0 A1 eqA plusA invA minusA multA divA -> forall (n : nat) (ltM : mon n -> mon n -> Prop), OrderStructure (mon n) (zero_mon n) ltM (mult_mon n) -> forall p q r s : list (Term A n), plusP A A0 eqA plusA n ltM p q r -> plusP A A0 eqA plusA n ltM p q s -> eqP A eqA n r s H0 : forall (A : Set) (A0 A1 : A) (eqA : A -> A -> Prop) (plusA : A -> A -> A) (invA : A -> A) (minusA multA : A -> A -> A) (divA : A -> forall b : A, (eqA b A0 -> False) -> A), CoefStructure A A0 A1 eqA plusA invA minusA multA divA -> forall (eqA_dec : forall a b : A, {eqA a b} + {eqA a b -> False}) (n : nat) (ltM : mon n -> mon n -> Prop) (ltM_dec : forall a b : mon n, {ltM a b} + {ltM b a} + {a = b}), OrderStructure (mon n) (zero_mon n) ltM (mult_mon n) -> forall p q r : list (Term A n), eqP A eqA n p q -> canonical A0 eqA ltM p -> canonical A0 eqA ltM q -> canonical A0 eqA ltM r -> eqP A eqA n (pluspf A0 (eqA:=eqA) plusA eqA_dec (ltM:=ltM) ltM_dec r p) (pluspf A0 (eqA:=eqA) plusA eqA_dec (ltM:=ltM) ltM_dec r q) A : Set A0, A1 : A eqA : A -> A -> Prop plusA : A -> A -> A invA : A -> A minusA, multA : A -> A -> A divA : A -> forall b : A, (eqA b A0 -> False) -> A eqA_dec : forall a b : A, {eqA a b} + {eqA a b -> False} n : nat ltM : mon n -> mon n -> Prop ltM_dec : forall a b : mon n, {ltM a b} + {ltM b a} + {a = b} a2 : Term A n l2, l3 : list (Term A n) H : ltT (A:=A) ltM a2 a2 IHHminus : l2 = pX (A:=A) (n:=n) a2 l2 -> l3 = pO A n Hminus : minusP l2 (pX (A:=A) (n:=n) a2 l2) l3 ma, mb : Term A n q : list (Term A n) H4 : eqTerm eqA (n:=n) ma mb H5 : eqP A eqA n q q M1_min : forall x : mon n, ltM x (zero_mon n) -> False ltM_nonrefl : forall x : mon n, ltM x x -> False ltM_trans : transitive (mon n) ltM ltM_wf : well_founded ltM ltM_plusr : forall x y z : mon n, ltM x y -> ltM (mult_mon n x z) (mult_mon n y z) ltM_plusl : forall x y z : mon n, ltM x y -> ltM (mult_mon n z x) (mult_mon n z y) A1_diff_A0 : eqA A1 A0 -> False eqA_ref : reflexive A eqA eqA_sym : symmetric A eqA eqA_trans : transitive A eqA plusA_assoc : forall a b c : A, eqA (plusA a (plusA b c)) (plusA (plusA a b) c) plusA_com : forall a b : A, eqA (plusA a b) (plusA b a) plusA_eqA_comp : forall a b c d : A, eqA a c -> eqA b d -> eqA (plusA a b) (plusA c d) plusA_A0 : forall a : A, eqA a (plusA a A0) invA_plusA : forall a : A, eqA A0 (plusA a (invA a)) invA_eqA_comp : forall a b : A, eqA a b -> eqA (invA a) (invA b) minusA_def : forall a b : A, eqA (minusA a b) (plusA a (invA b)) multA_eqA_comp : forall a b c d : A, eqA a c -> eqA b d -> eqA (multA a b) (multA c d) multA_assoc : forall a b c : A, eqA (multA a (multA b c)) (multA (multA a b) c) multA_com : forall a b : A, eqA (multA a b) (multA b a) multA_dist_l : forall a b c : A, eqA (plusA (multA c a) (multA c b)) (multA c (plusA a b)) multA_A0_l : forall a : A, eqA (multA A0 a) A0 multA_A1_l : forall a : A, eqA (multA A1 a) a divA_rew : forall (a b : A) (nZ1 nZ2 : eqA b A0 -> False), divA a b nZ1 = divA a b nZ2 divA_is_multA : forall (a b : A) (nZb : eqA b A0 -> False), eqA a (multA (divA a b nZb) b) divA_eqA_comp : forall (a b c d : A) (nZb : eqA b A0 -> False) (nZd : eqA d A0 -> False), eqA a c -> eqA b d -> eqA (divA a b nZb) (divA c d nZd) divA_multA_comp_r : forall (a b c : A) (nZc : eqA c A0 -> False), eqA (divA (multA a b) c nZc) (multA (divA a c nZc) b) divA_invA_r : forall (a b : A) (nZb : eqA b A0 -> False) (nZib : eqA (invA b) A0 -> False), eqA (divA a (invA b) nZib) (invA (divA a b nZb)) Unable to unify \"{ltM ?M11308 ?M11309} + {ltM ?M11309 ?M11308} + {?M11308 = ?M11309}\" with \"forall x : list (Term A n), x = x\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros p q r Hminus Heq.", "induction Hminus.", "-", "subst.", "qsimpl time: 1 use: mults_invTerm.", "-", "shelve.", "-", "eapply eqP_ind.", "++", "qsimpl time: 1 use: T1,pO,mults,plusP_uniq_eqP,invTerm,mults_invTerm,eqp_pluspf_com.", "++", "qsimpl time: 1 use: T1,pO,mults,eqp_pluspf_com_r,plusP_uniq_eqP,invTerm,mults_invTerm,eqp_pluspf_com.", "apply Build_equivalence.", "qsimpl time: 1 use: T1,pO,mults,eqp_pluspf_com_r,plusP_uniq_eqP,invTerm,mults_invTerm,eqp_pluspf_com."], "tactic": "apply os.", "exn": "The reference os was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros p q r Hminus Heq.", "induction Hminus.", "-", "subst.", "qsimpl time: 1 use: mults_invTerm.", "-", "shelve.", "-", "eapply eqP_ind.", "++", "qsimpl time: 1 use: T1,pO,mults,plusP_uniq_eqP,invTerm,mults_invTerm,eqp_pluspf_com.", "++", "qsimpl time: 1 use: T1,pO,mults,eqp_pluspf_com_r,plusP_uniq_eqP,invTerm,mults_invTerm,eqp_pluspf_com.", "apply Build_equivalence.", "qsimpl time: 1 use: T1,pO,mults,eqp_pluspf_com_r,plusP_uniq_eqP,invTerm,mults_invTerm,eqp_pluspf_com.", "apply Build_preorder."], "tactic": "-", "exn": "Wrong bullet -: Current bullet ++ is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros p q r Hminus Heq.", "induction Hminus.", "-", "subst.", "qsimpl time: 1 use: mults_invTerm.", "-", "shelve.", "-", "eapply eqP_ind.", "++", "qsimpl time: 1 use: T1,pO,mults,plusP_uniq_eqP,invTerm,mults_invTerm,eqp_pluspf_com.", "++", "qsimpl time: 1 use: T1,pO,mults,eqp_pluspf_com_r,plusP_uniq_eqP,invTerm,mults_invTerm,eqp_pluspf_com.", "apply Build_equivalence.", "qsimpl time: 1 use: T1,pO,mults,eqp_pluspf_com_r,plusP_uniq_eqP,invTerm,mults_invTerm,eqp_pluspf_com.", "apply Build_preorder.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "**", "shelve."], "tactic": "-", "exn": "Wrong bullet -: Expecting ++.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros p q r Hminus Heq.", "induction Hminus.", "-", "subst.", "qsimpl time: 1 use: mults_invTerm.", "-", "shelve.", "-", "eapply eqP_ind.", "++", "qsimpl time: 1 use: T1,pO,mults,plusP_uniq_eqP,invTerm,mults_invTerm,eqp_pluspf_com.", "++", "qsimpl time: 1 use: T1,pO,mults,eqp_pluspf_com_r,plusP_uniq_eqP,invTerm,mults_invTerm,eqp_pluspf_com.", "apply Build_equivalence.", "qsimpl time: 1 use: T1,pO,mults,eqp_pluspf_com_r,plusP_uniq_eqP,invTerm,mults_invTerm,eqp_pluspf_com.", "apply Build_preorder.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "++"], "tactic": "eapply eqP_trans.", "exn": "The reference eqP_trans was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros p q r Hminus Heq.", "induction Hminus.", "-", "subst.", "qsimpl time: 1 use: mults_invTerm.", "-", "shelve.", "-", "eapply eqP_ind.", "++", "qsimpl time: 1 use: T1,pO,mults,plusP_uniq_eqP,invTerm,mults_invTerm,eqp_pluspf_com.", "++", "qsimpl time: 1 use: T1,pO,mults,eqp_pluspf_com_r,plusP_uniq_eqP,invTerm,mults_invTerm,eqp_pluspf_com.", "apply Build_equivalence.", "qsimpl time: 1 use: T1,pO,mults,eqp_pluspf_com_r,plusP_uniq_eqP,invTerm,mults_invTerm,eqp_pluspf_com.", "apply Build_preorder.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "++", "eapply eqp_trans."], "tactic": "++", "exn": "Wrong bullet ++: Current bullet ++ is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros p q r Hminus Heq.", "induction Hminus.", "-", "subst.", "qsimpl time: 1 use: mults_invTerm.", "-", "shelve.", "-", "eapply eqP_ind.", "++", "qsimpl time: 1 use: T1,pO,mults,plusP_uniq_eqP,invTerm,mults_invTerm,eqp_pluspf_com.", "++", "qsimpl time: 1 use: T1,pO,mults,eqp_pluspf_com_r,plusP_uniq_eqP,invTerm,mults_invTerm,eqp_pluspf_com.", "apply Build_equivalence.", "qsimpl time: 1 use: T1,pO,mults,eqp_pluspf_com_r,plusP_uniq_eqP,invTerm,mults_invTerm,eqp_pluspf_com.", "apply Build_preorder.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "++", "eapply eqp_trans.", "**", "shelve.", "**", "shelve.", "**", "shelve."], "tactic": "++", "exn": "Wrong bullet ++: Expecting -.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros p q r Hminus Heq.", "induction Hminus.", "-", "subst.", "qsimpl time: 1 use: mults_invTerm.", "-", "shelve.", "-", "eapply eqP_ind.", "++", "qsimpl time: 1 use: T1,pO,mults,plusP_uniq_eqP,invTerm,mults_invTerm,eqp_pluspf_com.", "++", "qsimpl time: 1 use: T1,pO,mults,eqp_pluspf_com_r,plusP_uniq_eqP,invTerm,mults_invTerm,eqp_pluspf_com.", "apply Build_equivalence.", "qsimpl time: 1 use: T1,pO,mults,eqp_pluspf_com_r,plusP_uniq_eqP,invTerm,mults_invTerm,eqp_pluspf_com.", "apply Build_preorder.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "++", "eapply eqp_trans.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "-"], "tactic": "apply eqp_pluspf_com_l.", "exn": "In environment A : Set A0, A1 : A eqA : A -> A -> Prop plusA : A -> A -> A invA : A -> A minusA, multA : A -> A -> A divA : A -> forall b : A, ~ eqA b A0 -> A cs : CoefStructure A A0 A1 eqA plusA invA minusA multA divA eqA_dec : forall a b : A, {eqA a b} + {~ eqA a b} n : nat ltM : mon n -> mon n -> Prop ltM_dec : forall a b : mon n, {ltM a b} + {ltM b a} + {a = b} os : OrderStructure (mon n) (zero_mon n) ltM (mult_mon n) a1, a2 : Term A n l1, l2, l3 : list (Term A n) Hminus : minusP l1 l2 l3 H : eqT (A:=A) (n:=n) a1 a2 H0 : zeroP A0 eqA (n:=n) (minusTerm minusA (n:=n) a1 a2) Heq : pX (A:=A) (n:=n) a1 l1 = pX (A:=A) (n:=n) a2 l2 IHHminus : l1 = l2 -> l3 = pO A n Unable to unify \"eqP ?M12808 ?M12811 ?M12819 (pluspf ?M12809 ?M12812 ?M12818 ?M12821 ?M12823 ?M12825) (pluspf ?M12809 ?M12812 ?M12818 ?M12821 ?M12824 ?M12825)\" with \"l3 = pO A n\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros p q r Hminus Heq.", "induction Hminus.", "-", "subst.", "qsimpl time: 1 use: mults_invTerm.", "-", "shelve.", "-", "eapply eqP_ind.", "++", "qsimpl time: 1 use: T1,pO,mults,plusP_uniq_eqP,invTerm,mults_invTerm,eqp_pluspf_com.", "++", "qsimpl time: 1 use: T1,pO,mults,eqp_pluspf_com_r,plusP_uniq_eqP,invTerm,mults_invTerm,eqp_pluspf_com.", "apply Build_equivalence.", "qsimpl time: 1 use: T1,pO,mults,eqp_pluspf_com_r,plusP_uniq_eqP,invTerm,mults_invTerm,eqp_pluspf_com.", "apply Build_preorder.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "++", "eapply eqp_trans.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "-", "qsimpl time: 1 use: T1,pO,mults,eqp_pluspf_com_l,eqp_pluspf_com_r,plusP_uniq_eqP,invTerm,mults_invTerm,eqp_pluspf_com."], "tactic": "apply cs.", "exn": "The reference cs was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros p q r Hminus Heq.", "induction Hminus.", "-", "subst.", "qsimpl time: 1 use: mults_invTerm.", "-", "shelve.", "-", "eapply eqP_ind.", "++", "qsimpl time: 1 use: T1,pO,mults,plusP_uniq_eqP,invTerm,mults_invTerm,eqp_pluspf_com.", "++", "qsimpl time: 1 use: T1,pO,mults,eqp_pluspf_com_r,plusP_uniq_eqP,invTerm,mults_invTerm,eqp_pluspf_com.", "apply Build_equivalence.", "qsimpl time: 1 use: T1,pO,mults,eqp_pluspf_com_r,plusP_uniq_eqP,invTerm,mults_invTerm,eqp_pluspf_com.", "apply Build_preorder.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "++", "eapply eqp_trans.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "-", "qsimpl time: 1 use: T1,pO,mults,eqp_pluspf_com_l,eqp_pluspf_com_r,plusP_uniq_eqP,invTerm,mults_invTerm,eqp_pluspf_com.", "apply Build_equivalence."], "tactic": "apply ltM_dec.", "exn": "In environment H5 : forall (A : Set) (A0 A1 : A) (eqA : A -> A -> Prop) (plusA : A -> A -> A) (invA : A -> A) (minusA multA : A -> A -> A) (divA : A -> forall b : A, (eqA b A0 -> False) -> A), CoefStructure A A0 A1 eqA plusA invA minusA multA divA -> forall (eqA_dec : forall a b : A, {eqA a b} + {eqA a b -> False}) (n : nat) (ltM : mon n -> mon n -> Prop) (ltM_dec : forall a b : mon n, {ltM a b} + {ltM b a} + {a = b}), OrderStructure (mon n) (zero_mon n) ltM (mult_mon n) -> forall p q r t : list (Term A n), canonical A0 eqA ltM p -> canonical A0 eqA ltM q -> canonical A0 eqA ltM r -> canonical A0 eqA ltM t -> eqP A eqA n p r -> eqP A eqA n q t -> eqP A eqA n (pluspf A0 (eqA:=eqA) plusA eqA_dec (ltM:=ltM) ltM_dec p q) (pluspf A0 (eqA:=eqA) plusA eqA_dec (ltM:=ltM) ltM_dec r t) t0 : forall A : Set, (A -> A) -> forall n : nat, Term A n -> Term A n l0 : forall A : Set, (A -> A -> A) -> forall n : nat, Term A n -> list (Term A n) -> list (Term A n) l : forall (A : Set) (n : nat), list (Term A n) t : forall A : Set, A -> forall n : nat, Term A n H4 : forall (A : Set) (A0 A1 : A) (eqA : A -> A -> Prop) (plusA : A -> A -> A) (invA : A -> A) (minusA multA : A -> A -> A) (divA : A -> forall b : A, (eqA b A0 -> False) -> A), CoefStructure A A0 A1 eqA plusA invA minusA multA divA -> forall (eqA_dec : forall a b : A, {eqA a b} + {eqA a b -> False}) (n : nat) (ltM : mon n -> mon n -> Prop) (ltM_dec : forall a b : mon n, {ltM a b} + {ltM b a} + {a = b}), OrderStructure (mon n) (zero_mon n) ltM (mult_mon n) -> forall (p : list (Term A n)) (a : Term A n), eqTerm eqA (n:=n) a (t A A1 n) -> eqP A eqA n (pluspf A0 (eqA:=eqA) plusA eqA_dec (ltM:=ltM) ltM_dec p (l0 A multA n (t0 A invA n a) p)) (l A n) H3 : forall (A : Set) (A0 A1 : A) (eqA : A -> A -> Prop) (plusA : A -> A -> A) (invA : A -> A) (minusA multA : A -> A -> A) (divA : A -> forall b : A, (eqA b A0 -> False) -> A), CoefStructure A A0 A1 eqA plusA invA minusA multA divA -> forall (n : nat) (ltM : mon n -> mon n -> Prop), OrderStructure (mon n) (zero_mon n) ltM (mult_mon n) -> forall p q r s : list (Term A n), plusP A A0 eqA plusA n ltM p q r -> plusP A A0 eqA plusA n ltM p q s -> eqP A eqA n r s H2 : forall (A : Set) (A0 A1 : A) (eqA : A -> A -> Prop) (plusA : A -> A -> A) (invA : A -> A) (minusA multA : A -> A -> A) (divA : A -> forall b : A, (eqA b A0 -> False) -> A), CoefStructure A A0 A1 eqA plusA invA minusA multA divA -> forall (eqA_dec : forall a b : A, {eqA a b} + {eqA a b -> False}) (n : nat) (ltM : mon n -> mon n -> Prop) (ltM_dec : forall a b : mon n, {ltM a b} + {ltM b a} + {a = b}), OrderStructure (mon n) (zero_mon n) ltM (mult_mon n) -> forall p q r : list (Term A n), eqP A eqA n p q -> canonical A0 eqA ltM p -> canonical A0 eqA ltM q -> canonical A0 eqA ltM r -> eqP A eqA n (pluspf A0 (eqA:=eqA) plusA eqA_dec (ltM:=ltM) ltM_dec r p) (pluspf A0 (eqA:=eqA) plusA eqA_dec (ltM:=ltM) ltM_dec r q) H1 : forall (A : Set) (A0 A1 : A) (eqA : A -> A -> Prop) (plusA : A -> A -> A) (invA : A -> A) (minusA multA : A -> A -> A) (divA : A -> forall b : A, (eqA b A0 -> False) -> A), CoefStructure A A0 A1 eqA plusA invA minusA multA divA -> forall (eqA_dec : forall a b : A, {eqA a b} + {eqA a b -> False}) (n : nat) (ltM : mon n -> mon n -> Prop) (ltM_dec : forall a b : mon n, {ltM a b} + {ltM b a} + {a = b}), OrderStructure (mon n) (zero_mon n) ltM (mult_mon n) -> forall p q r : list (Term A n), eqP A eqA n p q -> canonical A0 eqA ltM p -> canonical A0 eqA ltM q -> canonical A0 eqA ltM r -> eqP A eqA n (pluspf A0 (eqA:=eqA) plusA eqA_dec (ltM:=ltM) ltM_dec p r) (pluspf A0 (eqA:=eqA) plusA eqA_dec (ltM:=ltM) ltM_dec q r) A : Set A0, A1 : A eqA : A -> A -> Prop plusA : A -> A -> A invA : A -> A minusA, multA : A -> A -> A divA : A -> forall b : A, (eqA b A0 -> False) -> A eqA_dec : forall a b : A, {eqA a b} + {eqA a b -> False} n : nat ltM : mon n -> mon n -> Prop ltM_dec : forall a b : mon n, {ltM a b} + {ltM b a} + {a = b} a2 : Term A n l2 : list (Term A n) Hminus : minusP l2 l2 (pO A n) H0 : zeroP A0 eqA (n:=n) (minusTerm minusA (n:=n) a2 a2) M1_min : forall x : mon n, ltM x (zero_mon n) -> False ltM_nonrefl : forall x : mon n, ltM x x -> False ltM_trans : transitive (mon n) ltM ltM_wf : well_founded ltM ltM_plusr : forall x y z : mon n, ltM x y -> ltM (mult_mon n x z) (mult_mon n y z) ltM_plusl : forall x y z : mon n, ltM x y -> ltM (mult_mon n z x) (mult_mon n z y) A1_diff_A0 : eqA A1 A0 -> False eqA_ref : reflexive A eqA eqA_sym : symmetric A eqA eqA_trans : transitive A eqA plusA_assoc : forall a b c : A, eqA (plusA a (plusA b c)) (plusA (plusA a b) c) plusA_com : forall a b : A, eqA (plusA a b) (plusA b a) plusA_eqA_comp : forall a b c d : A, eqA a c -> eqA b d -> eqA (plusA a b) (plusA c d) plusA_A0 : forall a : A, eqA a (plusA a A0) invA_plusA : forall a : A, eqA A0 (plusA a (invA a)) invA_eqA_comp : forall a b : A, eqA a b -> eqA (invA a) (invA b) minusA_def : forall a b : A, eqA (minusA a b) (plusA a (invA b)) multA_eqA_comp : forall a b c d : A, eqA a c -> eqA b d -> eqA (multA a b) (multA c d) multA_assoc : forall a b c : A, eqA (multA a (multA b c)) (multA (multA a b) c) multA_com : forall a b : A, eqA (multA a b) (multA b a) multA_dist_l : forall a b c : A, eqA (plusA (multA c a) (multA c b)) (multA c (plusA a b)) multA_A0_l : forall a : A, eqA (multA A0 a) A0 multA_A1_l : forall a : A, eqA (multA A1 a) a divA_rew : forall (a b : A) (nZ1 nZ2 : eqA b A0 -> False), divA a b nZ1 = divA a b nZ2 divA_is_multA : forall (a b : A) (nZb : eqA b A0 -> False), eqA a (multA (divA a b nZb) b) divA_eqA_comp : forall (a b c d : A) (nZb : eqA b A0 -> False) (nZd : eqA d A0 -> False), eqA a c -> eqA b d -> eqA (divA a b nZb) (divA c d nZd) divA_multA_comp_r : forall (a b c : A) (nZc : eqA c A0 -> False), eqA (divA (multA a b) c nZc) (multA (divA a c nZc) b) divA_invA_r : forall (a b : A) (nZb : eqA b A0 -> False) (nZib : eqA (invA b) A0 -> False), eqA (divA a (invA b) nZib) (invA (divA a b nZb)) Unable to unify \"{ltM ?M21898 ?M21899} + {ltM ?M21899 ?M21898} + {?M21898 = ?M21899}\" with \"forall x : list (Term A n), x = x\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros p q r Hminus Heq.", "induction Hminus.", "-", "subst.", "qsimpl time: 1 use: mults_invTerm.", "-", "shelve.", "-", "eapply eqP_ind.", "++", "qsimpl time: 1 use: T1,pO,mults,plusP_uniq_eqP,invTerm,mults_invTerm,eqp_pluspf_com.", "++", "qsimpl time: 1 use: T1,pO,mults,eqp_pluspf_com_r,plusP_uniq_eqP,invTerm,mults_invTerm,eqp_pluspf_com.", "apply Build_equivalence.", "qsimpl time: 1 use: T1,pO,mults,eqp_pluspf_com_r,plusP_uniq_eqP,invTerm,mults_invTerm,eqp_pluspf_com.", "apply Build_preorder.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "++", "eapply eqp_trans.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "-", "qsimpl time: 1 use: T1,pO,mults,eqp_pluspf_com_l,eqp_pluspf_com_r,plusP_uniq_eqP,invTerm,mults_invTerm,eqp_pluspf_com.", "apply Build_equivalence.", "qsimpl time: 1 use: T1,pO,mults,eqp_pluspf_com_l,eqp_pluspf_com_r,plusP_uniq_eqP,invTerm,mults_invTerm,eqp_pluspf_com."], "tactic": "apply os.", "exn": "The reference os was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros p q r Hminus Heq.", "induction Hminus.", "-", "subst.", "qsimpl time: 1 use: mults_invTerm.", "-", "shelve.", "-", "eapply eqP_ind.", "++", "qsimpl time: 1 use: T1,pO,mults,plusP_uniq_eqP,invTerm,mults_invTerm,eqp_pluspf_com.", "++", "qsimpl time: 1 use: T1,pO,mults,eqp_pluspf_com_r,plusP_uniq_eqP,invTerm,mults_invTerm,eqp_pluspf_com.", "apply Build_equivalence.", "qsimpl time: 1 use: T1,pO,mults,eqp_pluspf_com_r,plusP_uniq_eqP,invTerm,mults_invTerm,eqp_pluspf_com.", "apply Build_preorder.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "++", "eapply eqp_trans.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "-", "qsimpl time: 1 use: T1,pO,mults,eqp_pluspf_com_l,eqp_pluspf_com_r,plusP_uniq_eqP,invTerm,mults_invTerm,eqp_pluspf_com.", "apply Build_equivalence.", "qsimpl time: 1 use: T1,pO,mults,eqp_pluspf_com_l,eqp_pluspf_com_r,plusP_uniq_eqP,invTerm,mults_invTerm,eqp_pluspf_com.", "apply Build_equivalence.", "++"], "tactic": "apply eqp_pluspf_com.", "exn": "In environment H5 : forall (A : Set) (A0 A1 : A) (eqA : A -> A -> Prop) (plusA : A -> A -> A) (invA : A -> A) (minusA multA : A -> A -> A) (divA : A -> forall b : A, (eqA b A0 -> False) -> A), CoefStructure A A0 A1 eqA plusA invA minusA multA divA -> forall (eqA_dec : forall a b : A, {eqA a b} + {eqA a b -> False}) (n : nat) (ltM : mon n -> mon n -> Prop) (ltM_dec : forall a b : mon n, {ltM a b} + {ltM b a} + {a = b}), OrderStructure (mon n) (zero_mon n) ltM (mult_mon n) -> forall p q r t : list (Term A n), canonical A0 eqA ltM p -> canonical A0 eqA ltM q -> canonical A0 eqA ltM r -> canonical A0 eqA ltM t -> eqP A eqA n p r -> eqP A eqA n q t -> eqP A eqA n (pluspf A0 (eqA:=eqA) plusA eqA_dec (ltM:=ltM) ltM_dec p q) (pluspf A0 (eqA:=eqA) plusA eqA_dec (ltM:=ltM) ltM_dec r t) t0 : forall A : Set, (A -> A) -> forall n : nat, Term A n -> Term A n l0 : forall A : Set, (A -> A -> A) -> forall n : nat, Term A n -> list (Term A n) -> list (Term A n) l : forall (A : Set) (n : nat), list (Term A n) t : forall A : Set, A -> forall n : nat, Term A n H4 : forall (A : Set) (A0 A1 : A) (eqA : A -> A -> Prop) (plusA : A -> A -> A) (invA : A -> A) (minusA multA : A -> A -> A) (divA : A -> forall b : A, (eqA b A0 -> False) -> A), CoefStructure A A0 A1 eqA plusA invA minusA multA divA -> forall (eqA_dec : forall a b : A, {eqA a b} + {eqA a b -> False}) (n : nat) (ltM : mon n -> mon n -> Prop) (ltM_dec : forall a b : mon n, {ltM a b} + {ltM b a} + {a = b}), OrderStructure (mon n) (zero_mon n) ltM (mult_mon n) -> forall (p : list (Term A n)) (a : Term A n), eqTerm eqA (n:=n) a (t A A1 n) -> eqP A eqA n (pluspf A0 (eqA:=eqA) plusA eqA_dec (ltM:=ltM) ltM_dec p (l0 A multA n (t0 A invA n a) p)) (l A n) H3 : forall (A : Set) (A0 A1 : A) (eqA : A -> A -> Prop) (plusA : A -> A -> A) (invA : A -> A) (minusA multA : A -> A -> A) (divA : A -> forall b : A, (eqA b A0 -> False) -> A), CoefStructure A A0 A1 eqA plusA invA minusA multA divA -> forall (n : nat) (ltM : mon n -> mon n -> Prop), OrderStructure (mon n) (zero_mon n) ltM (mult_mon n) -> forall p q r s : list (Term A n), plusP A A0 eqA plusA n ltM p q r -> plusP A A0 eqA plusA n ltM p q s -> eqP A eqA n r s H2 : forall (A : Set) (A0 A1 : A) (eqA : A -> A -> Prop) (plusA : A -> A -> A) (invA : A -> A) (minusA multA : A -> A -> A) (divA : A -> forall b : A, (eqA b A0 -> False) -> A), CoefStructure A A0 A1 eqA plusA invA minusA multA divA -> forall (eqA_dec : forall a b : A, {eqA a b} + {eqA a b -> False}) (n : nat) (ltM : mon n -> mon n -> Prop) (ltM_dec : forall a b : mon n, {ltM a b} + {ltM b a} + {a = b}), OrderStructure (mon n) (zero_mon n) ltM (mult_mon n) -> forall p q r : list (Term A n), eqP A eqA n p q -> canonical A0 eqA ltM p -> canonical A0 eqA ltM q -> canonical A0 eqA ltM r -> eqP A eqA n (pluspf A0 (eqA:=eqA) plusA eqA_dec (ltM:=ltM) ltM_dec r p) (pluspf A0 (eqA:=eqA) plusA eqA_dec (ltM:=ltM) ltM_dec r q) H1 : forall (A : Set) (A0 A1 : A) (eqA : A -> A -> Prop) (plusA : A -> A -> A) (invA : A -> A) (minusA multA : A -> A -> A) (divA : A -> forall b : A, (eqA b A0 -> False) -> A), CoefStructure A A0 A1 eqA plusA invA minusA multA divA -> forall (eqA_dec : forall a b : A, {eqA a b} + {eqA a b -> False}) (n : nat) (ltM : mon n -> mon n -> Prop) (ltM_dec : forall a b : mon n, {ltM a b} + {ltM b a} + {a = b}), OrderStructure (mon n) (zero_mon n) ltM (mult_mon n) -> forall p q r : list (Term A n), eqP A eqA n p q -> canonical A0 eqA ltM p -> canonical A0 eqA ltM q -> canonical A0 eqA ltM r -> eqP A eqA n (pluspf A0 (eqA:=eqA) plusA eqA_dec (ltM:=ltM) ltM_dec p r) (pluspf A0 (eqA:=eqA) plusA eqA_dec (ltM:=ltM) ltM_dec q r) A : Set A0, A1 : A eqA : A -> A -> Prop plusA : A -> A -> A invA : A -> A minusA, multA : A -> A -> A divA : A -> forall b : A, (eqA b A0 -> False) -> A eqA_dec : forall a b : A, {eqA a b} + {eqA a b -> False} n : nat ltM : mon n -> mon n -> Prop ltM_dec : forall a b : mon n, {ltM a b} + {ltM b a} + {a = b} a2 : Term A n l2 : list (Term A n) Hminus : minusP l2 l2 (pO A n) H0 : zeroP A0 eqA (n:=n) (minusTerm minusA (n:=n) a2 a2) M1_min : forall x : mon n, ltM x (zero_mon n) -> False ltM_nonrefl : forall x : mon n, ltM x x -> False ltM_trans : transitive (mon n) ltM ltM_wf : well_founded ltM ltM_plusr : forall x y z : mon n, ltM x y -> ltM (mult_mon n x z) (mult_mon n y z) ltM_plusl : forall x y z : mon n, ltM x y -> ltM (mult_mon n z x) (mult_mon n z y) A1_diff_A0 : eqA A1 A0 -> False eqA_ref : reflexive A eqA eqA_sym : symmetric A eqA eqA_trans : transitive A eqA plusA_assoc : forall a b c : A, eqA (plusA a (plusA b c)) (plusA (plusA a b) c) plusA_com : forall a b : A, eqA (plusA a b) (plusA b a) plusA_eqA_comp : forall a b c d : A, eqA a c -> eqA b d -> eqA (plusA a b) (plusA c d) plusA_A0 : forall a : A, eqA a (plusA a A0) invA_plusA : forall a : A, eqA A0 (plusA a (invA a)) invA_eqA_comp : forall a b : A, eqA a b -> eqA (invA a) (invA b) minusA_def : forall a b : A, eqA (minusA a b) (plusA a (invA b)) multA_eqA_comp : forall a b c d : A, eqA a c -> eqA b d -> eqA (multA a b) (multA c d) multA_assoc : forall a b c : A, eqA (multA a (multA b c)) (multA (multA a b) c) multA_com : forall a b : A, eqA (multA a b) (multA b a) multA_dist_l : forall a b c : A, eqA (plusA (multA c a) (multA c b)) (multA c (plusA a b)) multA_A0_l : forall a : A, eqA (multA A0 a) A0 multA_A1_l : forall a : A, eqA (multA A1 a) a divA_rew : forall (a b : A) (nZ1 nZ2 : eqA b A0 -> False), divA a b nZ1 = divA a b nZ2 divA_is_multA : forall (a b : A) (nZb : eqA b A0 -> False), eqA a (multA (divA a b nZb) b) divA_eqA_comp : forall (a b c d : A) (nZb : eqA b A0 -> False) (nZd : eqA d A0 -> False), eqA a c -> eqA b d -> eqA (divA a b nZb) (divA c d nZd) divA_multA_comp_r : forall (a b c : A) (nZc : eqA c A0 -> False), eqA (divA (multA a b) c nZc) (multA (divA a c nZc) b) divA_invA_r : forall (a b : A) (nZb : eqA b A0 -> False) (nZib : eqA (invA b) A0 -> False), eqA (divA a (invA b) nZib) (invA (divA a b nZb)) Unable to unify \"eqP ?M23511 ?M23514 ?M23522 (pluspf ?M23512 ?M23515 ?M23521 ?M23524 ?M23526 ?M23527) (pluspf ?M23512 ?M23515 ?M23521 ?M23524 ?M23528 ?M23529)\" with \"forall x : list (Term A n), x = x\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros p q r Hminus Heq.", "induction Hminus.", "-", "subst.", "qsimpl time: 1 use: mults_invTerm.", "-", "shelve.", "-", "eapply eqP_ind.", "++", "qsimpl time: 1 use: T1,pO,mults,plusP_uniq_eqP,invTerm,mults_invTerm,eqp_pluspf_com.", "++", "qsimpl time: 1 use: T1,pO,mults,eqp_pluspf_com_r,plusP_uniq_eqP,invTerm,mults_invTerm,eqp_pluspf_com.", "apply Build_equivalence.", "qsimpl time: 1 use: T1,pO,mults,eqp_pluspf_com_r,plusP_uniq_eqP,invTerm,mults_invTerm,eqp_pluspf_com.", "apply Build_preorder.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "++", "eapply eqp_trans.", "**", "shelve.", "**", "shelve.", "**", "shelve.", "-", "qsimpl time: 1 use: T1,pO,mults,eqp_pluspf_com_l,eqp_pluspf_com_r,plusP_uniq_eqP,invTerm,mults_invTerm,eqp_pluspf_com.", "apply Build_equivalence.", "qsimpl time: 1 use: T1,pO,mults,eqp_pluspf_com_l,eqp_pluspf_com_r,plusP_uniq_eqP,invTerm,mults_invTerm,eqp_pluspf_com.", "apply Build_equivalence.", "++", "qsimpl time: 1 use: T1,pO,mults,eqp_pluspf_com_l,eqp_pluspf_com_r,plusP_uniq_eqP,invTerm,mults_invTerm,eqp_pluspf_com."], "tactic": "apply cs.", "exn": "No such goal. Focus next goal with bullet ++.", "type": "next_goal", "handled": true}]}, "chat": [], "original": "intros p q r Hminus Heq. induction Hminus. - subst. apply mults_invTerm. apply cs. - rewrite plusP_uniq_eqP with (p:=l1) (q:=(pO A n)) (r:=(mults multA (n:=n) (invTerm invA (n:=n) (T1 A1 n)) (pO A n))) (s:=(mults multA (n:=n) (invTerm invA (n:=n) (T1 A1 n)) (pO A n))). ++ apply mults_invTerm. apply cs. ++ apply mults_invTerm. apply cs. - eapply eqP_trans. ++ apply eqp_pluspf_com. apply cs. apply ltM_dec. apply os. ++ apply eqp_pluspf_com_r. apply cs. apply ltM_dec. apply os. - eapply eqP_trans. ++ apply eqp_pluspf_com_l. apply cs. apply ltM_dec. apply os. ++ apply eqp_pluspf_com. apply cs. apply ltM_dec. apply os.", "back_times": 2, "succ": false, "time": 174.6341576576233}]