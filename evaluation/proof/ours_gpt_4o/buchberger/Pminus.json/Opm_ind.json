[{"history": {"proof": "qsimpl time: 1 use: ltP_ind.", "repairs": ["cannot_unify"], "exceptions": [{"ctx": ["intros P p q H1 H2 H3 H4 H5."], "tactic": "apply (ltP_ind (A:=A) (n:=n) (ltM:=ltM) (P:=P)).", "exn": "In environment A : Set A0, A1 : A eqA : A -> A -> Prop plusA : A -> A -> A invA : A -> A minusA, multA : A -> A -> A divA : A -> forall b : A, ~ eqA b A0 -> A cs : CoefStructure A A0 A1 eqA plusA invA minusA multA divA eqA_dec : forall a b : A, {eqA a b} + {~ eqA a b} n : nat ltM : mon n -> mon n -> Prop ltM_dec : forall a b : mon n, {ltM a b} + {ltM b a} + {a = b} os : OrderStructure (mon n) (zero_mon n) ltM (mult_mon n) P : list (Term A n) -> list (Term A n) -> Prop p, q : list (Term A n) H1 : forall p : list (Term A n), P (pO A n) p H2 : forall p : list (Term A n), P p (pO A n) H3 : forall (a b : Term A n) (p q : list (Term A n)), P (pX (A:=A) (n:=n) a p) q -> ltT (A:=A) ltM a b -> P (pX (A:=A) (n:=n) a p) (pX (A:=A) (n:=n) b q) H4 : forall (a b : Term A n) (p q : list (Term A n)), P p (pX (A:=A) (n:=n) b q) -> ltT (A:=A) ltM b a -> P (pX (A:=A) (n:=n) a p) (pX (A:=A) (n:=n) b q) H5 : forall (a b : Term A n) (p q : list (Term A n)), P p q -> eqT (A:=A) (n:=n) a b -> P (pX (A:=A) (n:=n) a p) (pX (A:=A) (n:=n) b q) l : list (Term A n) Unable to unify \"ltP (A:=A) ltM ?M2203 l\" with \"list (Term A n)\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros P p q H1 H2 H3 H4 H5.", "qsimpl time: 1 use: ltP_ind."], "tactic": "apply H1.", "exn": "In environment H : forall (A : Set) (n : nat) (ltM : mon n -> mon n -> Prop) (P : list (Term A n) -> list (Term A n) -> Prop), (forall (x : Term A n) (p : list (Term A n)), P (pO A n) (pX (A:=A) (n:=n) x p)) -> (forall (x y : Term A n) (p q : list (Term A n)), ltT (A:=A) ltM x y -> P (pX (A:=A) (n:=n) x p) (pX (A:=A) (n:=n) y q)) -> (forall (x y : Term A n) (p q : list (Term A n)), eqT (A:=A) (n:=n) x y -> ltP (A:=A) ltM p q -> P p q -> P (pX (A:=A) (n:=n) x p) (pX (A:=A) (n:=n) y q)) -> forall l l0 : list (Term A n), ltP (A:=A) ltM l l0 -> P l l0 A : Set A0, A1 : A eqA : A -> A -> Prop plusA : A -> A -> A invA : A -> A minusA, multA : A -> A -> A divA : A -> forall b : A, (eqA b A0 -> False) -> A eqA_dec : forall a b : A, {eqA a b} + {eqA a b -> False} n : nat ltM : mon n -> mon n -> Prop ltM_dec : forall a b : mon n, {ltM a b} + {ltM b a} + {a = b} P : list (Term A n) -> list (Term A n) -> Prop p, q : list (Term A n) H1 : forall p : list (Term A n), P (pO A n) p H2 : forall p : list (Term A n), P p (pO A n) H3 : forall (a b : Term A n) (p q : list (Term A n)), P (pX (A:=A) (n:=n) a p) q -> ltT (A:=A) ltM a b -> P (pX (A:=A) (n:=n) a p) (pX (A:=A) (n:=n) b q) H4 : forall (a b : Term A n) (p q : list (Term A n)), P p (pX (A:=A) (n:=n) b q) -> ltT (A:=A) ltM b a -> P (pX (A:=A) (n:=n) a p) (pX (A:=A) (n:=n) b q) H5 : forall (a b : Term A n) (p q : list (Term A n)), P p q -> eqT (A:=A) (n:=n) a b -> P (pX (A:=A) (n:=n) a p) (pX (A:=A) (n:=n) b q) p0, q0 : list (Term A n) M1_min : forall x : mon n, ltM x (zero_mon n) -> False ltM_nonrefl : forall x : mon n, ltM x x -> False ltM_trans : transitive (mon n) ltM ltM_wf : well_founded ltM ltM_plusr : forall x y z : mon n, ltM x y -> ltM (mult_mon n x z) (mult_mon n y z) ltM_plusl : forall x y z : mon n, ltM x y -> ltM (mult_mon n z x) (mult_mon n z y) A1_diff_A0 : eqA A1 A0 -> False eqA_ref : reflexive A eqA eqA_sym : symmetric A eqA eqA_trans : transitive A eqA plusA_assoc : forall a b c : A, eqA (plusA a (plusA b c)) (plusA (plusA a b) c) plusA_com : forall a b : A, eqA (plusA a b) (plusA b a) plusA_eqA_comp : forall a b c d : A, eqA a c -> eqA b d -> eqA (plusA a b) (plusA c d) plusA_A0 : forall a : A, eqA a (plusA a A0) invA_plusA : forall a : A, eqA A0 (plusA a (invA a)) invA_eqA_comp : forall a b : A, eqA a b -> eqA (invA a) (invA b) minusA_def : forall a b : A, eqA (minusA a b) (plusA a (invA b)) multA_eqA_comp : forall a b c d : A, eqA a c -> eqA b d -> eqA (multA a b) (multA c d) multA_assoc : forall a b c : A, eqA (multA a (multA b c)) (multA (multA a b) c) multA_com : forall a b : A, eqA (multA a b) (multA b a) multA_dist_l : forall a b c : A, eqA (plusA (multA c a) (multA c b)) (multA c (plusA a b)) multA_A0_l : forall a : A, eqA (multA A0 a) A0 multA_A1_l : forall a : A, eqA (multA A1 a) a divA_rew : forall (a b : A) (nZ1 nZ2 : eqA b A0 -> False), divA a b nZ1 = divA a b nZ2 divA_is_multA : forall (a b : A) (nZb : eqA b A0 -> False), eqA a (multA (divA a b nZb) b) divA_eqA_comp : forall (a b c d : A) (nZb : eqA b A0 -> False) (nZd : eqA d A0 -> False), eqA a c -> eqA b d -> eqA (divA a b nZb) (divA c d nZd) divA_multA_comp_r : forall (a b c : A) (nZc : eqA c A0 -> False), eqA (divA (multA a b) c nZc) (multA (divA a c nZc) b) divA_invA_r : forall (a b : A) (nZb : eqA b A0 -> False) (nZib : eqA (invA b) A0 -> False), eqA (divA a (invA b) nZib) (invA (divA a b nZb)) Unable to unify \"P (pO A n) ?M5061\" with \"P p0 q0\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros P p q H1 H2 H3 H4 H5. apply (ltP_ind (A:=A) (n:=n) (ltM:=ltM) (P:=P)). - apply H1. - intros x y r s. apply H5. - intros x y r s Hlt. apply H3. apply Hlt. - intros x y r s Hlt. apply H4. apply Hlt. - apply H2.", "back_times": 0, "succ": false, "time": 59.750117778778076}]