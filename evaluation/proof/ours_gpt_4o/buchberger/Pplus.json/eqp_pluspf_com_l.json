[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros p q r eq_pq can_p can_q can_r."], "tactic": ["apply eqp_imp_canonical with (cs:=cs) (eqA_dec:=eqA_dec) (p:=pluspf p r) (q:=pluspf q r).", ""], "exn": "No such bound variable cs (possible names are: A, A0, A1, eqA, plusA, invA, minusA, multA, divA, n, ltM, p and q).", "type": "no_such_bound", "handled": false}]}, "chat": [], "original": "intros p q r eq_pq can_p can_q can_r. apply eqp_imp_canonical with (cs:=cs) (eqA_dec:=eqA_dec) (p:=pluspf p r) (q:=pluspf q r). - apply plusP_uniq_eqP with (r:=pluspf p r). + apply plusP_com. * apply plusP_uniq_eqP with (r:=pluspf q r). -- apply (eqp_imp_canonical A0 eqA ltM p q cs eqA_dec n _ _ eq_pq). ++ auto. ++ auto. -- apply eqP_refl. * apply plusP_uniq_eqP with (r:=pluspf p r). -- apply eqP_refl. -- apply (eqp_imp_canonical A0 eqA ltM q p cs eqA_dec n _ _ (eqP_sym eqA q p eq_pq)). ++ auto. ++ auto. + apply eqP_refl. - apply pluspf_assoc. + auto. + auto. + auto.", "back_times": 0, "succ": false, "time": 65.26359605789185}]