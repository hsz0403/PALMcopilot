[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros a b.", "assert (ltM_decidable: forall a b : mon n, {ltM a b} + {ltM b a} + {a = b}).", "-", "apply ltM_dec."], "tactic": "induction a as [[|a0 a]].", "exn": "No such goal. Focus next goal with bullet -.", "type": "next_goal", "handled": true}]}, "chat": [], "original": "intros a b. assert (ltM_decidable: forall a b : mon n, {ltM a b} + {ltM b a} + {a = b}). - apply ltM_dec. induction a as [[|a0 a]]. -- right. intros contra. destruct b as [[|b0 b]]. inversion contra. destruct contra as [contra H]. inversion contra. -- destruct b as [[|b0 b]]. ++ right. intros contra. destruct contra as [contra H]. inversion H. ++ destruct ltM_decidable with a a0 as [[Hlt | Hgt] | Heq]. * right. intros contra. destruct contra as [contra H]. inversion H. apply (ltM_dec _ _). auto. * destruct IHa as [IHa | IHa]. + left. exists. split. apply Hgt. apply IHa. + destruct (eqA_dec a0 b0). { subst. left. exists. split. auto. apply reduce_cb. apply cs. } { right. intros [c [contra H]]. apply (reducestar_cb1 _ _ _ _ _ _ _ _ _ _ _ _ _ _ A0 A1 eqA plusA invA minusA multA divA err_eqA_dec n ltM ltM_dec os). auto. } + auto.", "back_times": 0, "succ": false, "time": 104.78739309310913}]