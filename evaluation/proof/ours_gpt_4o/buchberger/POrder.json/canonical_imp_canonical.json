[{"history": {"proof": "intros l a [Holist HnZ]. split. - srun best use: olist_X. - qsimpl time: 1 use: canonical_cons,canonical_nzeroP.", "repairs": ["", "", "", "hammer", "", "ref_not_found"], "exceptions": [{"ctx": ["intros l a [Holist HnZ].", "split.", "-"], "tactic": ["inversion Holist as [|x xs Hord].", ""], "exn": "Expects a disjunctive pattern with 3 branches.", "type": "num_branch", "handled": false}, {"ctx": ["intros l a [Holist HnZ].", "split.", "-"], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros l a [Holist HnZ].", "split.", "-", "shelve.", "-"], "tactic": "eapply canonical_nzeroP.", "exn": "In environment A : Set A0, A1 : A eqA : A -> A -> Prop plusA : A -> A -> A invA : A -> A minusA, multA : A -> A -> A divA : A -> forall b : A, ~ eqA b A0 -> A cs : CoefStructure A A0 A1 eqA plusA invA minusA multA divA eqA_dec : forall a b : A, {eqA a b} + {~ eqA a b} n : nat ltM : mon n -> mon n -> Prop ltM_dec : forall a b : mon n, {ltM a b} + {ltM b a} + {a = b} os : OrderStructure (mon n) (zero_mon n) ltM (mult_mon n) eqT_refl := Term.eqT_refl A n : reflexive (Term A n) (eqT (A:=A) (n:=n)) consA := cons : mon n -> list (mon n) -> list (mon n) nilA := nil : list (mon n) listA := list (mon n) : Set DescA := Desc (mon n) ltM : list (mon n) -> Prop l : list (Term A n) a : Term A n Holist : olist (pX a l) HnZ : nZterm (pX a l) Unable to unify \"zeroP A0 eqA (n:=n) ?M1585 -> False\" with \"(fix F (l : list (Term A n)) : (fun _ : list (Term A n) => Prop) l := match l as l0 return ((fun _ : list (Term A n) => Prop) l0) with | nil => True | y :: l0 => (fun (a : Term A n) (_ : list (Term A n)) (Rec : Prop) => Rec /\\\\ ~ zeroP A0 eqA (n:=n) a) y l0 (F l0) end) l\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros l a [Holist HnZ].", "split.", "-", "shelve.", "-"], "tactic": "qsimpl time: 1 use: canonical_cons,auto,constructor,canonical_nzeroP,contra.", "exn": "The reference auto was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros l a [Holist HnZ].", "split.", "-", "shelve.", "-"], "tactic": "qsimpl time: 1 use: canonical_cons,constructor,canonical_nzeroP,contra.", "exn": "The reference constructor was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros l a [Holist HnZ].", "split.", "-", "shelve.", "-"], "tactic": "qsimpl time: 1 use: canonical_cons,canonical_nzeroP,contra.", "exn": "The reference contra was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros l a [Holist HnZ].", "split.", "-", "shelve.", "-", "qsimpl time: 1 use: canonical_cons,canonical_nzeroP."], "tactic": "eauto.", "exn": "No such goal.", "type": "no_goal", "handled": true}]}, "chat": [], "original": "intros l a [Holist HnZ]. split. - inversion Holist as [|x xs Hord]. + constructor. + destruct (eqT_refl a a). destruct (canonical_cons xs x a x) as [_ Hcons]. * auto. * apply canonical_nzeroP in H. auto. * constructor. -- auto. -- intros contra. apply canonical_nzeroP in H. apply (HnZ contra). - eapply canonical_nzeroP. eauto.", "back_times": 1, "succ": true, "time": 14.340274572372437}]