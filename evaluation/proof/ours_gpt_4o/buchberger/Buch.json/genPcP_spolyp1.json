[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros i L L1 L2 gp."], "tactic": ["induction gp as [i0 L0 | L0 L1' L2' L3 a i0 s_eq gp IHGp].", ""], "exn": "Expects a disjunctive pattern with 3 branches.", "type": "num_branch", "handled": false}]}, "chat": [], "original": "intros i L L1 L2 gp. induction gp as [i0 L0 | L0 L1' L2' L3 a i0 s_eq gp IHGp]. - intros a H. destruct H. - intros a H. destruct (in_app_or _ _ _ H) as [HInL2' | HInL3]. + rewrite s_eq in HInL2'. destruct (slice i0 a L1') eqn:Hs. * rewrite HInL2'. left. exists a. split. { apply in_cons. apply in_eq. } { apply eq_refl. } * apply (IHGp a HInL2'). + apply in_inv in HInL3. destruct HInL3 as [Heq | HInL]. * right. rewrite <- Heq. apply in_app_iff. left. apply in_eq. * apply in_app_iff. right. apply HInL.", "back_times": 0, "succ": false, "time": 71.02297377586365}]