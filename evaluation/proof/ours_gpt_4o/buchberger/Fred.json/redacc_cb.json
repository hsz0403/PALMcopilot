[{"history": {"proof": "", "repairs": [], "exceptions": []}, "chat": [], "original": "intros L1 L2 p H. revert L2. induction L1 as [|a L1 IH]. -- simpl in H. intros L2. contradiction. -- simpl in H. intros L2. destruct (zerop_dec (nf (L1 ++ L2) a)) as [Hzero|Hnonzero]. ++ apply IH in H. now apply cb_incl with (L1 ++ L2). ++ destruct H as [Hnl | Hin]. ** apply cb_id. now left. ** apply IH in Hin. apply cb_compo with (L1 := nf (L1 ++ L2) a :: L1 ++ L2). --- intros q Hq. destruct Hq as [Heq | Hq]. + subst. apply nf_cb. + apply cb_incl with (L1 ++ L2). intros x Hx. now right. apply cb_incl with (nf (L1 ++ L2) a :: L1 ++ L2); cbn; intros x [<-|Hx]. ** apply cb_nf. ** apply cb_id. apply or_intror, Hx. --- rewrite app_comm_cons. auto.", "back_times": 0, "succ": false, "time": 73.48754906654358}]