[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": [], "tactic": ["intros [ux vx] [uy vy] eps H.", ""], "exn": "Expects a disjunctive pattern with 3 branches.", "type": "num_branch", "handled": false}]}, "chat": [], "original": "intros [ux vx] [uy vy] eps H. unfold ball, UniformSpace.ball, prod_norm, minus in *. simpl in H. apply NormedModule.ax3. apply sqrt_lt in H. destruct H as [H_left H_right]. pose (NormedModule.type K) as MU. pose (NormedModule.type K) as MV. apply ball_triangle with (e1 := norm (plus uy (opp ux))) (e2 := norm (plus vy (opp vx))); simpl. - apply NormedModule.ax3. rewrite <- sqrt_square with (norm (plus uy (opp ux))); auto; try apply Rlt_le; [apply H_left|]. - apply NormedModule.ax3. rewrite <- sqrt_square with (norm (plus vy (opp vx))); auto; try apply Rlt_le; [apply H_right|].", "back_times": 0, "succ": false, "time": 31.89353919029236}]