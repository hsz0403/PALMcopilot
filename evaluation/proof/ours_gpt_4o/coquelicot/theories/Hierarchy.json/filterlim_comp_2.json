[{"history": {"proof": "qsimpl time: 1.", "repairs": ["cannot_apply_in"], "exceptions": [{"ctx": ["intro H."], "tactic": "apply Nat.lt_exists_pred_strong in H.", "exn": "Unable to apply lemma of type \"forall z n m : nat, (z < m)%nat -> (m <= n)%nat -> exists k : nat, m = S k /\\\\ (z <= k)%nat\" on hypothesis of type \"Type\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["intro H.", "qsimpl time: 1."], "tactic": "destruct H as [k [Hk1 Hk2]].", "exn": "Not an inductive product.", "type": "not_inductive_product", "handled": true}, {"ctx": ["intro H.", "qsimpl time: 1."], "tactic": "rewrite Hk1.", "exn": "The reference Hk1 was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intro H.", "qsimpl time: 1."], "tactic": "apply Nat.lt_succ_pred in Hk2.", "exn": "No such hypothesis: Hk2", "type": "no_hypos", "handled": true}, {"ctx": ["intro H.", "qsimpl time: 1."], "tactic": "rewrite <- Hk2 at 1.", "exn": "The reference Hk2 was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intro H.", "qsimpl time: 1.", "rewrite <- ARadd_0_r at 1."], "tactic": "assert (sum_n_m a n (S k) = plus (sum_n_m a n k) (a (S k))) by apply sum_n_Sm; auto.", "exn": "The reference sum_n_m was not found in the current environment.", "type": "ref_not_found", "handled": true}]}, "chat": [], "original": "intro H. apply Nat.lt_exists_pred_strong in H. destruct H as [k [Hk1 Hk2]]. rewrite Hk1. apply Nat.lt_succ_pred in Hk2. rewrite <- Hk2 at 1. assert (sum_n_m a n (S k) = plus (sum_n_m a n k) (a (S k))) by apply sum_n_Sm; auto. rewrite H. rewrite Hk2. rewrite sum_n_n. apply plus_opp_r.", "back_times": 0, "succ": false, "time": 76.80490779876709}]