[{"history": {"proof": "qsimpl time: 1 use: is_LimInf_opp_LimSup_seq. qsimpl time: 1 use: is_LimInf_opp_LimSup_seq,is_lim_LimSup_seq.", "repairs": ["cannot_unify", "cannot_unify"], "exceptions": [{"ctx": ["intros H."], "tactic": "apply is_LimInf_opp_LimSup_seq.", "exn": "In environment u : nat -> R l : Rbar H : is_lim_seq u l Unable to unify \"(is_LimInf_seq (fun n : nat => - ?M2363 n) (Rbar_opp ?M2364) -> is_LimSup_seq ?M2363 ?M2364) /\\\\ (is_LimSup_seq ?M2363 ?M2364 -> is_LimInf_seq (fun n : nat => - ?M2363 n) (Rbar_opp ?M2364))\" with \"match l with | Finite l => forall eps : posreal, (forall N : nat, exists n : nat, (N <= n)%nat /\\\\ u n < l + eps) /\\\\ (exists N : nat, forall n : nat, (N <= n)%nat -> l - eps < u n) | p_infty => forall M : R, exists N : nat, forall n : nat, (N <= n)%nat -> M < u n | m_infty => forall (M : R) (N : nat), exists n : nat, (N <= n)%nat /\\\\ u n < M end\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros H.", "qsimpl time: 1 use: is_LimInf_opp_LimSup_seq."], "tactic": "apply is_lim_LimSup_seq.", "exn": "In environment u : nat -> R l : Rbar H : is_lim_seq u l H0 : forall (u : nat -> R) (l : Rbar), is_LimSup_seq u l -> is_LimInf_seq (fun n : nat => - u n) (Rbar_opp l) H1 : forall (u : nat -> R) (l : Rbar), is_LimInf_seq (fun n : nat => - u n) (Rbar_opp l) -> is_LimSup_seq u l Unable to unify \"match ?M2535 with | Finite l => forall eps : posreal, (forall N : nat, exists n : nat, (N <= n)%nat /\\\\ l - eps < ?M2534 n) /\\\\ (exists N : nat, forall n : nat, (N <= n)%nat -> ?M2534 n < l + eps) | p_infty => forall (M : R) (N : nat), exists n : nat, (N <= n)%nat /\\\\ M < ?M2534 n | m_infty => forall M : R, exists N : nat, forall n : nat, (N <= n)%nat -> ?M2534 n < M end\" with \"match l with | Finite l => forall eps : posreal, (forall N : nat, exists n : nat, (N <= n)%nat /\\\\ u n < l + eps) /\\\\ (exists N : nat, forall n : nat, (N <= n)%nat -> l - eps < u n) | p_infty => forall M : R, exists N : nat, forall n : nat, (N <= n)%nat -> M < u n | m_infty => forall (M : R) (N : nat), exists n : nat, (N <= n)%nat /\\\\ u n < M end\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros H.", "qsimpl time: 1 use: is_LimInf_opp_LimSup_seq.", "qsimpl time: 1 use: is_LimInf_opp_LimSup_seq,is_lim_LimSup_seq."], "tactic": "apply is_lim_seq_ext with (v := fun n => - u n).", "exn": "The reference is_lim_seq_ext was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros H.", "qsimpl time: 1 use: is_LimInf_opp_LimSup_seq.", "qsimpl time: 1 use: is_LimInf_opp_LimSup_seq,is_lim_LimSup_seq."], "tactic": "intro n.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}]}, "chat": [], "original": "intros H. apply is_LimInf_opp_LimSup_seq. apply is_lim_LimSup_seq. apply is_lim_seq_ext with (v := fun n => - u n). - intro n. ring. - apply filterlim_ext with (v := fun n => - (u n)). ++ intro n. ring. ++ rewrite <- is_LimSup_opp_LimInf_seq. apply is_lim_LimSup_seq. rewrite <- H. apply is_lim_seq_ext with (v := fun n => - (u n)). ** intro n. ring. ** apply is_LimSup_opp_LimInf_seq.", "back_times": 0, "succ": false, "time": 109.03668165206909}]