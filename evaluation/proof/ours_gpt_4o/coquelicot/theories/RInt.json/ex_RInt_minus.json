[{"history": {"proof": "qsimpl time: 1 use: f. qsimpl time: 1 use: is_RInt_opp,f.", "repairs": ["not_inductive_product", "cannot_unify"], "exceptions": [{"ctx": [], "tactic": "intros f a b [If Hf].", "exn": "Not an inductive product.", "type": "not_inductive_product", "handled": true}, {"ctx": ["qsimpl time: 1 use: f."], "tactic": "exists (opp If).", "exn": "The reference If was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["qsimpl time: 1 use: f."], "tactic": "apply is_RInt_opp.", "exn": "In environment X : family -> R -> R -> Prop V : NormedModule R_AbsRing f, g : R -> V a, b : R x : V H1 : is_RInt g a b x x0 : V H0 : is_RInt f a b x0 Unable to unify \"forall P : V -> Prop, locally (opp ?M2881) P -> filtermap (fun ptd : SF_seq => scal (sign (?M2880 - ?M2879)) (Riemann_sum (fun y : R => opp (?M2878 y)) ptd)) (Riemann_fine ?M2879 ?M2880) P\" with \"exists If : V, is_RInt (fun y : R => minus (f y) (g y)) a b If\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros f a b [If Hf]. exists (opp If). apply is_RInt_opp. auto.", "back_times": 0, "succ": false, "time": 34.971678733825684}]