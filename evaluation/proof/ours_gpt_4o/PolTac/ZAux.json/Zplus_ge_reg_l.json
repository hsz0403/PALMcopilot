[{"history": {"proof": "qsimpl time: 1 use: Zplus_minus_eq. scongruence use: Z.add_compare_mono_l unfold: Z.ge. qsimpl time: 1 use: Zplus_minus_eq. qsimpl time: 1 use: Z,Zplus_minus_eq. qsimpl time: 1 use: Z,Zplus_minus_eq. qsimpl time: 1 use: Z,Zplus_minus_eq. qsimpl time: 1 use: Z,Zplus_minus_eq. qsimpl time: 1 use: Z,Zplus_minus_eq. qsimpl time: 1 use: Z,Zplus_minus_eq. qsimpl time: 1 use: Z,Zplus_minus_eq. qsimpl time: 1 use: Z,Zplus_minus_eq. qsimpl time: 1 use: Z,Zplus_minus_eq. qsimpl time: 1 use: Z,Zplus_minus_eq. qsimpl time: 1 use: Z,Zplus_minus_eq. qsimpl time: 1 use: Z,Zplus_minus_eq.", "repairs": ["no_instance_var", "hammer", "no_instance_var", "cannot_apply_in", "no_instance_var", "no_subterm", "cannot_apply_in", "no_instance_var", "no_subterm", "no_instance_var", "no_instance_var", "no_subterm", "no_subterm", "no_subterm", "no_subterm"], "exceptions": [{"ctx": ["intros n m p H.", "apply Zplus_ge_compat_l with (p := -p) in H."], "tactic": "rewrite Zplus_minus_eq in H.", "exn": "Unable to find an instance for the variables n, m.", "type": "no_instance_var", "handled": true}, {"ctx": ["intros n m p H.", "apply Zplus_ge_compat_l with (p := -p) in H.", "qsimpl time: 1 use: Zplus_minus_eq."], "tactic": "rewrite Zplus_minus_eq in H.", "exn": "Unable to find an instance for the variables n, m.", "type": "no_instance_var", "handled": true}, {"ctx": ["intros n m p H.", "apply Zplus_ge_compat_l with (p := -p) in H.", "qsimpl time: 1 use: Zplus_minus_eq.", "qsimpl time: 1 use: Zplus_minus_eq."], "tactic": "apply Z.add_reg_l with (n := Z.add p m) in H.", "exn": "Unable to apply lemma of type \"forall n m p : Z, n + m = n + p -> m = p\" on hypothesis of type \"- p + (p + n) >= - p + (p + m)\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["intros n m p H.", "apply Zplus_ge_compat_l with (p := -p) in H.", "qsimpl time: 1 use: Zplus_minus_eq.", "qsimpl time: 1 use: Zplus_minus_eq.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "rewrite Z.add_assoc in H."], "tactic": "rewrite Zplus_minus_eq in H.", "exn": "Unable to find an instance for the variables n, m.", "type": "no_instance_var", "handled": true}, {"ctx": ["intros n m p H.", "apply Zplus_ge_compat_l with (p := -p) in H.", "qsimpl time: 1 use: Zplus_minus_eq.", "qsimpl time: 1 use: Zplus_minus_eq.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "rewrite Z.add_assoc in H.", "qsimpl time: 1 use: Z,Zplus_minus_eq."], "tactic": "rewrite Z.add_0_r in H.", "exn": "Found no subterm matching \"?M2167 + 0\" in H.", "type": "no_subterm", "handled": true}, {"ctx": ["intros n m p H.", "apply Zplus_ge_compat_l with (p := -p) in H.", "qsimpl time: 1 use: Zplus_minus_eq.", "qsimpl time: 1 use: Zplus_minus_eq.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "rewrite Z.add_assoc in H.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "qsimpl time: 1 use: Z,Zplus_minus_eq."], "tactic": "apply Z.add_reg_l with (n := Z.add p m) in H.", "exn": "Unable to apply lemma of type \"forall n m p : Z, n + m = n + p -> m = p\" on hypothesis of type \"- p + p + n >= - p + (p + m)\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["intros n m p H.", "apply Zplus_ge_compat_l with (p := -p) in H.", "qsimpl time: 1 use: Zplus_minus_eq.", "qsimpl time: 1 use: Zplus_minus_eq.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "rewrite Z.add_assoc in H.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "rewrite Z.add_assoc in H."], "tactic": "rewrite Zplus_minus_eq in H.", "exn": "Unable to find an instance for the variables n, m.", "type": "no_instance_var", "handled": true}, {"ctx": ["intros n m p H.", "apply Zplus_ge_compat_l with (p := -p) in H.", "qsimpl time: 1 use: Zplus_minus_eq.", "qsimpl time: 1 use: Zplus_minus_eq.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "rewrite Z.add_assoc in H.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "rewrite Z.add_assoc in H.", "qsimpl time: 1 use: Z,Zplus_minus_eq."], "tactic": "rewrite Z.add_0_r in H.", "exn": "Found no subterm matching \"?M2734 + 0\" in H.", "type": "no_subterm", "handled": true}, {"ctx": ["intros n m p H.", "apply Zplus_ge_compat_l with (p := -p) in H.", "qsimpl time: 1 use: Zplus_minus_eq.", "qsimpl time: 1 use: Zplus_minus_eq.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "rewrite Z.add_assoc in H.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "rewrite Z.add_assoc in H.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "replace (Z.add p n) with (Z.add n p) in H.", "replace (Z.add p m) with (Z.add m p) in H.", "apply Zplus_ge_compat_l with (p := -p) in H."], "tactic": "rewrite Zplus_minus_eq in H.", "exn": "Unable to find an instance for the variables n, m.", "type": "no_instance_var", "handled": true}, {"ctx": ["intros n m p H.", "apply Zplus_ge_compat_l with (p := -p) in H.", "qsimpl time: 1 use: Zplus_minus_eq.", "qsimpl time: 1 use: Zplus_minus_eq.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "rewrite Z.add_assoc in H.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "rewrite Z.add_assoc in H.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "replace (Z.add p n) with (Z.add n p) in H.", "replace (Z.add p m) with (Z.add m p) in H.", "apply Zplus_ge_compat_l with (p := -p) in H.", "qsimpl time: 1 use: Z,Zplus_minus_eq."], "tactic": "rewrite Zplus_minus_eq in H.", "exn": "Unable to find an instance for the variables n, m.", "type": "no_instance_var", "handled": true}, {"ctx": ["intros n m p H.", "apply Zplus_ge_compat_l with (p := -p) in H.", "qsimpl time: 1 use: Zplus_minus_eq.", "qsimpl time: 1 use: Zplus_minus_eq.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "rewrite Z.add_assoc in H.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "rewrite Z.add_assoc in H.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "replace (Z.add p n) with (Z.add n p) in H.", "replace (Z.add p m) with (Z.add m p) in H.", "apply Zplus_ge_compat_l with (p := -p) in H.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "qsimpl time: 1 use: Z,Zplus_minus_eq."], "tactic": "rewrite <- Z.add_assoc.", "exn": "Found no subterm matching \"?M3316 + ?M3317 + ?M3318\" in the current goal.", "type": "no_subterm", "handled": true}, {"ctx": ["intros n m p H.", "apply Zplus_ge_compat_l with (p := -p) in H.", "qsimpl time: 1 use: Zplus_minus_eq.", "qsimpl time: 1 use: Zplus_minus_eq.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "rewrite Z.add_assoc in H.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "rewrite Z.add_assoc in H.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "replace (Z.add p n) with (Z.add n p) in H.", "replace (Z.add p m) with (Z.add m p) in H.", "apply Zplus_ge_compat_l with (p := -p) in H.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "qsimpl time: 1 use: Z,Zplus_minus_eq."], "tactic": "rewrite <- Z.add_assoc.", "exn": "Found no subterm matching \"?M3502 + ?M3503 + ?M3504\" in the current goal.", "type": "no_subterm", "handled": true}, {"ctx": ["intros n m p H.", "apply Zplus_ge_compat_l with (p := -p) in H.", "qsimpl time: 1 use: Zplus_minus_eq.", "qsimpl time: 1 use: Zplus_minus_eq.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "rewrite Z.add_assoc in H.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "rewrite Z.add_assoc in H.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "replace (Z.add p n) with (Z.add n p) in H.", "replace (Z.add p m) with (Z.add m p) in H.", "apply Zplus_ge_compat_l with (p := -p) in H.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "qsimpl time: 1 use: Z,Zplus_minus_eq."], "tactic": "rewrite Z.add_assoc with (n := -p) (p := p).", "exn": "Found no subterm matching \"- p + (?M3689 + p)\" in the current goal.", "type": "no_subterm", "handled": true}, {"ctx": ["intros n m p H.", "apply Zplus_ge_compat_l with (p := -p) in H.", "qsimpl time: 1 use: Zplus_minus_eq.", "qsimpl time: 1 use: Zplus_minus_eq.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "rewrite Z.add_assoc in H.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "rewrite Z.add_assoc in H.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "replace (Z.add p n) with (Z.add n p) in H.", "replace (Z.add p m) with (Z.add m p) in H.", "apply Zplus_ge_compat_l with (p := -p) in H.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "qsimpl time: 1 use: Z,Zplus_minus_eq."], "tactic": "rewrite Z.add_0_r.", "exn": "Found no subterm matching \"?M3874 + 0\" in the current goal.", "type": "no_subterm", "handled": true}, {"ctx": ["intros n m p H.", "apply Zplus_ge_compat_l with (p := -p) in H.", "qsimpl time: 1 use: Zplus_minus_eq.", "qsimpl time: 1 use: Zplus_minus_eq.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "rewrite Z.add_assoc in H.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "rewrite Z.add_assoc in H.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "replace (Z.add p n) with (Z.add n p) in H.", "replace (Z.add p m) with (Z.add m p) in H.", "apply Zplus_ge_compat_l with (p := -p) in H.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "qsimpl time: 1 use: Z,Zplus_minus_eq.", "qsimpl time: 1 use: Z,Zplus_minus_eq."], "tactic": "rewrite Z.add_0_r.", "exn": "Found no subterm matching \"?M4060 + 0\" in the current goal.", "type": "no_subterm", "handled": true}]}, "chat": [], "original": "intros n m p H. apply Zplus_ge_compat_l with (p := -p) in H. rewrite Zplus_minus_eq in H. rewrite Zplus_minus_eq in H. auto. apply Z.add_reg_l with (n := Z.add p m) in H. rewrite Z.add_assoc in H. rewrite Zplus_minus_eq in H. rewrite Z.add_0_r in H. auto. apply Z.add_reg_l with (n := Z.add p m) in H. rewrite Z.add_assoc in H. rewrite Zplus_minus_eq in H. rewrite Z.add_0_r in H. auto. replace (Z.add p n) with (Z.add n p) in H. replace (Z.add p m) with (Z.add m p) in H. apply Zplus_ge_compat_l with (p := -p) in H. rewrite Zplus_minus_eq in H. rewrite Zplus_minus_eq in H. auto. rewrite <- Z.add_assoc. rewrite <- Z.add_assoc. rewrite Z.add_assoc with (n := -p) (p := p). rewrite Z.add_0_r. rewrite Z.add_0_r. reflexivity. rewrite <- Z.add_assoc. rewrite <- Z.add_assoc. rewrite Z.add_assoc. rewrite Z.add_assoc. rewrite <- Z.add_assoc with (n := -p). rewrite Z.add_0_r. rewrite Z.add_0_r. reflexivity. apply Z.add_reg_l with (n := Z.add (-p) p) in H. rewrite Z.add_assoc. rewrite Z.add_assoc. rewrite Z.add_assoc with (p := -p) in H. rewrite Z.add_0_r in H. auto. rewrite <- Z.add_assoc. rewrite <- Z.add_assoc. rewrite Z.add_assoc. rewrite Z.add_assoc. rewrite <- Z.add_assoc with (n := -p). rewrite Z.add_0_r. reflexivity. rewrite <- Z.add_assoc. rewrite <- Z.add_assoc. rewrite Z.add_assoc. rewrite Z.add_assoc. rewrite <- Z.add_assoc with (n := -p). rewrite Z.add_0_r. reflexivity. apply Z.add_reg_l with (n := Z.add p 0) in H. rewrite Z.add_assoc. rewrite Z.add_assoc. rewrite Z.add_assoc with (p := -p) in H. rewrite Z.add_0_r in H. auto. rewrite Z.add_assoc. rewrite Z.add_assoc. rewrite Z.add_assoc with (p := -p). rewrite Z.add_0_r. rewrite Z.add_0_r. reflexivity. rewrite <- Z.add_assoc. rewrite <- Z.add_assoc. rewrite Z.add_assoc. rewrite Z.add_assoc. rewrite <- Z.add_assoc with (n := -p). rewrite Z.add_0_r. rewrite Z.add_0_r. reflexivity. apply Z.add_reg_l with (n := Z.add p 0) in H. rewrite Z.add_assoc. rewrite Z.add_assoc. rewrite Z.add_assoc with (p := -p) in H. rewrite Z.add_0_r in H. auto. rewrite Z.add_assoc. rewrite Z.add_assoc. rewrite Z.add_assoc with (p := -p). rewrite Z.add_0_r. rewrite Z.add_0_r. reflexivity. rewrite <- Z.add_assoc. rewrite <- Z.add_assoc. rewrite Z.add_assoc. rewrite Z.add_assoc. rewrite <- Z.add_assoc with (n := -p). rewrite Z.add_0_r. rewrite Z.add_0_r. reflexivity. apply Z.add_reg_l with (n := Z.add (-p) 0) in H. rewrite Z.add_assoc. rewrite Z.add_assoc. rewrite Z.add_assoc with (p := -p) in H. rewrite Z.add_0_r in H. auto. rewrite Z.add_assoc. rewrite Z.add_assoc. rewrite Z.add_assoc with (p := -p). rewrite Z.add_0_r. rewrite Z.add_0_r. reflexivity. rewrite <- Z.add_assoc. rewrite <- Z.add_assoc. rewrite Z.add_assoc. rewrite Z.add_assoc. rewrite <- Z.add_assoc with (n := -p). rewrite Z.add_0_r. rewrite Z.add_0_r. reflexivity. apply Zplus_ge_compat_l with (p := -p) in H. rewrite Zplus_minus_eq in H. rewrite Zplus_minus_eq in H. auto. rewrite Z.add_assoc. rewrite Zplus_minus_eq. rewrite Z.add_0_r. rewrite Z.add_0_r. reflexivity. rewrite <- Z.add_assoc. rewrite <- Z.add_assoc. rewrite Z.add_assoc. rewrite Z.add_assoc. rewrite <- Z.add_assoc with (n := -p). rewrite Z.add_0_r. rewrite Z.add_0_r. reflexivity. rewrite <- Z.add_assoc. rewrite <- Z.add_assoc. rewrite Z.add_assoc. rewrite Z.add_assoc. rewrite <- Z.add_assoc with (n := -p). rewrite Z.add_0_r. rewrite Z.add_0_r. reflexivity.", "back_times": 2, "succ": true, "time": 296.2185037136078}]