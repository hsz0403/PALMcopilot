[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros m x x' xs xs' l H_inv H_planar H_dll H_pr0 H_fadj H_pr3.", "unfold pre_ring0, distinct_face_list in *.", "simpl in *.", "destruct H_pr0 as [_ H_del].", "destruct xs as [|xs xs0].", "-"], "tactic": "constructor.", "exn": "Not an inductive product.", "type": "not_inductive_product", "handled": true}, {"ctx": ["intros m x x' xs xs' l H_inv H_planar H_dll H_pr0 H_fadj H_pr3.", "unfold pre_ring0, distinct_face_list in *.", "simpl in *.", "destruct H_pr0 as [_ H_del].", "destruct xs as [|xs xs0].", "-", "qsimpl time: 1."], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros m x x' xs xs' l H_inv H_planar H_dll H_pr0 H_fadj H_pr3.", "unfold pre_ring0, distinct_face_list in *.", "simpl in *.", "destruct H_pr0 as [_ H_del].", "destruct xs as [|xs xs0].", "-", "qsimpl time: 1.", "shelve.", "-"], "tactic": ["destruct H_dll as [H_dl _].", ""], "exn": "Expects a disjunctive pattern with 2 branches.", "type": "num_branch", "handled": false}]}, "chat": [], "original": "intros m x x' xs xs' l H_inv H_planar H_dll H_pr0 H_fadj H_pr3. unfold pre_ring0, distinct_face_list in *. simpl in *. destruct H_pr0 as [_ H_del]. destruct xs as [|xs xs0]. - simpl in *. constructor. - simpl in *. destruct H_dll as [H_dl _]. split. ++ assert (~ expf m (cA m zero x') (cA m zero xs)) as H_nexpf. { eapply ring1_ring3_connect. apply H_inv. apply H_planar. all: try eauto. } unfold distinct_faces. simpl. intros H_expf. apply H_nexpf. auto. ++ apply distinct_edge_list_Br1. -- apply H_inv. -- apply H_planar. -- auto.", "back_times": 0, "succ": false, "time": 249.40659594535828}]