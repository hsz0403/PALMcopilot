[{"history": {"proof": "srun best use: expf_symm, expf_B0_CS_2_a_III.", "repairs": [], "exceptions": [{"ctx": ["intros m x z t InvHmap SuccX ExpX0Xb0 ExpX_1Z ExpXh0_1T.", "assert (ExpXZ : expf m x z).", "split; [apply InvHmap |]."], "tactic": ["destruct ExpX_1Z as [_ Expo1].", ""], "exn": "Expects a disjunctive pattern with 2 branches.", "type": "num_branch", "handled": false}]}, "chat": [], "original": "intros m x z t InvHmap SuccX ExpX0Xb0 ExpX_1Z ExpXh0_1T. assert (ExpXZ : expf m x z). split; [apply InvHmap |]. destruct ExpX_1Z as [_ Expo1]. apply expf_transfert with (x0:=cA m zero x) (xb0:=bottom m zero x) (xh0:=top m zero x) (x_1:=cA_1 m one x) (xh0_1:=cA_1 m one (top m zero x)); auto. assert (ExpZT : expf m z t). apply expf_transfert with (x0:=cA m zero x) (xb0:=bottom m zero x) (xh0:=top m zero x) (x_1:=cA_1 m one x) (xh0_1:=cA_1 m one (top m zero x)); auto. apply expf_transfert with (x0:=cA m zero x). -- exd B m zero x z. exists (B m zero x). auto. -- exd B m zero x t. exists (B m zero x). auto. -- apply InvHmap. -- apply InvHmap. -- apply InvHmap. -- auto. -- auto. -- auto. -- auto.", "back_times": 0, "succ": true, "time": 148.4580454826355}]