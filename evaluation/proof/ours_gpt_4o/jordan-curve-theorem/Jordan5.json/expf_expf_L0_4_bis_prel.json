[{"history": {"proof": "qsimpl time: 1 use: expf.", "repairs": ["no_hypos"], "exceptions": [{"ctx": ["intros m x y z Hinv.", "unfold expf."], "tactic": "unfold expf in H1.", "exn": "No such hypothesis: H1", "type": "no_hypos", "handled": true}, {"ctx": ["intros m x y z Hinv.", "unfold expf.", "qsimpl time: 1 use: expf."], "tactic": "destruct H1 as [Hinv_m Hexpf1].", "exn": "The reference H1 was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros m x y z Hinv.", "unfold expf.", "qsimpl time: 1 use: expf."], "tactic": ["destruct H2 as [Hinv_m' Hexpf2].", ""], "exn": "Expects a disjunctive pattern with 0 branches.", "type": "num_branch", "handled": false}]}, "chat": [], "original": "intros m x y z Hinv. unfold expf. unfold expf in H1. destruct H1 as [Hinv_m Hexpf1]. unfold expf in H2. destruct H2 as [Hinv_m' Hexpf2]. assert (Hexd: exd m z). { apply MF.expo_exd with m y_0_1; auto. } apply (expf_expf_L0_1 m x y z 0); unfold expf; unfold not; intros; try split. - auto. - apply expf_L0_y_x_1. apply Hinv. - apply Hinv_m. - apply expf_L0_x0_y_0_1. apply Hinv.", "back_times": 0, "succ": false, "time": 117.347736120224}]