[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros m x y z t Hinv Hexd.", "remember (cA_1 m one x) as x_1.", "intros Hnexpf Hcases."], "tactic": ["destruct Hcases as [[Hexpfz Hexpft] | [Hexpfy Hexpft]].", ""], "exn": "Expects a disjunctive pattern with 0 branches.", "type": "num_branch", "handled": false}]}, "chat": [], "original": "intros m x y z t Hinv Hexd. remember (cA_1 m one x) as x_1. intros Hnexpf Hcases. destruct Hcases as [[Hexpfz Hexpft] | [Hexpfy Hexpft]]. - apply expf_expf_L0_3_bis with (x_1 := x_1) (z := z) in Hinv. apply expf_expf_L0_4_bis with (y := y) (z := t) in Hinv. apply expf_trans with (t := y). apply expf_symm. apply Hexpfz. apply expf_trans with (t := x_1). apply Hinv. apply Hexpft. auto. auto. auto. - apply expf_expf_L0_4_bis with (y := y) (z := z) in Hinv. apply expf_expf_L0_4_bis_prel with (y := y) (z := t) in Hinv. apply expf_trans with (t := y). apply expf_symm. apply Hexpfy. apply expf_trans with (t := x_1). apply Hinv. apply Hexpft. auto. auto. auto.", "back_times": 0, "succ": false, "time": 159.8249704837799}]