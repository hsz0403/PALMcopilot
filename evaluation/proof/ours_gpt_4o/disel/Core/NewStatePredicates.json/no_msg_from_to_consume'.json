[{"history": {"proof": "", "repairs": [], "exceptions": []}, "chat": [], "original": "move => Hvalid Hno_msg i t c. rewrite /consume_msg. case Hfind_i: (find i s) => [m|]. - case: (boolP (i == i)) => [Heq|Hneq]. ++ rewrite (eqP Heq). case: m Hfind_i => [cnt fr to act]. rewrite /=. move => Hmsg. have Hmarked: find i (consume_msg s i) = Some (mark_msg (Msg cnt fr to act)). { apply/find_consume. apply: Hvalid. rewrite Hfind_i. reflexivity. } move: Hmarked => [msg'] [Hfind Hmark]. rewrite Hmsg /=. by move: (find_consume i Hvalid Hfind_i) => [_ ->]. ++ apply: Hno_msg. rewrite /consume_msg /=. by rewrite mark_other. - by apply: Hno_msg.", "back_times": 0, "succ": false, "time": 35.73688626289368}]