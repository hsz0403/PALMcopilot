[{"history": {"proof": "qsimpl time: 1 use: coh_split. qsimpl time: 1 use: coh_split,injExtR. qsimpl time: 1 use: cohUnKR,coh_split,injExtR.", "repairs": ["wrong_type", "wrong_type", "no_instance_var"], "exceptions": [{"ctx": ["move=> Hcoh_ss' Hcoh_s' Hhook_U."], "tactic": "have {Hcoh_ss'} [s1 [s2 [Hs_eq Hcoh_s1 Hcoh_s2]]] := coh_split Hcoh_ss' Hhook_U Hcoh_s'.", "exn": "In environment U, W : prodPCM (union_mapPCM Label protocol) (union_mapPCM hook_domain hook_type) s, s' : union_mapPCM Label dstatelet Hcoh_ss' : s \\\\+ s' \\\\In Coh (U \\\\+ W) Hcoh_s' : s' \\\\In Coh W Hhook_U : hook_complete U The term \"Hcoh_s'\" has type \"s' \\\\In Coh W\" while it is expected to have type \"hook_complete W\".", "type": "wrong_type", "handled": true}, {"ctx": ["move=> Hcoh_ss' Hcoh_s' Hhook_U.", "qsimpl time: 1 use: coh_split."], "tactic": "rewrite Hs_eq.", "exn": "The reference Hs_eq was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["move=> Hcoh_ss' Hcoh_s' Hhook_U.", "qsimpl time: 1 use: coh_split."], "tactic": "rewrite (injExtR _ Hhook_U).", "exn": "In environment H : forall (W1 W2 : union_map Label protocol * union_map hook_domain hook_type) (s : state), s \\\\In Coh (W1 \\\\+ W2) -> hook_complete W1 -> hook_complete W2 -> exists s1 s2 : state, [/\\\\ s1 \\\\In Coh W1, s2 \\\\In Coh W2 & s = s1 \\\\+ s2] U0 : union_map Label protocol U1 : union_map hook_domain hook_type W0 : union_map Label protocol W1 : union_map hook_domain hook_type s, s' : union_map Label dstatelet Hhook_U : hook_complete (U0, U1) H0 : valid (W0, W1) H1 : valid s' H2 : hook_complete (W0, W1) H3 : dom W0 =i dom s' H4 : forall l : nat, coh (getProtocol (W0, W1) l) (getStatelet s' l) H5 : valid ((U0, U1) \\\\+ (W0, W1)) H6 : valid (s \\\\+ s') H7 : hook_complete ((U0, U1) \\\\+ (W0, W1)) H8 : dom (U0 \\\\+ W0) =i dom (s \\\\+ s') H9 : forall l : nat, coh (getProtocol ((U0, U1) \\\\+ (W0, W1)) l) (getStatelet (s \\\\+ s') l) The term \"Hhook_U\" has type \"hook_complete (U0, U1)\" while it is expected to have type \"is_true (valid (?W1 \\\\+ ?W2))\".", "type": "wrong_type", "handled": true}, {"ctx": ["move=> Hcoh_ss' Hcoh_s' Hhook_U.", "qsimpl time: 1 use: coh_split.", "qsimpl time: 1 use: coh_split,injExtR."], "tactic": "apply cohUnKR; eauto.", "exn": "Unable to find an instance for the variables U, s.", "type": "no_instance_var", "handled": true}, {"ctx": ["move=> Hcoh_ss' Hcoh_s' Hhook_U.", "qsimpl time: 1 use: coh_split.", "qsimpl time: 1 use: coh_split,injExtR.", "qsimpl time: 1 use: cohUnKR,coh_split,injExtR."], "tactic": "apply Hcoh_s1.", "exn": "The reference Hcoh_s1 was not found in the current environment.", "type": "ref_not_found", "handled": true}]}, "chat": [], "original": "move=> Hcoh_ss' Hcoh_s' Hhook_U. have {Hcoh_ss'} [s1 [s2 [Hs_eq Hcoh_s1 Hcoh_s2]]] := coh_split Hcoh_ss' Hhook_U Hcoh_s'. rewrite Hs_eq. rewrite (injExtR _ Hhook_U). apply cohUnKR; eauto. apply Hcoh_s1.", "back_times": 3, "succ": false, "time": 104.8121862411499}]