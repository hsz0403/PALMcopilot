[{"history": {"proof": "", "repairs": [], "exceptions": []}, "chat": [], "original": "destruct q as [q1 q2]. case: ifP => [/eqP Htag | Htag]. - simpl. move=> uniq_q1 uniq_q2. split. + apply /(map_inj_in_uniq fst). * move=> x y. rewrite /fst /=. case/eqP => ?; subst. exact. * by rewrite /= Htag in uniq_q1. + by apply: uniq_q2. - simpl. case: ifP => [/andP [Heq Hmem] | _]. + move=> uniq_q1 uniq_q2. split. * by apply: uniq_q1. * apply (@remove_elem_in q2 (to, rid)) in Hmem. case: ifP Hmem => // _ [Hpmem Hperm]. apply/perm_eq_uniq. -- by apply: uniq_q2. -- by move: Hperm; rewrite Hmem. + move=> uniq_q1 uniq_q2. split. * by apply: uniq_q1. * by apply: uniq_q2.", "back_times": 0, "succ": false, "time": 70.73860764503479}]