[{"history": {"proof": "qsimpl time: 1 use: getLocal_coh.", "repairs": ["wrong_type"], "exceptions": [{"ctx": ["move => Hget."], "tactic": "pose proof (getLocal_coh server d C) as [Hval Hcase].", "exn": "In environment server : nid clients : seq nid Hnin : server \\ otin clients Huniq : uniq clients d : dstatelet C : ResourceCoh d m : server_state Hget : getLocal server d = st :-> m The term \"server\" has type \"nid\" while it is expected to have type \"ResourceCoh ?d\".", "type": "wrong_type", "handled": true}, {"ctx": ["move => Hget.", "qsimpl time: 1 use: getLocal_coh."], "tactic": "move: Hget Hcase.", "exn": "The reference Hcase was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["move => Hget.", "qsimpl time: 1 use: getLocal_coh.", "move: Hget cancelPt2."], "tactic": "rewrite Hval => [|Hin]; last by move/dyn_val: (Hval).", "exn": "The reference Hval was not found in the current environment.", "type": "ref_not_found", "handled": true}]}, "chat": [], "original": "move => Hget. pose proof (getLocal_coh server d C) as [Hval Hcase]. move: Hget Hcase. rewrite Hval => [|Hin]; last by move/dyn_val: (Hval). case E: (server == server) => /=; last by done. move => Hget [ss Hss]. rewrite Hget in Hss. injection Hss => Hss'; subst ss. apply (getLocal_server_st_tp d C). rewrite Hget. exists (dyn _ _ m). apply/dyn_val. by done.", "back_times": 0, "succ": false, "time": 102.21407580375671}]