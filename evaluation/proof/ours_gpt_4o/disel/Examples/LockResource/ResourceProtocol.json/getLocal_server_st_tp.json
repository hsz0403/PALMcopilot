[{"history": {"proof": "qsimpl time: 1 use: getLocal_coh.", "repairs": ["wrong_type"], "exceptions": [{"ctx": ["move=> Hfind."], "tactic": "have Hlocal_coh := getLocal_coh server d C.", "exn": "In environment server : nid clients : seq nid Hnin : server \\ otin clients Huniq : uniq clients d : dstatelet C : ResourceCoh d s : dynamic id Hfind : find st (getLocal server d) = Some s The term \"server\" has type \"nid\" while it is expected to have type \"ResourceCoh ?d\".", "type": "wrong_type", "handled": true}, {"ctx": ["move=> Hfind.", "qsimpl time: 1 use: getLocal_coh."], "tactic": "rewrite -Hfind in Hlocal_coh.", "exn": "No such hypothesis: Hlocal_coh", "type": "no_hypos", "handled": true}, {"ctx": ["move=> Hfind.", "qsimpl time: 1 use: getLocal_coh.", "destruct (server == server) eqn:H_eq.", "--", "move/eqP: H_eq => H_eq."], "tactic": "--", "exn": "Wrong bullet --: Current bullet -- is not finished.", "type": "unfinished_bullet", "handled": true}]}, "chat": [], "original": "move=> Hfind. have Hlocal_coh := getLocal_coh server d C. rewrite -Hfind in Hlocal_coh. destruct (server == server) eqn:H_eq. -- move/eqP: H_eq => H_eq. subst server. move/(_ (erefl true)): Hlocal_coh => [Heq H]. move: Heq. rewrite Hfind. case: H => [ss H]. rewrite H. case: s Hfind => [s Hs]. rewrite -Hs. auto. -- move: H_eq. rewrite eq_refl. discriminate.", "back_times": 0, "succ": false, "time": 137.21438694000244}]