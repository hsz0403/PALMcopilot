[{"history": {"proof": "", "repairs": [], "exceptions": []}, "chat": [], "original": "intros Hc Hlocal. assert (Hdin: c \\in nodes) by (apply: client_nodes Hc). move: (getLocal_coh C Hdin). rewrite Hlocal /=. move/andP => [_ Hcs]. move: (Hcs); rewrite eq_refl /= => {}[cs [->]]. rewrite (getLocalU pf Hlocal) in Hlocal. have := getLocal_client_st_tp C Hc erefl. apply client_state_ind; intros. - rewrite (client_not_server _ Hc) eq_refl in Hcs. discriminate. - by subst; move: (Hlocal); case m.", "back_times": 0, "succ": false, "time": 166.0137152671814}]