[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros M A B.", "exists (vec A B), (vec B M), (vec M A).", "split.", "-", "repeat split.", "+"], "tactic": "+", "exn": "Wrong bullet +: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros M A B.", "exists (vec A B), (vec B M), (vec M A).", "split.", "-", "repeat split.", "+", "shelve.", "+"], "tactic": "+", "exn": "Wrong bullet +: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros M A B.", "exists (vec A B), (vec B M), (vec M A).", "split.", "-", "repeat split.", "+", "shelve.", "+", "shelve.", "+"], "tactic": "-", "exn": "Wrong bullet -: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros M A B.", "exists (vec A B), (vec B M), (vec M A).", "split.", "-", "repeat split.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "-", "split.", "+"], "tactic": "apply construction_isocele_base.", "exn": "In environment M, A, B : PO Unable to unify \"exists u v : V, R (cons (vec ?M1470 ?M1471) u) (cons v (vec ?M1471 ?M1470)) /\\\\ R (cons u v) (double ?M1472)\" with \"R (cons (vec A B) (vec A B)) (cons (vec B M) (vec B A))\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros M A B.", "exists (vec A B), (vec B M), (vec M A).", "split.", "-", "repeat split.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "-", "split.", "+", "qsimpl time: 1 use: triangle_isocele,angle_inscrit,construction_isocele_base,somme_triangle,R_permute,isocele_permute."], "tactic": "+", "exn": "Wrong bullet +: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros M A B.", "exists (vec A B), (vec B M), (vec M A).", "split.", "-", "repeat split.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "-", "split.", "+", "qsimpl time: 1 use: triangle_isocele,angle_inscrit,construction_isocele_base,somme_triangle,R_permute,isocele_permute.", "shelve.", "+"], "tactic": "apply construction_isocele_base.", "exn": "In environment M, A, B : PO Unable to unify \"exists u v : V, R (cons (vec ?M2019 ?M2020) u) (cons v (vec ?M2020 ?M2019)) /\\\\ R (cons u v) (double ?M2021)\" with \"R (cons (vec M A) (vec M B)) (cons (vec B M) (vec B M)) /\\\\ R (cons (vec M A) (vec M A)) (cons (vec A B) (vec A M))\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros M A B.", "exists (vec A B), (vec B M), (vec M A).", "split.", "-", "repeat split.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "-", "split.", "+", "qsimpl time: 1 use: triangle_isocele,angle_inscrit,construction_isocele_base,somme_triangle,R_permute,isocele_permute.", "shelve.", "+", "qsimpl time: 1 use: triangle_isocele,angle_inscrit,construction_isocele_base,somme_triangle,R_permute,isocele_permute."], "tactic": "+", "exn": "Wrong bullet +: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros M A B.", "exists (vec A B), (vec B M), (vec M A).", "split.", "-", "repeat split.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "-", "split.", "+", "qsimpl time: 1 use: triangle_isocele,angle_inscrit,construction_isocele_base,somme_triangle,R_permute,isocele_permute.", "shelve.", "+", "qsimpl time: 1 use: triangle_isocele,angle_inscrit,construction_isocele_base,somme_triangle,R_permute,isocele_permute.", "*", "shelve.", "*", "shelve."], "tactic": "+", "exn": "Wrong bullet +: No more subgoals.", "type": "no_more_subgoals", "handled": true}]}, "chat": [], "original": "intros M A B. exists (vec A B), (vec B M), (vec M A). split. - repeat split. + apply angle_inscrit with A B M. * apply isocele_permute. apply triangle_isocele. right. apply R_permute. apply somme_triangle. * apply isocele_permute. apply triangle_isocele. left. apply R_permute. apply somme_triangle. + apply angle_inscrit with B A M. * apply isocele_permute. apply triangle_isocele. left. apply R_permute. apply somme_triangle. * apply isocele_permute. apply triangle_isocele. right. apply R_permute. apply somme_triangle. + apply angle_inscrit with A B M. * apply isocele_permute. apply triangle_isocele. right. apply R_permute. apply somme_triangle. * apply isocele_permute. apply triangle_isocele. left. apply R_permute. apply somme_triangle. - split. + apply construction_isocele_base. + apply construction_isocele_base. + apply construction_isocele_base.", "back_times": 0, "succ": false, "time": 159.41729640960693}]