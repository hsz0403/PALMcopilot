[{"history": {"proof": "intros u v w Huv Hv. apply orthogonal_sym. srun best use: transitive, permute, colineaire_modulo_pi, orthogonal_sym unfold: double, orthogonal, colineaire.", "repairs": ["", "", "hammer"], "exceptions": [{"ctx": ["intros u v w Huv Hv.", "apply orthogonal_sym.", "apply orthogonal_opp in Huv.", "unfold colineaire, orthogonal in *.", "apply colineaire_sym in Hv.", "apply colineaire_modulo_pi with (u := u) (u' := w) in Hv."], "tactic": "apply rot in Huv.", "exn": "The reference rot was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros u v w Huv Hv.", "apply orthogonal_sym.", "apply orthogonal_opp in Huv.", "unfold colineaire, orthogonal in *.", "apply colineaire_sym in Hv.", "apply colineaire_modulo_pi with (u := u) (u' := w) in Hv.", "apply Field_theory.NPEmul in Huv."], "tactic": "apply rot in Hv.", "exn": "The reference rot was not found in the current environment.", "type": "ref_not_found", "handled": true}]}, "chat": [], "original": "intros u v w Huv Hv. apply orthogonal_sym. apply orthogonal_opp in Huv. unfold colineaire, orthogonal in *. apply colineaire_sym in Hv. apply colineaire_modulo_pi with (u := u) (u' := w) in Hv. apply rot in Huv. apply rot in Hv. transitivity (R (cons (opp v) (opp w)) (double (cons u v))). - apply somme_permute. - apply R_permute. apply double_permute. apply Hv.", "back_times": 0, "succ": true, "time": 187.40789270401}]