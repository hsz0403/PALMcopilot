[{"history": {"proof": "qsimpl time: 1 use: deux_rectangles. qsimpl time: 1 use: deux_rectangles. qsimpl time: 1 use: changement_base_cocyclique,deux_rectangles.", "repairs": ["cannot_apply_in", "cannot_apply_in", "cannot_apply_in"], "exceptions": [{"ctx": ["intros I A B C D.", "intros biss_IA_bc iso_abc iso_dbc.", "apply isocele_bissectrice_hauteur with (I := I) in iso_abc as ortho1; auto.", "apply isocele_bissectrice_hauteur with (I := D) in iso_dbc as ortho2; auto."], "tactic": "apply deux_rectangles with (C := B) (D := A) in ortho1; auto.", "exn": "Unable to apply lemma of type \"forall A B C D : PO, orthogonal (vec C A) (vec C B) -> orthogonal (vec D A) (vec D B) -> R (double (cons (vec B C) (vec B A))) (double (cons (vec D C) (vec D A)))\" on hypothesis of type \"orthogonal (vec A I) (vec B C)\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["intros I A B C D.", "intros biss_IA_bc iso_abc iso_dbc.", "apply isocele_bissectrice_hauteur with (I := I) in iso_abc as ortho1; auto.", "apply isocele_bissectrice_hauteur with (I := D) in iso_dbc as ortho2; auto.", "qsimpl time: 1 use: deux_rectangles."], "tactic": "apply deux_rectangles with (C := C) (D := D) in ortho2; auto.", "exn": "Unable to apply lemma of type \"forall A B C D : PO, orthogonal (vec C A) (vec C B) -> orthogonal (vec D A) (vec D B) -> R (double (cons (vec B C) (vec B A))) (double (cons (vec D C) (vec D A)))\" on hypothesis of type \"orthogonal (vec D D) (vec B C)\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["intros I A B C D.", "intros biss_IA_bc iso_abc iso_dbc.", "apply isocele_bissectrice_hauteur with (I := I) in iso_abc as ortho1; auto.", "apply isocele_bissectrice_hauteur with (I := D) in iso_dbc as ortho2; auto.", "qsimpl time: 1 use: deux_rectangles.", "qsimpl time: 1 use: deux_rectangles."], "tactic": "apply changement_base_cocyclique with (A := B) (B := C) in ortho1; auto.", "exn": "Unable to apply lemma of type \"forall A B C D : PO, ~ colineaire (vec C A) (vec C B) -> R (double (cons (vec C A) (vec C B))) (double (cons (vec D A) (vec D B))) -> R (double (cons (vec A C) (vec A D))) (double (cons (vec B C) (vec B D)))\" on hypothesis of type \"orthogonal (vec A I) (vec B C)\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["intros I A B C D.", "intros biss_IA_bc iso_abc iso_dbc.", "apply isocele_bissectrice_hauteur with (I := I) in iso_abc as ortho1; auto.", "apply isocele_bissectrice_hauteur with (I := D) in iso_dbc as ortho2; auto.", "qsimpl time: 1 use: deux_rectangles.", "qsimpl time: 1 use: deux_rectangles.", "qsimpl time: 1 use: changement_base_cocyclique,deux_rectangles."], "tactic": "apply changement_base_cocyclique_2 with (A := C) (B := A).", "exn": "In environment H1 : forall A B C D : PO, orthogonal (vec C A) (vec C B) -> orthogonal (vec D A) (vec D B) -> R (double (cons (vec B C) (vec B A))) (double (cons (vec D C) (vec D A))) H : forall A B C D : PO, (colineaire (vec C A) (vec C B) -> False) -> R (double (cons (vec C A) (vec C B))) (double (cons (vec D A) (vec D B))) -> R (double (cons (vec A C) (vec A D))) (double (cons (vec B C) (vec B D))) I, A, B, C, D : PO biss_IA_bc : bissectrice I A B C iso_abc : isocele A B C ortho1 : orthogonal (vec A I) (vec B C) iso_dbc : isocele D B C ortho2 : orthogonal (vec D D) (vec B C) Unable to unify \"R (double (cons (vec A ?M2438) (vec A C))) (double (cons (vec ?M2439 ?M2438) (vec ?M2439 C)))\" with \"R (cons (vec D B) (vec A I)) (cons (vec A I) (vec D C))\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros I A B C D.", "intros biss_IA_bc iso_abc iso_dbc.", "apply isocele_bissectrice_hauteur with (I := I) in iso_abc as ortho1; auto.", "apply isocele_bissectrice_hauteur with (I := D) in iso_dbc as ortho2; auto.", "qsimpl time: 1 use: deux_rectangles.", "qsimpl time: 1 use: deux_rectangles.", "qsimpl time: 1 use: changement_base_cocyclique,deux_rectangles.", "qsimpl time: 1 use: changement_base_cocyclique,changement_base_cocyclique_2,deux_rectangles.", "-"], "tactic": "apply opp_vect.", "exn": "In environment H3 : forall A B C D : PO, orthogonal (vec C A) (vec C B) -> orthogonal (vec D A) (vec D B) -> R (double (cons (vec B C) (vec B A))) (double (cons (vec D C) (vec D A))) H2 : forall A B C D : PO, (colineaire (vec C A) (vec C B) -> False) -> R (double (cons (vec C A) (vec C B))) (double (cons (vec D A) (vec D B))) -> R (double (cons (vec B C) (vec B A))) (double (cons (vec D C) (vec D A))) H0 : forall A B C D : PO, (colineaire (vec C A) (vec C B) -> False) -> R (double (cons (vec C A) (vec C B))) (double (cons (vec D A) (vec D B))) -> R (double (cons (vec A C) (vec A D))) (double (cons (vec B C) (vec B D))) I, A, B, C, D : PO biss_IA_bc : bissectrice I A B C iso_abc : isocele A B C ortho1 : orthogonal (vec A I) (vec B C) iso_dbc : isocele D B C ortho2 : orthogonal (vec D D) (vec B C) Unable to unify \"vR (opp (vec ?M2892 ?M2893)) (vec ?M2893 ?M2892)\" with \"R (cons (vec D B) (vec A I)) (cons (vec A I) (vec D C))\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros I A B C D.", "intros biss_IA_bc iso_abc iso_dbc.", "apply isocele_bissectrice_hauteur with (I := I) in iso_abc as ortho1; auto.", "apply isocele_bissectrice_hauteur with (I := D) in iso_dbc as ortho2; auto.", "qsimpl time: 1 use: deux_rectangles.", "qsimpl time: 1 use: deux_rectangles.", "qsimpl time: 1 use: changement_base_cocyclique,deux_rectangles.", "qsimpl time: 1 use: changement_base_cocyclique,changement_base_cocyclique_2,deux_rectangles.", "-", "qsimpl time: 1 use: changement_base_cocyclique,changement_base_cocyclique_2,deux_rectangles,opp_vect."], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros I A B C D.", "intros biss_IA_bc iso_abc iso_dbc.", "apply isocele_bissectrice_hauteur with (I := I) in iso_abc as ortho1; auto.", "apply isocele_bissectrice_hauteur with (I := D) in iso_dbc as ortho2; auto.", "qsimpl time: 1 use: deux_rectangles.", "qsimpl time: 1 use: deux_rectangles.", "qsimpl time: 1 use: changement_base_cocyclique,deux_rectangles.", "qsimpl time: 1 use: changement_base_cocyclique,changement_base_cocyclique_2,deux_rectangles.", "-", "qsimpl time: 1 use: changement_base_cocyclique,changement_base_cocyclique_2,deux_rectangles,opp_vect.", "shelve.", "-"], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros I A B C D.", "intros biss_IA_bc iso_abc iso_dbc.", "apply isocele_bissectrice_hauteur with (I := I) in iso_abc as ortho1; auto.", "apply isocele_bissectrice_hauteur with (I := D) in iso_dbc as ortho2; auto.", "qsimpl time: 1 use: deux_rectangles.", "qsimpl time: 1 use: deux_rectangles.", "qsimpl time: 1 use: changement_base_cocyclique,deux_rectangles.", "qsimpl time: 1 use: changement_base_cocyclique,changement_base_cocyclique_2,deux_rectangles.", "-", "qsimpl time: 1 use: changement_base_cocyclique,changement_base_cocyclique_2,deux_rectangles,opp_vect.", "shelve.", "-", "shelve."], "tactic": "-", "exn": "Wrong bullet -: No more subgoals.", "type": "no_more_subgoals", "handled": true}]}, "chat": [], "original": "intros I A B C D. intros biss_IA_bc iso_abc iso_dbc. apply isocele_bissectrice_hauteur with (I := I) in iso_abc as ortho1; auto. apply isocele_bissectrice_hauteur with (I := D) in iso_dbc as ortho2; auto. apply deux_rectangles with (C := B) (D := A) in ortho1; auto. apply deux_rectangles with (C := C) (D := D) in ortho2; auto. apply changement_base_cocyclique with (A := B) (B := C) in ortho1; auto. apply changement_base_cocyclique_2 with (A := C) (B := A). - apply opp_vect. - auto. - apply bissectrice_double in biss_IA_bc. apply isocele_sym in ortho2. apply changement_base_cocyclique with (A := A) (B := B) in ortho2; auto. assert (exist_cocycliques: sont_cocycliques A B C A). { apply reciproque_cocyclique; auto. exists A; auto. } apply changement_base_cocyclique with (A := B) (B := D) in ortho2; auto.", "back_times": 0, "succ": false, "time": 202.6921627521515}]