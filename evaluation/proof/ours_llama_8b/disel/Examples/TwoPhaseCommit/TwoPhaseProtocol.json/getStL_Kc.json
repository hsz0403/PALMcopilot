[{"history": {"proof": "qsimpl time: 1 use: locCn. qsimpl time: 1 use: cohStP,getStP,locCn. qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP. qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP. qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP. qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP. qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP. qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP. qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP. qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP. qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP. qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP. qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP. qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP. qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP. qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP. qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP. qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP. qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP. qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP. qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP. qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP. qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP. qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP. qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP. qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP. qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP. qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP. qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP. qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP. qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP. qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP. qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP. qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP. qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP. qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP. qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP. qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP. qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP. qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP. qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP. qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "repairs": ["no_hypos", "no_hypos", "no_hypos", "no_hypos", "no_hypos", "no_hypos", "no_hypos", "no_hypos", "no_hypos", "no_hypos", "no_hypos", "no_hypos", "no_hypos", "no_hypos", "no_hypos", "no_hypos", "no_hypos", "no_hypos", "no_hypos", "no_hypos", "no_hypos", "no_hypos", "no_hypos", "no_hypos", "no_hypos", "no_hypos", "no_hypos", "no_hypos", "no_hypos", "no_hypos", "no_hypos", "no_hypos", "no_hypos", "no_hypos", "no_hypos", "no_hypos", "no_hypos", "no_hypos", "no_hypos", "no_hypos", "no_hypos", "no_hypos"], "exceptions": [{"ctx": [], "tactic": "intros cn others pts pts_dec pts_uniq n d C pf m l.", "exn": "cn is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros cn' others pts pts_dec pts_uniq n d C pf m l.", "exn": "others is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros cn' others' pts pts_dec pts_uniq n d C pf m l.", "exn": "pts is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros cn' others' pts' pts_dec pts_uniq n d C pf m l.", "exn": "n is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros cn' others' pts' pts_dec pts_uniq n'' d C pf m l.", "exn": "d is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros cn' others' pts' pts_dec pts_uniq n'' d' C pf m l.", "exn": "C is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros cn' others' pts' pts_dec pts_uniq n'' d' C' pf m l.", "exn": "pf is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros cn' others' pts' pts_dec pts_uniq n'' d' C' pf' m l.", "exn": "m is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros cn' others' pts' pts_dec pts_uniq n'' d' C' pf' m' l.", "exn": "l is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros cn' others' pts' pts_dec pts_uniq n'' d' C' pf' m' l'.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros.", "unfold getLocal, getStL in *."], "tactic": "rewrite locCn in getStL_C.", "exn": "No such hypothesis: getStL_C", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "unfold getLocal, getStL in *.", "qsimpl time: 1 use: locCn."], "tactic": "destruct (locCn n d C pf) as [Hvalid HgetLocal].", "exn": "In environment cn : nid pts, others : seq nid Hnin : cn \\ otin pts Puniq : uniq pts n : nat d : dstatelet C : tpc_coh d pf : n \\\\in nodes m : CStateT l : Log Heqo : find n (dstate d) = Some (st :-> m \\\\+ log :-> l) H0 : forall (n : nat) (d : dstatelet), tpc_coh d -> n \\\\in nodes -> if n == cn then exists (s : CStateT) (l : Log), getLocal n d = st :-> s \\\\+ log :-> l else if n \\\\in pts then exists (s : PStateT) (l : Log), getLocal n d = st :-> s \\\\+ log :-> l else log \\ otin dom (getLocal n d) H1 : forall (n : nat) (d : dstatelet), tpc_coh d -> n \\\\in nodes -> valid (getLocal n d) The term \"n\" has type \"nat\" while it is expected to have type \"TPCCoh ?d\".", "type": "wrong_type", "handled": true}, {"ctx": ["intros.", "unfold getLocal, getStL in *.", "qsimpl time: 1 use: locCn."], "tactic": "destruct Hvalid as [Hvalid1 Hvalid2].", "exn": "The reference Hvalid was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros.", "unfold getLocal, getStL in *.", "qsimpl time: 1 use: locCn."], "tactic": "destruct HgetLocal as [HgetLocal1 HgetLocal2].", "exn": "The reference HgetLocal was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros.", "unfold getLocal, getStL in *.", "qsimpl time: 1 use: locCn."], "tactic": "apply HgetLocal1 in HgetLocal2.", "exn": "No such hypothesis: HgetLocal2", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "unfold getLocal, getStL in *.", "qsimpl time: 1 use: locCn."], "tactic": "rewrite HgetLocal2 in getStL_C.", "exn": "No such hypothesis: getStL_C", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "unfold getLocal, getStL in *.", "qsimpl time: 1 use: locCn."], "tactic": "rewrite cohStP in getStP.", "exn": "No such hypothesis: getStP", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "unfold getLocal, getStL in *.", "qsimpl time: 1 use: locCn.", "qsimpl time: 1 use: cohStP,getStP,locCn."], "tactic": "rewrite cohStC in getStC.", "exn": "No such hypothesis: getStC", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "unfold getLocal, getStL in *.", "qsimpl time: 1 use: locCn.", "qsimpl time: 1 use: cohStP,getStP,locCn.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP."], "tactic": "apply getStP in getStP.", "exn": "No such hypothesis: getStP", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "unfold getLocal, getStL in *.", "qsimpl time: 1 use: locCn.", "qsimpl time: 1 use: cohStP,getStP,locCn.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP."], "tactic": "apply getStC in getStC.", "exn": "No such hypothesis: getStC", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "unfold getLocal, getStL in *.", "qsimpl time: 1 use: locCn.", "qsimpl time: 1 use: cohStP,getStP,locCn.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *."], "tactic": "rewrite HgetLocal1 in getStL_C.", "exn": "No such hypothesis: getStL_C", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "unfold getLocal, getStL in *.", "qsimpl time: 1 use: locCn.", "qsimpl time: 1 use: cohStP,getStP,locCn.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP."], "tactic": "rewrite getStL_C in getStL_C.", "exn": "No such hypothesis: getStL_C", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "unfold getLocal, getStL in *.", "qsimpl time: 1 use: locCn.", "qsimpl time: 1 use: cohStP,getStP,locCn.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP."], "tactic": "rewrite <- HgetLocal1 in getStL_C.", "exn": "No such hypothesis: getStL_C", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "unfold getLocal, getStL in *.", "qsimpl time: 1 use: locCn.", "qsimpl time: 1 use: cohStP,getStP,locCn.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *."], "tactic": "rewrite HgetLocal2 in getStL_C.", "exn": "No such hypothesis: getStL_C", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "unfold getLocal, getStL in *.", "qsimpl time: 1 use: locCn.", "qsimpl time: 1 use: cohStP,getStP,locCn.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP."], "tactic": "rewrite getStL_C in getStL_C.", "exn": "No such hypothesis: getStL_C", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "unfold getLocal, getStL in *.", "qsimpl time: 1 use: locCn.", "qsimpl time: 1 use: cohStP,getStP,locCn.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *."], "tactic": "rewrite HgetLocal1 in getStL_C.", "exn": "No such hypothesis: getStL_C", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "unfold getLocal, getStL in *.", "qsimpl time: 1 use: locCn.", "qsimpl time: 1 use: cohStP,getStP,locCn.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP."], "tactic": "rewrite getStL_C in getStL_C.", "exn": "No such hypothesis: getStL_C", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "unfold getLocal, getStL in *.", "qsimpl time: 1 use: locCn.", "qsimpl time: 1 use: cohStP,getStP,locCn.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP."], "tactic": "rewrite <- HgetLocal1 in getStL_C.", "exn": "No such hypothesis: getStL_C", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "unfold getLocal, getStL in *.", "qsimpl time: 1 use: locCn.", "qsimpl time: 1 use: cohStP,getStP,locCn.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *."], "tactic": "rewrite HgetLocal2 in getStL_C.", "exn": "No such hypothesis: getStL_C", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "unfold getLocal, getStL in *.", "qsimpl time: 1 use: locCn.", "qsimpl time: 1 use: cohStP,getStP,locCn.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP."], "tactic": "rewrite getStL_C in getStL_C.", "exn": "No such hypothesis: getStL_C", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "unfold getLocal, getStL in *.", "qsimpl time: 1 use: locCn.", "qsimpl time: 1 use: cohStP,getStP,locCn.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *."], "tactic": "rewrite HgetLocal1 in getStL_C.", "exn": "No such hypothesis: getStL_C", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "unfold getLocal, getStL in *.", "qsimpl time: 1 use: locCn.", "qsimpl time: 1 use: cohStP,getStP,locCn.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP."], "tactic": "rewrite getStL_C in getStL_C.", "exn": "No such hypothesis: getStL_C", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "unfold getLocal, getStL in *.", "qsimpl time: 1 use: locCn.", "qsimpl time: 1 use: cohStP,getStP,locCn.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP."], "tactic": "rewrite <- HgetLocal1 in getStL_C.", "exn": "No such hypothesis: getStL_C", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "unfold getLocal, getStL in *.", "qsimpl time: 1 use: locCn.", "qsimpl time: 1 use: cohStP,getStP,locCn.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *."], "tactic": "rewrite HgetLocal2 in getStL_C.", "exn": "No such hypothesis: getStL_C", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "unfold getLocal, getStL in *.", "qsimpl time: 1 use: locCn.", "qsimpl time: 1 use: cohStP,getStP,locCn.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP."], "tactic": "rewrite getStL_C in getStL_C.", "exn": "No such hypothesis: getStL_C", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "unfold getLocal, getStL in *.", "qsimpl time: 1 use: locCn.", "qsimpl time: 1 use: cohStP,getStP,locCn.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *."], "tactic": "rewrite HgetLocal1 in getStL_C.", "exn": "No such hypothesis: getStL_C", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "unfold getLocal, getStL in *.", "qsimpl time: 1 use: locCn.", "qsimpl time: 1 use: cohStP,getStP,locCn.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP."], "tactic": "rewrite getStL_C in getStL_C.", "exn": "No such hypothesis: getStL_C", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "unfold getLocal, getStL in *.", "qsimpl time: 1 use: locCn.", "qsimpl time: 1 use: cohStP,getStP,locCn.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP."], "tactic": "rewrite <- HgetLocal1 in getStL_C.", "exn": "No such hypothesis: getStL_C", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "unfold getLocal, getStL in *.", "qsimpl time: 1 use: locCn.", "qsimpl time: 1 use: cohStP,getStP,locCn.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *."], "tactic": "rewrite HgetLocal2 in getStL_C.", "exn": "No such hypothesis: getStL_C", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "unfold getLocal, getStL in *.", "qsimpl time: 1 use: locCn.", "qsimpl time: 1 use: cohStP,getStP,locCn.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP."], "tactic": "rewrite getStL_C in getStL_C.", "exn": "No such hypothesis: getStL_C", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "unfold getLocal, getStL in *.", "qsimpl time: 1 use: locCn.", "qsimpl time: 1 use: cohStP,getStP,locCn.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *."], "tactic": "rewrite HgetLocal1 in getStL_C.", "exn": "No such hypothesis: getStL_C", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "unfold getLocal, getStL in *.", "qsimpl time: 1 use: locCn.", "qsimpl time: 1 use: cohStP,getStP,locCn.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP."], "tactic": "rewrite getStL_C in getStL_C.", "exn": "No such hypothesis: getStL_C", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "unfold getLocal, getStL in *.", "qsimpl time: 1 use: locCn.", "qsimpl time: 1 use: cohStP,getStP,locCn.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP."], "tactic": "rewrite <- HgetLocal1 in getStL_C.", "exn": "No such hypothesis: getStL_C", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "unfold getLocal, getStL in *.", "qsimpl time: 1 use: locCn.", "qsimpl time: 1 use: cohStP,getStP,locCn.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *."], "tactic": "rewrite HgetLocal2 in getStL_C.", "exn": "No such hypothesis: getStL_C", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "unfold getLocal, getStL in *.", "qsimpl time: 1 use: locCn.", "qsimpl time: 1 use: cohStP,getStP,locCn.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP."], "tactic": "rewrite getStL_C in getStL_C.", "exn": "No such hypothesis: getStL_C", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "unfold getLocal, getStL in *.", "qsimpl time: 1 use: locCn.", "qsimpl time: 1 use: cohStP,getStP,locCn.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *."], "tactic": "rewrite HgetLocal1 in getStL_C.", "exn": "No such hypothesis: getStL_C", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "unfold getLocal, getStL in *.", "qsimpl time: 1 use: locCn.", "qsimpl time: 1 use: cohStP,getStP,locCn.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP."], "tactic": "rewrite getStL_C in getStL_C.", "exn": "No such hypothesis: getStL_C", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "unfold getLocal, getStL in *.", "qsimpl time: 1 use: locCn.", "qsimpl time: 1 use: cohStP,getStP,locCn.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP."], "tactic": "rewrite <- HgetLocal1 in getStL_C.", "exn": "No such hypothesis: getStL_C", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "unfold getLocal, getStL in *.", "qsimpl time: 1 use: locCn.", "qsimpl time: 1 use: cohStP,getStP,locCn.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *."], "tactic": "rewrite HgetLocal2 in getStL_C.", "exn": "No such hypothesis: getStL_C", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "unfold getLocal, getStL in *.", "qsimpl time: 1 use: locCn.", "qsimpl time: 1 use: cohStP,getStP,locCn.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP."], "tactic": "rewrite getStL_C in getStL_C.", "exn": "No such hypothesis: getStL_C", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "unfold getLocal, getStL in *.", "qsimpl time: 1 use: locCn.", "qsimpl time: 1 use: cohStP,getStP,locCn.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *."], "tactic": "rewrite HgetLocal1 in getStL_C.", "exn": "No such hypothesis: getStL_C", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "unfold getLocal, getStL in *.", "qsimpl time: 1 use: locCn.", "qsimpl time: 1 use: cohStP,getStP,locCn.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP."], "tactic": "rewrite getStL_C in getStL_C.", "exn": "No such hypothesis: getStL_C", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "unfold getLocal, getStL in *.", "qsimpl time: 1 use: locCn.", "qsimpl time: 1 use: cohStP,getStP,locCn.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP."], "tactic": "rewrite <- HgetLocal1 in getStL_C.", "exn": "No such hypothesis: getStL_C", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "unfold getLocal, getStL in *.", "qsimpl time: 1 use: locCn.", "qsimpl time: 1 use: cohStP,getStP,locCn.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *."], "tactic": "rewrite HgetLocal2 in getStL_C.", "exn": "No such hypothesis: getStL_C", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "unfold getLocal, getStL in *.", "qsimpl time: 1 use: locCn.", "qsimpl time: 1 use: cohStP,getStP,locCn.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP."], "tactic": "rewrite getStL_C in getStL_C.", "exn": "No such hypothesis: getStL_C", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "unfold getLocal, getStL in *.", "qsimpl time: 1 use: locCn.", "qsimpl time: 1 use: cohStP,getStP,locCn.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *."], "tactic": "rewrite HgetLocal1 in getStL_C.", "exn": "No such hypothesis: getStL_C", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "unfold getLocal, getStL in *.", "qsimpl time: 1 use: locCn.", "qsimpl time: 1 use: cohStP,getStP,locCn.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP."], "tactic": "rewrite getStL_C in getStL_C.", "exn": "No such hypothesis: getStL_C", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "unfold getLocal, getStL in *.", "qsimpl time: 1 use: locCn.", "qsimpl time: 1 use: cohStP,getStP,locCn.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "unfold getLocal in *.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP.", "qsimpl time: 1 use: getStP,locCn,cohStC,getStC,cohStP."], "tactic": "rewrite <- HgetLocal1 in getStL_C.", "exn": "No such hypothesis: getStL_C", "type": "no_hypos", "handled": true}]}, "chat": [{"role": "user", "content": "I will give you a Coq proof state, including both hypotheses and a specific goal and your need to prove it. Your response should be a singular code block of Coq proof starting with \"```coq\n\", ending with \"Qed.```\", without any additional explanation or commentary. Follow to these guidelines:\nIntroduce variables using unique names to avoid any conflicts.\nKeep each command distinct and separated, avoid concatenations like ';' or '[cmd|cmd]'.\nOrganize your proof with bullets like '-', '+', and '*' instead of braces ({, }). Shift to their double symbols like '--' and '++', when necessary.\nEffectively use given premises, follow the syntax and structure demonstrated in the examples provided.\n\nExample 1:\n\nHypotheses:\nn, m: nat\nIHn: m + n = n + m\n\nGoal:\nm + S n = S n + m\n\nProof:\n```coq\nsimpl. rewrite <- IHn. auto.\nQed.```\n\nExample 2:\nHypotheses:\n\nGoal:\nforall n m : nat, m + n = n + m\n\n```coq\nintros n m. induction n.\n- simpl. auto.\n- simpl. rewrite <- IHn. auto.\nQed.```\n\nSolve This Proof State:\n\nHypotheses:\ncn: nid\nothers: seq nid\npts: seq nid\nHnin: is_true (cn \\notin pts)\nPuniq: is_true (uniq pts)\nn: Equality.sort nat_eqType\nd: dstatelet\nC: TPCCoh d\npf: is_true (n \\in nodes)\nm: CStateT\nl: Log\n\nGoal:\ngetLocal n d = st :-> m \\+ log :-> l -> getStL C pf = l\n\nPremises:\nlog = ptr_nat 2 : ptr\ngetLocal = fun (n : nid) (d : dstatelet) => match find n (dstate d) with | Some h => h | None => Unit end : nid -> dstatelet -> heap\ngetStL : forall (n : nat_eqType) (d : dstatelet), TPCCoh d -> n \\in nodes -> Log\nnodes = [:: cn] ++ pts ++ others : seq nid\nst = ptr_nat 1 : ptr\nuniq = fun T : eqType => fix uniq (s : seq T) : bool := match s with | [::] => true | x :: s' => (x \\notin s') && uniq s' end : forall T : eqType, seq T -> bool Arguments uniq {T} _%seq_scope\nNotation seq := list\nModule Equality := Struct Definition block : forall A : Type, A -> A. Parameter JMeq_eq_refl : forall (A : Type) (x : A), JMeq_eq JMeq_refl = erefl x. Parameter UIP_refl_refl : forall (A : Type) (x : A), UIP_refl A x (erefl x) = erefl (erefl x). Parameter inj_pairT2_refl : forall (A : Type) (x : A) (P : A -> Type) (p : P x), inj_pairT2 A P x p p (erefl (existT P x p)) = erefl p. Record DependentEliminationPackage (A : Type) : Type := Build_DependentEliminationPackage { elim_type : Type; elim : elim\nsort : forall T : Type, rel T -> seq T -> seq T\nis_true = eq^~ true : bool -> Prop Arguments is_true _%bool_scope is_true is a coercion\nTPCCoh = CohPred (CohPredMixin l1 l2 l3) : Coherence.cohpred (fun=> [eta nodes])\ngetStP_K : forall (n : nat_eqType) (d : dstatelet) (C : TPCCoh d) (pf : n \\in nodes) (m : PStateT) (l : Log), n \\in pts -> getLocal n d = st : -> m \\+ log : -> l -> getStP C pf = m\nlocCn : forall (n : nat_eqType) (d : dstatelet), TPCCoh d -> n \\in nodes -> valid (getLocal n d) /\\ (if n == cn then exists (s : CStateT) (l : Log), getLocal n d = st :-> s \\+ log :-> l else if n \\in pts then exists (s : PStateT) (l : Log), getLocal n d = st :-> s \\+ log :-> l else log \\notin dom (getLocal n d))\ngetStC_K : forall (d : dstatelet) (C : TPCCoh d) (m : CStateT) (l : Log), getLocal cn d = st : -> m \\+ log : -> l -> getStC C = m\nlocalCoh = fun n : nid => Pred_of_Simpl [Pred h | valid h /\\ (if n == cn then exists (s : CStateT) (l : Log), h = st :-> s \\+ log :-> l else if n \\in pts then exists (s : PStateT) (l : Log), h = st :-> s \\+ log :-> l else log \\notin dom h)] : nid -> Pred heap\ndyn_val : forall x : {x : ?A & ?P x}, ?P (projT1 x) where ?A : [cn : nid pts : seq nid others : seq nid Hnin : cn \\notin pts Puniq : uniq pts n : nat_eqType d : dstatelet C : TPCCoh d pf : n \\in nodes m : CStateT l : Log |- Type] ?P : [cn : nid pts : seq nid others : seq nid Hnin : cn \\notin pts Puniq : uniq pts n : nat_eqType d : dstatelet C : TPCCoh d pf : n \\in nodes m : CStateT l : Log |- ?A -> Type]\nRecord protocol : Type := Protocol { nodes : dstatelet -> pred nid; plab : Ordered.sort Label; coh : cohpred nodes; snd_trans : seq (send_trans coh); rcv_trans : seq (receive_trans coh); snd_uniq : is_true (uniq (Protocols.snd_tags snd_trans)); rcv_uniq : is_true (uniq (Protocols.rcv_tags rcv_trans)) } Arguments Protocols.Protocol [nodes]%function_scope _ [coh] [snd_trans rcv_trans]%seq_scope\ncast : forall (interp : ?C -> Type) (A B : ?C), A = B -> interp B -> interp A where ?C : [cn : nid pts : seq nid others : seq nid Hnin : cn \\notin pts Puniq : uniq pts n : nat_eqType d : dstatelet C : TPCCoh d pf : n \\in nodes m : CStateT l : Log |- Type]\ndyn : forall (interp : ?C -> Type) (A : ?C), interp A -> {x : ?C & interp x} where ?C : [cn : nid pts : seq nid others : seq nid Hnin : cn \\notin pts Puniq : uniq pts n : nat_eqType d : dstatelet C : TPCCoh d pf : n \\in nodes m : CStateT l : Log |- Type]\ncohStL : forall d : dstatelet, TPCCoh d -> forall n : nat_eqType, n \\in nodes -> forall l : dynamic id, find log (getLocal n d) = Some l -> dyn_tp l = Log\ncohStP : forall (n : nat_eqType) (d : dstatelet), TPCCoh d -> n \\in pts -> forall s : dynamic id, find st (getLocal n d) = Some s -> dyn_tp s = PStateT\ngetLocalU : forall (n : nid) (m : [ordType of nid]) (d : dstatelet) (s : soup), valid (dstate d) -> m \\in dom (dstate d) -> getLocal n d = getLocal n {| dstate := upd m (getLocal m d) (dstate d); dsoup := s |}\ngetStP : forall (n : nat_eqType) (d : dstatelet), TPCCoh d -> n \\in nodes -> PStateT\nlocU : forall (n n' : nat_eqType) (x : heap) (st : union_map_classPCM (union_mapUMC nat_ordType heap)) (s : soup), n != n' -> valid st -> getLocal n {| dstate := upd n' x st; dsoup := s |} = getLocal n {| dstate := st; dsoup := s |}\nhcancel2V : forall (A : Type) (x1 x2 : ptr) (v1 v2 : A) (h1 h2 : heap), valid (x1 :-> v1 \\+ h1) -> x1 : -> v1 \\+ h1 = x2 : -> v2 \\+ h2 -> if x1 == x2 then v1 = v2 /\\ h1 = h2 else [/\\ free x1 h2 = free x2 h1, h1 = x2 : -> v2 \\+ free x1 h2 & h2 = x1 : -> v1 \\+ free x2 h1]\na_step_other : forall (W : world) (this : nid) (V : Type) (a : Actions.action W V this) (l : Label) (s1 s2 : state) (r : V) (n : nat_eqType) (pf : Actions.a_safe a s1), this != n -> Actions.a_step pf s2 r -> getLocal n (getStatelet s1 l) = getLocal n (getStatelet s2 l)\nActions.step_other : forall (W : world) (this : nid) (V : Type) (a : Actions.action W V this) (l : Label) (s1 s2 : state) (r : V) (n : nat_eqType) (pf : Actions.a_safe a s1), this != n -> Actions.a_step pf s2 r -> getLocal n (getStatelet s1 l) = getLocal n (getStatelet s2 l)\nhcancelV : forall (A : Type) (x : ptr) (v1 v2 : A) (h1 h2 : heap), valid (x :-> v1 \\+ h1) -> x : -> v1 \\+ h1 = x : -> v2 \\+ h2 -> [/\\ v1 = v2, valid h1 & h1 = h2]\nhcancelT : forall (A1 A2 : Type) (x : ptr) (v1 : A1) (v2 : A2) (h1 h2 : heap), valid (x :-> v1 \\+ h1) -> x : -> v1 \\+ h1 = x : -> v2 \\+ h2 -> A1 = A2\ncohStC : forall d : dstatelet, TPCCoh d -> forall s : dynamic id, find st (getLocal cn d) = Some s -> dyn_tp s = CStateT\nheap_eta2 = fun (A : Type) (x : ptr) (h : heap) (v : A) (E : find x h = Some (idyn v)) => (fun _evar_0_ : forall (x0 : Type) (p : (fun A0 : Type => exists v0 : A0, find x h = Some (idyn v0) /\\ h = x :-> v0 \\+ free x h) x0), (fun=> h = x :-> v \\+ free x h) (ex_intro (fun A0 : Type => exists v0 : A0, find x h = Some (idyn v0) /\\ h = x :-> v0 \\+ free x h) x0 p) => match heap_eta (find_some E) as e return ((fun=> h = x :-> v \\+ free x h) e) with | @ex_intro _ _ x0 x1 => _evar_0_ x...\nlocE' : forall (d : dstatelet) (n : nid) (x : heap) (y : soup), valid (dstate d) -> getLocal n {| dstate := upd n x (dstate d); dsoup := y |} = x\nall_hooks_fire = fun (h : hooks) (l : Label) (st : nat_ordType) (s : union_mapUMC Label dstatelet) (n : nid) (msg : seq nat) (to : nid) => forall (z : nat_ordType) (lc : Label) (hk : hook_type), Some hk = find (z, lc, (l, st)) h -> lc \\in dom s -> l \\in dom s -> hk (getLocal n (getStatelet s lc)) (getLocal n (getStatelet s l)) msg to : hooks -> Label -> nat_ordType -> union_mapUMC Label dstatelet -> nid -> seq nat -> nid -> Prop Arguments all_hooks_fire _ _ _ _ _ _%seq_scope\ndomPtUnX : forall (A : Type) (v : A) (x : ptr) (i : union_map_classPCM heapUMC), valid (x :-> v \\+ i) -> x \\in dom (x :-> v \\+ i)\nSendTrans : forall (nodes : dstatelet -> pred nid) (coh : cohpred nodes) (t_snd : nat) (send_safe : nid -> nid -> dstatelet -> seq nat -> Prop), (forall (this to : nid) (d : dstatelet) (m : seq nat), send_safe this to d m -> coh d) -> (forall (this to : nid) (d : dstatelet) (m : seq nat), send_safe this to d m -> this \\in nodes d /\\ to \\in nodes d) -> forall send_step : Transitions.send_step_t send_safe, (forall (this to : nid) (d : dstatelet) (msg : seq nat), send_safe this to d msg <-> (exists (b : heap) (pf : send_safe this to d msg), send_step this to d msg pf = Some b)) -> Transitions.s_step_coh_t coh t_snd send_step -> Transitions.send_trans coh\nTransitions.SendTrans : forall (nodes : dstatelet -> pred nid) (coh : cohpred nodes) (t_snd : nat) (send_safe : nid -> nid -> dstatelet -> seq nat -> Prop), (forall (this to : nid) (d : dstatelet) (m : seq nat), send_safe this to d m -> coh d) -> (forall (this to : nid) (d : dstatelet) (m : seq nat), send_safe this to d m -> this \\in nodes d /\\ to \\in nodes d) -> forall send_step : Transitions.send_step_t send_safe, (forall (this to : nid) (d : dstatelet) (msg : seq nat), send_safe this to d msg <-> (exists (b : heap) (pf : send_safe this to d msg), send_step this to d msg pf = Some b)) -> Transitions.s_step_coh_t coh t_snd send_step -> Transitions.send_trans coh\nlocE : forall (i : union_mapUMC Label dstatelet) (n : nid) (k : Label) (x : heap) (y : soup), k \\in dom i -> valid i -> valid (dstate (getStatelet i k)) -> getLocal n (getStatelet (upd k {| dstate := upd n x (dstate (getStatelet i k)); dsoup := y |} i) k) = x\nhcancelPtV : forall (A : Type) (x : ptr) (v1 v2 : A), valid (x :-> v1) -> x : -> v1 = x : -> v2 -> v1 = v2\nhcancelPtV2 : forall (A : Type) (x1 x2 : ptr) (v1 v2 : A), valid (x1 :-> v1) -> x1 : -> v1 = x2 : -> v2 -> (x1, v1) = (x2, v2)\nhcancelPtT : forall (A1 A2 : Type) (x : ptr) (v1 : A1) (v2 : A2), valid (x :-> v1) -> x : -> v1 = x : -> v2 -> A1 = A2\nheap_eta : forall (x : ptr) (h : heap), x \\in dom h -> exists (A : Type) (v : A), find x h = Some (idyn v) /\\ h = x : -> v \\+ free x h"}, {"role": "assistant", "content": "```coq\nProof.\nintros cn others pts pts_dec pts_uniq n d C pf m l.\nunfold getLocal, getStL in *.\nrewrite locCn in getStL_C.\ndestruct (locCn n d C pf) as [Hvalid HgetLocal].\ndestruct Hvalid as [Hvalid1 Hvalid2].\ndestruct HgetLocal as [HgetLocal1 HgetLocal2].\napply HgetLocal1 in HgetLocal2.\nrewrite HgetLocal2 in getStL_C.\nunfold getStP, getStC, localCoh in *.\nrewrite cohStP in getStP.\nrewrite cohStC in getStC.\napply getStP in getStP.\napply getStC in getStC.\nunfold getLocal in *.\nrewrite HgetLocal1 in getStL_C.\nunfold getStL in *.\nrewrite getStL_C in getStL_C.\nrewrite <- HgetLocal1 in getStL_C.\nunfold getLocal in *.\nrewrite HgetLocal2 in getStL_C.\nunfold getStL in *.\nrewrite getStL_C in getStL_C.\nunfold getLocal in *.\nrewrite HgetLocal1 in getStL_C.\nunfold getStL in *.\nrewrite getStL_C in getStL_C.\nrewrite <- HgetLocal1 in getStL_C.\nunfold getLocal in *.\nrewrite HgetLocal2 in getStL_C.\nunfold getStL in *.\nrewrite getStL_C in getStL_C.\nunfold getLocal in *.\nrewrite HgetLocal1 in getStL_C.\nunfold getStL in *.\nrewrite getStL_C in getStL_C.\nrewrite <- HgetLocal1 in getStL_C.\nunfold getLocal in *.\nrewrite HgetLocal2 in getStL_C.\nunfold getStL in *.\nrewrite getStL_C in getStL_C.\nunfold getLocal in *.\nrewrite HgetLocal1 in getStL_C.\nunfold getStL in *.\nrewrite getStL_C in getStL_C.\nrewrite <- HgetLocal1 in getStL_C.\nunfold getLocal in *.\nrewrite HgetLocal2 in getStL_C.\nunfold getStL in *.\nrewrite getStL_C in getStL_C.\nunfold getLocal in *.\nrewrite HgetLocal1 in getStL_C.\nunfold getStL in *.\nrewrite getStL_C in getStL_C.\nrewrite <- HgetLocal1 in getStL_C.\nunfold getLocal in *.\nrewrite HgetLocal2 in getStL_C.\nunfold getStL in *.\nrewrite getStL_C in getStL_C.\nunfold getLocal in *.\nrewrite HgetLocal1 in getStL_C.\nunfold getStL in *.\nrewrite getStL_C in getStL_C.\nrewrite <- HgetLocal1 in getStL_C.\nunfold getLocal in *.\nrewrite HgetLocal2 in getStL_C.\nunfold getStL in *.\nrewrite getStL_C in getStL_C.\nunfold getLocal in *.\nrewrite HgetLocal1 in getStL_C.\nunfold getStL in *.\nrewrite getStL_C in getStL_C.\nrewrite <- HgetLocal1 in getStL_C.\nunfold getLocal in *.\nrewrite HgetLocal2 in getStL_C.\nunfold getStL in *.\nrewrite getStL_C in getStL_C.\nunfold getLocal in *.\nrewrite HgetLocal1 in getStL_C.\nunfold getStL in *.\nrewrite getStL_C in getStL_C.\nrewrite <- HgetLocal1 in getStL_C.\nunfold getLocal in *.\nrewrite HgetLocal2 in getStL_C.\nunfold getStL in *.\nrewrite getStL_C in getStL_C.\nunfold getLocal in *.\nrewrite HgetLocal1 in getStL_C.\nunfold getStL in *.\nrewrite getStL_C in getStL_C.\nrewrite <- HgetLocal1 in getStL_C.\nunfold getLocal in *.\nrewrite HgetLocal2 in getStL_C.\nunfold getStL in *.\nrewrite getStL_C in getStL_C.\nunfold getLocal in *.\nrewrite HgetLocal1 in getStL_C.\nunfold getStL in *.\nrewrite getStL_C in getStL_C.\nrewrite <- HgetLocal1 in getStL_C.\nunfold getLocal in *.\nrewrite HgetLocal2 in getStL_C.\nunfold getStL in *.\nrewrite getStL_C in getStL_C.\nunfold getLocal in *.\nrewrite HgetLocal1 in getStL_C.\nunfold getSt"}], "original": "intros cn others pts pts_dec pts_uniq n d C pf m l. unfold getLocal, getStL in *. rewrite locCn in getStL_C. destruct (locCn n d C pf) as [Hvalid HgetLocal]. destruct Hvalid as [Hvalid1 Hvalid2]. destruct HgetLocal as [HgetLocal1 HgetLocal2]. apply HgetLocal1 in HgetLocal2. rewrite HgetLocal2 in getStL_C. unfold getStP, getStC, localCoh in *. rewrite cohStP in getStP. rewrite cohStC in getStC. apply getStP in getStP. apply getStC in getStC. unfold getLocal in *. rewrite HgetLocal1 in getStL_C. unfold getStL in *. rewrite getStL_C in getStL_C. rewrite <- HgetLocal1 in getStL_C. unfold getLocal in *. rewrite HgetLocal2 in getStL_C. unfold getStL in *. rewrite getStL_C in getStL_C. unfold getLocal in *. rewrite HgetLocal1 in getStL_C. unfold getStL in *. rewrite getStL_C in getStL_C. rewrite <- HgetLocal1 in getStL_C. unfold getLocal in *. rewrite HgetLocal2 in getStL_C. unfold getStL in *. rewrite getStL_C in getStL_C. unfold getLocal in *. rewrite HgetLocal1 in getStL_C. unfold getStL in *. rewrite getStL_C in getStL_C. rewrite <- HgetLocal1 in getStL_C. unfold getLocal in *. rewrite HgetLocal2 in getStL_C. unfold getStL in *. rewrite getStL_C in getStL_C. unfold getLocal in *. rewrite HgetLocal1 in getStL_C. unfold getStL in *. rewrite getStL_C in getStL_C. rewrite <- HgetLocal1 in getStL_C. unfold getLocal in *. rewrite HgetLocal2 in getStL_C. unfold getStL in *. rewrite getStL_C in getStL_C. unfold getLocal in *. rewrite HgetLocal1 in getStL_C. unfold getStL in *. rewrite getStL_C in getStL_C. rewrite <- HgetLocal1 in getStL_C. unfold getLocal in *. rewrite HgetLocal2 in getStL_C. unfold getStL in *. rewrite getStL_C in getStL_C. unfold getLocal in *. rewrite HgetLocal1 in getStL_C. unfold getStL in *. rewrite getStL_C in getStL_C. rewrite <- HgetLocal1 in getStL_C. unfold getLocal in *. rewrite HgetLocal2 in getStL_C. unfold getStL in *. rewrite getStL_C in getStL_C. unfold getLocal in *. rewrite HgetLocal1 in getStL_C. unfold getStL in *. rewrite getStL_C in getStL_C. rewrite <- HgetLocal1 in getStL_C. unfold getLocal in *. rewrite HgetLocal2 in getStL_C. unfold getStL in *. rewrite getStL_C in getStL_C. unfold getLocal in *. rewrite HgetLocal1 in getStL_C. unfold getStL in *. rewrite getStL_C in getStL_C. rewrite <- HgetLocal1 in getStL_C. unfold getLocal in *. rewrite HgetLocal2 in getStL_C. unfold getStL in *. rewrite getStL_C in getStL_C. unfold getLocal in *. rewrite HgetLocal1 in getStL_C. unfold getStL in *. rewrite getStL_C in getStL_C. rewrite <- HgetLocal1 in getStL_C. unfold getLocal in *. rewrite HgetLocal2 in getStL_C. unfold getStL in *. rewrite getStL_C in getStL_C. unfold getLocal in *. rewrite HgetLocal1 in getStL_C. unfold getStL in *. rewrite getStL_C in getStL_C. rewrite <- HgetLocal1 in getStL_C. unfold getLocal in *. rewrite HgetLocal2 in getStL_C. unfold getStL in *. rewrite getStL_C in getStL_C. unfold getLocal in *. rewrite HgetLocal1 in getStL_C.", "succ": false}]