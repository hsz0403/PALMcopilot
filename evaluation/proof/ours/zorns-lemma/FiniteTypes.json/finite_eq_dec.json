[{"history": {"proof": "", "repairs": [], "exceptions": []}, "chat": [], "original": "intros X H. induction H. - intros x y. destruct x, y. + left. reflexivity. + right. discriminate. + right. discriminate. - intros x y. destruct (IHFiniteT x y) as [Eq | Neq]. + left. now inversion Eq. + right. intro E. apply Neq. inversion E. reflexivity. - intros x y. destruct (bij_finite X Y f H IHFiniteT) as [Gf Gf_inv]. destruct (finite_dec_forall X (fun x => {f x = f y}) H (fun x => Z.eq_dec (f x) (f y))) as [Eq | Neq]. + left. apply Eq. + right. intro E. apply Neq. inversion E. reflexivity.", "succ": false}]