[{"history": {"proof": "intros X Y f H. unfold bijective. split. - destruct H as [g H1 H2]. unfold injective. intros x1 x2 H3. rewrite <- (H1 x1), <- (H1 x2). qsimpl. - intros y. destruct H as [g H1 H2]. exists (g y). apply H2.", "repairs": ["", "", "", "", "", "", "", "", "cannot_unify", "", "", "", "", ""], "exceptions": [{"ctx": ["intros X Y f H.", "unfold bijective.", "split.", "-", "destruct H as [g H1 H2].", "unfold injective.", "intros x1 x2 H3.", "rewrite <- (H1 x1), <- (H1 x2)."], "tactic": "apply H3.", "exn": "In environment X : Type Y : Type f : X -> Y g : Y -> X H1 : forall x : X, g (f x) = x H2 : forall y : Y, f (g y) = y x1, x2 : X H3 : f x1 = f x2 Unable to unify \"f x1 = f x2\" with \"g (f x1) = g (f x2)\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros X Y f H. unfold bijective. split. - destruct H as [g H1 H2]. unfold injective. intros x1 x2 H3. rewrite <- (H1 x1), <- (H1 x2). apply H3. - intros y. destruct H as [g H1 H2]. unfold surjective. exists (g y). apply H2.", "succ": true}]