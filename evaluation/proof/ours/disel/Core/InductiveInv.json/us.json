[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": [], "tactic": "rewrite map_comp.", "exn": "The LHS of map_comp (mapk _ (mapk _ _)) does not match any subterm of the goal", "type": "no_match_term", "handled": true}, {"ctx": ["qsimpl use: map_comp."], "tactic": "apply map_inj_uniq.", "exn": "In environment H : forall (A B C : ordType) (V : Type) (f : A -> B) (g : B -> C), (forall x y : A, strictly_increasing f x y) -> forall m : finMap A V, mapk g (mapk f m) = mapk (g \\\\o f) m p : protocol I : dstatelet -> pred nid -> Prop ii : InductiveInv dstate : lstate_type heap dsoup : soup Unable to unify \"uniq [seq ?M2028 i | i <- ?M2030] = uniq ?M2030\" with \"uniq [seq t_snd i | i <- stsI (sts ii)] = true\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl use: map_comp.", "qsimpl use: map_comp,map_inj_uniq."], "tactic": "apply coh.", "exn": "In environment H1 : forall (T1 T2 : eqType) (f : T1 -> T2), injective f -> forall s : seq T1, uniq [seq f i | i <- s] = uniq s H0 : forall (A B C : ordType) (V : Type) (f : A -> B) (g : B -> C), (forall x y : A, strictly_increasing f x y) -> forall m : finMap A V, mapk g (mapk f m) = mapk (g \\\\o f) m p : protocol I : dstatelet -> pred nid -> Prop ii : InductiveInv dstate : lstate_type heap dsoup : soup Unable to unify \"cohpred (Protocols.nodes p)\" with \"is_true (uniq [seq t_snd i | i <- stsI (sts ii)])\".", "type": "cannot_unify", "handled": true}, {"ctx": ["qsimpl use: map_comp.", "qsimpl use: map_comp,map_inj_uniq.", "qsimpl use: map_comp,coh,map_inj_uniq."], "tactic": "apply map_uniq.", "exn": "Unable to find an instance for the variables T2, f.", "type": "no_instance_var", "handled": true}, {"ctx": ["qsimpl use: map_comp.", "qsimpl use: map_comp,map_inj_uniq.", "qsimpl use: map_comp,coh,map_inj_uniq.", "qsimpl use: map_comp,map_uniq,coh,map_inj_uniq."], "tactic": "apply uniq.", "exn": "In environment H6 : forall (T1 T2 : eqType) (f : T1 -> T2), injective f -> forall s : seq T1, uniq [seq f i | i <- s] = uniq s p : protocol H5 : forall (T1 T2 : eqType) (f : T1 -> T2) (s : seq T1), uniq [seq f i | i <- s] -> uniq s H0 : forall (A B C : ordType) (V : Type) (f : A -> B) (g : B -> C), (forall x y : A, strictly_increasing f x y) -> forall m : finMap A V, mapk g (mapk f m) = mapk (g \\\\o f) m I : dstatelet -> pred nid -> Prop ii : InductiveInv dstate : lstate_type heap dsoup : soup sort : dstatelet -> Prop H1 : forall d : dstatelet, sort d -> valid (State.dstate d) H3 : forall d : dstatelet, sort d -> valid (State.dsoup d) H4 : forall d : dstatelet, sort d -> dom (State.dstate d) =i Protocols.nodes p d sort0 : dstatelet -> Prop H2 : forall d : dstatelet, sort0 d -> valid (State.dstate d) H7 : forall d : dstatelet, sort0 d -> valid (State.dsoup d) H8 : forall d : dstatelet, sort0 d -> dom (State.dstate d) =i Protocols.nodes p d Unable to unify \"bool\" with \"is_true (uniq [seq t_snd i | i <- stsI (sts ii)])\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "rewrite map_comp. simpl. apply map_inj_uniq. apply coh. apply map_uniq. apply uniq.", "succ": false}]