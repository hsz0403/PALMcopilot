[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros H_val H_find H_neq H_spec."], "tactic": "apply msg_specE_consume1 in H_find as [H_val' [H_find' H_neq']].", "exn": "Unable to find an instance for the variables pt, to, tg, cnt.", "type": "no_instance_var", "handled": true}, {"ctx": ["intros H_val H_find H_neq H_spec.", "qsimpl use: msg_specE_consume1."], "tactic": "apply msg_spec_consume in H_find' as H_spec_consume.", "exn": "No such hypothesis: H_find'", "type": "no_hypos", "handled": true}, {"ctx": ["intros H_val H_find H_neq H_spec.", "qsimpl use: msg_specE_consume1.", "qsimpl use: msg_spec_consume,msg_specE_consume1."], "tactic": "apply (consume_valid H_val) in H_find as H_val'.", "exn": "In environment H4 : forall (s : union_map mid (msg TaggedMessage)) (pt from : nat) (to : nid) (to' tg : nat) (cnt : seq nat) (i : nat) (m : TaggedMessage), valid s -> find i s = Some {| content := m; from := from; to := to'; active := true |} -> pt != from -> msg_spec pt to tg cnt s -> msg_spec pt to tg cnt (consume_msg s i) H2 : forall (s : union_map mid (msg TaggedMessage)) (from to tg : nat) (cnt cnt' : seq nat) (i : nat), valid s -> find i s = Some {| content := {| tag := tg; tms_cont := cnt' |}; from := from; to := to; active := true |} -> msg_spec from to tg cnt s -> no_msg_from_to from to (consume_msg s i) s : union_map mid (msg TaggedMessage) pt : nid from, to, to', tg : nat cnt : seq nat i : nat m : TaggedMessage H_val : valid s H_find : find i s = Some {| content := m; from := from; to := to'; active := true |} H_neq : to != to' H1 : forall (i t : nat) (c : seq nat), find i s = Some {| content := {| tag := t; tms_cont := c |}; from := pt; to := to; active := true |} -> (t == tg) && (c == cnt) x : nat H3 : forall x' : nat, (exists (t : nat) (c : seq nat), find x' s = Some {| content := {| tag := t; tms_cont := c |}; from := pt; to := to; active := true |}) -> x = x' x0 : nat x1 : seq nat H0 : find x s = Some {| content := {| tag := x0; tms_cont := x1 |}; from := pt; to := to; active := true |} The term \"H_val\" has type \"is_true (valid s)\" while it is expected to have type \"Ordered.sort mid\".", "type": "wrong_type", "handled": true}, {"ctx": ["intros H_val H_find H_neq H_spec.", "qsimpl use: msg_specE_consume1.", "qsimpl use: msg_spec_consume,msg_specE_consume1.", "qsimpl use: consume_valid,msg_spec_consume,msg_specE_consume1."], "tactic": "apply (consume_msg s i) in H_find'.", "exn": "No such hypothesis: H_find'", "type": "no_hypos", "handled": true}, {"ctx": ["intros H_val H_find H_neq H_spec.", "qsimpl use: msg_specE_consume1.", "qsimpl use: msg_spec_consume,msg_specE_consume1.", "qsimpl use: consume_valid,msg_spec_consume,msg_specE_consume1.", "qsimpl use: consume_valid,msg_spec_consume,msg_specE_consume1,consume_msg."], "tactic": "apply msg_specE_consume in H_val' as [H_val'' _].", "exn": "No such hypothesis: H_val'", "type": "no_hypos", "handled": true}, {"ctx": ["intros H_val H_find H_neq H_spec.", "qsimpl use: msg_specE_consume1.", "qsimpl use: msg_spec_consume,msg_specE_consume1.", "qsimpl use: consume_valid,msg_spec_consume,msg_specE_consume1.", "qsimpl use: consume_valid,msg_spec_consume,msg_specE_consume1,consume_msg.", "qsimpl use: consume_msg,msg_specE_consume,msg_spec_consume,consume_valid,msg_specE_consume1."], "tactic": "apply (H_spec_consume H_val'' H_find' H_neq' H_spec).", "exn": "The reference H_spec_consume was not found in the current environment.", "type": "ref_not_found", "handled": true}]}, "chat": [], "original": "simpl. intros H_val H_find H_neq H_spec. apply msg_specE_consume1 in H_find as [H_val' [H_find' H_neq']]. apply msg_spec_consume in H_find' as H_spec_consume. apply (consume_valid H_val) in H_find as H_val'. apply (consume_msg s i) in H_find'. apply msg_specE_consume in H_val' as [H_val'' _]. apply (H_spec_consume H_val'' H_find' H_neq' H_spec).", "succ": false}]