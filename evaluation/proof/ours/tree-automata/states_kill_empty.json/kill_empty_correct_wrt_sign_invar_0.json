[{"history": {"proof": "intros p p' m n H1 H2. qauto use: pl_kill_1, forall_incl_length, pl_path_incl_length.", "repairs": ["", "hammer"], "exceptions": [{"ctx": ["intros p p' m n H1 H2.", "induction H1.", "-", "inversion H2.", "constructor.", "-", "inversion H2."], "tactic": "apply pl_tl_S.", "exn": "In environment p' : prec_list m : Map bool a : ad pl : prec_list n : nat H1 : pl_tl_length pl n H2 : prec_list_kill m (prec_cons a pl prec_empty) = Some p' IHpl_tl_length : prec_list_kill m pl = Some p' -> pl_tl_length p' n H0 : match MapGet bool m a with | Some true => match prec_list_kill m pl with | Some la' => Some (prec_cons a la' prec_empty) | None => None end | _ => None end = Some p' Unable to unify \"pl_tl_length (prec_cons ?M1884 ?M1885 prec_empty) (S ?M1886)\" with \"pl_tl_length p' (S n)\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros p p' m n H1 H2.", "induction H1.", "-", "inversion H2.", "constructor.", "-", "inversion H2.", "qsimpl use: pl_tl_S."], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros p p' m n H1 H2.", "induction H1.", "-", "inversion H2.", "constructor.", "-", "inversion H2.", "qsimpl use: pl_tl_S.", "shelve.", "-", "inversion H2."], "tactic": "apply pl_tl_propag; auto.", "exn": "In environment p' : prec_list m : Map bool a : ad la, ls : prec_list n : nat H1_ : pl_tl_length la n H1_0 : pl_tl_length ls (S n) H2 : prec_list_kill m (prec_cons a la ls) = Some p' IHpl_tl_length1 : prec_list_kill m la = Some p' -> pl_tl_length p' n IHpl_tl_length2 : prec_list_kill m ls = Some p' -> pl_tl_length p' (S n) H0 : match ls with | prec_cons _ _ _ => match MapGet bool m a with | Some true => match prec_list_kill m la with | Some la' => match prec_list_kill m ls with | Some ls' => Some (prec_cons a la' ls') | None => Some (prec_cons a la' prec_empty) end | None => match prec_list_kill m ls with | Some ls' => Some ls' | None => None end end | _ => prec_list_kill m ls end | prec_empty => match MapGet bool m a with | Some true => match prec_list_kill m la with | Some la' => Some (prec_cons a la' prec_empty) | None => None end | _ => None end end = Some p' Unable to unify \"pl_tl_length (prec_cons ?M2911 ?M2912 ?M2913) (S ?M2914)\" with \"pl_tl_length p' (S n)\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros p p' m n H1 H2. induction H1. - intros. inversion H2. constructor. - intros. inversion H2. apply pl_tl_S. auto. - intros. inversion H2. apply pl_tl_propag; auto.", "succ": true}]