[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros s m a p p' H1 H2.", "unfold states_kill_aux.", "destruct s.", "-", "simpl in H2."], "tactic": "rewrite H2.", "exn": "Found no subterm matching \"None\" in the current goal.", "type": "no_subterm", "handled": true}, {"ctx": ["intros s m a p p' H1 H2.", "unfold states_kill_aux.", "destruct s.", "-", "simpl in H2.", "qsimpl."], "tactic": "apply H1.", "exn": "No such goal. Focus next goal with bullet -.", "type": "next_goal", "handled": true}, {"ctx": ["intros s m a p p' H1 H2.", "unfold states_kill_aux.", "destruct s.", "-", "simpl in H2.", "qsimpl.", "-"], "tactic": "destruct (states_kill_aux m s).", "exn": "The reference s was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m a p p' H1 H2.", "unfold states_kill_aux.", "destruct s.", "-", "simpl in H2.", "qsimpl.", "-"], "tactic": "destruct (states_kill_aux m s0).", "exn": "The reference s0 was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m a p p' H1 H2.", "unfold states_kill_aux.", "destruct s.", "-", "simpl in H2.", "qsimpl.", "-", "inversion H2.", "destruct (MapGet prec_list (M1 prec_list a p0) a).", "++", "inversion H2."], "tactic": "++", "exn": "Wrong bullet ++: Current bullet ++ is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros s m a p p' H1 H2.", "unfold states_kill_aux.", "destruct s.", "-", "simpl in H2.", "qsimpl.", "-", "inversion H2.", "destruct (MapGet prec_list (M1 prec_list a p0) a).", "++", "inversion H2.", "shelve.", "++"], "tactic": "destruct (states_kill_aux m s1).", "exn": "The reference s1 was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m a p p' H1 H2.", "unfold states_kill_aux.", "destruct s.", "-", "simpl in H2.", "qsimpl.", "-", "inversion H2.", "destruct (MapGet prec_list (M1 prec_list a p0) a).", "++", "inversion H2.", "shelve.", "++", "inversion H2.", "destruct (prec_list_kill m p).", "***", "destruct (prec_list_kill m prec_empty).", "****", "inversion H1."], "tactic": "****", "exn": "Wrong bullet ****: Current bullet **** is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros s m a p p' H1 H2.", "unfold states_kill_aux.", "destruct s.", "-", "simpl in H2.", "qsimpl.", "-", "inversion H2.", "destruct (MapGet prec_list (M1 prec_list a p0) a).", "++", "inversion H2.", "shelve.", "++", "inversion H2.", "destruct (prec_list_kill m p).", "***", "destruct (prec_list_kill m prec_empty).", "****", "inversion H1.", "shelve.", "****", "inversion H1."], "tactic": "***", "exn": "Wrong bullet ***: Current bullet **** is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros s m a p p' H1 H2.", "unfold states_kill_aux.", "destruct s.", "-", "simpl in H2.", "qsimpl.", "-", "inversion H2.", "destruct (MapGet prec_list (M1 prec_list a p0) a).", "++", "inversion H2.", "shelve.", "++", "inversion H2.", "destruct (prec_list_kill m p).", "***", "destruct (prec_list_kill m prec_empty).", "****", "inversion H1.", "shelve.", "****", "inversion H1.", "shelve.", "***"], "tactic": "destruct (prec_list_kill m s).", "exn": "The reference s was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m a p p' H1 H2.", "unfold states_kill_aux.", "destruct s.", "-", "simpl in H2.", "qsimpl.", "-", "inversion H2.", "destruct (MapGet prec_list (M1 prec_list a p0) a).", "++", "inversion H2.", "shelve.", "++", "inversion H2.", "destruct (prec_list_kill m p).", "***", "destruct (prec_list_kill m prec_empty).", "****", "inversion H1.", "shelve.", "****", "inversion H1.", "shelve.", "***", "inversion H1."], "tactic": "****", "exn": "Wrong bullet ****: Expecting -.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros s m a p p' H1 H2.", "unfold states_kill_aux.", "destruct s.", "-", "simpl in H2.", "qsimpl.", "-", "inversion H2.", "destruct (MapGet prec_list (M1 prec_list a p0) a).", "++", "inversion H2.", "shelve.", "++", "inversion H2.", "destruct (prec_list_kill m p).", "***", "destruct (prec_list_kill m prec_empty).", "****", "inversion H1.", "shelve.", "****", "inversion H1.", "shelve.", "***", "inversion H1.", "-"], "tactic": "apply H1.", "exn": "In environment s1, s2 : Map prec_list m : Map bool a : ad p, p' : prec_list H1 : prec_list_kill m p = Some p' H2 : MapGet prec_list (M2 prec_list s1 s2) a = Some p Unable to unify \"prec_list_kill m p = Some p'\" with \"MapGet prec_list match (fix states_kill_aux (m : Map bool) (s : state) {struct s} : state := match s with | @M0 _ => M0 prec_list | @M1 _ a p => match prec_list_kill m p with | Some p' => M1 prec_list a p' | None => M0 prec_list end | @M2 _ s0 s1 => match states_kill_aux m s0 with | @M0 _ => match states_kill_aux m s1 with | @M0 _ => M0 prec_list | @M1 _ a p => M1 prec_list (N.succ_double a) p | @M2 _ m0 m1 => M2 prec_list (M0 prec_list) (M2 prec_list m0 m1) end | @M1 _ a p => match states_kill_aux m s1 with | @M0 _ => M1 prec_list (N.double a) p | @M1 _ a0 p0 => M2 prec_list (M1 prec_list a p) (M1 prec_list a0 p0) | @M2 _ m0 m1 => M2 prec_list (M1 prec_list a p) (M2 prec_list m0 m1) end | @M2 _ m0 m1 => M2 prec_list (M2 prec_list m0 m1) (states_kill_aux m s1) end end) m s1 with | @M0 _ => match (fix states_kill_aux (m : Map bool) (s : state) {struct s} : state := match s with | @M0 _ => M0 prec_list | @M1 _ a p => match prec_list_kill m p with | Some p' => M1 prec_list a p' | None => M0 prec_list end | @M2 _ s0 s1 => match states_kill_aux m s0 with | @M0 _ => match states_kill_aux m s1 with | @M0 _ => M0 prec_list | @M1 _ a p => M1 prec_list (N.succ_double a) p | @M2 _ m0 m1 => M2 prec_list (M0 prec_list) (M2 prec_list m0 m1) end | @M1 _ a p => match states_kill_aux m s1 with | @M0 _ => M1 prec_list (N.double a) p | @M1 _ a0 p0 => M2 prec_list (M1 prec_list a p) (M1 prec_list a0 p0) | @M2 _ m0 m1 => M2 prec_list (M1 prec_list a p) (M2 prec_list m0 m1) end | @M2 _ m0 m1 => M2 prec_list (M2 prec_list m0 m1) (states_kill_aux m s1) end end) m s2 with | @M0 _ => M0 prec_list | @M1 _ a p => M1 prec_list (N.succ_double a) p | @M2 _ m0 m1 => M2 prec_list (M0 prec_list) (M2 prec_list m0 m1) end | @M1 _ a p => match (fix states_kill_aux (m : Map bool) (s : state) {struct s} : state := match s with | @M0 _ => M0 prec_list | @M1 _ a0 p0 => match prec_list_kill m p0 with | Some p' => M1 prec_list a0 p' | None => M0 prec_list end | @M2 _ s0 s1 => match states_kill_aux m s0 with | @M0 _ => match states_kill_aux m s1 with | @M0 _ => M0 prec_list | @M1 _ a0 p0 => M1 prec_list (N.succ_double a0) p0 | @M2 _ m0 m1 => M2 prec_list (M0 prec_list) (M2 prec_list m0 m1) end | @M1 _ a0 p0 => match states_kill_aux m s1 with | @M0 _ => M1 prec_list (N.double a0) p0 | @M1 _ a1 p1 => M2 prec_list (M1 prec_list a0 p0) (M1 prec_list a1 p1) | @M2 _ m0 m1 => M2 prec_list (M1 prec_list a0 p0) (M2 prec_list m0 m1) end | @M2 _ m0 m1 => M2 prec_list (M2 prec_list m0 m1) (states_kill_aux m s1) end end) m s2 with | @M0 _ => M1 prec_list (N.double a) p | @M1 _ a0 p0 => M2 prec_list (M1 prec_list a p) (M1 prec_list a0 p0) | @M2 _ m0 m1 => M2 prec_list (M1 prec_list a p) (M2 prec_list m0 m1) end | @M2 _ m0 m1 => M2 prec_list (M2 prec_list m0 m1) ((fix states_kill_aux (m : Map bool) (s : state) {struct s} : state := match s with | @M0 _ => M0 prec_list | @M1 _ a p => match prec_list_kill m p with | Some p' => M1 prec_list a p' | None => M0 prec_list end | @M2 _ s0 s1 => match states_kill_aux m s0 with | @M0 _ => match states_kill_aux m s1 with | @M0 _ => M0 prec_list | @M1 _ a p => M1 prec_list (N.succ_double a) p | @M2 _ m2 m3 => M2 prec_list (M0 prec_list) (M2 prec_list m2 m3) end | @M1 _ a p => match states_kill_aux m s1 with | @M0 _ => M1 prec_list (N.double a) p | @M1 _ a0 p0 => M2 prec_list (M1 prec_list a p) (M1 prec_list a0 p0) | @M2 _ m2 m3 => M2 prec_list (M1 prec_list a p) (M2 prec_list m2 m3) end | @M2 _ m2 m3 => M2 prec_list (M2 prec_list m2 m3) (states_kill_aux m s1) end end) m s2) end a = Some p'\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s m a p p' H1 H2.", "unfold states_kill_aux.", "destruct s.", "-", "simpl in H2.", "qsimpl.", "-", "inversion H2.", "destruct (MapGet prec_list (M1 prec_list a p0) a).", "++", "inversion H2.", "shelve.", "++", "inversion H2.", "destruct (prec_list_kill m p).", "***", "destruct (prec_list_kill m prec_empty).", "****", "inversion H1.", "shelve.", "****", "inversion H1.", "shelve.", "***", "inversion H1.", "-", "qsimpl.", "+", "destruct (states_kill_aux m s1).", "*"], "tactic": "*", "exn": "Wrong bullet *: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros s m a p p' H1 H2.", "unfold states_kill_aux.", "destruct s.", "-", "simpl in H2.", "qsimpl.", "-", "inversion H2.", "destruct (MapGet prec_list (M1 prec_list a p0) a).", "++", "inversion H2.", "shelve.", "++", "inversion H2.", "destruct (prec_list_kill m p).", "***", "destruct (prec_list_kill m prec_empty).", "****", "inversion H1.", "shelve.", "****", "inversion H1.", "shelve.", "***", "inversion H1.", "-", "qsimpl.", "+", "destruct (states_kill_aux m s1).", "*", "shelve.", "*", "destruct (MapGet prec_list (M1 prec_list a p) a).", "++", "destruct (states_kill_aux m s1).", "**", "inversion H2."], "tactic": "**", "exn": "Wrong bullet **: Current bullet ** is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros s m a p p' H1 H2.", "unfold states_kill_aux.", "destruct s.", "-", "simpl in H2.", "qsimpl.", "-", "inversion H2.", "destruct (MapGet prec_list (M1 prec_list a p0) a).", "++", "inversion H2.", "shelve.", "++", "inversion H2.", "destruct (prec_list_kill m p).", "***", "destruct (prec_list_kill m prec_empty).", "****", "inversion H1.", "shelve.", "****", "inversion H1.", "shelve.", "***", "inversion H1.", "-", "qsimpl.", "+", "destruct (states_kill_aux m s1).", "*", "shelve.", "*", "destruct (MapGet prec_list (M1 prec_list a p) a).", "++", "destruct (states_kill_aux m s1).", "**", "inversion H2.", "shelve.", "**", "destruct (MapGet prec_list s2 (N.succ_double a)).", "***", "inversion H2."], "tactic": "***", "exn": "Wrong bullet ***: Current bullet *** is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros s m a p p' H1 H2.", "unfold states_kill_aux.", "destruct s.", "-", "simpl in H2.", "qsimpl.", "-", "inversion H2.", "destruct (MapGet prec_list (M1 prec_list a p0) a).", "++", "inversion H2.", "shelve.", "++", "inversion H2.", "destruct (prec_list_kill m p).", "***", "destruct (prec_list_kill m prec_empty).", "****", "inversion H1.", "shelve.", "****", "inversion H1.", "shelve.", "***", "inversion H1.", "-", "qsimpl.", "+", "destruct (states_kill_aux m s1).", "*", "shelve.", "*", "destruct (MapGet prec_list (M1 prec_list a p) a).", "++", "destruct (states_kill_aux m s1).", "**", "inversion H2.", "shelve.", "**", "destruct (MapGet prec_list s2 (N.succ_double a)).", "***", "inversion H2.", "shelve.", "***"], "tactic": "destruct (states_kill_aux m s3).", "exn": "The reference s3 was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m a p p' H1 H2.", "unfold states_kill_aux.", "destruct s.", "-", "simpl in H2.", "qsimpl.", "-", "inversion H2.", "destruct (MapGet prec_list (M1 prec_list a p0) a).", "++", "inversion H2.", "shelve.", "++", "inversion H2.", "destruct (prec_list_kill m p).", "***", "destruct (prec_list_kill m prec_empty).", "****", "inversion H1.", "shelve.", "****", "inversion H1.", "shelve.", "***", "inversion H1.", "-", "qsimpl.", "+", "destruct (states_kill_aux m s1).", "*", "shelve.", "*", "destruct (MapGet prec_list (M1 prec_list a p) a).", "++", "destruct (states_kill_aux m s1).", "**", "inversion H2.", "shelve.", "**", "destruct (MapGet prec_list s2 (N.succ_double a)).", "***", "inversion H2.", "shelve.", "***", "destruct (states_kill_aux m s1).", "****", "inversion H2."], "tactic": "****", "exn": "Wrong bullet ****: Current bullet **** is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros s m a p p' H1 H2.", "unfold states_kill_aux.", "destruct s.", "-", "simpl in H2.", "qsimpl.", "-", "inversion H2.", "destruct (MapGet prec_list (M1 prec_list a p0) a).", "++", "inversion H2.", "shelve.", "++", "inversion H2.", "destruct (prec_list_kill m p).", "***", "destruct (prec_list_kill m prec_empty).", "****", "inversion H1.", "shelve.", "****", "inversion H1.", "shelve.", "***", "inversion H1.", "-", "qsimpl.", "+", "destruct (states_kill_aux m s1).", "*", "shelve.", "*", "destruct (MapGet prec_list (M1 prec_list a p) a).", "++", "destruct (states_kill_aux m s1).", "**", "inversion H2.", "shelve.", "**", "destruct (MapGet prec_list s2 (N.succ_double a)).", "***", "inversion H2.", "shelve.", "***", "destruct (states_kill_aux m s1).", "****", "inversion H2.", "shelve.", "****"], "tactic": "apply H1.", "exn": "In environment s1, s2 : Map prec_list m : Map bool p, p' : prec_list H1 : prec_list_kill m p = Some p' H2 : MapGet prec_list s1 0%N = Some p Heqs : (fix states_kill_aux (m : Map bool) (s : state) {struct s} : state := match s with | @M0 _ => M0 prec_list | @M1 _ a p => match prec_list_kill m p with | Some p' => M1 prec_list a p' | None => M0 prec_list end | @M2 _ s0 s1 => match states_kill_aux m s0 with | @M0 _ => match states_kill_aux m s1 with | @M0 _ => M0 prec_list | @M1 _ a p => M1 prec_list (N.succ_double a) p | @M2 _ m0 m1 => M2 prec_list (M0 prec_list) (M2 prec_list m0 m1) end | @M1 _ a p => match states_kill_aux m s1 with | @M0 _ => M1 prec_list (N.double a) p | @M1 _ a0 p0 => M2 prec_list (M1 prec_list a p) (M1 prec_list a0 p0) | @M2 _ m0 m1 => M2 prec_list (M1 prec_list a p) (M2 prec_list m0 m1) end | @M2 _ m0 m1 => M2 prec_list (M2 prec_list m0 m1) (states_kill_aux m s1) end end) m s1 = M0 prec_list Heqs0 : (fix states_kill_aux (m : Map bool) (s : state) {struct s} : state := match s with | @M0 _ => M0 prec_list | @M1 _ a p => match prec_list_kill m p with | Some p' => M1 prec_list a p' | None => M0 prec_list end | @M2 _ s0 s1 => match states_kill_aux m s0 with | @M0 _ => match states_kill_aux m s1 with | @M0 _ => M0 prec_list | @M1 _ a p => M1 prec_list (N.succ_double a) p | @M2 _ m0 m1 => M2 prec_list (M0 prec_list) (M2 prec_list m0 m1) end | @M1 _ a p => match states_kill_aux m s1 with | @M0 _ => M1 prec_list (N.double a) p | @M1 _ a0 p0 => M2 prec_list (M1 prec_list a p) (M1 prec_list a0 p0) | @M2 _ m0 m1 => M2 prec_list (M1 prec_list a p) (M2 prec_list m0 m1) end | @M2 _ m0 m1 => M2 prec_list (M2 prec_list m0 m1) (states_kill_aux m s1) end end) m s2 = M0 prec_list a : ad p0, p1 : prec_list a0 : ad p2 : prec_list a1 : ad p3 : prec_list Unable to unify \"prec_list_kill m p = Some p'\" with \"None = Some p'\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s m a p p' H1 H2.", "unfold states_kill_aux.", "destruct s.", "-", "simpl in H2.", "qsimpl.", "-", "inversion H2.", "destruct (MapGet prec_list (M1 prec_list a p0) a).", "++", "inversion H2.", "shelve.", "++", "inversion H2.", "destruct (prec_list_kill m p).", "***", "destruct (prec_list_kill m prec_empty).", "****", "inversion H1.", "shelve.", "****", "inversion H1.", "shelve.", "***", "inversion H1.", "-", "qsimpl.", "+", "destruct (states_kill_aux m s1).", "*", "shelve.", "*", "destruct (MapGet prec_list (M1 prec_list a p) a).", "++", "destruct (states_kill_aux m s1).", "**", "inversion H2.", "shelve.", "**", "destruct (MapGet prec_list s2 (N.succ_double a)).", "***", "inversion H2.", "shelve.", "***", "destruct (states_kill_aux m s1).", "****", "inversion H2.", "shelve.", "****"], "tactic": "qsimpl use: discriminate.", "exn": "The reference discriminate was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m a p p' H1 H2.", "unfold states_kill_aux.", "destruct s.", "-", "simpl in H2.", "qsimpl.", "-", "inversion H2.", "destruct (MapGet prec_list (M1 prec_list a p0) a).", "++", "inversion H2.", "shelve.", "++", "inversion H2.", "destruct (prec_list_kill m p).", "***", "destruct (prec_list_kill m prec_empty).", "****", "inversion H1.", "shelve.", "****", "inversion H1.", "shelve.", "***", "inversion H1.", "-", "qsimpl.", "+", "destruct (states_kill_aux m s1).", "*", "shelve.", "*", "destruct (MapGet prec_list (M1 prec_list a p) a).", "++", "destruct (states_kill_aux m s1).", "**", "inversion H2.", "shelve.", "**", "destruct (MapGet prec_list s2 (N.succ_double a)).", "***", "inversion H2.", "shelve.", "***", "destruct (states_kill_aux m s1).", "****", "inversion H2.", "shelve.", "****"], "tactic": "++", "exn": "Wrong bullet ++: Current bullet **** is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros s m a p p' H1 H2.", "unfold states_kill_aux.", "destruct s.", "-", "simpl in H2.", "qsimpl.", "-", "inversion H2.", "destruct (MapGet prec_list (M1 prec_list a p0) a).", "++", "inversion H2.", "shelve.", "++", "inversion H2.", "destruct (prec_list_kill m p).", "***", "destruct (prec_list_kill m prec_empty).", "****", "inversion H1.", "shelve.", "****", "inversion H1.", "shelve.", "***", "inversion H1.", "-", "qsimpl.", "+", "destruct (states_kill_aux m s1).", "*", "shelve.", "*", "destruct (MapGet prec_list (M1 prec_list a p) a).", "++", "destruct (states_kill_aux m s1).", "**", "inversion H2.", "shelve.", "**", "destruct (MapGet prec_list s2 (N.succ_double a)).", "***", "inversion H2.", "shelve.", "***", "destruct (states_kill_aux m s1).", "****", "inversion H2.", "shelve.", "****", "shelve."], "tactic": "++", "exn": "Wrong bullet ++: Expecting ****.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros s m a p p' H1 H2.", "unfold states_kill_aux.", "destruct s.", "-", "simpl in H2.", "qsimpl.", "-", "inversion H2.", "destruct (MapGet prec_list (M1 prec_list a p0) a).", "++", "inversion H2.", "shelve.", "++", "inversion H2.", "destruct (prec_list_kill m p).", "***", "destruct (prec_list_kill m prec_empty).", "****", "inversion H1.", "shelve.", "****", "inversion H1.", "shelve.", "***", "inversion H1.", "-", "qsimpl.", "+", "destruct (states_kill_aux m s1).", "*", "shelve.", "*", "destruct (MapGet prec_list (M1 prec_list a p) a).", "++", "destruct (states_kill_aux m s1).", "**", "inversion H2.", "shelve.", "**", "destruct (MapGet prec_list s2 (N.succ_double a)).", "***", "inversion H2.", "shelve.", "***", "destruct (states_kill_aux m s1).", "****", "inversion H2.", "shelve.", "****", "shelve.", "****", "inversion H2."], "tactic": "-", "exn": "Wrong bullet -: Current bullet **** is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros s m a p p' H1 H2.", "unfold states_kill_aux.", "destruct s.", "-", "simpl in H2.", "qsimpl.", "-", "inversion H2.", "destruct (MapGet prec_list (M1 prec_list a p0) a).", "++", "inversion H2.", "shelve.", "++", "inversion H2.", "destruct (prec_list_kill m p).", "***", "destruct (prec_list_kill m prec_empty).", "****", "inversion H1.", "shelve.", "****", "inversion H1.", "shelve.", "***", "inversion H1.", "-", "qsimpl.", "+", "destruct (states_kill_aux m s1).", "*", "shelve.", "*", "destruct (MapGet prec_list (M1 prec_list a p) a).", "++", "destruct (states_kill_aux m s1).", "**", "inversion H2.", "shelve.", "**", "destruct (MapGet prec_list s2 (N.succ_double a)).", "***", "inversion H2.", "shelve.", "***", "destruct (states_kill_aux m s1).", "****", "inversion H2.", "shelve.", "****", "shelve.", "****", "inversion H2.", "shelve."], "tactic": "-", "exn": "Wrong bullet -: Expecting **.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros s m a p p' H1 H2.", "unfold states_kill_aux.", "destruct s.", "-", "simpl in H2.", "qsimpl.", "-", "inversion H2.", "destruct (MapGet prec_list (M1 prec_list a p0) a).", "++", "inversion H2.", "shelve.", "++", "inversion H2.", "destruct (prec_list_kill m p).", "***", "destruct (prec_list_kill m prec_empty).", "****", "inversion H1.", "shelve.", "****", "inversion H1.", "shelve.", "***", "inversion H1.", "-", "qsimpl.", "+", "destruct (states_kill_aux m s1).", "*", "shelve.", "*", "destruct (MapGet prec_list (M1 prec_list a p) a).", "++", "destruct (states_kill_aux m s1).", "**", "inversion H2.", "shelve.", "**", "destruct (MapGet prec_list s2 (N.succ_double a)).", "***", "inversion H2.", "shelve.", "***", "destruct (states_kill_aux m s1).", "****", "inversion H2.", "shelve.", "****", "shelve.", "****", "inversion H2.", "shelve.", "**", "destruct (MapGet prec_list (M1 prec_list a p) a)."], "tactic": "+", "exn": "Wrong bullet +: Current bullet ** is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros s m a p p' H1 H2.", "unfold states_kill_aux.", "destruct s.", "-", "simpl in H2.", "qsimpl.", "-", "inversion H2.", "destruct (MapGet prec_list (M1 prec_list a p0) a).", "++", "inversion H2.", "shelve.", "++", "inversion H2.", "destruct (prec_list_kill m p).", "***", "destruct (prec_list_kill m prec_empty).", "****", "inversion H1.", "shelve.", "****", "inversion H1.", "shelve.", "***", "inversion H1.", "-", "qsimpl.", "+", "destruct (states_kill_aux m s1).", "*", "shelve.", "*", "destruct (MapGet prec_list (M1 prec_list a p) a).", "++", "destruct (states_kill_aux m s1).", "**", "inversion H2.", "shelve.", "**", "destruct (MapGet prec_list s2 (N.succ_double a)).", "***", "inversion H2.", "shelve.", "***", "destruct (states_kill_aux m s1).", "****", "inversion H2.", "shelve.", "****", "shelve.", "****", "inversion H2.", "shelve.", "**", "destruct (MapGet prec_list (M1 prec_list a p) a).", "---", "shelve.", "---", "shelve."], "tactic": "+", "exn": "Wrong bullet +: Expecting ++.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros s m a p p' H1 H2.", "unfold states_kill_aux.", "destruct s.", "-", "simpl in H2.", "qsimpl.", "-", "inversion H2.", "destruct (MapGet prec_list (M1 prec_list a p0) a).", "++", "inversion H2.", "shelve.", "++", "inversion H2.", "destruct (prec_list_kill m p).", "***", "destruct (prec_list_kill m prec_empty).", "****", "inversion H1.", "shelve.", "****", "inversion H1.", "shelve.", "***", "inversion H1.", "-", "qsimpl.", "+", "destruct (states_kill_aux m s1).", "*", "shelve.", "*", "destruct (MapGet prec_list (M1 prec_list a p) a).", "++", "destruct (states_kill_aux m s1).", "**", "inversion H2.", "shelve.", "**", "destruct (MapGet prec_list s2 (N.succ_double a)).", "***", "inversion H2.", "shelve.", "***", "destruct (states_kill_aux m s1).", "****", "inversion H2.", "shelve.", "****", "shelve.", "****", "inversion H2.", "shelve.", "**", "destruct (MapGet prec_list (M1 prec_list a p) a).", "---", "shelve.", "---", "shelve.", "++", "destruct (prec_list_kill m p)."], "tactic": "*", "exn": "Wrong bullet *: Current bullet ++ is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros s m a p p' H1 H2.", "unfold states_kill_aux.", "destruct s.", "-", "simpl in H2.", "qsimpl.", "-", "inversion H2.", "destruct (MapGet prec_list (M1 prec_list a p0) a).", "++", "inversion H2.", "shelve.", "++", "inversion H2.", "destruct (prec_list_kill m p).", "***", "destruct (prec_list_kill m prec_empty).", "****", "inversion H1.", "shelve.", "****", "inversion H1.", "shelve.", "***", "inversion H1.", "-", "qsimpl.", "+", "destruct (states_kill_aux m s1).", "*", "shelve.", "*", "destruct (MapGet prec_list (M1 prec_list a p) a).", "++", "destruct (states_kill_aux m s1).", "**", "inversion H2.", "shelve.", "**", "destruct (MapGet prec_list s2 (N.succ_double a)).", "***", "inversion H2.", "shelve.", "***", "destruct (states_kill_aux m s1).", "****", "inversion H2.", "shelve.", "****", "shelve.", "****", "inversion H2.", "shelve.", "**", "destruct (MapGet prec_list (M1 prec_list a p) a).", "---", "shelve.", "---", "shelve.", "++", "destruct (prec_list_kill m p).", "**", "shelve.", "**", "shelve.", "*", "destruct (prec_list_kill m prec_empty).", "**", "inversion H1."], "tactic": "**", "exn": "Wrong bullet **: Current bullet ** is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros s m a p p' H1 H2.", "unfold states_kill_aux.", "destruct s.", "-", "simpl in H2.", "qsimpl.", "-", "inversion H2.", "destruct (MapGet prec_list (M1 prec_list a p0) a).", "++", "inversion H2.", "shelve.", "++", "inversion H2.", "destruct (prec_list_kill m p).", "***", "destruct (prec_list_kill m prec_empty).", "****", "inversion H1.", "shelve.", "****", "inversion H1.", "shelve.", "***", "inversion H1.", "-", "qsimpl.", "+", "destruct (states_kill_aux m s1).", "*", "shelve.", "*", "destruct (MapGet prec_list (M1 prec_list a p) a).", "++", "destruct (states_kill_aux m s1).", "**", "inversion H2.", "shelve.", "**", "destruct (MapGet prec_list s2 (N.succ_double a)).", "***", "inversion H2.", "shelve.", "***", "destruct (states_kill_aux m s1).", "****", "inversion H2.", "shelve.", "****", "shelve.", "****", "inversion H2.", "shelve.", "**", "destruct (MapGet prec_list (M1 prec_list a p) a).", "---", "shelve.", "---", "shelve.", "++", "destruct (prec_list_kill m p).", "**", "shelve.", "**", "shelve.", "*", "destruct (prec_list_kill m prec_empty).", "**", "inversion H1.", "shelve.", "**", "inversion H1."], "tactic": "*", "exn": "Wrong bullet *: Current bullet ** is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros s m a p p' H1 H2.", "unfold states_kill_aux.", "destruct s.", "-", "simpl in H2.", "qsimpl.", "-", "inversion H2.", "destruct (MapGet prec_list (M1 prec_list a p0) a).", "++", "inversion H2.", "shelve.", "++", "inversion H2.", "destruct (prec_list_kill m p).", "***", "destruct (prec_list_kill m prec_empty).", "****", "inversion H1.", "shelve.", "****", "inversion H1.", "shelve.", "***", "inversion H1.", "-", "qsimpl.", "+", "destruct (states_kill_aux m s1).", "*", "shelve.", "*", "destruct (MapGet prec_list (M1 prec_list a p) a).", "++", "destruct (states_kill_aux m s1).", "**", "inversion H2.", "shelve.", "**", "destruct (MapGet prec_list s2 (N.succ_double a)).", "***", "inversion H2.", "shelve.", "***", "destruct (states_kill_aux m s1).", "****", "inversion H2.", "shelve.", "****", "shelve.", "****", "inversion H2.", "shelve.", "**", "destruct (MapGet prec_list (M1 prec_list a p) a).", "---", "shelve.", "---", "shelve.", "++", "destruct (prec_list_kill m p).", "**", "shelve.", "**", "shelve.", "*", "destruct (prec_list_kill m prec_empty).", "**", "inversion H1.", "shelve.", "**", "inversion H1.", "shelve."], "tactic": "*", "exn": "Wrong bullet *: Expecting +.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros s m a p p' H1 H2.", "unfold states_kill_aux.", "destruct s.", "-", "simpl in H2.", "qsimpl.", "-", "inversion H2.", "destruct (MapGet prec_list (M1 prec_list a p0) a).", "++", "inversion H2.", "shelve.", "++", "inversion H2.", "destruct (prec_list_kill m p).", "***", "destruct (prec_list_kill m prec_empty).", "****", "inversion H1.", "shelve.", "****", "inversion H1.", "shelve.", "***", "inversion H1.", "-", "qsimpl.", "+", "destruct (states_kill_aux m s1).", "*", "shelve.", "*", "destruct (MapGet prec_list (M1 prec_list a p) a).", "++", "destruct (states_kill_aux m s1).", "**", "inversion H2.", "shelve.", "**", "destruct (MapGet prec_list s2 (N.succ_double a)).", "***", "inversion H2.", "shelve.", "***", "destruct (states_kill_aux m s1).", "****", "inversion H2.", "shelve.", "****", "shelve.", "****", "inversion H2.", "shelve.", "**", "destruct (MapGet prec_list (M1 prec_list a p) a).", "---", "shelve.", "---", "shelve.", "++", "destruct (prec_list_kill m p).", "**", "shelve.", "**", "shelve.", "*", "destruct (prec_list_kill m prec_empty).", "**", "inversion H1.", "shelve.", "**", "inversion H1.", "shelve.", "+", "inversion H1."], "tactic": "+", "exn": "Wrong bullet +: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}]}, "chat": [], "original": "intros s m a p p' H1 H2. unfold states_kill_aux. destruct s. - simpl in H2. rewrite H2. apply H1. - destruct (states_kill_aux m s). + destruct (states_kill_aux m s0). * inversion H2. * destruct (MapGet prec_list (M1 prec_list a p0) a). ++ inversion H2. ++ destruct (states_kill_aux m s1). ** inversion H2. ** destruct (prec_list_kill m p). *** destruct (prec_list_kill m prec_empty). **** inversion H1. **** inversion H1. *** destruct (prec_list_kill m s). **** inversion H1. **** apply H1. + destruct (states_kill_aux m s1). * discriminate. * destruct (MapGet prec_list (M1 prec_list a p) a). ++ destruct (states_kill_aux m s1). ** inversion H2. ** destruct (MapGet prec_list s2 (N.succ_double a)). *** inversion H2. *** destruct (states_kill_aux m s3). **** inversion H2. **** apply H1. ++ inversion H2. - destruct (MapGet prec_list (M1 prec_list a p) a). + destruct (prec_list_kill m p). * destruct (prec_list_kill m prec_empty). ** inversion H1. ** inversion H1. * inversion H1. + inversion H2.", "succ": false}]