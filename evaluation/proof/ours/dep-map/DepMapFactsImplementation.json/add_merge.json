[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros A x v\u2081 v\u2082 dom m.", "unfold add."], "tactic": "rewrite <- add_cancel with (x:=x) (v:=v\u2081) (m:=add A dom x v\u2082 m) at 2.", "exn": "In environment A : Type x : key v\u2081, v\u2082 : A dom : Dom.t m : t A dom The term \"A\" has type \"Type\" while it is expected to have type \"key\".", "type": "wrong_type", "handled": true}, {"ctx": ["intros A x v\u2081 v\u2082 dom m.", "unfold add.", "qsimpl use: add,add_cancel."], "tactic": "apply eq_trans with (m\u2082:=add A dom x v\u2082 m); auto.", "exn": "In environment H : \u2200 (A : Type) (x : key) (v : A) (dom : Dom.t) (m : t A dom), find x m = Some v \u2192 eq (add x v m) m A : Type x : key v\u2081, v\u2082 : A dom : Dom.t m : t A dom X : \u2200 x : key, A \u2192 t A dom \u2192 t A (Dom.add x dom) The term \"A\" has type \"Type\" while it is expected to have type \"key\".", "type": "wrong_type", "handled": true}]}, "chat": [], "original": "intros A x v\u2081 v\u2082 dom m. unfold add. rewrite <- add_cancel with (x:=x) (v:=v\u2081) (m:=add A dom x v\u2082 m) at 2. apply eq_trans with (m\u2082:=add A dom x v\u2082 m); auto.", "succ": false}]