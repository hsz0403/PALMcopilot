[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros."], "tactic": "unfold is_ring, commutativity, is_group, intern, associativity, distributivity, mult_opp_r, opp_unicity, regular_l, neutral, is_opposite, opposite, is_group in *.", "exn": "Cannot coerce mult_opp_r to an evaluable reference.", "type": "not_evaluable", "handled": true}, {"ctx": ["intros.", "qsimpl use: commutativity,intern,distributivity,regular_l,is_group,opp_unicity,mult_opp_r,is_opposite,opposite,associativity,is_ring,neutral."], "tactic": "intros [H_comm [H_group [H_intern [H_assoc H_dist]]]].", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros.", "qsimpl use: commutativity,intern,distributivity,regular_l,is_group,opp_unicity,mult_opp_r,is_opposite,opposite,associativity,is_ring,neutral."], "tactic": "apply mult_opp_r in H; try auto.", "exn": "Unable to apply lemma of type \"is_ring -> forall x y : S, A x -> A y -> Mult x (Opp y) = Opp (Mult x y)\" on hypothesis of type \"associativity S Add\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["intros.", "qsimpl use: commutativity,intern,distributivity,regular_l,is_group,opp_unicity,mult_opp_r,is_opposite,opposite,associativity,is_ring,neutral.", "qsimpl use: commutativity,intern,distributivity,regular_l,is_group,opp_unicity,mult_opp_r,is_opposite,opposite,associativity,is_ring,neutral."], "tactic": "apply H.", "exn": "In environment X14 : forall S : Set, (S -> Prop) -> (S -> S -> S) -> S -> Prop X13 : Prop X12 : forall S : Set, (S -> S -> S) -> Prop X11 : forall S : Set, (S -> Prop) -> (S -> S -> S) -> S -> (S -> S) -> Prop X10 : forall S : Set, (S -> Prop) -> (S -> S -> S) -> S -> S -> S -> Prop S : Set A : S -> Prop Add, Mult : S -> S -> S O : S Opp : S -> S H17 : is_ring -> forall x y : S, A x -> A y -> Mult x (Opp y) = Opp (Mult x y) P0 : forall S : Set, (S -> Prop) -> (S -> S -> S) -> S -> (S -> S) -> Prop H16 : forall (S : Set) (G : S -> Prop) (Add : S -> S -> S) (O : S) (Opp : S -> S), P0 S G Add O Opp -> forall x y : S, is_opposite S G Add O x y -> y = Opp x H15 : forall (S : Set) (G : S -> Prop) (Add : S -> S -> S) (O : S) (Opp : S -> S), is_group S G Add O Opp -> forall y z : S, G y -> G z -> forall x : S, G x -> Add x y = Add x z -> y = z X9 : forall S : Set, (S -> S -> S) -> (S -> S -> S) -> Prop X8 : forall S : Set, (S -> Prop) -> (S -> S -> S) -> Prop X7 : forall S : Set, (S -> S -> S) -> Prop X6 : forall S : Set, (S -> Prop) -> (S -> S -> S) -> S -> Prop X5 : Prop X4 : forall S : Set, (S -> S -> S) -> Prop X3 : forall S : Set, (S -> Prop) -> (S -> S -> S) -> S -> (S -> S) -> Prop X2 : forall S : Set, (S -> Prop) -> (S -> S -> S) -> S -> S -> S -> Prop P : forall S : Set, (S -> Prop) -> (S -> S -> S) -> S -> (S -> S) -> Prop H3 : forall (S : Set) (G : S -> Prop) (Add : S -> S -> S) (O : S) (Opp : S -> S), P S G Add O Opp -> forall x y : S, is_opposite S G Add O x y -> y = Opp x X1 : forall S : Set, (S -> S -> S) -> (S -> S -> S) -> Prop X0 : forall S : Set, (S -> Prop) -> (S -> S -> S) -> Prop X : forall S : Set, (S -> S -> S) -> Prop I, x, y : S H0 : A x H1 : A y H5 : nat H6 : forall x y : S, A x -> A y -> Mult x (Opp y) = Opp (Mult x y) H4 : commutativity S Add H7 : intern S A Mult H8 : associativity S Mult H10 : distributivity S Add Mult H9 : intern S A Add H : associativity S Add H13 : opposite S A Add O Opp H12 : A O H11 : forall x : S, A x -> Add O x = x H14 : forall x : S, A x -> Add x O = x Unable to unify \"associativity S Add\" with \"Mult (Opp x) y = Opp (Mult x y)\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "simpl. intros. unfold is_ring, commutativity, is_group, intern, associativity, distributivity, mult_opp_r, opp_unicity, regular_l, neutral, is_opposite, opposite, is_group in *. intros [H_comm [H_group [H_intern [H_assoc H_dist]]]]. apply mult_opp_r in H; try auto. apply H.", "succ": false}]