[{"history": {"proof": "intros n m p H1 H2. qsimpl use: Zpos,Zmult_ge_reg_r. qsimpl use: Z,Zpos,Zge_trans,Zmult_ge_reg_r. rewrite Z.mul_comm in H2. qsimpl use: Z,Zpos,Zge_trans,Zmult_ge_reg_r. qsimpl use: Z,Zpos,Zge_trans,Zmult_ge_reg_r. qsimpl use: Zge_trans,Zmult_ge_compat_l,Zpos,Zmult_ge_reg_r,Z. qsimpl use: Zge_trans,Zmult_ge_compat_l,Zpos,Zmult_ge_reg_r,Z. qsimpl use: Zge_trans,Zmult_ge_compat_l,Zpos,Zmult_ge_reg_r,Z. qsimpl use: Zge_trans,Zmult_ge_compat_l,Zpos,Zmult_ge_reg_r,Z. hauto l: on drew: off use: Z.gt_lt_iff, Z.mul_comm, Znot_ge_lt, Z.mul_lt_mono_pos_l unfold: Z.lt, Z.gt, Z.ge.", "repairs": ["", "wrong_type", "wrong_type", "", "no_subterm", "cannot_apply_in", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_apply_in", "hammer"], "exceptions": [{"ctx": ["intros n m p H1 H2."], "tactic": "apply Zmult_ge_reg_r with (p:=Zpos p) in H2.", "exn": "In environment n, m, p : Z H1 : p > 0 H2 : p * n >= p * m The term \"p\" has type \"Z\" while it is expected to have type \"positive\".", "type": "wrong_type", "handled": true}, {"ctx": ["intros n m p H1 H2.", "qsimpl use: Zpos,Zmult_ge_reg_r."], "tactic": "apply Zge_trans with (m:=Z.mul (Zpos p) n) in H2.", "exn": "In environment H0 : forall n m p : Z, p > 0 -> n * p >= m * p -> n >= m H : positive -> Z n, m, p : Z H2 : p * n >= p * m H4 : (p ?= 0) = Gt The term \"p\" has type \"Z\" while it is expected to have type \"positive\".", "type": "wrong_type", "handled": true}, {"ctx": ["intros n m p H1 H2.", "qsimpl use: Zpos,Zmult_ge_reg_r.", "qsimpl use: Z,Zpos,Zge_trans,Zmult_ge_reg_r.", "rewrite Z.mul_comm in H2."], "tactic": "rewrite Z.mul_comm.", "exn": "Found no subterm matching \"?M2351 * ?M2352\" in the current goal.", "type": "no_subterm", "handled": true}, {"ctx": ["intros n m p H1 H2.", "qsimpl use: Zpos,Zmult_ge_reg_r.", "qsimpl use: Z,Zpos,Zge_trans,Zmult_ge_reg_r.", "rewrite Z.mul_comm in H2.", "qsimpl use: Z,Zpos,Zge_trans,Zmult_ge_reg_r."], "tactic": "apply Z.mul_reg_l in H2.", "exn": "Unable to apply lemma of type \"forall n m p : Z, p <> 0 -> p * n = p * m -> n = m\" on hypothesis of type \"n * p >= p * m\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["intros n m p H1 H2.", "qsimpl use: Zpos,Zmult_ge_reg_r.", "qsimpl use: Z,Zpos,Zge_trans,Zmult_ge_reg_r.", "rewrite Z.mul_comm in H2.", "qsimpl use: Z,Zpos,Zge_trans,Zmult_ge_reg_r.", "qsimpl use: Z,Zpos,Zge_trans,Zmult_ge_reg_r."], "tactic": "apply Zmult_ge_compat_l.", "exn": "In environment H8 : forall n m p : Z, p > 0 -> n * p >= m * p -> n >= m H5 : forall n m p : Z, n >= m -> m >= p -> n >= p H3, H0, H1, H : positive -> Z n, m, p : Z H2 : n * p >= p * m H4 : (p ?= 0) = Gt Unable to unify \"(?M3269 * ?M3267 ?= ?M3269 * ?M3268) = Lt\" with \"(n ?= m) = Lt\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros n m p H1 H2.", "qsimpl use: Zpos,Zmult_ge_reg_r.", "qsimpl use: Z,Zpos,Zge_trans,Zmult_ge_reg_r.", "rewrite Z.mul_comm in H2.", "qsimpl use: Z,Zpos,Zge_trans,Zmult_ge_reg_r.", "qsimpl use: Z,Zpos,Zge_trans,Zmult_ge_reg_r.", "qsimpl use: Zge_trans,Zmult_ge_compat_l,Zpos,Zmult_ge_reg_r,Z."], "tactic": "apply Z.mul_nonneg_nonneg.", "exn": "In environment H10 : forall n m p : Z, p > 0 -> n * p >= m * p -> n >= m H9 : positive -> Z H7 : forall n m p : Z, n >= m -> p >= 0 -> p * n >= p * m H6 : forall n m p : Z, n >= m -> m >= p -> n >= p H3, H0, H1, H : positive -> Z n, m, p : Z H2 : n * p >= p * m H4 : (p ?= 0) = Gt Unable to unify \"(0 ?= ?M3855 * ?M3856) = Gt\" with \"(n ?= m) = Lt\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros n m p H1 H2.", "qsimpl use: Zpos,Zmult_ge_reg_r.", "qsimpl use: Z,Zpos,Zge_trans,Zmult_ge_reg_r.", "rewrite Z.mul_comm in H2.", "qsimpl use: Z,Zpos,Zge_trans,Zmult_ge_reg_r.", "qsimpl use: Z,Zpos,Zge_trans,Zmult_ge_reg_r.", "qsimpl use: Zge_trans,Zmult_ge_compat_l,Zpos,Zmult_ge_reg_r,Z.", "qsimpl use: Zge_trans,Zmult_ge_compat_l,Zpos,Zmult_ge_reg_r,Z."], "tactic": "apply Z.ge_le.", "exn": "In environment H12 : forall n m p : Z, p > 0 -> n * p >= m * p -> n >= m H11 : positive -> Z H8 : forall n m p : Z, n >= m -> p >= 0 -> p * n >= p * m H5 : forall n m p : Z, n >= m -> m >= p -> n >= p H9, H3, H0, H1, H : positive -> Z n, m, p : Z H2 : n * p >= p * m H4 : (p ?= 0) = Gt Unable to unify \"(?M4464 ?= ?M4463) = Gt\" with \"(n ?= m) = Lt\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros n m p H1 H2.", "qsimpl use: Zpos,Zmult_ge_reg_r.", "qsimpl use: Z,Zpos,Zge_trans,Zmult_ge_reg_r.", "rewrite Z.mul_comm in H2.", "qsimpl use: Z,Zpos,Zge_trans,Zmult_ge_reg_r.", "qsimpl use: Z,Zpos,Zge_trans,Zmult_ge_reg_r.", "qsimpl use: Zge_trans,Zmult_ge_compat_l,Zpos,Zmult_ge_reg_r,Z.", "qsimpl use: Zge_trans,Zmult_ge_compat_l,Zpos,Zmult_ge_reg_r,Z.", "qsimpl use: Zge_trans,Zmult_ge_compat_l,Zpos,Zmult_ge_reg_r,Z."], "tactic": "apply Z.ge_le in H1.", "exn": "Unable to apply lemma of type \"forall n m : Z, n >= m -> m <= n\" on hypothesis of type \"positive -> Z\".", "type": "cannot_apply_in", "handled": true}]}, "chat": [], "original": "intros n m p H1 H2. apply Zmult_ge_reg_r with (p:=Zpos p) in H2. apply Zge_trans with (m:=Z.mul (Zpos p) n) in H2. - rewrite Z.mul_comm in H2. rewrite Z.mul_comm. apply Z.mul_reg_l in H2. auto. - apply Zmult_ge_compat_l. + apply Z.mul_nonneg_nonneg. + apply Z.ge_le. + apply Z.ge_le in H1. auto.", "succ": true}]