[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros m k x y IHmap Hneq.", "unfold A_1.", "unfold B_1.", "destruct (eq_dim_dec k k) as [Heq | Hneq_dim]; [|tauto].", "destruct (eq_dart_dec x x) as [Heq_x | Hneq_x]; [|tauto]."], "tactic": "rewrite A_1_B_bis; auto.", "exn": "Found no subterm matching \"A_1 (B ?M2297 ?M2298 ?M2299) ?M2298 ?M2300\" in the current goal.", "type": "no_subterm", "handled": true}, {"ctx": ["intros m k x y IHmap Hneq.", "unfold A_1.", "unfold B_1.", "destruct (eq_dim_dec k k) as [Heq | Hneq_dim]; [|tauto].", "destruct (eq_dart_dec x x) as [Heq_x | Hneq_x]; [|tauto].", "qsimpl use: A_1_B_bis.", "destruct (eq_dart_dec y x) as [Heq_yx | Hneq_yx].", "+", "subst y.", "contradiction.", "+"], "tactic": "reflexivity.", "exn": "In environment H : forall (m : fmap) (k : dim) (x y : dart), inv_hmap m -> (y = A m k x -> False) -> A_1 (B m k x) k y = A_1 m k y m : fmap k : dim x, y : dart IHmap : inv_hmap m Hneq : y = x -> False Hneq_yx : y <> x Unable to unify \"(fix A_1 (m : fmap) (k : dim) (y : dart) {struct m} : dart := match m with | V => nil | I m0 _ _ _ => A_1 m0 k y | L m0 k0 x0 y0 => if eq_dim_dec k0 k then if eq_dart_dec y0 y then x0 else A_1 m0 k y else A_1 m0 k y end) m k y\" with \"(fix A_1 (m : fmap) (k : dim) (y : dart) {struct m} : dart := match m with | V => nil | I m0 _ _ _ => A_1 m0 k y | L m0 k0 x0 y0 => if eq_dim_dec k0 k then if eq_dart_dec y0 y then x0 else A_1 m0 k y else A_1 m0 k y end) ((fix B_1 (m : fmap) (k : dim) (y : dart) {struct m} : fmap := match m with | V => V | I m0 x0 t0 p0 => I (B_1 m0 k y) x0 t0 p0 | L m0 k0 x0 y0 => if eq_dim_dec k0 k then if eq_dart_dec y0 y then m0 else L (B_1 m0 k y) k0 x0 y0 else L (B_1 m0 k y) k0 x0 y0 end) m k x) k y\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros m k x y IHmap Hneq. unfold A_1. unfold B_1. destruct (eq_dim_dec k k) as [Heq | Hneq_dim]; [|tauto]. destruct (eq_dart_dec x x) as [Heq_x | Hneq_x]; [|tauto]. rewrite A_1_B_bis; auto. destruct (eq_dart_dec y x) as [Heq_yx | Hneq_yx]. + subst y. contradiction. + reflexivity.", "succ": false}]