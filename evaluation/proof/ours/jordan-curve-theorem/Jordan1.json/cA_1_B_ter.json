[{"history": {"proof": "strivial use: cA_cA_1_B_ter.", "repairs": [], "exceptions": [{"ctx": ["intros m k j x z Hmap Hneq.", "unfold cA_1."], "tactic": "rewrite (cA_B_ter m k j x z Hmap Hneq).", "exn": "Found no subterm matching \"cA (B m k x) j z\" in the current goal.", "type": "no_subterm", "handled": true}, {"ctx": ["intros m k j x z Hmap Hneq.", "unfold cA_1.", "qsimpl time: 2 use: cA_B_ter."], "tactic": "reflexivity.", "exn": "In environment H : forall (m : fmap) (k j : dim) (x z : dart), inv_hmap m -> (k = j -> False) -> cA (B m k x) j z = cA m j z m : fmap k, j : dim x, z : dart Hmap : inv_hmap m Hneq : k = j -> False Unable to unify \"(fix cA (m : fmap) (k : dim) (z : dart) {struct m} : dart := match m with | V => nil | I m0 x _ _ => if eq_dart_dec x z then z else cA m0 k z | L m0 k0 x y => if eq_dim_dec k0 k then if eq_dart_dec x z then y else if eq_dart_dec (cA_1 m0 k y) z then cA m0 k x else cA m0 k z else cA m0 k z end with cA_1 (m : fmap) (k : dim) (z : dart) {struct m} : dart := match m with | V => nil | I m0 x _ _ => if eq_dart_dec x z then z else cA_1 m0 k z | L m0 k0 x y => if eq_dim_dec k0 k then if eq_dart_dec y z then x else if eq_dart_dec (cA m0 k x) z then cA_1 m0 k y else cA_1 m0 k z else cA_1 m0 k z end for cA_1) m j z\" with \"(fix cA (m : fmap) (k : dim) (z : dart) {struct m} : dart := match m with | V => nil | I m0 x _ _ => if eq_dart_dec x z then z else cA m0 k z | L m0 k0 x y => if eq_dim_dec k0 k then if eq_dart_dec x z then y else if eq_dart_dec (cA_1 m0 k y) z then cA m0 k x else cA m0 k z else cA m0 k z end with cA_1 (m : fmap) (k : dim) (z : dart) {struct m} : dart := match m with | V => nil | I m0 x _ _ => if eq_dart_dec x z then z else cA_1 m0 k z | L m0 k0 x y => if eq_dim_dec k0 k then if eq_dart_dec y z then x else if eq_dart_dec (cA m0 k x) z then cA_1 m0 k y else cA_1 m0 k z else cA_1 m0 k z end for cA_1) (B m k x) j z\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros m k j x z Hmap Hneq. unfold cA_1. rewrite (cA_B_ter m k j x z Hmap Hneq). reflexivity.", "succ": true}]