[{"history": {"proof": "qsimpl time: 2 use: SeparationAlgebra. qsimpl time: 2 use: SeparationAlgebra,unital_is_residual,ResidualSeparationAlgebra. qsimpl time: 2 use: SeparationAlgebra,IncreasingSeparationAlgebra,unital_is_residual,ResidualSeparationAlgebra. qsimpl time: 2 use: unital_is_residual,ResidualSeparationAlgebra,IncreasingSeparationAlgebra,SeparationAlgebra,Build_ResidualSeparationAlgebra.", "repairs": ["not_evaluable", "not_evaluable", "not_evaluable", "cannot_unify"], "exceptions": [{"ctx": ["unfold UpwardsClosedSeparationAlgebra in *."], "tactic": "unfold SeparationAlgebra in *.", "exn": "Cannot coerce SeparationAlgebra to an evaluable reference.", "type": "not_evaluable", "handled": true}, {"ctx": ["unfold UpwardsClosedSeparationAlgebra in *.", "qsimpl time: 2 use: SeparationAlgebra."], "tactic": "intros worlds R J SA dSA.", "exn": "worlds is already used.", "type": "used_var", "handled": true}, {"ctx": ["unfold UpwardsClosedSeparationAlgebra in *.", "qsimpl time: 2 use: SeparationAlgebra."], "tactic": "intros worlds' R J SA dSA.", "exn": "R is already used.", "type": "used_var", "handled": true}, {"ctx": ["unfold UpwardsClosedSeparationAlgebra in *.", "qsimpl time: 2 use: SeparationAlgebra."], "tactic": "intros worlds' R' J SA dSA.", "exn": "J is already used.", "type": "used_var", "handled": true}, {"ctx": ["unfold UpwardsClosedSeparationAlgebra in *.", "qsimpl time: 2 use: SeparationAlgebra."], "tactic": "intros worlds' R' J' SA dSA.", "exn": "dSA is already used.", "type": "used_var", "handled": true}, {"ctx": ["unfold UpwardsClosedSeparationAlgebra in *.", "qsimpl time: 2 use: SeparationAlgebra."], "tactic": "intros worlds' R' J' SA dSA'.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["unfold UpwardsClosedSeparationAlgebra in *.", "qsimpl time: 2 use: SeparationAlgebra."], "tactic": "unfold ResidualSeparationAlgebra in unital_is_residual.", "exn": "Cannot coerce ResidualSeparationAlgebra to an evaluable reference.", "type": "not_evaluable", "handled": true}, {"ctx": ["unfold UpwardsClosedSeparationAlgebra in *.", "qsimpl time: 2 use: SeparationAlgebra.", "qsimpl time: 2 use: SeparationAlgebra,unital_is_residual,ResidualSeparationAlgebra."], "tactic": "unfold IncreasingSeparationAlgebra in *.", "exn": "Cannot coerce IncreasingSeparationAlgebra to an evaluable reference.", "type": "not_evaluable", "handled": true}, {"ctx": ["unfold UpwardsClosedSeparationAlgebra in *.", "qsimpl time: 2 use: SeparationAlgebra.", "qsimpl time: 2 use: SeparationAlgebra,unital_is_residual,ResidualSeparationAlgebra.", "qsimpl time: 2 use: SeparationAlgebra,IncreasingSeparationAlgebra,unital_is_residual,ResidualSeparationAlgebra."], "tactic": "apply Build_ResidualSeparationAlgebra.", "exn": "In environment worlds : Type R : Relation worlds J : Join worlds dSA : DownwardsClosedSeparationAlgebra worlds m, n, m1, m2 : worlds H0 : m <= n x : worlds H : x <= m H2 : join m1 m2 x join_comm : forall m1 m2 m : worlds, join m1 m2 m -> join m2 m1 m join_assoc : forall mx my mz mxy mxyz : worlds, join mx my mxy -> join mxy mz mxyz -> exists myz : worlds, join my mz myz /\\\\ join mx myz mxyz PreOrder_Reflexive : Reflexive Krelation PreOrder_Transitive : Transitive Krelation H1 : UnitalSeparationAlgebra worlds -> ResidualSeparationAlgebra worlds H3 : UnitalSeparationAlgebra worlds -> ResidualSeparationAlgebra worlds Unable to unify \"ResidualSeparationAlgebra ?M7177\" with \"exists n1 n2 : worlds, join n1 n2 n /\\\\ m1 <= n1 /\\\\ m2 <= n2\".", "type": "cannot_unify", "handled": true}, {"ctx": ["unfold UpwardsClosedSeparationAlgebra in *.", "qsimpl time: 2 use: SeparationAlgebra.", "qsimpl time: 2 use: SeparationAlgebra,unital_is_residual,ResidualSeparationAlgebra.", "qsimpl time: 2 use: SeparationAlgebra,IncreasingSeparationAlgebra,unital_is_residual,ResidualSeparationAlgebra.", "qsimpl time: 2 use: unital_is_residual,ResidualSeparationAlgebra,IncreasingSeparationAlgebra,SeparationAlgebra,Build_ResidualSeparationAlgebra."], "tactic": "intros n.", "exn": "n is already used.", "type": "used_var", "handled": true}, {"ctx": ["unfold UpwardsClosedSeparationAlgebra in *.", "qsimpl time: 2 use: SeparationAlgebra.", "qsimpl time: 2 use: SeparationAlgebra,unital_is_residual,ResidualSeparationAlgebra.", "qsimpl time: 2 use: SeparationAlgebra,IncreasingSeparationAlgebra,unital_is_residual,ResidualSeparationAlgebra.", "qsimpl time: 2 use: unital_is_residual,ResidualSeparationAlgebra,IncreasingSeparationAlgebra,SeparationAlgebra,Build_ResidualSeparationAlgebra."], "tactic": "intros n'.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}]}, "chat": [], "original": "unfold UpwardsClosedSeparationAlgebra in *. unfold SeparationAlgebra in *. intros worlds R J SA dSA. unfold ResidualSeparationAlgebra in unital_is_residual. unfold IncreasingSeparationAlgebra in *. apply Build_ResidualSeparationAlgebra. intros n. destruct (incr_exists n) as [m [RES INC]]. exists m. split; auto. apply Build_IncreasingSeparationAlgebra. intros x. apply all_increasing.", "succ": false}]