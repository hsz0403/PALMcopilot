[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["unfold vec_pos, vec_set_pos."], "tactic": "reflexivity.", "exn": "In environment X : Type vec_decomp_type := fun n : nat => match n with | 0 => Prop | S n0 => (X * vec n0)%type end : nat -> Type vec_head_tail_type := fun n : nat => match n as n0 return (vec n0 -> Prop) with | 0 => fun v : vec 0 => v = vec_nil | S n0 => fun v : vec (S n0) => v = vec_head v ## vec_tail v end : forall n : nat, vec n -> Prop vec_head_tail_prop : forall (n : nat) (v : vec n), vec_head_tail_type v n : nat g : pos n -> X p : pos n Unable to unify \"g p\" with \"(fix vec_pos (n : nat) (v : vec n) {struct v} : pos n -> X := match v in (Vector.t _ n0) return (pos n0 -> X) with | vec_nil => fun p : pos 0 => False_rect X (pos_O_inv p) | Vector.cons _ x n0 v0 => fun p : pos (S n0) => match pos_S_inv p with | inl _ => x | inr (exist _ p0 _) => vec_pos n0 v0 p0 end end) n ((fix vec_set_pos (n : nat) : (pos n -> X) -> vec n := match n as n0 return ((pos n0 -> X) -> vec n0) with | 0 => fun _ : pos 0 -> X => vec_nil | S n0 => fun g : pos (S n0) -> X => g pos0 ## vec_set_pos n0 (fun p : pos n0 => g (pos_nxt p)) end) n g) p\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "unfold vec_pos, vec_set_pos. reflexivity.", "succ": false}]