[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": [], "tactic": "intros X H.", "exn": "X is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros X' H.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros.", "unfold enumerable__T in *."], "tactic": "intros [f Hf].", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros.", "unfold enumerable__T in *."], "tactic": "exists (fun n => tab X (fun n => map f (L_T (X -> Prop) (ex_intro (fun L : nat -> list X => enum (X -> Prop) L) H (enum_enumT _ H)))) n).", "exn": "The reference f was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros.", "unfold enumerable__T in *."], "tactic": "intros l.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros.", "unfold enumerable__T in *."], "tactic": "destruct l as [|x l].", "exn": "The reference l was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros.", "unfold enumerable__T in *.", "destruct find as [|x find].", "-"], "tactic": "exists 0.", "exn": "Not an inductive goal with 1 constructor.", "type": "not_inductive_goal", "handled": true}, {"ctx": ["intros.", "unfold enumerable__T in *.", "destruct find as [|x find].", "-", "qsimpl."], "tactic": "reflexivity.", "exn": "No such goal. Focus next goal with bullet -.", "type": "next_goal", "handled": true}, {"ctx": ["intros.", "unfold enumerable__T in *.", "destruct find as [|x find].", "-", "qsimpl.", "-"], "tactic": "destruct (Hf x) as [n Hn].", "exn": "The reference Hf was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros.", "unfold enumerable__T in *.", "destruct find as [|x find].", "-", "qsimpl.", "-"], "tactic": "exists (S n).", "exn": "The reference n was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros.", "unfold enumerable__T in *.", "destruct find as [|x find].", "-", "qsimpl.", "-"], "tactic": "rewrite tab_S.", "exn": "Found no subterm matching \"tab ?M1614 (S ?M1615)\" in the current goal.", "type": "no_subterm", "handled": true}, {"ctx": ["intros.", "unfold enumerable__T in *.", "destruct find as [|x find].", "-", "qsimpl.", "-", "qsimpl use: tab_S."], "tactic": "rewrite map_map.", "exn": "No such goal. Focus next goal with bullet -.", "type": "next_goal", "handled": true}]}, "chat": [], "original": "intros X H. unfold enumerable__T in *. intros [f Hf]. exists (fun n => tab X (fun n => map f (L_T (X -> Prop) (ex_intro (fun L : nat -> list X => enum (X -> Prop) L) H (enum_enumT _ H)))) n). intros l. destruct l as [|x l]. - exists 0. reflexivity. - destruct (Hf x) as [n Hn]. exists (S n). rewrite tab_S. rewrite map_map. unfold tab. simpl. rewrite concat_cons. rewrite concat_filter_map. rewrite map_id_list. + rewrite <- Hn. split; auto. + intros. apply H.", "succ": false}]