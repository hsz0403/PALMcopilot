[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["unfold Rbar_glb, Rbar_lub.", "destruct (Rbar_ex_glb E) as [glb glb_prop].", "destruct (Rbar_ex_lub E) as [lub lub_prop]."], "tactic": "rewrite (Rbar_opp_involutive (Rbar_lub E)).", "exn": "The LHS of (Rbar_opp_involutive (Rbar_lub E)) (Rbar_opp (Rbar_opp (Rbar_lub E))) does not match any subterm of the goal", "type": "no_match_term", "handled": true}, {"ctx": ["unfold Rbar_glb, Rbar_lub.", "destruct (Rbar_ex_glb E) as [glb glb_prop].", "destruct (Rbar_ex_lub E) as [lub lub_prop].", "qsimpl time: 2 use: Rbar_opp_involutive,Rbar_lub."], "tactic": "apply (Rbar_lb_ub E lub).", "exn": "In environment H : forall x : Rbar, Rbar_opp (Rbar_opp x) = x E : Rbar -> Prop glb, lub, H0, x : Rbar H1 : Rbar_is_lower_bound (fun x : Rbar => E (Rbar_opp x)) x H2 : forall b : Rbar, Rbar_is_lower_bound (fun x : Rbar => E (Rbar_opp x)) b -> Rbar_le b x H3 : Rbar_is_upper_bound E lub H4 : forall b : Rbar, Rbar_is_upper_bound E b -> Rbar_le lub b H5 : Rbar_is_lower_bound E glb H6 : forall b : Rbar, Rbar_is_lower_bound E b -> Rbar_le b glb Unable to unify \"Rbar_is_lower_bound (fun x : Rbar => E (Rbar_opp x)) (Rbar_opp lub) <-> Rbar_is_upper_bound E lub\" with \"x = Rbar_opp lub\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "unfold Rbar_glb, Rbar_lub. destruct (Rbar_ex_glb E) as [glb glb_prop]. destruct (Rbar_ex_lub E) as [lub lub_prop]. rewrite (Rbar_opp_involutive (Rbar_lub E)). apply (Rbar_lb_ub E lub).", "succ": false}]