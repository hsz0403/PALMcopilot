[{"history": {"proof": "intros. qsimpl use: locally_not'. sfirstorder depth: 3.", "repairs": ["no_product", "cannot_apply_in", "hammer"], "exceptions": [{"ctx": [], "tactic": "intros T x P H.", "exn": "T is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros T' x P H.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros."], "tactic": "apply locally_not' in H.", "exn": "Unable to apply lemma of type \"forall (x : T) (P : T -> Prop), ~ (forall eps : posreal, ~ (forall y : T, ball x eps y -> ~ P y)) -> {d : posreal | forall y : T, ball x d y -> ~ P y}\" on hypothesis of type \"locally x (fun y : T => ~ P y)\".", "type": "cannot_apply_in", "handled": true}]}, "chat": [], "original": "intros T x P H. apply locally_not' in H. destruct H as [d Hd]. exists d. intros y Hball Hy. apply Hd. apply fct_ball_sym in Hball. apply locally_not. intro H'. exists d. intros y' Hball'. apply H'. apply ball_sym in Hball'. apply (locally_dist T (fun z => R_dist x z) (fun z => ~ P z)). exists d. intros z Hz. apply Hd. apply ball_triangle with (y := y); auto.", "succ": true}]