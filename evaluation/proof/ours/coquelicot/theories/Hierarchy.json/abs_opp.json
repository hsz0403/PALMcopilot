[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros x.", "unfold abs.", "unfold opp."], "tactic": "rewrite AbsRing.ax2.", "exn": "The LHS of AbsRing.ax2 (AbsRing.abs _ _ (opp one)) does not match any subterm of the goal", "type": "no_match_term", "handled": true}, {"ctx": ["intros x.", "unfold abs.", "unfold opp.", "qsimpl use: AbsRing."], "tactic": "reflexivity.", "exn": "In environment sort : Type c : AbsRing.class_of sort T : Type x : sort sort0 : Type X0 : Type base : Ring.class_of sort0 abs0 : sort0 -> R ax1 : abs0 zero = 0 ax2 : abs0 (opp one) = 1 ax3 : forall x y : sort0, abs0 (plus x y) <= abs0 x + abs0 y ax4 : forall x y : sort0, abs0 (mult x y) <= abs0 x * abs0 y ax5 : forall x : sort0, abs0 x = 0 -> x = zero Unable to unify \"AbsRing.abs (Ring.Pack sort c sort) c x\" with \"AbsRing.abs (Ring.Pack sort c sort) c (AbelianGroup.opp sort c x)\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros x. unfold abs. unfold opp. rewrite AbsRing.ax2. reflexivity.", "succ": false}]