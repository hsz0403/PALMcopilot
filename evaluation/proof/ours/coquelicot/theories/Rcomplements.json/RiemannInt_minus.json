[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros f g a b pr_f pr_g pr.", "unfold RiemannInt."], "tactic": "rewrite RiemannInt_P26.", "exn": "The LHS of RiemannInt_P26 (RiemannInt _ + RiemannInt _) does not match any subterm of the goal", "type": "no_match_term", "handled": true}, {"ctx": ["intros f g a b pr_f pr_g pr.", "unfold RiemannInt.", "qsimpl time: 2 use: RiemannInt_P26."], "tactic": "reflexivity.", "exn": "In environment H : forall (f : R -> R) (a b c : R) (pr1 : Riemann_integrable f a b) (pr2 : Riemann_integrable f b c) (pr3 : Riemann_integrable f a c), RiemannInt pr1 + RiemannInt pr2 = RiemannInt pr3 f, g : R -> R a, b : R pr_f : Riemann_integrable f a b pr_g : Riemann_integrable g a b pr : Riemann_integrable (fun x : R => f x - g x) a b x : R u : Un_cv (fun N : nat => RiemannInt_SF (phi_sequence RinvN pr N)) x Heqs : RiemannInt_exists pr RinvN RinvN_cv = exist (fun l : R => Un_cv (fun N : nat => RiemannInt_SF (phi_sequence RinvN pr N)) l) x u x0 : R u0 : Un_cv (fun N : nat => RiemannInt_SF (phi_sequence RinvN pr_f N)) x0 Heqs0 : RiemannInt_exists pr_f RinvN RinvN_cv = exist (fun l : R => Un_cv (fun N : nat => RiemannInt_SF (phi_sequence RinvN pr_f N)) l) x0 u0 x1 : R u1 : Un_cv (fun N : nat => RiemannInt_SF (phi_sequence RinvN pr_g N)) x1 Heqs1 : RiemannInt_exists pr_g RinvN RinvN_cv = exist (fun l : R => Un_cv (fun N : nat => RiemannInt_SF (phi_sequence RinvN pr_g N)) l) x1 u1 Unable to unify \"x0 - x1\" with \"x\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros f g a b pr_f pr_g pr. unfold RiemannInt. rewrite RiemannInt_P26. reflexivity.", "succ": false}]