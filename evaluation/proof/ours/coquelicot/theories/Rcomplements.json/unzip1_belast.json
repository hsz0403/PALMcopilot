[{"history": {"proof": "unfold belast. unfold unzip1. qsimpl time: 2 use: zip_unzip. hauto use: belast_map unfold: unzip1, fst, map, seq.belast.", "repairs": ["", "", "no_match_term", "hammer"], "exceptions": [{"ctx": ["unfold belast.", "unfold unzip1."], "tactic": "rewrite zip_unzip.", "exn": "The LHS of zip_unzip (zip (unzip1 _) (unzip2 _)) does not match any subterm of the goal", "type": "no_match_term", "handled": true}, {"ctx": ["unfold belast.", "unfold unzip1.", "qsimpl time: 2 use: zip_unzip."], "tactic": "reflexivity.", "exn": "In environment H : forall (S T : Type) (s : seq (S * T)), zip (unzip1 s) (unzip2 s) = s S : Type T : Type p0 : S p1 : T s : seq (S * T) Unable to unify \"seq.belast p0 [seq fst i | i <- s]\" with \"[seq fst i | i <- seq.belast (p0, p1) s]\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "unfold belast. unfold unzip1. simpl. unfold belast. rewrite zip_unzip. reflexivity.", "succ": true}]