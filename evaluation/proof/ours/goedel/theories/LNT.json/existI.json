[{"history": {"proof": "intros T f v t H. qsimpl use: existI. qsimpl use: subWithEquals,existI. hauto l: on depth: 3.", "repairs": ["", "no_instance_var", "wrong_type", "hammer"], "exceptions": [{"ctx": ["intros T f v t H."], "tactic": "apply existI.", "exn": "Unable to find an instance for the variable t.", "type": "no_instance_var", "handled": true}, {"ctx": ["intros T f v t H.", "qsimpl use: existI."], "tactic": "apply (subWithEquals _ _ v t _ H).", "exn": "In environment H0 : forall (L : Language) (T : fol.System L) (f : fol.Formula L) (v : nat) (t : fol.Term L), folProof.SysPrf L T (substituteFormula L f v t) -> folProof.SysPrf L T (fol.existH L v f) T : System f : Formula v : nat t : Term x : fol.Formulas LNT x0 : Prf LNT x (substituteFormula LNT f v t) H : forall g : fol.Formula LNT, In g x -> mem (fol.Formula LNT) T g The term \"H\" has type \"forall g : fol.Formula LNT, In g x -> mem (fol.Formula LNT) T g\" while it is expected to have type \"fol.System LNT\" (cannot unify \"In g x -> mem (fol.Formula LNT) T g\" and \"Prop\").", "type": "wrong_type", "handled": true}]}, "chat": [], "original": "intros T f v t H. apply existI. apply (subWithEquals _ _ v t _ H).", "succ": true}]