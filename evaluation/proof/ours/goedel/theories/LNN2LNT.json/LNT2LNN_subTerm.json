[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros t v s.", "unfold substituteTerm.", "destruct t.", "-", "simpl."], "tactic": "reflexivity.", "exn": "In environment n, v : nat s : Term Unable to unify \"if Nat.eq_dec v n then LNT2LNN_term s else fol.var LNN n\" with \"LNT2LNN_term (if Nat.eq_dec v n then s else fol.var LNT n)\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros t v s.", "unfold substituteTerm.", "destruct t.", "-", "simpl."], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros t v s.", "unfold substituteTerm.", "destruct t.", "-", "simpl.", "shelve.", "-", "simpl."], "tactic": "rewrite LNT2LNN_term.", "exn": "Cannot find a relation to rewrite.", "type": "no_rewrite_relation", "handled": true}, {"ctx": ["intros t v s.", "unfold substituteTerm.", "destruct t.", "-", "simpl.", "shelve.", "-", "simpl.", "qsimpl use: LNT2LNN_term."], "tactic": "reflexivity.", "exn": "In environment t0 : Term -> fol.Term LNN f : LNTFunction t : fol.Terms LNT (LNTFunctionArity f) v : nat s : Term Unable to unify \"apply LNN f ((fix substituteTerm (s : fol.Term LNN) (x : nat) (t : fol.Term LNN) {struct s} : fol.Term LNN := match s with | @fol.var _ v => if Nat.eq_dec x v then t else fol.var LNN v | @apply _ f ts => apply LNN f (substituteTerms (LNTFunctionArity f) ts x t) end with substituteTerms (n : nat) (ss : fol.Terms LNN n) (x : nat) (t : fol.Term LNN) {struct ss} : fol.Terms LNN n := match ss in (fol.Terms _ n0) return (fol.Terms LNN n0) with | @Tnil _ => Tnil LNN | @Tcons _ m s ts => Tcons LNN m (substituteTerm s x t) (substituteTerms m ts x t) end for substituteTerms) (LNTFunctionArity f) (LNT2LNN_terms (LNTFunctionArity f) t) v (t0 s))\" with \"apply LNN f (LNT2LNN_terms (LNTFunctionArity f) ((fix substituteTerm (s : fol.Term LNT) (x : nat) (t : fol.Term LNT) {struct s} : fol.Term LNT := match s with | @fol.var _ v => if Nat.eq_dec x v then t else fol.var LNT v | @apply _ f ts => apply LNT f (substituteTerms (LNTFunctionArity f) ts x t) end with substituteTerms (n : nat) (ss : fol.Terms LNT n) (x : nat) (t : fol.Term LNT) {struct ss} : fol.Terms LNT n := match ss in (fol.Terms _ n0) return (fol.Terms LNT n0) with | @Tnil _ => Tnil LNT | @Tcons _ m s ts => Tcons LNT m (substituteTerm s x t) (substituteTerms m ts x t) end for substituteTerms) (LNTFunctionArity f) t v s))\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros t v s. unfold substituteTerm. destruct t. - simpl. reflexivity. - simpl. rewrite LNT2LNN_term. reflexivity.", "succ": false}]