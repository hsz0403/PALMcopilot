[{"history": {"proof": "intros t. qsimpl use: Term_Terms_ind. qsimpl use: LNT2LNN_subTerm,Term_Terms_ind. scongruence use: LNT2LNT_term, LNN2LNT_freeVarTerm.", "repairs": ["", "no_instance_var", "no_subterm", "hammer"], "exceptions": [{"ctx": ["intros t."], "tactic": "induction t using Term_Terms_ind.", "exn": "Unable to find an instance for the variable P.", "type": "no_instance_var", "handled": true}, {"ctx": ["intros t.", "qsimpl use: Term_Terms_ind."], "tactic": "reflexivity.", "exn": "In environment H : forall (L : Language) (P : fol.Term L -> Prop) (P0 : forall n : nat, fol.Terms L n -> Prop), (forall n : nat, P (fol.var L n)) -> (forall (f0 : Functions L) (t : fol.Terms L (arity L (inr f0))), P0 (arity L (inr f0)) t -> P (apply L f0 t)) -> P0 0 (Tnil L) -> (forall (n : nat) (t : fol.Term L), P t -> forall t0 : fol.Terms L n, P0 n t0 -> P0 (S n) (Tcons L n t t0)) -> forall t : fol.Term L, P t t : Term Unable to unify \"freeVarTerm LNT t\" with \"freeVarTerm LNN (LNT2LNN_term t)\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros t.", "qsimpl use: Term_Terms_ind."], "tactic": "rewrite LNT2LNN_subTerm, IHt.", "exn": "Found no subterm matching \"LNT2LNN_term (substituteTerm LNT ?M1633 ?M1634 ?M1635)\" in the current goal.", "type": "no_subterm", "handled": true}, {"ctx": ["intros t.", "qsimpl use: Term_Terms_ind.", "qsimpl use: LNT2LNN_subTerm,Term_Terms_ind."], "tactic": "reflexivity.", "exn": "In environment H1 : forall (L : Language) (P : fol.Term L -> Prop) (P0 : forall n : nat, fol.Terms L n -> Prop), (forall n : nat, P (fol.var L n)) -> (forall (f0 : Functions L) (t : fol.Terms L (arity L (inr f0))), P0 (arity L (inr f0)) t -> P (apply L f0 t)) -> P0 0 (Tnil L) -> (forall (n : nat) (t : fol.Term L), P t -> forall t0 : fol.Terms L n, P0 n t0 -> P0 (S n) (Tcons L n t t0)) -> forall t : fol.Term L, P t H0 : forall (t : Term) (v : nat) (s : Term), LNT2LNN_term (substituteTerm LNT t v s) = substituteTerm LNN (LNT2LNN_term t) v (LNT2LNN_term s) t : Term Unable to unify \"freeVarTerm LNT t\" with \"freeVarTerm LNN (LNT2LNN_term t)\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros t. induction t using Term_Terms_ind. - simpl. reflexivity. - simpl. rewrite LNT2LNN_subTerm, IHt. reflexivity.", "succ": true}]