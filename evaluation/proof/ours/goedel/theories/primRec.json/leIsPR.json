[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["unfold isPRrel."], "tactic": "apply andRelPR.", "exn": "Unable to unify \"{p : PrimRec ?M1412 | extEqual ?M1412 (evalPrimRec ?M1412 p) (charFunction ?M1412 (andRel ?M1412 ?M1413 ?M1414))}\" with \"{p : PrimRec 2 | extEqual 2 (evalPrimRec 2 p) (charFunction 2 leBool)}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["unfold isPRrel.", "qsimpl use: andRelPR."], "tactic": "apply ltIsPR.", "exn": "In environment H : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') Unable to unify \"isPRrel 2 ltBool\" with \"isPR 2 (fun a a0 : nat => if leBool a a0 then 1 else 0)\".", "type": "cannot_unify", "handled": true}, {"ctx": ["unfold isPRrel.", "qsimpl use: andRelPR.", "qsimpl use: andRelPR,ltIsPR."], "tactic": "apply ltIsPR.", "exn": "In environment H0, H : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R') x : PrimRec 2 H2 : forall c c0 : nat, evalPrimRec 2 x c c0 = (if ltBool c c0 then 1 else 0) Unable to unify \"isPRrel 2 ltBool\" with \"isPR 2 (fun a a0 : nat => if leBool a a0 then 1 else 0)\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "unfold isPRrel. apply andRelPR. - apply ltIsPR. - apply ltIsPR.", "succ": false}]