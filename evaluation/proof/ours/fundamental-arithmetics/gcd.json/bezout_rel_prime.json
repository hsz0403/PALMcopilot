[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros a b.", "split.", "-", "intros H.", "specialize bezout with 1 a b.", "intros Hbezout.", "destruct Hbezout as [u [v Hgcd]]."], "tactic": "exists u, v.", "exn": "The reference u was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros a b.", "split.", "-", "intros H.", "specialize bezout with 1 a b.", "intros Hbezout.", "destruct Hbezout as [u [v Hgcd]]."], "tactic": "apply Hgcd.", "exn": "The reference Hgcd was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros a b.", "split.", "-", "intros H.", "specialize bezout with 1 a b.", "intros Hbezout.", "destruct Hbezout as [u [v Hgcd]].", "apply rel_prime_sym."], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros a b.", "split.", "-", "intros H.", "specialize bezout with 1 a b.", "intros Hbezout.", "destruct Hbezout as [u [v Hgcd]].", "apply rel_prime_sym.", "+", "shelve.", "+", "shelve.", "-", "intros [u [v H']].", "destruct H' as [H' | H'].", "+"], "tactic": "left.", "exn": "Not an inductive goal with 2 constructors.", "type": "not_inductive_goal", "handled": true}, {"ctx": ["intros a b.", "split.", "-", "intros H.", "specialize bezout with 1 a b.", "intros Hbezout.", "destruct Hbezout as [u [v Hgcd]].", "apply rel_prime_sym.", "+", "shelve.", "+", "shelve.", "-", "intros [u [v H']].", "destruct H' as [H' | H'].", "+"], "tactic": "+", "exn": "Wrong bullet +: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros a b.", "split.", "-", "intros H.", "specialize bezout with 1 a b.", "intros Hbezout.", "destruct Hbezout as [u [v Hgcd]].", "apply rel_prime_sym.", "+", "shelve.", "+", "shelve.", "-", "intros [u [v H']].", "destruct H' as [H' | H'].", "+", "shelve.", "+"], "tactic": "right.", "exn": "Not an inductive goal with 2 constructors.", "type": "not_inductive_goal", "handled": true}]}, "chat": [], "original": "intros a b. split. - intros H. specialize bezout with 1 a b. intros Hbezout. destruct Hbezout as [u [v Hgcd]]. exists u, v. apply Hgcd. - intros [u [v H']]. destruct H' as [H' | H']. + left. exists u, v. apply H'. + right. exists u, v. apply H'.", "succ": false}]