[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros net net' h src t es b st' l e t' H H' Hcomp.", "unfold handleAppendEntriesReply in H."], "tactic": "destruct (current_term (snd (nwState net h)) =? t) eqn:Heq1; [|inversion H].", "exn": "The reference current_term was not found in the current environment.", "type": "ref_not_found", "handled": true}]}, "chat": [], "original": "intros net net' h src t es b st' l e t' H H' Hcomp. unfold handleAppendEntriesReply in H. destruct (current_term (snd (nwState net h)) =? t) eqn:Heq1; [|inversion H]. destruct b eqn:Heq2; [|inversion H]. injection H as H1 H2 H3. subst. clear H. intros h'. specialize (H' h'). unfold update in H'. simpl in H'. rewrite H'. unfold update, update_elections_data_timeout. simpl. exists h. exists src. split; [|split; [|split; [|split]]]. - exists t, es. split; reflexivity. - apply commit_invariant_client_request. auto. auto. apply ctgt0. - apply lifted_committed_ext with (st := snd (nwState net h)). + intros. reflexivity. + eapply committed_lifted_committed. apply Hcomp.", "succ": false}]