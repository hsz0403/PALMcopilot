[{"history": {"proof": "qsimpl time: 1 use: update_elections_data_appendEntries_preserves_allEntries. qsimpl time: 1 use: update_elections_data_appendEntries_preserves_allEntries.", "repairs": ["cannot_apply_in", "cannot_unify"], "exceptions": [{"ctx": ["intros st h t n pli plt es ci x H."], "tactic": "apply update_elections_data_appendEntries_preserves_allEntries in H.", "exn": "Unable to apply lemma of type \"forall (net : network) (h0 : Net.name) (t0 : term) (n0 : name) (pli0 : logIndex) (plt0 : term) (es0 : list entry) (ci0 : logIndex) (x0 : term * entry), In x0 (allEntries (fst (nwState net h0))) -> In x0 (allEntries (update_elections_data_appendEntries h0 (nwState net h0) t0 n0 pli0 plt0 es0 ci0))\" on hypothesis of type \"In x (allEntries (fst st))\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["intros st h t n pli plt es ci x H.", "qsimpl time: 1 use: update_elections_data_appendEntries_preserves_allEntries."], "tactic": "apply H.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params H0 : forall (net : network) (h : name) (t : term) (n : name) (pli : logIndex) (plt : term) (es : list entry) (ci : logIndex) (x : term * entry), In x (allEntries (fst (nwState net h))) -> In x (allEntries (update_elections_data_appendEntries h (nwState net h) t n pli plt es ci)) st0 : electionsData st1 : raft_data h : name t : term n : name pli : logIndex plt : term es : list entry ci : logIndex x0 : term x1 : entry H : In (x0, x1) (allEntries st0) msg_refined_raft_net_invariant : forall (P : network -> Prop) (net : network), msg_refined_raft_net_invariant_init P -> msg_refined_raft_net_invariant_client_request P -> msg_refined_raft_net_invariant_timeout P -> msg_refined_raft_net_invariant_append_entries P -> msg_refined_raft_net_invariant_append_entries_reply P -> msg_refined_raft_net_invariant_request_vote P -> msg_refined_raft_net_invariant_request_vote_reply P -> msg_refined_raft_net_invariant_do_leader P -> msg_refined_raft_net_invariant_do_generic_server P -> msg_refined_raft_net_invariant_state_same_packet_subset P -> msg_refined_raft_net_invariant_reboot P -> msg_refined_raft_intermediate_reachable net -> P net msg_refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), msg_refined_raft_net_invariant_init P -> msg_refined_raft_net_invariant_client_request' P -> msg_refined_raft_net_invariant_timeout' P -> msg_refined_raft_net_invariant_append_entries' P -> msg_refined_raft_net_invariant_append_entries_reply' P -> msg_refined_raft_net_invariant_request_vote' P -> msg_refined_raft_net_invariant_request_vote_reply' P -> msg_refined_raft_net_invariant_do_leader' P -> msg_refined_raft_net_invariant_do_generic_server' P -> msg_refined_raft_net_invariant_state_same_packet_subset' P -> msg_refined_raft_net_invariant_reboot' P -> msg_refined_raft_intermediate_reachable net -> P net msg_lift_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P net) -> forall net : network, msg_refined_raft_intermediate_reachable net -> P (mgv_deghost net) msg_lift_prop_all_the_way : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, msg_refined_raft_intermediate_reachable net -> P (deghost (mgv_deghost net)) msg_lower_prop : forall P : network -> Prop, (forall net : network, msg_refined_raft_intermediate_reachable net -> P (mgv_deghost net)) -> forall net : network, refined_raft_intermediate_reachable net -> P net msg_lower_prop_all_the_way : forall P : network -> Prop, (forall net : network, msg_refined_raft_intermediate_reachable net -> P (deghost (mgv_deghost net))) -> forall net : network, raft_intermediate_reachable net -> P net msg_deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => nwState h end = nwState net h msg_simulation_1 : forall net : network, msg_refined_raft_intermediate_reachable net -> refined_raft_intermediate_reachable (mgv_deghost net) one_leaderLog_per_term_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term net one_leaderLog_per_term_log_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term_log net one_leaderLog_per_term_host_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term_host net leaders_have_leaderLogs_strong_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaders_have_leaderLogs_strong net no_entries_past_current_term_invariant : forall net : network, raft_intermediate_reachable net -> no_entries_past_current_term net transitive_commit_invariant : forall net : network, refined_raft_intermediate_reachable net -> transitive_commit net ghost_log_entries_match_invariant : forall net : network, msg_refined_raft_intermediate_reachable net -> ghost_log_entries_match_host net log_properties_hold_on_ghost_logs_invariant : forall net : network, msg_refined_raft_intermediate_reachable net -> log_properties_hold_on_ghost_logs net ghost_log_correct_invariant : forall net : network, msg_refined_raft_intermediate_reachable net -> ghost_log_correct net terms_and_indices_from_one_log_invariant : forall net : network, raft_intermediate_reachable net -> terms_and_indices_from_one_log net terms_and_indices_from_one_log_nw_invariant : forall net : network, raft_intermediate_reachable net -> terms_and_indices_from_one_log_nw net leader_sublog_invariant_invariant : forall net : network, raft_intermediate_reachable net -> leader_sublog_invariant net leader_completeness_invariant : forall net : network, refined_raft_intermediate_reachable net -> leader_completeness net leaders_have_leaderLogs_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaders_have_leaderLogs net match_index_all_entries_invariant : forall net : network, refined_raft_intermediate_reachable net -> match_index_all_entries net lastApplied_le_commitIndex_invariant : forall net : network, raft_intermediate_reachable net -> lastApplied_le_commitIndex net current_term_gt_zero_invariant : forall net : network, raft_intermediate_reachable net -> current_term_gt_zero net prevLog_leader_sublog_invariant : forall net : network, raft_intermediate_reachable net -> prevLog_leader_sublog net entries_contiguous_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_contiguous_nw net entries_gt_0_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_gt_0_nw net entries_sorted_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_sorted_nw net entries_gt_0_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_gt_0 net entries_contiguous_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_contiguous net entries_sorted_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_sorted net entries_match_invariant : forall (net : network) (h h' : name), refined_raft_intermediate_reachable net -> entries_match (log (snd (nwState net h))) (log (snd (nwState net h'))) entries_match_nw_1_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_match_nw_1 net entries_match_nw_host_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_match_nw_host net allEntries_gt_0_invariant : forall (net : network) (h : name) (e : entry), refined_raft_intermediate_reachable net -> In e (map snd (allEntries (fst (nwState net h)))) -> eIndex e > 0 state_machine_safety'_invariant : forall net : network, refined_raft_intermediate_reachable net -> state_machine_safety' net log_matching_invariant : forall net : network, raft_intermediate_reachable net -> log_matching net handleAppendEntries_logs_sorted : forall (net : network) (p : packet) (t : term) (n : name) (pli : logIndex) (plt : term) (es : list entry) (ci : logIndex) (st' : raft_data) (m : msg), raft_intermediate_reachable net -> logs_sorted net -> handleAppendEntries (pDst p) (nwState net (pDst p)) t n pli plt es ci = (st', m) -> pBody p = AppendEntries t n pli plt es ci -> In p (nwPackets net) -> sorted (log st') handleClientRequest_logs_sorted : forall (h : name) (client : clientId) (id : nat) (c : input) (out : list raft_output) (st : raft_data) (l : list (name * msg)) (net : network), handleClientRequest h (nwState net h) client id c = (out, st, l) -> raft_intermediate_reachable net -> logs_sorted_host net -> sorted (log st) logs_sorted_invariant : forall net : network, raft_intermediate_reachable net -> logs_sorted net refined_raft_net_invariant : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (deghost net) Unable to unify \"In (x0, x1) (allEntries st0)\" with \"In (x0, x1) (allEntries (update_elections_data_appendEntries h (st0, st1) t n pli plt es ci))\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros st h t n pli plt es ci x H. apply update_elections_data_appendEntries_preserves_allEntries in H. apply H.", "succ": false}]