[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": [], "tactic": "intros orig_base_params one_node_params raft_params rri rvmimti rvrtsi vfmutdi.", "exn": "orig_base_params is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params raft_params rri rvmimti rvrtsi vfmutdi.", "exn": "one_node_params is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params rri rvmimti rvrtsi vfmutdi.", "exn": "raft_params is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params' rri rvmimti rvrtsi vfmutdi.", "exn": "rri is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params' rri' rvmimti rvrtsi vfmutdi.", "exn": "rvmimti is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params' rri' rvmimti' rvrtsi vfmutdi.", "exn": "rvrtsi is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params' rri' rvmimti' rvrtsi' vfmutdi.", "exn": "vfmutdi is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros orig_base_params' one_node_params' raft_params' rri' rvmimti' rvrtsi' vfmutdi'.", "unfold refined_raft_net_invariant_reboot, requestVoteReply_moreUpToDate.", "intros net t h h' p H1 H2 H3 H4 H5 H6."], "tactic": ["destruct H1 as [H10 H11].", ""], "exn": "Expects a disjunctive pattern with 2 branches.", "type": "num_branch", "handled": false}]}, "chat": [], "original": "intros orig_base_params one_node_params raft_params rri rvmimti rvrtsi vfmutdi. unfold refined_raft_net_invariant_reboot, requestVoteReply_moreUpToDate. intros net t h h' p H1 H2 H3 H4 H5 H6. destruct H1 as [H10 H11]. destruct H2 as [H20 H21]. destruct H3 as [H30 H31]. unfold requestVote_reply, lastTerm, hd. exists (maxTerm (log (snd (nwState net h))), maxIndex (log (snd (nwState net h)))). split. - apply moreUpToDate_state_same_packet_subset with net. + apply H10. + intros h0. reflexivity. + intros p0 Hin. rewrite H6 in Hin. simpl in Hin. destruct (name_eq_dec h' h0); [inversion Hin|]. right. apply H4. auto. - apply H11.", "succ": false}]