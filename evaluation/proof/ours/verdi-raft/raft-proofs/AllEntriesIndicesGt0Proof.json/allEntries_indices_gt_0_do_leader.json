[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": [], "tactic": "unfold refined_raft_net_invariant_do_leader; intros orig_base_params one_node_params raft_params rri taifoli net st' ps' gd d h os d' ms doLeader_eq P H_inv_init H_inv_client_request H_inv_timeout H_inv_append_entries H_inv_append_entries_reply H_inv_request_vote H_inv_request_vote_reply H_inv_do_leader H_inv_do_generic_server H_inv_state_same_packet_subset H_inv_reboot H_intermediate_reachable h_eq st'_eq ps'_eq; apply H_inv_do_leader; auto.", "exn": "orig_base_params is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "unfold refined_raft_net_invariant_do_leader; intros orig_base_params' one_node_params raft_params rri taifoli net st' ps' gd d h os d' ms doLeader_eq P H_inv_init H_inv_client_request H_inv_timeout H_inv_append_entries H_inv_append_entries_reply H_inv_request_vote H_inv_request_vote_reply H_inv_do_leader H_inv_do_generic_server H_inv_state_same_packet_subset H_inv_reboot H_intermediate_reachable h_eq st'_eq ps'_eq; apply H_inv_do_leader; auto.", "exn": "one_node_params is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "unfold refined_raft_net_invariant_do_leader; intros orig_base_params' one_node_params' raft_params rri taifoli net st' ps' gd d h os d' ms doLeader_eq P H_inv_init H_inv_client_request H_inv_timeout H_inv_append_entries H_inv_append_entries_reply H_inv_request_vote H_inv_request_vote_reply H_inv_do_leader H_inv_do_generic_server H_inv_state_same_packet_subset H_inv_reboot H_intermediate_reachable h_eq st'_eq ps'_eq; apply H_inv_do_leader; auto.", "exn": "raft_params is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "unfold refined_raft_net_invariant_do_leader; intros orig_base_params' one_node_params' raft_params' rri taifoli net st' ps' gd d h os d' ms doLeader_eq P H_inv_init H_inv_client_request H_inv_timeout H_inv_append_entries H_inv_append_entries_reply H_inv_request_vote H_inv_request_vote_reply H_inv_do_leader H_inv_do_generic_server H_inv_state_same_packet_subset H_inv_reboot H_intermediate_reachable h_eq st'_eq ps'_eq; apply H_inv_do_leader; auto.", "exn": "rri is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "unfold refined_raft_net_invariant_do_leader; intros orig_base_params' one_node_params' raft_params' rri' taifoli net st' ps' gd d h os d' ms doLeader_eq P H_inv_init H_inv_client_request H_inv_timeout H_inv_append_entries H_inv_append_entries_reply H_inv_request_vote H_inv_request_vote_reply H_inv_do_leader H_inv_do_generic_server H_inv_state_same_packet_subset H_inv_reboot H_intermediate_reachable h_eq st'_eq ps'_eq; apply H_inv_do_leader; auto.", "exn": "taifoli is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "unfold refined_raft_net_invariant_do_leader; intros orig_base_params' one_node_params' raft_params' rri' taifoli' net st' ps' gd d h os d' ms doLeader_eq P H_inv_init H_inv_client_request H_inv_timeout H_inv_append_entries H_inv_append_entries_reply H_inv_request_vote H_inv_request_vote_reply H_inv_do_leader H_inv_do_generic_server H_inv_state_same_packet_subset H_inv_reboot H_intermediate_reachable h_eq st'_eq ps'_eq; apply H_inv_do_leader; auto.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}]}, "chat": [], "original": "unfold refined_raft_net_invariant_do_leader; intros orig_base_params one_node_params raft_params rri taifoli net st' ps' gd d h os d' ms doLeader_eq P H_inv_init H_inv_client_request H_inv_timeout H_inv_append_entries H_inv_append_entries_reply H_inv_request_vote H_inv_request_vote_reply H_inv_do_leader H_inv_do_generic_server H_inv_state_same_packet_subset H_inv_reboot H_intermediate_reachable h_eq st'_eq ps'_eq; apply H_inv_do_leader; auto.", "succ": false}]