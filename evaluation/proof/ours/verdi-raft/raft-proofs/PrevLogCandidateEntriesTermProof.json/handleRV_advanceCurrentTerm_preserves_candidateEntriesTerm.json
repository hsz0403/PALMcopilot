[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": [], "tactic": "intros net h h' t lli llt t' CEt u.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros.", "unfold candidateEntriesTerm in *.", "unfold update."], "tactic": "rewrite <- u.", "exn": "The reference u was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros.", "unfold candidateEntriesTerm in *.", "unfold update."], "tactic": "clear u.", "exn": "No such hypothesis: u", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "unfold candidateEntriesTerm in *.", "unfold update.", "qsimpl.", "destruct (currentTerm (snd (nwState net h))) as [curr_term|]; simpl.", "-", "destruct (currentTerm (advanceCurrentTerm (snd (nwState net h)) t)) as [curr_term'|]; simpl.", "+", "destruct (votedFor (advanceCurrentTerm (snd (nwState net h)) t)) as [votedFor_cid|]; simpl.", "*", "destruct (votedFor (snd (nwState net h))) as [curr_votedFor|]; simpl."], "tactic": "destruct (currentTerm (advanceCurrentTerm (snd (nwState net h)) t) =? curr_term') eqn:Heq2.", "exn": "The reference curr_term' was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros.", "unfold candidateEntriesTerm in *.", "unfold update.", "qsimpl.", "destruct (currentTerm (snd (nwState net h))) as [curr_term|]; simpl.", "-", "destruct (currentTerm (advanceCurrentTerm (snd (nwState net h)) t)) as [curr_term'|]; simpl.", "+", "destruct (votedFor (advanceCurrentTerm (snd (nwState net h)) t)) as [votedFor_cid|]; simpl.", "*", "destruct (votedFor (snd (nwState net h))) as [curr_votedFor|]; simpl.", "destruct (currentTerm (advanceCurrentTerm (snd (nwState net h)) t) =? llt) eqn:Heq2."], "tactic": "-", "exn": "Wrong bullet -: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros.", "unfold candidateEntriesTerm in *.", "unfold update.", "qsimpl.", "destruct (currentTerm (snd (nwState net h))) as [curr_term|]; simpl.", "-", "destruct (currentTerm (advanceCurrentTerm (snd (nwState net h)) t)) as [curr_term'|]; simpl.", "+", "destruct (votedFor (advanceCurrentTerm (snd (nwState net h)) t)) as [votedFor_cid|]; simpl.", "*", "destruct (votedFor (snd (nwState net h))) as [curr_votedFor|]; simpl.", "destruct (currentTerm (advanceCurrentTerm (snd (nwState net h)) t) =? llt) eqn:Heq2.", "--", "shelve.", "--", "shelve.", "--", "shelve."], "tactic": "-", "exn": "Wrong bullet -: Expecting *.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros.", "unfold candidateEntriesTerm in *.", "unfold update.", "qsimpl.", "destruct (currentTerm (snd (nwState net h))) as [curr_term|]; simpl.", "-", "destruct (currentTerm (advanceCurrentTerm (snd (nwState net h)) t)) as [curr_term'|]; simpl.", "+", "destruct (votedFor (advanceCurrentTerm (snd (nwState net h)) t)) as [votedFor_cid|]; simpl.", "*", "destruct (votedFor (snd (nwState net h))) as [curr_votedFor|]; simpl.", "destruct (currentTerm (advanceCurrentTerm (snd (nwState net h)) t) =? llt) eqn:Heq2.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*"], "tactic": "destruct (name_eq_dec curr_votedFor votedFor_cid) as [Heq3 | Hneq3]; simpl.", "exn": "The reference votedFor_cid was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros.", "unfold candidateEntriesTerm in *.", "unfold update.", "qsimpl.", "destruct (currentTerm (snd (nwState net h))) as [curr_term|]; simpl.", "-", "destruct (currentTerm (advanceCurrentTerm (snd (nwState net h)) t)) as [curr_term'|]; simpl.", "+", "destruct (votedFor (advanceCurrentTerm (snd (nwState net h)) t)) as [votedFor_cid|]; simpl.", "*", "destruct (votedFor (snd (nwState net h))) as [curr_votedFor|]; simpl.", "destruct (currentTerm (advanceCurrentTerm (snd (nwState net h)) t) =? llt) eqn:Heq2.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*"], "tactic": "+", "exn": "Wrong bullet +: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros.", "unfold candidateEntriesTerm in *.", "unfold update.", "qsimpl.", "destruct (currentTerm (snd (nwState net h))) as [curr_term|]; simpl.", "-", "destruct (currentTerm (advanceCurrentTerm (snd (nwState net h)) t)) as [curr_term'|]; simpl.", "+", "destruct (votedFor (advanceCurrentTerm (snd (nwState net h)) t)) as [votedFor_cid|]; simpl.", "*", "destruct (votedFor (snd (nwState net h))) as [curr_votedFor|]; simpl.", "destruct (currentTerm (advanceCurrentTerm (snd (nwState net h)) t) =? llt) eqn:Heq2.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "+"], "tactic": "rewrite Heq3.", "exn": "The reference Heq3 was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros.", "unfold candidateEntriesTerm in *.", "unfold update.", "qsimpl.", "destruct (currentTerm (snd (nwState net h))) as [curr_term|]; simpl.", "-", "destruct (currentTerm (advanceCurrentTerm (snd (nwState net h)) t)) as [curr_term'|]; simpl.", "+", "destruct (votedFor (advanceCurrentTerm (snd (nwState net h)) t)) as [votedFor_cid|]; simpl.", "*", "destruct (votedFor (snd (nwState net h))) as [curr_votedFor|]; simpl.", "destruct (currentTerm (advanceCurrentTerm (snd (nwState net h)) t) =? llt) eqn:Heq2.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "+"], "tactic": "+", "exn": "Wrong bullet +: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros.", "unfold candidateEntriesTerm in *.", "unfold update.", "qsimpl.", "destruct (currentTerm (snd (nwState net h))) as [curr_term|]; simpl.", "-", "destruct (currentTerm (advanceCurrentTerm (snd (nwState net h)) t)) as [curr_term'|]; simpl.", "+", "destruct (votedFor (advanceCurrentTerm (snd (nwState net h)) t)) as [votedFor_cid|]; simpl.", "*", "destruct (votedFor (snd (nwState net h))) as [curr_votedFor|]; simpl.", "destruct (currentTerm (advanceCurrentTerm (snd (nwState net h)) t) =? llt) eqn:Heq2.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "+", "shelve."], "tactic": "+", "exn": "Wrong bullet +: Expecting -.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros.", "unfold candidateEntriesTerm in *.", "unfold update.", "qsimpl.", "destruct (currentTerm (snd (nwState net h))) as [curr_term|]; simpl.", "-", "destruct (currentTerm (advanceCurrentTerm (snd (nwState net h)) t)) as [curr_term'|]; simpl.", "+", "destruct (votedFor (advanceCurrentTerm (snd (nwState net h)) t)) as [votedFor_cid|]; simpl.", "*", "destruct (votedFor (snd (nwState net h))) as [curr_votedFor|]; simpl.", "destruct (currentTerm (advanceCurrentTerm (snd (nwState net h)) t) =? llt) eqn:Heq2.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "+", "shelve.", "-"], "tactic": "destruct (type (snd (nwState net h)) =? Candidate) eqn:Heq4.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params net : network h, h' : name t, lli, llt : nat t' : term h0 : name H0 : wonElection (dedup name_eq_dec (cronies (fst (nwState net h0)) t')) = true H1 : currentTerm (snd (nwState net h0)) = t' -> type (snd (nwState net h0)) = Candidate -> False cronies_correct_invariant : forall net : network, refined_raft_intermediate_reachable net -> cronies_correct net cronies_term_invariant : forall net : network, refined_raft_intermediate_reachable net -> cronies_term net candidate_entries_invariant : forall net : network, refined_raft_intermediate_reachable net -> CandidateEntries net refined_raft_net_invariant : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (GhostSimulations.deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (GhostSimulations.deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (GhostSimulations.deghost net) t0 : nat The term \"type (snd (nwState net h))\" has type \"serverType\" while it is expected to have type \"nat\".", "type": "wrong_type", "handled": true}, {"ctx": ["intros.", "unfold candidateEntriesTerm in *.", "unfold update.", "qsimpl.", "destruct (currentTerm (snd (nwState net h))) as [curr_term|]; simpl.", "-", "destruct (currentTerm (advanceCurrentTerm (snd (nwState net h)) t)) as [curr_term'|]; simpl.", "+", "destruct (votedFor (advanceCurrentTerm (snd (nwState net h)) t)) as [votedFor_cid|]; simpl.", "*", "destruct (votedFor (snd (nwState net h))) as [curr_votedFor|]; simpl.", "destruct (currentTerm (advanceCurrentTerm (snd (nwState net h)) t) =? llt) eqn:Heq2.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "+", "shelve.", "-", "qsimpl use: snd,type,Candidate,nwState.", "*"], "tactic": "*", "exn": "Wrong bullet *: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros.", "unfold candidateEntriesTerm in *.", "unfold update.", "qsimpl.", "destruct (currentTerm (snd (nwState net h))) as [curr_term|]; simpl.", "-", "destruct (currentTerm (advanceCurrentTerm (snd (nwState net h)) t)) as [curr_term'|]; simpl.", "+", "destruct (votedFor (advanceCurrentTerm (snd (nwState net h)) t)) as [votedFor_cid|]; simpl.", "*", "destruct (votedFor (snd (nwState net h))) as [curr_votedFor|]; simpl.", "destruct (currentTerm (advanceCurrentTerm (snd (nwState net h)) t) =? llt) eqn:Heq2.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "+", "shelve.", "-", "qsimpl use: snd,type,Candidate,nwState.", "*", "shelve.", "*"], "tactic": "-", "exn": "Wrong bullet -: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros.", "unfold candidateEntriesTerm in *.", "unfold update.", "qsimpl.", "destruct (currentTerm (snd (nwState net h))) as [curr_term|]; simpl.", "-", "destruct (currentTerm (advanceCurrentTerm (snd (nwState net h)) t)) as [curr_term'|]; simpl.", "+", "destruct (votedFor (advanceCurrentTerm (snd (nwState net h)) t)) as [votedFor_cid|]; simpl.", "*", "destruct (votedFor (snd (nwState net h))) as [curr_votedFor|]; simpl.", "destruct (currentTerm (advanceCurrentTerm (snd (nwState net h)) t) =? llt) eqn:Heq2.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "+", "shelve.", "-", "qsimpl use: snd,type,Candidate,nwState.", "*", "shelve.", "*", "shelve."], "tactic": "-", "exn": "Wrong bullet -: Expecting *.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros.", "unfold candidateEntriesTerm in *.", "unfold update.", "qsimpl.", "destruct (currentTerm (snd (nwState net h))) as [curr_term|]; simpl.", "-", "destruct (currentTerm (advanceCurrentTerm (snd (nwState net h)) t)) as [curr_term'|]; simpl.", "+", "destruct (votedFor (advanceCurrentTerm (snd (nwState net h)) t)) as [votedFor_cid|]; simpl.", "*", "destruct (votedFor (snd (nwState net h))) as [curr_votedFor|]; simpl.", "destruct (currentTerm (advanceCurrentTerm (snd (nwState net h)) t) =? llt) eqn:Heq2.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "+", "shelve.", "-", "qsimpl use: snd,type,Candidate,nwState.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "*", "exn": "Wrong bullet *: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros.", "unfold candidateEntriesTerm in *.", "unfold update.", "qsimpl.", "destruct (currentTerm (snd (nwState net h))) as [curr_term|]; simpl.", "-", "destruct (currentTerm (advanceCurrentTerm (snd (nwState net h)) t)) as [curr_term'|]; simpl.", "+", "destruct (votedFor (advanceCurrentTerm (snd (nwState net h)) t)) as [votedFor_cid|]; simpl.", "*", "destruct (votedFor (snd (nwState net h))) as [curr_votedFor|]; simpl.", "destruct (currentTerm (advanceCurrentTerm (snd (nwState net h)) t) =? llt) eqn:Heq2.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "+", "shelve.", "-", "qsimpl use: snd,type,Candidate,nwState.", "*", "shelve.", "*", "shelve.", "*", "shelve."], "tactic": "*", "exn": "Wrong bullet *: No more subgoals.", "type": "no_more_subgoals", "handled": true}]}, "chat": [], "original": "intros net h h' t lli llt t' CEt u. unfold candidateEntriesTerm in *. unfold update. rewrite <- u. clear u. simpl. unfold handleRequestVote. simpl. destruct (currentTerm (snd (nwState net h))) as [curr_term|]; simpl. - destruct (currentTerm (advanceCurrentTerm (snd (nwState net h)) t)) as [curr_term'|]; simpl. + destruct (votedFor (advanceCurrentTerm (snd (nwState net h)) t)) as [votedFor_cid|]; simpl. * destruct (votedFor (snd (nwState net h))) as [curr_votedFor|]; simpl. { destruct (currentTerm (advanceCurrentTerm (snd (nwState net h)) t) =? curr_term') eqn:Heq2. - destruct (name_eq_dec curr_votedFor votedFor_cid) as [Heq3 | Hneq3]; simpl. + rewrite Heq3. auto. + destruct (type (snd (nwState net h)) =? Candidate) eqn:Heq4. * contradict Heq4. apply -> (candidateEntriesTerm_same (nwState net) (update name_eq_dec (nwState net) h (advanceCurrentTerm (snd (nwState net h)) t))); auto. * auto. - auto. } * auto. + auto. - auto.", "succ": false}]