[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["unfold refined_raft_net_invariant_do_generic_server."], "tactic": "intros orig_base_params one_node_params raft_params net st' ps' gd d os d' ms h HdoGenericServer HP Hreachable HeqState Hst'.", "exn": "orig_base_params is already used.", "type": "used_var", "handled": true}, {"ctx": ["unfold refined_raft_net_invariant_do_generic_server."], "tactic": "intros orig_base_params' one_node_params raft_params net st' ps' gd d os d' ms h HdoGenericServer HP Hreachable HeqState Hst'.", "exn": "one_node_params is already used.", "type": "used_var", "handled": true}, {"ctx": ["unfold refined_raft_net_invariant_do_generic_server."], "tactic": "intros orig_base_params' one_node_params' raft_params net st' ps' gd d os d' ms h HdoGenericServer HP Hreachable HeqState Hst'.", "exn": "raft_params is already used.", "type": "used_var", "handled": true}, {"ctx": ["unfold refined_raft_net_invariant_do_generic_server.", "intros orig_base_params' one_node_params' raft_params' net st' ps' gd d os d' ms h HdoGenericServer HP Hreachable HeqState Hst'."], "tactic": ["apply HdoGenericServer with (d:=d) (os:=os) (d':=d') (ms:=ms) (h:=h); auto.", ""], "exn": "Applied theorem does not have enough premises.", "type": "no_enough_premises", "handled": false}]}, "chat": [], "original": "unfold refined_raft_net_invariant_do_generic_server. intros orig_base_params one_node_params raft_params net st' ps' gd d os d' ms h HdoGenericServer HP Hreachable HeqState Hst'. apply HdoGenericServer with (d:=d) (os:=os) (d':=d') (ms:=ms) (h:=h); auto.", "succ": false}]