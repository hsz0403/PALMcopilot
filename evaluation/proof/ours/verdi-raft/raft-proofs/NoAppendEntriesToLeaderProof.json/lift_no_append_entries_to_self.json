[{"history": {"proof": "intros net H_refined. unfold no_append_entries_to_self. intros p t n pli plt es ci Hin Hpbody Heq. qsimpl. hauto l: on depth: 3.", "repairs": ["", "", "", "cannot_apply_in", "hammer"], "exceptions": [{"ctx": ["intros net H_refined.", "unfold no_append_entries_to_self.", "intros p t n pli plt es ci Hin Hpbody Heq."], "tactic": "apply H_refined in Hin.", "exn": "Unable to apply lemma of type \"refined_raft_intermediate_reachable net\" on hypothesis of type \"In p (nwPackets (deghost net))\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["intros net H_refined.", "unfold no_append_entries_to_self.", "intros p t n pli plt es ci Hin Hpbody Heq.", "qsimpl."], "tactic": "apply Hin; auto.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params net : network H_refined : refined_raft_intermediate_reachable net p : packet t : term n : name pli : logIndex plt : term es : list entry ci : logIndex Hin : In p (map (fun p : packet => {| pSrc := pSrc p; pDst := pDst p; pBody := pBody p |}) (nwPackets net)) Hpbody : pBody p = AppendEntries t n pli plt es ci Heq : pDst p = pSrc p leaders_have_leaderLogs_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaders_have_leaderLogs net append_entries_came_from_leaders_invariant : forall net : network, refined_raft_intermediate_reachable net -> append_entries_came_from_leaders net one_leaderLog_per_term_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term net one_leaderLog_per_term_log_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term_log net one_leaderLog_per_term_host_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term_host net no_append_entries_to_self_invariant : forall net : network, raft_intermediate_reachable net -> no_append_entries_to_self net refined_raft_net_invariant : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (deghost net) Unable to unify \"In p (map (fun p : packet => {| pSrc := pSrc p; pDst := pDst p; pBody := pBody p |}) (nwPackets net))\" with \"False\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros net H_refined. unfold no_append_entries_to_self. intros p t n pli plt es ci Hin Hpbody Heq. apply H_refined in Hin. apply Hin; auto.", "succ": true}]