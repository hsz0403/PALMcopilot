[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros st e l st' c i o i' o' Hcache Hid1 Hid2."], "tactic": "apply getLastId_ext in Hcache.", "exn": "Unable to apply lemma of type \"forall (st st' : RaftState.raft_data term name entry logIndex serverType data clientId output) (c : clientId), clientCache st' = clientCache st -> getLastId st' c = getLastId st c\" on hypothesis of type \"cacheApplyEntry st e = (l, st')\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["intros st e l st' c i o i' o' Hcache Hid1 Hid2.", "qsimpl use: getLastId_ext."], "tactic": "rewrite Hid1 in Hcache.", "exn": "Found no subterm matching \"getLastId st c\" in Hcache.", "type": "no_subterm", "handled": true}, {"ctx": ["intros st e l st' c i o i' o' Hcache Hid1 Hid2.", "qsimpl use: getLastId_ext.", "qsimpl use: getLastId_ext."], "tactic": "rewrite Hid2 in Hcache.", "exn": "Found no subterm matching \"getLastId st' c\" in Hcache.", "type": "no_subterm", "handled": true}, {"ctx": ["intros st e l st' c i o i' o' Hcache Hid1 Hid2.", "qsimpl use: getLastId_ext.", "qsimpl use: getLastId_ext.", "qsimpl use: getLastId_ext."], "tactic": "apply Hcache.", "exn": "In environment orig_base_params : BaseParams raft_params : RaftParams orig_base_params H : forall (st st' : RaftState.raft_data term name entry logIndex serverType data clientId output) (c : clientId), clientCache st' = clientCache st -> getLastId st' c = getLastId st c one_node_params : OneNodeParams orig_base_params client : clientId id : nat out : output st : RaftState.raft_data term name entry logIndex serverType data clientId output e : entry l : list output st' : RaftState.raft_data term name entry logIndex serverType data clientId output c : clientId i : nat o : output i' : nat o' : output Hcache : cacheApplyEntry st e = (l, st') Hid1 : getLastId st c = Some (i, o) Hid2 : getLastId st' c = Some (i', o') log_matching_invariant : forall net : network, raft_intermediate_reachable net -> log_matching net lastApplied_commitIndex_match_invariant : forall net : network, raft_intermediate_reachable net -> lastApplied_commitIndex_match net commitIndex_lastApplied_match_invariant : forall net : network, raft_intermediate_reachable net -> commitIndex_lastApplied_match net lastApplied_lastApplied_match_invariant : forall net : network, raft_intermediate_reachable net -> lastApplied_lastApplied_match net handleAppendEntries_logs_sorted : forall (net : network) (p : packet) (t : term) (n : name) (pli : logIndex) (plt : term) (es : list entry) (ci : logIndex) (st' : raft_data) (m : msg), raft_intermediate_reachable net -> logs_sorted net -> handleAppendEntries (pDst p) (nwState net (pDst p)) t n pli plt es ci = (st', m) -> pBody p = AppendEntries t n pli plt es ci -> In p (nwPackets net) -> sorted (log st') handleClientRequest_logs_sorted : forall (h : name) (client : clientId) (id : nat) (c : input) (out : list raft_output) (st : raft_data) (l : list (name * msg)) (net : network), handleClientRequest h (nwState net h) client id c = (out, st, l) -> raft_intermediate_reachable net -> logs_sorted_host net -> sorted (log st) logs_sorted_invariant : forall net : network, raft_intermediate_reachable net -> logs_sorted net state_machine_correct_invariant : forall net : network, raft_intermediate_reachable net -> state_machine_correct net applied_entries_monotonic' : forall (failed : list name) (net : network) (failed' : list name) (net' : network) (os : list (name * (raft_input + list raft_output))), raft_intermediate_reachable net -> step_failure (failed, net) (failed', net') os -> exists es : list entry, applied_entries (nwState net') = applied_entries (nwState net) ++ es applied_entries_monotonic : forall (e : entry) (failed : list name) (net : network) (failed' : list name) (net' : network) (os : list (name * (raft_input + list raft_output))), raft_intermediate_reachable net -> step_failure (failed, net) (failed', net') os -> In e (applied_entries (nwState net)) -> In e (applied_entries (nwState net')) Unable to unify \"cacheApplyEntry st e = (l, st')\" with \"i <= i'\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros st e l st' c i o i' o' Hcache Hid1 Hid2. apply getLastId_ext in Hcache. rewrite Hid1 in Hcache. rewrite Hid2 in Hcache. apply Hcache.", "succ": false}]