[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": [], "tactic": "intros orig_base_params one_node_params raft_params rmri iliaei.", "exn": "orig_base_params is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params raft_params rmri iliaei.", "exn": "one_node_params is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params rmri iliaei.", "exn": "raft_params is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params' rmri iliaei.", "exn": "rmri is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params' rmri' iliaei.", "exn": "iliaei is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros orig_base_params' one_node_params' raft_params' rmri' iliaei'.", "unfold msg_refined_raft_net_invariant_reboot, ghost_log_allEntries."], "tactic": "intros net net' gd d h d' Hreboot Hnet Hreachable Heq H_upd H_packets.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}]}, "chat": [], "original": "intros orig_base_params one_node_params raft_params rmri iliaei. unfold msg_refined_raft_net_invariant_reboot, ghost_log_allEntries. intros net net' gd d h d' Hreboot Hnet Hreachable Heq H_upd H_packets. apply (msg_refined_raft_net_invariant_reboot' _ _ _ rmri). - intros P H_init H_client H_timeout H_append_entries H_a_e_reply H_request_vote H_r_v_reply H_do_leader H_do_generic H_state_same H_reboot' H_reachable. apply H_reboot' with (net := net) (d := d) (h := h) (d' := d'). + apply Hreboot. + apply Hnet. + apply Hreachable. + apply Heq. + apply H_upd. + apply H_packets. - apply Hnet. - apply iliaei. - apply rmri. - apply sim1. - apply commonThm. - apply liftProp. - apply refinedInvar'. - apply in_log_in_all_entries_invariant.", "succ": false}]