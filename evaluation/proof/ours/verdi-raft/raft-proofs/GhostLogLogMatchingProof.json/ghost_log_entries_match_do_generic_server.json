[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["unfold msg_refined_raft_net_invariant_do_generic_server."], "tactic": "intros orig_base_params one_node_params raft_params P net st' ps' gd d os d' ms h HdoGenericServer HP Hintermediate HnwState Hst' IH.", "exn": "orig_base_params is already used.", "type": "used_var", "handled": true}, {"ctx": ["unfold msg_refined_raft_net_invariant_do_generic_server."], "tactic": "intros orig_base_params' one_node_params raft_params P net st' ps' gd d os d' ms h HdoGenericServer HP Hintermediate HnwState Hst' IH.", "exn": "one_node_params is already used.", "type": "used_var", "handled": true}, {"ctx": ["unfold msg_refined_raft_net_invariant_do_generic_server."], "tactic": "intros orig_base_params' one_node_params' raft_params P net st' ps' gd d os d' ms h HdoGenericServer HP Hintermediate HnwState Hst' IH.", "exn": "raft_params is already used.", "type": "used_var", "handled": true}, {"ctx": ["unfold msg_refined_raft_net_invariant_do_generic_server."], "tactic": "intros orig_base_params' one_node_params' raft_params' P net st' ps' gd d os d' ms h HdoGenericServer HP Hintermediate HnwState Hst' IH.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["unfold msg_refined_raft_net_invariant_do_generic_server.", "intros."], "tactic": "specialize (HdoGenericServer h d) as Hdo.", "exn": "The reference HdoGenericServer was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["unfold msg_refined_raft_net_invariant_do_generic_server.", "intros.", "specialize (doGenericServer_matchIndex_preserved h d) as Hdo."], "tactic": "spec Hdo.", "exn": "The reference spec was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["unfold msg_refined_raft_net_invariant_do_generic_server.", "intros.", "specialize (doGenericServer_matchIndex_preserved h d) as Hdo."], "tactic": "apply HdoGenericServer.", "exn": "The reference HdoGenericServer was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["unfold msg_refined_raft_net_invariant_do_generic_server.", "intros.", "specialize (doGenericServer_matchIndex_preserved h d) as Hdo.", "apply rmri.", "-"], "tactic": "apply HP.", "exn": "The reference HP was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["unfold msg_refined_raft_net_invariant_do_generic_server.", "intros.", "specialize (doGenericServer_matchIndex_preserved h d) as Hdo.", "apply rmri.", "-"], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["unfold msg_refined_raft_net_invariant_do_generic_server.", "intros.", "specialize (doGenericServer_matchIndex_preserved h d) as Hdo.", "apply rmri.", "-", "shelve.", "-"], "tactic": "apply Hintermediate.", "exn": "The reference Hintermediate was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["unfold msg_refined_raft_net_invariant_do_generic_server.", "intros.", "specialize (doGenericServer_matchIndex_preserved h d) as Hdo.", "apply rmri.", "-", "shelve.", "-"], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["unfold msg_refined_raft_net_invariant_do_generic_server.", "intros.", "specialize (doGenericServer_matchIndex_preserved h d) as Hdo.", "apply rmri.", "-", "shelve.", "-", "shelve.", "-"], "tactic": "apply HnwState.", "exn": "The reference HnwState was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["unfold msg_refined_raft_net_invariant_do_generic_server.", "intros.", "specialize (doGenericServer_matchIndex_preserved h d) as Hdo.", "apply rmri.", "-", "shelve.", "-", "shelve.", "-"], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["unfold msg_refined_raft_net_invariant_do_generic_server.", "intros.", "specialize (doGenericServer_matchIndex_preserved h d) as Hdo.", "apply rmri.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-"], "tactic": "apply Hst'.", "exn": "The reference Hst' was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["unfold msg_refined_raft_net_invariant_do_generic_server.", "intros.", "specialize (doGenericServer_matchIndex_preserved h d) as Hdo.", "apply rmri.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-"], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["unfold msg_refined_raft_net_invariant_do_generic_server.", "intros.", "specialize (doGenericServer_matchIndex_preserved h d) as Hdo.", "apply rmri.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "intros p Hin."], "tactic": "apply Hst'.", "exn": "The reference Hst' was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["unfold msg_refined_raft_net_invariant_do_generic_server.", "intros.", "specialize (doGenericServer_matchIndex_preserved h d) as Hdo.", "apply rmri.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "intros p Hin."], "tactic": "right.", "exn": "Not an inductive goal with 2 constructors.", "type": "not_inductive_goal", "handled": true}, {"ctx": ["unfold msg_refined_raft_net_invariant_do_generic_server.", "intros.", "specialize (doGenericServer_matchIndex_preserved h d) as Hdo.", "apply rmri.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "intros p Hin.", "qsimpl."], "tactic": "apply Hin.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params net : network st' : name -> electionsData * raft_data ps' : list packet gd : electionsData d : raft_data os : list raft_output d' : raft_data ms : list (name * msg) h : name H : doGenericServer h d = (os, d', ms) H1 : msg_refined_raft_intermediate_reachable net H2 : nwState net h = (gd, d) H3 : forall h' : name, st' h' = update name_eq_dec (nwState net) h (gd, d') h' H4 : forall p : packet, In p ps' -> In p (nwPackets net) \\\\/ In p (map (fun m : name * (ghost_log * msg) => {| pSrc := h; pDst := fst m; pBody := snd m |}) (add_ghost_msg h (gd, d') ms)) Hdo : forall (os : list raft_output) (st' : raft_data) (ps : list (name * msg)), doGenericServer h d = (os, st', ps) -> matchIndex_preserved d st' p : list packet Hin : packet ys : list packet net0 : network st'0 : name -> electionsData * raft_data ps'0 : list packet d0 : raft_data m : list (name * msg) t : nat es : list entry res : bool H5 : handleAppendEntriesReply (pDst Hin) (snd (nwState net0 (pDst Hin))) (pSrc Hin) t es res = (d0, m) H7 : snd (pBody Hin) = AppendEntriesReply t es res H9 : msg_refined_raft_intermediate_reachable net0 H10 : nwPackets net0 = p ++ Hin :: ys H12 : forall p' : packet, In p' ps'0 -> In p' (p ++ ys) \\\\/ In p' (map (fun m : name * (ghost_log * msg) => {| pSrc := pDst Hin; pDst := fst m; pBody := snd m |}) (add_ghost_msg (pDst Hin) (fst (nwState net0 (pDst Hin)), d0) m)) H11 : forall h : name, st'0 h = update name_eq_dec (nwState net0) (pDst Hin) (fst (nwState net0 (pDst Hin)), d0) h H6 : ghost_log_entries_match_host net0 H13 : ghost_log_entries_match_nw net0 H8 : ghost_log_entries_match_host net H14 : ghost_log_entries_match_nw net ghost_log_allEntries_invariant : forall net : network, msg_refined_raft_intermediate_reachable net -> ghost_log_allEntries net allEntries_leader_sublog_invariant : forall net : network, refined_raft_intermediate_reachable net -> allEntries_leader_sublog net no_entries_past_current_term_invariant : forall net : network, raft_intermediate_reachable net -> no_entries_past_current_term net log_properties_hold_on_ghost_logs_invariant : forall net : network, msg_refined_raft_intermediate_reachable net -> log_properties_hold_on_ghost_logs net ghost_log_correct_invariant : forall net : network, msg_refined_raft_intermediate_reachable net -> ghost_log_correct net entries_contiguous_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_contiguous_nw net entries_gt_0_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_gt_0_nw net entries_sorted_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_sorted_nw net entries_gt_0_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_gt_0 net entries_contiguous_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_contiguous net entries_sorted_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_sorted net entries_match_invariant : forall (net : network) (h h' : name), refined_raft_intermediate_reachable net -> entries_match (log (snd (nwState net h))) (log (snd (nwState net h'))) entries_match_nw_1_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_match_nw_1 net entries_match_nw_host_invariant : forall net : network, refined_raft_intermediate_reachable net -> entries_match_nw_host net allEntries_gt_0_invariant : forall (net : network) (h : name) (e : entry), refined_raft_intermediate_reachable net -> In e (map snd (allEntries (fst (nwState net h)))) -> eIndex e > 0 msg_refined_raft_net_invariant : forall (P : network -> Prop) (net : network), msg_refined_raft_net_invariant_init P -> msg_refined_raft_net_invariant_client_request P -> msg_refined_raft_net_invariant_timeout P -> msg_refined_raft_net_invariant_append_entries P -> msg_refined_raft_net_invariant_append_entries_reply P -> msg_refined_raft_net_invariant_request_vote P -> msg_refined_raft_net_invariant_request_vote_reply P -> msg_refined_raft_net_invariant_do_leader P -> msg_refined_raft_net_invariant_do_generic_server P -> msg_refined_raft_net_invariant_state_same_packet_subset P -> msg_refined_raft_net_invariant_reboot P -> msg_refined_raft_intermediate_reachable net -> P net msg_refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), msg_refined_raft_net_invariant_init P -> msg_refined_raft_net_invariant_client_request' P -> msg_refined_raft_net_invariant_timeout' P -> msg_refined_raft_net_invariant_append_entries' P -> msg_refined_raft_net_invariant_append_entries_reply' P -> msg_refined_raft_net_invariant_request_vote' P -> msg_refined_raft_net_invariant_request_vote_reply' P -> msg_refined_raft_net_invariant_do_leader' P -> msg_refined_raft_net_invariant_do_generic_server' P -> msg_refined_raft_net_invariant_state_same_packet_subset' P -> msg_refined_raft_net_invariant_reboot' P -> msg_refined_raft_intermediate_reachable net -> P net msg_lift_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P net) -> forall net : network, msg_refined_raft_intermediate_reachable net -> P (mgv_deghost net) msg_lift_prop_all_the_way : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, msg_refined_raft_intermediate_reachable net -> P (deghost (mgv_deghost net)) msg_lower_prop : forall P : network -> Prop, (forall net : network, msg_refined_raft_intermediate_reachable net -> P (mgv_deghost net)) -> forall net : network, refined_raft_intermediate_reachable net -> P net msg_lower_prop_all_the_way : forall P : network -> Prop, (forall net : network, msg_refined_raft_intermediate_reachable net -> P (deghost (mgv_deghost net))) -> forall net : network, raft_intermediate_reachable net -> P net msg_deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => nwState h end = nwState net h msg_simulation_1 : forall net : network, msg_refined_raft_intermediate_reachable net -> refined_raft_intermediate_reachable (mgv_deghost net) Unable to unify \"packet\" with \"ghost_log_entries_match_host {| nwPackets := ps'0; nwState := st'0 |}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["unfold msg_refined_raft_net_invariant_do_generic_server.", "intros.", "specialize (doGenericServer_matchIndex_preserved h d) as Hdo.", "apply rmri.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "intros p Hin.", "qsimpl."], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["unfold msg_refined_raft_net_invariant_do_generic_server.", "intros.", "specialize (doGenericServer_matchIndex_preserved h d) as Hdo.", "apply rmri.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "shelve.", "-", "intros p Hin.", "qsimpl.", "+", "shelve.", "+", "shelve.", "-"], "tactic": "apply Hdo.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params rmri : raft_msg_refinement_interface rlmli : refined_log_matching_lemmas_interface glci : ghost_log_correct_interface lphogli : log_properties_hold_on_ghost_logs_interface tsi : term_sanity_interface aelsi : allEntries_leader_sublog_interface glaei : ghost_log_allEntries_interface net : network st' : name -> data ps' : list packet gd : ghost_data d : raft_data os : list raft_output d' : raft_data ms : list (name * msg) h : name H : doGenericServer h d = (os, d', ms) H0 : ghost_log_entries_match net H1 : msg_refined_raft_intermediate_reachable net H2 : nwState net h = (gd, d) H3 : forall h' : name, st' h' = update name_eq_dec (nwState net) h (gd, d') h' H4 : forall p : packet, In p ps' -> In p (nwPackets net) \\\\/ In p (send_packets h (add_ghost_msg h (gd, d') ms)) Hdo : forall (os : list raft_output) (st' : raft_data) (ps : list (name * msg)), doGenericServer h d = (os, st', ps) -> matchIndex_preserved d st' Unable to unify \"type ?M53905 = Leader\" with \"list packet\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "unfold msg_refined_raft_net_invariant_do_generic_server. intros orig_base_params one_node_params raft_params P net st' ps' gd d os d' ms h HdoGenericServer HP Hintermediate HnwState Hst' IH. specialize (HdoGenericServer h d) as Hdo. spec Hdo. - apply HdoGenericServer. - apply HP. - apply Hintermediate. - apply HnwState. - apply Hst'. - intros p Hin. apply Hst'. right. apply Hin. - apply Hdo.", "succ": false}]