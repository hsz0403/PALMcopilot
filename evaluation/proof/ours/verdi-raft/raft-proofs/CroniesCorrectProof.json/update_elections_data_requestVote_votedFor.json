[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros h h' t lli llt st st' m H1 H2.", "unfold handleRequestVote in H1.", "destruct (t <? currentTerm (snd st)) eqn:Heq1.", "-", "inversion H1."], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}]}, "chat": [], "original": "intros h h' t lli llt st st' m H1 H2. unfold handleRequestVote in H1. destruct (t <? currentTerm (snd st)) eqn:Heq1. - inversion H1. - destruct (advanceCurrentTerm (snd st) t) as [st'' m'] eqn:Heq2. destruct (leaderId st'') eqn:Heq3. + destruct (votedFor st'') eqn:Heq4. * inversion H1; subst; clear H1. right. split. ++ unfold votedFor. rewrite <- Heq4. reflexivity. ++ unfold currentTerm. rewrite <- Heq2. reflexivity. * left. left. apply update_elections_data_requestVote_true. apply Heq2. apply Heq3. + destruct (votedFor st'') eqn:Heq4. * inversion H1; subst; clear H1. right. split. ++ unfold votedFor. rewrite <- Heq4. reflexivity. ++ unfold currentTerm. rewrite <- Heq2. reflexivity. * left. left. apply update_elections_data_requestVote_true. apply Heq2. apply Heq3.", "succ": false}]