[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": [], "tactic": "intros orig_base_params one_node_params raft_params rri llvwli vci cci vvci lltsi h h' t ll ll' H_in H_in'.", "exn": "orig_base_params is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params raft_params rri llvwli vci cci vvci lltsi h h' t ll ll' H_in H_in'.", "exn": "one_node_params is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params rri llvwli vci cci vvci lltsi h h' t ll ll' H_in H_in'.", "exn": "raft_params is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params' rri llvwli vci cci vvci lltsi h h' t ll ll' H_in H_in'.", "exn": "rri is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params' rri' llvwli vci cci vvci lltsi h h' t ll ll' H_in H_in'.", "exn": "llvwli is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params' rri' llvwli' vci cci vvci lltsi h h' t ll ll' H_in H_in'.", "exn": "vci is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params' rri' llvwli' vci' cci vvci lltsi h h' t ll ll' H_in H_in'.", "exn": "cci is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params' rri' llvwli' vci' cci' vvci lltsi h h' t ll ll' H_in H_in'.", "exn": "vvci is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params' rri' llvwli' vci' cci' vvci' lltsi h h' t ll ll' H_in H_in'.", "exn": "lltsi is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros orig_base_params' one_node_params' raft_params' rri' llvwli' vci' cci' vvci' lltsi' h h' t ll ll' H_in H_in'.", "unfold one_leaderLog_per_term in *.", "intros.", "split.", "-"], "tactic": "eapply one_leaderLog_per_term_log in H_in; eauto.", "exn": "Unable to apply lemma of type \"network -> Prop\" on hypothesis of type \"cci' = update_elections_data_requestVote (pDst one_node_params') (pSrc one_node_params') h (pSrc one_node_params') t ll (nwState rri' (pDst one_node_params'))\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["intros orig_base_params' one_node_params' raft_params' rri' llvwli' vci' cci' vvci' lltsi' h h' t ll ll' H_in H_in'.", "unfold one_leaderLog_per_term in *.", "intros.", "split.", "-", "qsimpl use: one_leaderLog_per_term_log."], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros orig_base_params' one_node_params' raft_params' rri' llvwli' vci' cci' vvci' lltsi' h h' t ll ll' H_in H_in'.", "unfold one_leaderLog_per_term in *.", "intros.", "split.", "-", "qsimpl use: one_leaderLog_per_term_log.", "shelve.", "-"], "tactic": "eapply one_leaderLog_per_term_log in H_in'; eauto.", "exn": "Unable to apply lemma of type \"network -> Prop\" on hypothesis of type \"pBody one_node_params' = RequestVote h h' t ll\".", "type": "cannot_apply_in", "handled": true}]}, "chat": [], "original": "intros orig_base_params one_node_params raft_params rri llvwli vci cci vvci lltsi h h' t ll ll' H_in H_in'. unfold one_leaderLog_per_term in *. intros. split. - eapply one_leaderLog_per_term_log in H_in; eauto. - eapply one_leaderLog_per_term_log in H_in'; eauto.", "succ": false}]