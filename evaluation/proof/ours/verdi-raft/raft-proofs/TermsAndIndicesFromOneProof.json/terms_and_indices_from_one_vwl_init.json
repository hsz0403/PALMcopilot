[{"history": {"proof": "intros orig_base_params' one_node_params' raft_params'. intros P net Hstep. qsimpl use: raft_refinement_interface.", "repairs": ["used_var", "", "not_evaluable"], "exceptions": [{"ctx": [], "tactic": "intros orig_base_params one_node_params raft_params.", "exn": "orig_base_params is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params raft_params.", "exn": "one_node_params is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params.", "exn": "raft_params is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros orig_base_params' one_node_params' raft_params'.", "intros P net Hstep."], "tactic": "unfold raft_refinement_interface in rri.", "exn": "Cannot coerce raft_refinement_interface to an evaluable reference.", "type": "not_evaluable", "handled": true}, {"ctx": ["intros orig_base_params' one_node_params' raft_params'.", "intros P net Hstep.", "qsimpl use: raft_refinement_interface."], "tactic": "destruct rri as [Hinit _].", "exn": "No such goal.", "type": "no_goal", "handled": true}]}, "chat": [], "original": "intros orig_base_params one_node_params raft_params. unfold refined_raft_net_invariant_init. intros P net Hstep. unfold raft_refinement_interface in rri. destruct rri as [Hinit _]. apply Hinit; auto.", "succ": true}]