[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": [], "tactic": "intros orig_base_params one_node_params raft_params rri lsi lltsi eewci llcei cci vci leader t ll e h H_type H_In_ll H_In_e H_eTerm.", "exn": "orig_base_params is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params raft_params rri lsi lltsi eewci llcei cci vci leader t ll e h H_type H_In_ll H_In_e H_eTerm.", "exn": "one_node_params is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params rri lsi lltsi eewci llcei cci vci leader t ll e h H_type H_In_ll H_In_e H_eTerm.", "exn": "raft_params is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params' rri lsi lltsi eewci llcei cci vci leader t ll e h H_type H_In_ll H_In_e H_eTerm.", "exn": "rri is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params' rri' lsi lltsi eewci llcei cci vci leader t ll e h H_type H_In_ll H_In_e H_eTerm.", "exn": "lsi is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params' rri' lsi' lltsi eewci llcei cci vci leader t ll e h H_type H_In_ll H_In_e H_eTerm.", "exn": "lltsi is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params' rri' lsi' lltsi' eewci llcei cci vci leader t ll e h H_type H_In_ll H_In_e H_eTerm.", "exn": "eewci is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params' rri' lsi' lltsi' eewci' llcei cci vci leader t ll e h H_type H_In_ll H_In_e H_eTerm.", "exn": "llcei is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params' rri' lsi' lltsi' eewci' llcei' cci vci leader t ll e h H_type H_In_ll H_In_e H_eTerm.", "exn": "cci is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params' rri' lsi' lltsi' eewci' llcei' cci' vci leader t ll e h H_type H_In_ll H_In_e H_eTerm.", "exn": "vci is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros orig_base_params' one_node_params' raft_params' rri' lsi' lltsi' eewci' llcei' cci' vci' leader t ll e h H_type H_In_ll H_In_e H_eTerm."], "tactic": "apply (leaderLogs_sublog orig_base_params one_node_params raft_params); auto.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params rri : raft_refinement_interface lsi : leader_sublog_interface lltsi : leaderLogs_term_sanity_interface eewci : every_entry_was_created_interface llcei : leaderLogs_candidate_entries_interface cci : cronies_correct_interface vci : votes_correct_interface orig_base_params' : network one_node_params' : name -> data raft_params' : list packet rri' : GhostSimulations.ghost_data lsi' : raft_data lltsi' : list raft_output eewci' : raft_data llcei' : list (name * msg) cci' : name vci' : doGenericServer cci' lsi' = (lltsi', eewci', llcei') leader : leaderLogs_sublog orig_base_params' t : refined_raft_intermediate_reachable orig_base_params' ll : nwState orig_base_params' cci' = (rri', lsi') e : forall h' : name, one_node_params' h' = update name_eq_dec (nwState orig_base_params') cci' (rri', eewci') h' h : forall p : packet, In p raft_params' -> In p (nwPackets orig_base_params') \\\\/ In p (send_packets cci' llcei') H_type : Net.name H_In_ll : term H_In_e : list entry H_eTerm : entry The term \"orig_base_params\" has type \"BaseParams\" while it is expected to have type \"network\".", "type": "wrong_type", "handled": true}]}, "chat": [], "original": "intros orig_base_params one_node_params raft_params rri lsi lltsi eewci llcei cci vci leader t ll e h H_type H_In_ll H_In_e H_eTerm. apply (leaderLogs_sublog orig_base_params one_node_params raft_params); auto.", "succ": false}]