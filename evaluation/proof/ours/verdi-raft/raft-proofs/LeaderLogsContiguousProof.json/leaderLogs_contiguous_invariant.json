[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros net H_refined.", "unfold leaderLogs_contiguous.", "intros h t ll H_in."], "tactic": "apply (leaderLogs_contiguous_invariant orig_base_params one_node_params raft_params net H_refined h t ll).", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params rri : raft_refinement_interface lmi : log_matching_interface net : network H_refined : refined_raft_intermediate_reachable net h : Net.name t : term ll : list entry H_in : In (t, ll) (leaderLogs (fst (nwState net h))) The term \"orig_base_params\" has type \"BaseParams\" while it is expected to have type \"network\".", "type": "wrong_type", "handled": true}, {"ctx": ["intros net H_refined.", "unfold leaderLogs_contiguous.", "intros h t ll H_in.", "qsimpl use: leaderLogs_contiguous_invariant."], "tactic": "apply H_in.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params net : network H_refined : refined_raft_intermediate_reachable net h : name t : term ll : list entry H_in : In (t, ll) (leaderLogs (fst (nwState net h))) H : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_contiguous net i : nat H0 : 0 < i H1 : i <= maxIndex ll log_matching_invariant : forall net : network, raft_intermediate_reachable net -> log_matching net refined_raft_net_invariant : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (deghost net) Unable to unify \"In (t, ll) (leaderLogs (fst (nwState net h)))\" with \"exists e : entry, eIndex e = i /\\\\ In e ll\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros net H_refined. unfold leaderLogs_contiguous. intros h t ll H_in. apply (leaderLogs_contiguous_invariant orig_base_params one_node_params raft_params net H_refined h t ll). apply H_in.", "succ": false}]