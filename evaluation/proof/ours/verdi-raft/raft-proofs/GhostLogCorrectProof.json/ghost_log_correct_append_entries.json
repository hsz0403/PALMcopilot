[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["unfold msg_refined_raft_net_invariant_append_entries.", "intros xs p ys net st' ps' gd d m t n pli plt es ci Hhandler."], "tactic": "apply RaftRefinementInterface.lift_prop with (P := ghost_log_correct) in gd; auto.", "exn": "Unable to apply lemma of type \"forall P : network -> Prop, (forall net0 : network, raft_intermediate_reachable net0 -> P net0) -> forall net0 : network, RaftRefinementInterface.refined_raft_intermediate_reachable net0 -> P (deghost net0)\" on hypothesis of type \"RaftRefinementInterface.electionsData\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["unfold msg_refined_raft_net_invariant_append_entries.", "intros xs p ys net st' ps' gd d m t n pli plt es ci Hhandler.", "qsimpl use: ghost_log_correct."], "tactic": "apply_entries_correct_invariant net p ys gd Hhandler.", "exn": "The reference apply_entries_correct_invariant was not found in the current environment.", "type": "ref_not_found", "handled": true}]}, "chat": [], "original": "intros. unfold msg_refined_raft_net_invariant_append_entries. intros xs p ys net st' ps' gd d m t n pli plt es ci Hhandler. apply RaftRefinementInterface.lift_prop with (P := ghost_log_correct) in gd; auto. apply_entries_correct_invariant net p ys gd Hhandler.", "succ": false}]