[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["unfold refined_raft_net_invariant_state_same_packet_subset."], "tactic": "intros orig_base_params one_node_params raft_params rri llli lltsi llcei ollpti vci cci net net' H_states H_packets H_preserved H_intermediate.", "exn": "orig_base_params is already used.", "type": "used_var", "handled": true}, {"ctx": ["unfold refined_raft_net_invariant_state_same_packet_subset."], "tactic": "intros orig_base_params' one_node_params raft_params rri llli lltsi llcei ollpti vci cci net net' H_states H_packets H_preserved H_intermediate.", "exn": "one_node_params is already used.", "type": "used_var", "handled": true}, {"ctx": ["unfold refined_raft_net_invariant_state_same_packet_subset."], "tactic": "intros orig_base_params' one_node_params' raft_params rri llli lltsi llcei ollpti vci cci net net' H_states H_packets H_preserved H_intermediate.", "exn": "raft_params is already used.", "type": "used_var", "handled": true}, {"ctx": ["unfold refined_raft_net_invariant_state_same_packet_subset."], "tactic": "intros orig_base_params' one_node_params' raft_params' rri llli lltsi llcei ollpti vci cci net net' H_states H_packets H_preserved H_intermediate.", "exn": "rri is already used.", "type": "used_var", "handled": true}, {"ctx": ["unfold refined_raft_net_invariant_state_same_packet_subset."], "tactic": "intros orig_base_params' one_node_params' raft_params' rri' llli lltsi llcei ollpti vci cci net net' H_states H_packets H_preserved H_intermediate.", "exn": "llli is already used.", "type": "used_var", "handled": true}, {"ctx": ["unfold refined_raft_net_invariant_state_same_packet_subset."], "tactic": "intros orig_base_params' one_node_params' raft_params' rri' llli' lltsi llcei ollpti vci cci net net' H_states H_packets H_preserved H_intermediate.", "exn": "lltsi is already used.", "type": "used_var", "handled": true}, {"ctx": ["unfold refined_raft_net_invariant_state_same_packet_subset."], "tactic": "intros orig_base_params' one_node_params' raft_params' rri' llli' lltsi' llcei ollpti vci cci net net' H_states H_packets H_preserved H_intermediate.", "exn": "llcei is already used.", "type": "used_var", "handled": true}, {"ctx": ["unfold refined_raft_net_invariant_state_same_packet_subset."], "tactic": "intros orig_base_params' one_node_params' raft_params' rri' llli' lltsi' llcei' ollpti vci cci net net' H_states H_packets H_preserved H_intermediate.", "exn": "ollpti is already used.", "type": "used_var", "handled": true}, {"ctx": ["unfold refined_raft_net_invariant_state_same_packet_subset."], "tactic": "intros orig_base_params' one_node_params' raft_params' rri' llli' lltsi' llcei' ollpti' vci cci net net' H_states H_packets H_preserved H_intermediate.", "exn": "vci is already used.", "type": "used_var", "handled": true}, {"ctx": ["unfold refined_raft_net_invariant_state_same_packet_subset."], "tactic": "intros orig_base_params' one_node_params' raft_params' rri' llli' lltsi' llcei' ollpti' vci' cci net net' H_states H_packets H_preserved H_intermediate.", "exn": "cci is already used.", "type": "used_var", "handled": true}, {"ctx": ["unfold refined_raft_net_invariant_state_same_packet_subset.", "intros orig_base_params' one_node_params' raft_params' rri' llli' lltsi' llcei' ollpti' vci' cci' net net' H_states H_packets H_preserved H_intermediate."], "tactic": "apply leaderLogs_preserved.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params rri : raft_refinement_interface llli : logs_leaderLogs_interface lltsi : leaderLogs_term_sanity_interface llcei : leaderLogs_candidate_entries_interface ollpti : one_leaderLog_per_term_interface vci : votes_correct_interface cci : cronies_correct_interface orig_base_params', one_node_params' : network raft_params' : forall h : Net.name, nwState orig_base_params' h = nwState one_node_params' h rri' : forall p : packet, In p (nwPackets one_node_params') -> In p (nwPackets orig_base_params') llli' : leaderLogs_preserved orig_base_params' lltsi' : refined_raft_intermediate_reachable orig_base_params' llcei' : Net.name ollpti' : list entry vci' : term cci' : Net.name net : list entry net', H_states : entry H_packets : In (eTerm net', ollpti') (leaderLogs (fst (nwState one_node_params' llcei'))) H_preserved : In (vci', net) (leaderLogs (fst (nwState one_node_params' cci'))) H_intermediate : In net' net Unable to unify \"network\" with \"(fix In (a : entry) (l : list entry) {struct l} : Prop := match l with | [] => False | b :: m => b = a \\\\/ In a m end) H_states ollpti'\".", "type": "cannot_unify", "handled": true}, {"ctx": ["unfold refined_raft_net_invariant_state_same_packet_subset.", "intros orig_base_params' one_node_params' raft_params' rri' llli' lltsi' llcei' ollpti' vci' cci' net net' H_states H_packets H_preserved H_intermediate.", "qsimpl use: leaderLogs_preserved."], "tactic": "apply H_preserved.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params orig_base_params', one_node_params' : network raft_params' : forall h : name, nwState orig_base_params' h = nwState one_node_params' h rri' : forall p : packet, In p (nwPackets one_node_params') -> In p (nwPackets orig_base_params') llli' : leaderLogs_preserved orig_base_params' lltsi' : refined_raft_intermediate_reachable orig_base_params' llcei' : name ollpti' : list entry vci' : term cci' : name net : list entry net', H_states : entry H_packets : In (eTerm net', ollpti') (leaderLogs (fst (nwState one_node_params' llcei'))) H_preserved : In (vci', net) (leaderLogs (fst (nwState one_node_params' cci'))) H_intermediate : In net' net H : In H_states ollpti' X0 : Prop cronies_correct_invariant : forall net : network, refined_raft_intermediate_reachable net -> cronies_correct net votes_correct_invariant : forall net : network, refined_raft_intermediate_reachable net -> votes_correct net one_leaderLog_per_term_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term net one_leaderLog_per_term_log_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term_log net one_leaderLog_per_term_host_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term_host net leaderLogs_candidate_entries_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_candidateEntries net leaderLogs_term_sanity_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_term_sanity net leaderLogs_currentTerm_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_currentTerm_sanity net leaderLogs_currentTerm_sanity_candidate_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_currentTerm_sanity_candidate net logs_leaderLogs_invariant : forall net : network, refined_raft_intermediate_reachable net -> logs_leaderLogs net logs_leaderLogs_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> logs_leaderLogs_nw net refined_raft_net_invariant : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (GhostSimulations.deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (GhostSimulations.deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (GhostSimulations.deghost net) Unable to unify \"In (vci', net) (leaderLogs (fst (nwState one_node_params' cci')))\" with \"In H_states net\".", "type": "cannot_unify", "handled": true}, {"ctx": ["unfold refined_raft_net_invariant_state_same_packet_subset.", "intros orig_base_params' one_node_params' raft_params' rri' llli' lltsi' llcei' ollpti' vci' cci' net net' H_states H_packets H_preserved H_intermediate.", "qsimpl use: leaderLogs_preserved.", "qsimpl use: leaderLogs_preserved."], "tactic": "apply H_intermediate.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params orig_base_params', one_node_params' : network raft_params' : forall h : name, nwState orig_base_params' h = nwState one_node_params' h rri' : forall p : packet, In p (nwPackets one_node_params') -> In p (nwPackets orig_base_params') llli' : leaderLogs_preserved orig_base_params' lltsi' : refined_raft_intermediate_reachable orig_base_params' llcei' : name ollpti' : list entry vci' : term cci' : name net : list entry net', H_states : entry H_packets : In (eTerm net', ollpti') (leaderLogs (fst (nwState one_node_params' llcei'))) H_preserved : In (vci', net) (leaderLogs (fst (nwState one_node_params' cci'))) H_intermediate : In net' net H : In H_states ollpti' X0 : Prop cronies_correct_invariant : forall net : network, refined_raft_intermediate_reachable net -> cronies_correct net votes_correct_invariant : forall net : network, refined_raft_intermediate_reachable net -> votes_correct net one_leaderLog_per_term_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term net one_leaderLog_per_term_log_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term_log net one_leaderLog_per_term_host_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term_host net leaderLogs_candidate_entries_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_candidateEntries net leaderLogs_term_sanity_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_term_sanity net leaderLogs_currentTerm_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_currentTerm_sanity net leaderLogs_currentTerm_sanity_candidate_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_currentTerm_sanity_candidate net logs_leaderLogs_invariant : forall net : network, refined_raft_intermediate_reachable net -> logs_leaderLogs net logs_leaderLogs_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> logs_leaderLogs_nw net refined_raft_net_invariant : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (GhostSimulations.deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (GhostSimulations.deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (GhostSimulations.deghost net) X1 : Prop Unable to unify \"In net' net\" with \"In H_states net\".", "type": "cannot_unify", "handled": true}, {"ctx": ["unfold refined_raft_net_invariant_state_same_packet_subset.", "intros orig_base_params' one_node_params' raft_params' rri' llli' lltsi' llcei' ollpti' vci' cci' net net' H_states H_packets H_preserved H_intermediate.", "qsimpl use: leaderLogs_preserved.", "qsimpl use: leaderLogs_preserved.", "qsimpl use: leaderLogs_preserved."], "tactic": "apply H_states.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params orig_base_params', one_node_params' : network raft_params' : forall h : name, nwState orig_base_params' h = nwState one_node_params' h rri' : forall p : packet, In p (nwPackets one_node_params') -> In p (nwPackets orig_base_params') llli' : leaderLogs_preserved orig_base_params' lltsi' : refined_raft_intermediate_reachable orig_base_params' llcei' : name ollpti' : list entry vci' : term cci' : name net : list entry net', H_states : entry H_packets : In (eTerm net', ollpti') (leaderLogs (fst (nwState one_node_params' llcei'))) H_preserved : In (vci', net) (leaderLogs (fst (nwState one_node_params' cci'))) H_intermediate : In net' net H : In H_states ollpti' X0 : Prop cronies_correct_invariant : forall net : network, refined_raft_intermediate_reachable net -> cronies_correct net votes_correct_invariant : forall net : network, refined_raft_intermediate_reachable net -> votes_correct net one_leaderLog_per_term_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term net one_leaderLog_per_term_log_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term_log net one_leaderLog_per_term_host_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term_host net leaderLogs_candidate_entries_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_candidateEntries net leaderLogs_term_sanity_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_term_sanity net leaderLogs_currentTerm_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_currentTerm_sanity net leaderLogs_currentTerm_sanity_candidate_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_currentTerm_sanity_candidate net logs_leaderLogs_invariant : forall net : network, refined_raft_intermediate_reachable net -> logs_leaderLogs net logs_leaderLogs_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> logs_leaderLogs_nw net refined_raft_net_invariant : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (GhostSimulations.deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (GhostSimulations.deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (GhostSimulations.deghost net) X1, X2 : Prop Unable to unify \"entry\" with \"In H_states net\".", "type": "cannot_unify", "handled": true}, {"ctx": ["unfold refined_raft_net_invariant_state_same_packet_subset.", "intros orig_base_params' one_node_params' raft_params' rri' llli' lltsi' llcei' ollpti' vci' cci' net net' H_states H_packets H_preserved H_intermediate.", "qsimpl use: leaderLogs_preserved.", "qsimpl use: leaderLogs_preserved.", "qsimpl use: leaderLogs_preserved.", "qsimpl use: leaderLogs_preserved."], "tactic": "apply H_packets.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params orig_base_params', one_node_params' : network raft_params' : forall h : name, nwState orig_base_params' h = nwState one_node_params' h rri' : forall p : packet, In p (nwPackets one_node_params') -> In p (nwPackets orig_base_params') llli' : leaderLogs_preserved orig_base_params' lltsi' : refined_raft_intermediate_reachable orig_base_params' llcei' : name ollpti' : list entry vci' : term cci' : name net : list entry net', H_states : entry H_packets : In (eTerm net', ollpti') (leaderLogs (fst (nwState one_node_params' llcei'))) H_preserved : In (vci', net) (leaderLogs (fst (nwState one_node_params' cci'))) H_intermediate : In net' net H : In H_states ollpti' X0 : Prop cronies_correct_invariant : forall net : network, refined_raft_intermediate_reachable net -> cronies_correct net votes_correct_invariant : forall net : network, refined_raft_intermediate_reachable net -> votes_correct net one_leaderLog_per_term_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term net one_leaderLog_per_term_log_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term_log net one_leaderLog_per_term_host_invariant : forall net : network, refined_raft_intermediate_reachable net -> one_leaderLog_per_term_host net leaderLogs_candidate_entries_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_candidateEntries net leaderLogs_term_sanity_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_term_sanity net leaderLogs_currentTerm_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_currentTerm_sanity net leaderLogs_currentTerm_sanity_candidate_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_currentTerm_sanity_candidate net logs_leaderLogs_invariant : forall net : network, refined_raft_intermediate_reachable net -> logs_leaderLogs net logs_leaderLogs_nw_invariant : forall net : network, refined_raft_intermediate_reachable net -> logs_leaderLogs_nw net refined_raft_net_invariant : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (GhostSimulations.deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (GhostSimulations.deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (GhostSimulations.deghost net) X1, X2, X3 : Prop Unable to unify \"In (eTerm net', ollpti') (leaderLogs (fst (nwState one_node_params' llcei')))\" with \"In H_states net\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "unfold refined_raft_net_invariant_state_same_packet_subset. intros orig_base_params one_node_params raft_params rri llli lltsi llcei ollpti vci cci net net' H_states H_packets H_preserved H_intermediate. apply leaderLogs_preserved. - apply H_preserved. - apply H_intermediate. - apply H_states. - apply H_packets.", "succ": false}]