[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros net net' Hllp Hbody Hleaders.", "unfold leaderLogs_entries_match_nw."], "tactic": "intros h llt ll p t src pli plt es ci Hin_llt Hin_p Hbody_e Hin_e1 Hin_e2 He12 Hin_e1_es Hin_e2_ll Heq_e12 Heq_te.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros net net' Hllp Hbody Hleaders.", "unfold leaderLogs_entries_match_nw.", "intros."], "tactic": "apply (Hllp h llt ll p t src pli plt es ci).", "exn": "Unable to find an instance for the variable e2.", "type": "no_instance_var", "handled": true}, {"ctx": ["intros net net' Hllp Hbody Hleaders.", "unfold leaderLogs_entries_match_nw.", "intros.", "qsimpl.", "-"], "tactic": "apply (Hleaders h).", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params net, net' : network Hllp : leaderLogs_entries_match_nw net Hbody : forall p : packet, In p (nwPackets net') -> is_append_entries (pBody p) -> In p (nwPackets net) Hleaders : forall h : name, leaderLogs (fst (nwState net' h)) = leaderLogs (fst (nwState net h)) h : name llt : term ll : list entry p : packet t : term src : name pli : logIndex plt : term es : list entry ci : logIndex H : In (llt, ll) (leaderLogs (fst (nwState net' h))) H0 : In p (nwPackets net') H1 : pBody p = AppendEntries t src pli plt es ci e1, e2 : entry H2 : eIndex e1 = eIndex e2 H3 : eTerm e1 = eTerm e2 H4 : In e1 es H5 : In e2 ll e3 : entry H6 : eIndex e3 <= eIndex e1 H7 : In e3 es leaderLogs_contiguous_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_contiguous net leaderLogs_sublog_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_sublog net handleAppendEntries_logs_sorted : forall (net : network) (p : packet) (t : term) (n : name) (pli : logIndex) (plt : term) (es : list entry) (ci : logIndex) (st' : raft_data) (m : msg), raft_intermediate_reachable net -> logs_sorted net -> handleAppendEntries (pDst p) (nwState net (pDst p)) t n pli plt es ci = (st', m) -> pBody p = AppendEntries t n pli plt es ci -> In p (nwPackets net) -> sorted (log st') handleClientRequest_logs_sorted : forall (h : name) (client : clientId) (id : nat) (c : input) (out : list raft_output) (st : raft_data) (l : list (name * msg)) (net : network), handleClientRequest h (nwState net h) client id c = (out, st, l) -> raft_intermediate_reachable net -> logs_sorted_host net -> sorted (log st) logs_sorted_invariant : forall net : network, raft_intermediate_reachable net -> logs_sorted net leaderLogs_sorted_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_sorted net leaderLogs_term_sanity_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_term_sanity net leaderLogs_currentTerm_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_currentTerm_sanity net leaderLogs_currentTerm_sanity_candidate_invariant : forall net : network, refined_raft_intermediate_reachable net -> leaderLogs_currentTerm_sanity_candidate net log_matching_invariant : forall net : network, raft_intermediate_reachable net -> log_matching net refined_raft_net_invariant : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (deghost net) H8 : forall net : network, refined_raft_intermediate_reachable net -> terms_and_indices_from_one_ll net H9 : forall net : network, refined_raft_intermediate_reachable net -> terms_and_indices_from_one_vwl net Unable to unify \"leaderLogs (fst (nwState net' h)) = leaderLogs (fst (nwState net h))\" with \"In e3 ll\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros net net' Hllp Hbody Hleaders.", "unfold leaderLogs_entries_match_nw.", "intros.", "qsimpl.", "-"], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros net net' Hllp Hbody Hleaders.", "unfold leaderLogs_entries_match_nw.", "intros.", "qsimpl.", "-", "shelve.", "-"], "tactic": "apply Hin_p.", "exn": "The reference Hin_p was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros net net' Hllp Hbody Hleaders.", "unfold leaderLogs_entries_match_nw.", "intros.", "qsimpl.", "-", "shelve.", "-"], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros net net' Hllp Hbody Hleaders.", "unfold leaderLogs_entries_match_nw.", "intros.", "qsimpl.", "-", "shelve.", "-", "shelve."], "tactic": "-", "exn": "Wrong bullet -: No more subgoals.", "type": "no_more_subgoals", "handled": true}]}, "chat": [], "original": "intros net net' Hllp Hbody Hleaders. unfold leaderLogs_entries_match_nw. intros h llt ll p t src pli plt es ci Hin_llt Hin_p Hbody_e Hin_e1 Hin_e2 He12 Hin_e1_es Hin_e2_ll Heq_e12 Heq_te. apply (Hllp h llt ll p t src pli plt es ci). - apply (Hleaders h). - apply Hin_p. - apply Hbody. - auto. - auto. - auto. - auto. - auto. - auto.", "succ": false}]