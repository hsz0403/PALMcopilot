[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": [], "tactic": "intros orig_base_params one_node_params raft_params net Ht Htype Hin.", "exn": "orig_base_params is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params raft_params net Ht Htype Hin.", "exn": "one_node_params is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params net Ht Htype Hin.", "exn": "raft_params is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros orig_base_params' one_node_params' raft_params' net Ht Htype Hin.", "unfold votesReceived_moreUpToDate in *.", "intros t h h' Hterm Htype_candidate HinVotesReceived."], "tactic": ["apply votesReceived_moreUpToDate_invariant with (net:=net); auto.", ""], "exn": "Applied theorem does not have enough premises.", "type": "no_enough_premises", "handled": false}]}, "chat": [], "original": "intros orig_base_params one_node_params raft_params net Ht Htype Hin. unfold votesReceived_moreUpToDate in *. intros t h h' Hterm Htype_candidate HinVotesReceived. apply votesReceived_moreUpToDate_invariant with (net:=net); auto.", "succ": false}]