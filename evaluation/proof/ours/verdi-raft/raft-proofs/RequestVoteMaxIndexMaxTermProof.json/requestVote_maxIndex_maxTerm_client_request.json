[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": [], "tactic": "intros orig_base_params one_node_params raft_Params rri rvrtsi h net st' ps' gd out d l client id c handleClientRequest_eq update_elections_data_clientRequest_eq P Raft_intermediate_reachable_handleClientRequest Raft_intermediate_reachable_init RRI RVRTSI.", "exn": "orig_base_params is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params raft_Params rri rvrtsi h net st' ps' gd out d l client id c handleClientRequest_eq update_elections_data_clientRequest_eq P Raft_intermediate_reachable_handleClientRequest Raft_intermediate_reachable_init RRI RVRTSI.", "exn": "one_node_params is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_Params rri rvrtsi h net st' ps' gd out d l client id c handleClientRequest_eq update_elections_data_clientRequest_eq P Raft_intermediate_reachable_handleClientRequest Raft_intermediate_reachable_init RRI RVRTSI.", "exn": "rri is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_Params rri' rvrtsi h net st' ps' gd out d l client id c handleClientRequest_eq update_elections_data_clientRequest_eq P Raft_intermediate_reachable_handleClientRequest Raft_intermediate_reachable_init RRI RVRTSI.", "exn": "rvrtsi is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros orig_base_params' one_node_params' raft_Params rri' rvrtsi' h net st' ps' gd out d l client id c handleClientRequest_eq update_elections_data_clientRequest_eq P Raft_intermediate_reachable_handleClientRequest Raft_intermediate_reachable_init RRI RVRTSI.", "unfold refined_raft_net_invariant_client_request', handleClientRequest in *.", "intros handleClientRequest_eq' update_elections_data_clientRequest_eq' P_net Raft_intermediate_reachable_handleClientRequest' Raft_intermediate_reachable_init'."], "tactic": "intros handleTimeout_eq update_elections_data_timeout_eq P' Raft_intermediate_reachable_timeout Raft_intermediate_reachable_init'.", "exn": "Raft_intermediate_reachable_init' is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros orig_base_params' one_node_params' raft_Params rri' rvrtsi' h net st' ps' gd out d l client id c handleClientRequest_eq update_elections_data_clientRequest_eq P Raft_intermediate_reachable_handleClientRequest Raft_intermediate_reachable_init RRI RVRTSI.", "unfold refined_raft_net_invariant_client_request', handleClientRequest in *.", "intros handleClientRequest_eq' update_elections_data_clientRequest_eq' P_net Raft_intermediate_reachable_handleClientRequest' Raft_intermediate_reachable_init'."], "tactic": "intros handleTimeout_eq update_elections_data_timeout_eq P' Raft_intermediate_reachable_timeout Raft_intermediate_reachable_init''.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros orig_base_params' one_node_params' raft_Params rri' rvrtsi' h net st' ps' gd out d l client id c handleClientRequest_eq update_elections_data_clientRequest_eq P Raft_intermediate_reachable_handleClientRequest Raft_intermediate_reachable_init RRI RVRTSI.", "unfold refined_raft_net_invariant_client_request', handleClientRequest in *.", "intros handleClientRequest_eq' update_elections_data_clientRequest_eq' P_net Raft_intermediate_reachable_handleClientRequest' Raft_intermediate_reachable_init'."], "tactic": "intros handleTimeout_eq' update_elections_data_timeout_eq'.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros orig_base_params' one_node_params' raft_Params rri' rvrtsi' h net st' ps' gd out d l client id c handleClientRequest_eq update_elections_data_clientRequest_eq P Raft_intermediate_reachable_handleClientRequest Raft_intermediate_reachable_init RRI RVRTSI.", "unfold refined_raft_net_invariant_client_request', handleClientRequest in *.", "intros handleClientRequest_eq' update_elections_data_clientRequest_eq' P_net Raft_intermediate_reachable_handleClientRequest' Raft_intermediate_reachable_init'."], "tactic": "intros handleTimeout_eq update_elections_data_timeout_eq P Raft_intermediate_reachable Raft_intermediate_reachable_init.", "exn": "P is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros orig_base_params' one_node_params' raft_Params rri' rvrtsi' h net st' ps' gd out d l client id c handleClientRequest_eq update_elections_data_clientRequest_eq P Raft_intermediate_reachable_handleClientRequest Raft_intermediate_reachable_init RRI RVRTSI.", "unfold refined_raft_net_invariant_client_request', handleClientRequest in *.", "intros handleClientRequest_eq' update_elections_data_clientRequest_eq' P_net Raft_intermediate_reachable_handleClientRequest' Raft_intermediate_reachable_init'."], "tactic": "intros handleTimeout_eq update_elections_data_timeout_eq P' Raft_intermediate_reachable Raft_intermediate_reachable_init.", "exn": "Raft_intermediate_reachable_init is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros orig_base_params' one_node_params' raft_Params rri' rvrtsi' h net st' ps' gd out d l client id c handleClientRequest_eq update_elections_data_clientRequest_eq P Raft_intermediate_reachable_handleClientRequest Raft_intermediate_reachable_init RRI RVRTSI.", "unfold refined_raft_net_invariant_client_request', handleClientRequest in *.", "intros handleClientRequest_eq' update_elections_data_clientRequest_eq' P_net Raft_intermediate_reachable_handleClientRequest' Raft_intermediate_reachable_init'."], "tactic": "intros handleTimeout_eq update_elections_data_timeout_eq P' Raft_intermediate_reachable Raft_intermediate_reachable_init'.", "exn": "Raft_intermediate_reachable_init' is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros orig_base_params' one_node_params' raft_Params rri' rvrtsi' h net st' ps' gd out d l client id c handleClientRequest_eq update_elections_data_clientRequest_eq P Raft_intermediate_reachable_handleClientRequest Raft_intermediate_reachable_init RRI RVRTSI.", "unfold refined_raft_net_invariant_client_request', handleClientRequest in *.", "intros handleClientRequest_eq' update_elections_data_clientRequest_eq' P_net Raft_intermediate_reachable_handleClientRequest' Raft_intermediate_reachable_init'."], "tactic": "intros handleTimeout_eq update_elections_data_timeout_eq P' Raft_intermediate_reachable Raft_intermediate_reachable_init''.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros orig_base_params' one_node_params' raft_Params rri' rvrtsi' h net st' ps' gd out d l client id c handleClientRequest_eq update_elections_data_clientRequest_eq P Raft_intermediate_reachable_handleClientRequest Raft_intermediate_reachable_init RRI RVRTSI.", "unfold refined_raft_net_invariant_client_request', handleClientRequest in *.", "intros handleClientRequest_eq' update_elections_data_clientRequest_eq' P_net Raft_intermediate_reachable_handleClientRequest' Raft_intermediate_reachable_init'."], "tactic": "intros handleTimeout_eq' update_elections_data_timeout_eq' net' gd d d' h reboot_eq P_net Raft_intermediate_reachable_reboot'.", "exn": "gd is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros orig_base_params' one_node_params' raft_Params rri' rvrtsi' h net st' ps' gd out d l client id c handleClientRequest_eq update_elections_data_clientRequest_eq P Raft_intermediate_reachable_handleClientRequest Raft_intermediate_reachable_init RRI RVRTSI.", "unfold refined_raft_net_invariant_client_request', handleClientRequest in *.", "intros handleClientRequest_eq' update_elections_data_clientRequest_eq' P_net Raft_intermediate_reachable_handleClientRequest' Raft_intermediate_reachable_init'."], "tactic": "intros handleTimeout_eq' update_elections_data_timeout_eq' net' gd' d d' h reboot_eq P_net Raft_intermediate_reachable_reboot'.", "exn": "d is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros orig_base_params' one_node_params' raft_Params rri' rvrtsi' h net st' ps' gd out d l client id c handleClientRequest_eq update_elections_data_clientRequest_eq P Raft_intermediate_reachable_handleClientRequest Raft_intermediate_reachable_init RRI RVRTSI.", "unfold refined_raft_net_invariant_client_request', handleClientRequest in *.", "intros handleClientRequest_eq' update_elections_data_clientRequest_eq' P_net Raft_intermediate_reachable_handleClientRequest' Raft_intermediate_reachable_init'."], "tactic": "intros handleTimeout_eq' update_elections_data_timeout_eq' net' gd' d'' d' h reboot_eq P_net Raft_intermediate_reachable_reboot'.", "exn": "h is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros orig_base_params' one_node_params' raft_Params rri' rvrtsi' h net st' ps' gd out d l client id c handleClientRequest_eq update_elections_data_clientRequest_eq P Raft_intermediate_reachable_handleClientRequest Raft_intermediate_reachable_init RRI RVRTSI.", "unfold refined_raft_net_invariant_client_request', handleClientRequest in *.", "intros handleClientRequest_eq' update_elections_data_clientRequest_eq' P_net Raft_intermediate_reachable_handleClientRequest' Raft_intermediate_reachable_init'."], "tactic": "intros handleTimeout_eq' update_elections_data_timeout_eq' net' gd' d'' d' h' reboot_eq P_net Raft_intermediate_reachable_reboot'.", "exn": "P_net is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros orig_base_params' one_node_params' raft_Params rri' rvrtsi' h net st' ps' gd out d l client id c handleClientRequest_eq update_elections_data_clientRequest_eq P Raft_intermediate_reachable_handleClientRequest Raft_intermediate_reachable_init RRI RVRTSI.", "unfold refined_raft_net_invariant_client_request', handleClientRequest in *.", "intros handleClientRequest_eq' update_elections_data_clientRequest_eq' P_net Raft_intermediate_reachable_handleClientRequest' Raft_intermediate_reachable_init'."], "tactic": "intros handleTimeout_eq' update_elections_data_timeout_eq' net' gd' d'' d' h' reboot_eq P_net' Raft_intermediate_reachable_reboot'.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros orig_base_params' one_node_params' raft_Params rri' rvrtsi' h net st' ps' gd out d l client id c handleClientRequest_eq update_elections_data_clientRequest_eq P Raft_intermediate_reachable_handleClientRequest Raft_intermediate_reachable_init RRI RVRTSI.", "unfold refined_raft_net_invariant_client_request', handleClientRequest in *.", "intros handleClientRequest_eq' update_elections_data_clientRequest_eq' P_net Raft_intermediate_reachable_handleClientRequest' Raft_intermediate_reachable_init'."], "tactic": "intros handleTimeout_eq update_elections_data_timeout_eq P Raft_intermediate_reachable Raft_intermediate_reachable_init.", "exn": "P is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros orig_base_params' one_node_params' raft_Params rri' rvrtsi' h net st' ps' gd out d l client id c handleClientRequest_eq update_elections_data_clientRequest_eq P Raft_intermediate_reachable_handleClientRequest Raft_intermediate_reachable_init RRI RVRTSI.", "unfold refined_raft_net_invariant_client_request', handleClientRequest in *.", "intros handleClientRequest_eq' update_elections_data_clientRequest_eq' P_net Raft_intermediate_reachable_handleClientRequest' Raft_intermediate_reachable_init'."], "tactic": "intros handleTimeout_eq update_elections_data_timeout_eq P' Raft_intermediate_reachable Raft_intermediate_reachable_init.", "exn": "Raft_intermediate_reachable_init is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros orig_base_params' one_node_params' raft_Params rri' rvrtsi' h net st' ps' gd out d l client id c handleClientRequest_eq update_elections_data_clientRequest_eq P Raft_intermediate_reachable_handleClientRequest Raft_intermediate_reachable_init RRI RVRTSI.", "unfold refined_raft_net_invariant_client_request', handleClientRequest in *.", "intros handleClientRequest_eq' update_elections_data_clientRequest_eq' P_net Raft_intermediate_reachable_handleClientRequest' Raft_intermediate_reachable_init'."], "tactic": "intros handleTimeout_eq update_elections_data_timeout_eq P' Raft_intermediate_reachable Raft_intermediate_reachable_init'.", "exn": "Raft_intermediate_reachable_init' is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros orig_base_params' one_node_params' raft_Params rri' rvrtsi' h net st' ps' gd out d l client id c handleClientRequest_eq update_elections_data_clientRequest_eq P Raft_intermediate_reachable_handleClientRequest Raft_intermediate_reachable_init RRI RVRTSI.", "unfold refined_raft_net_invariant_client_request', handleClientRequest in *.", "intros handleClientRequest_eq' update_elections_data_clientRequest_eq' P_net Raft_intermediate_reachable_handleClientRequest' Raft_intermediate_reachable_init'."], "tactic": "intros handleTimeout_eq update_elections_data_timeout_eq P' Raft_intermediate_reachable Raft_intermediate_reachable_init''.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros orig_base_params' one_node_params' raft_Params rri' rvrtsi' h net st' ps' gd out d l client id c handleClientRequest_eq update_elections_data_clientRequest_eq P Raft_intermediate_reachable_handleClientRequest Raft_intermediate_reachable_init RRI RVRTSI.", "unfold refined_raft_net_invariant_client_request', handleClientRequest in *.", "intros handleClientRequest_eq' update_elections_data_clientRequest_eq' P_net Raft_intermediate_reachable_handleClientRequest' Raft_intermediate_reachable_init'."], "tactic": "intros handleTimeout_eq' update_elections_data_timeout_eq'.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros orig_base_params' one_node_params' raft_Params rri' rvrtsi' h net st' ps' gd out d l client id c handleClientRequest_eq update_elections_data_clientRequest_eq P Raft_intermediate_reachable_handleClientRequest Raft_intermediate_reachable_init RRI RVRTSI.", "unfold refined_raft_net_invariant_client_request', handleClientRequest in *.", "intros handleClientRequest_eq' update_elections_data_clientRequest_eq' P_net Raft_intermediate_reachable_handleClientRequest' Raft_intermediate_reachable_init'."], "tactic": "intros handleTimeout_eq update_elections_data_timeout_eq P Raft_intermediate_reachable Raft_intermediate_reachable_init.", "exn": "P is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros orig_base_params' one_node_params' raft_Params rri' rvrtsi' h net st' ps' gd out d l client id c handleClientRequest_eq update_elections_data_clientRequest_eq P Raft_intermediate_reachable_handleClientRequest Raft_intermediate_reachable_init RRI RVRTSI.", "unfold refined_raft_net_invariant_client_request', handleClientRequest in *.", "intros handleClientRequest_eq' update_elections_data_clientRequest_eq' P_net Raft_intermediate_reachable_handleClientRequest' Raft_intermediate_reachable_init'."], "tactic": "intros handleTimeout_eq update_elections_data_timeout_eq P' Raft_intermediate_reachable Raft_intermediate_reachable_init.", "exn": "Raft_intermediate_reachable_init is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros orig_base_params' one_node_params' raft_Params rri' rvrtsi' h net st' ps' gd out d l client id c handleClientRequest_eq update_elections_data_clientRequest_eq P Raft_intermediate_reachable_handleClientRequest Raft_intermediate_reachable_init RRI RVRTSI.", "unfold refined_raft_net_invariant_client_request', handleClientRequest in *.", "intros handleClientRequest_eq' update_elections_data_clientRequest_eq' P_net Raft_intermediate_reachable_handleClientRequest' Raft_intermediate_reachable_init'."], "tactic": "intros handleTimeout_eq update_elections_data_timeout_eq P' Raft_intermediate_reachable Raft_intermediate_reachable_init'.", "exn": "Raft_intermediate_reachable_init' is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros orig_base_params' one_node_params' raft_Params rri' rvrtsi' h net st' ps' gd out d l client id c handleClientRequest_eq update_elections_data_clientRequest_eq P Raft_intermediate_reachable_handleClientRequest Raft_intermediate_reachable_init RRI RVRTSI.", "unfold refined_raft_net_invariant_client_request', handleClientRequest in *.", "intros handleClientRequest_eq' update_elections_data_clientRequest_eq' P_net Raft_intermediate_reachable_handleClientRequest' Raft_intermediate_reachable_init'."], "tactic": "intros handleTimeout_eq update_elections_data_timeout_eq P' Raft_intermediate_reachable Raft_intermediate_reachable_init''.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros orig_base_params' one_node_params' raft_Params rri' rvrtsi' h net st' ps' gd out d l client id c handleClientRequest_eq update_elections_data_clientRequest_eq P Raft_intermediate_reachable_handleClientRequest Raft_intermediate_reachable_init RRI RVRTSI.", "unfold refined_raft_net_invariant_client_request', handleClientRequest in *.", "intros handleClientRequest_eq' update_elections_data_clientRequest_eq' P_net Raft_intermediate_reachable_handleClientRequest' Raft_intermediate_reachable_init'."], "tactic": "intros handleTimeout_eq' update_elections_data_timeout_eq'.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}]}, "chat": [], "original": "intros orig_base_params one_node_params raft_Params rri rvrtsi h net st' ps' gd out d l client id c handleClientRequest_eq update_elections_data_clientRequest_eq P Raft_intermediate_reachable_handleClientRequest Raft_intermediate_reachable_init RRI RVRTSI. unfold refined_raft_net_invariant_client_request in *. unfold refined_raft_net_invariant_client_request', handleClientRequest in *. intros handleClientRequest_eq' update_elections_data_clientRequest_eq' P_net Raft_intermediate_reachable_handleClientRequest' Raft_intermediate_reachable_init'. unfold handleTimeout in *. intros handleTimeout_eq update_elections_data_timeout_eq P' Raft_intermediate_reachable_timeout Raft_intermediate_reachable_init'. unfold refined_raft_net_invariant_timeout. intros handleTimeout_eq' update_elections_data_timeout_eq'. unfold refined_raft_net_invariant_client_request in *. unfold refined_raft_net_invariant_client_request', handleClientRequest in *. unfold handleTimeout in *. intros handleTimeout_eq update_elections_data_timeout_eq P Raft_intermediate_reachable Raft_intermediate_reachable_init. unfold refined_raft_net_invariant_timeout. intros handleTimeout_eq' update_elections_data_timeout_eq' net' gd d d' h reboot_eq P_net Raft_intermediate_reachable_reboot'. unfold raft_net_invariant_timeout in *. intros handleTimeout_eq update_elections_data_timeout_eq P Raft_intermediate_reachable Raft_intermediate_reachable_init. unfold refined_raft_net_invariant_timeout. intros handleTimeout_eq' update_elections_data_timeout_eq'. unfold refined_raft_net_invariant_client_request in *. unfold refined_raft_net_invariant_client_request', handleClientRequest in *. unfold handleTimeout in *. intros handleTimeout_eq update_elections_data_timeout_eq P Raft_intermediate_reachable Raft_intermediate_reachable_init. unfold refined_raft_net_invariant_timeout. intros handleTimeout_eq' update_elections_data_timeout_eq'.", "succ": false}]