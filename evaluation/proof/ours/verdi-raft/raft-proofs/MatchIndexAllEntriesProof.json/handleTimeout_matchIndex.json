[{"history": {"proof": "intros h st out st' l H. unfold handleTimeout in H. break_match. inversion H. qsimpl use: update_elections_data_timeout. destruct (votedFor st') eqn:votedForSt'. - destruct (type st) eqn:typeSt. + qsimpl use: update_elections_data_timeout. + qsimpl use: update_elections_data_timeout. + qsimpl use: update_elections_data_timeout. - fcrush depth: 3. - hauto lq: on depth: 3.", "repairs": ["", "", "", "", "no_hypos", "", "", "", "", "no_hypos", "", "no_hypos", "wrong_bullet", "no_hypos", "", "hammer", "", "hammer"], "exceptions": [{"ctx": ["intros h st out st' l H.", "unfold handleTimeout in H.", "break_match.", "inversion H."], "tactic": "unfold update_elections_data_timeout in Heqp.", "exn": "No such hypothesis: Heqp", "type": "no_hypos", "handled": true}, {"ctx": ["intros h st out st' l H.", "unfold handleTimeout in H.", "break_match.", "inversion H.", "qsimpl use: update_elections_data_timeout.", "destruct (votedFor st') eqn:votedForSt'.", "-", "destruct (type st) eqn:typeSt.", "+"], "tactic": "inversion Heqp; subst; clear Heqp.", "exn": "No such hypothesis: Heqp", "type": "no_hypos", "handled": true}, {"ctx": ["intros h st out st' l H.", "unfold handleTimeout in H.", "break_match.", "inversion H.", "qsimpl use: update_elections_data_timeout.", "destruct (votedFor st') eqn:votedForSt'.", "-", "destruct (type st) eqn:typeSt.", "+", "qsimpl use: update_elections_data_timeout."], "tactic": "reflexivity.", "exn": "No such goal. Focus next goal with bullet +.", "type": "next_goal", "handled": true}, {"ctx": ["intros h st out st' l H.", "unfold handleTimeout in H.", "break_match.", "inversion H.", "qsimpl use: update_elections_data_timeout.", "destruct (votedFor st') eqn:votedForSt'.", "-", "destruct (type st) eqn:typeSt.", "+", "qsimpl use: update_elections_data_timeout.", "+"], "tactic": "inversion Heqp.", "exn": "No such hypothesis: Heqp", "type": "no_hypos", "handled": true}, {"ctx": ["intros h st out st' l H.", "unfold handleTimeout in H.", "break_match.", "inversion H.", "qsimpl use: update_elections_data_timeout.", "destruct (votedFor st') eqn:votedForSt'.", "-", "destruct (type st) eqn:typeSt.", "+", "qsimpl use: update_elections_data_timeout.", "+", "qsimpl use: update_elections_data_timeout."], "tactic": "-", "exn": "Wrong bullet -: Expecting +.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros h st out st' l H.", "unfold handleTimeout in H.", "break_match.", "inversion H.", "qsimpl use: update_elections_data_timeout.", "destruct (votedFor st') eqn:votedForSt'.", "-", "destruct (type st) eqn:typeSt.", "+", "qsimpl use: update_elections_data_timeout.", "+", "qsimpl use: update_elections_data_timeout.", "+"], "tactic": "inversion Heqp.", "exn": "No such hypothesis: Heqp", "type": "no_hypos", "handled": true}]}, "chat": [], "original": "intros h st out st' l H. unfold handleTimeout in H. break_match. inversion H. unfold update_elections_data_timeout in Heqp. destruct (votedFor st') eqn:votedForSt'. - destruct (type st) eqn:typeSt. + inversion Heqp; subst; clear Heqp. reflexivity. + inversion Heqp. - inversion Heqp.", "succ": true}]