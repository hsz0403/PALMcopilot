[{"history": {"proof": "intros l i e H. srun best use: findAtIndex_index, findAtIndex_in.", "repairs": ["", "hammer"], "exceptions": [{"ctx": ["intros l i e H.", "unfold findAtIndex in H.", "destruct l as [|x xs].", "-", "discriminate H.", "-", "destruct (eIndex x =? i) eqn: Eq.", "+", "inversion H; subst.", "split; auto."], "tactic": "apply findAtIndex_index in Eq.", "exn": "Unable to apply lemma of type \"forall (l : list entry) (i : logIndex) (e' : entry), findAtIndex l i = Some e' -> i = eIndex e'\" on hypothesis of type \"(eIndex e =? i) = true\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["intros l i e H.", "unfold findAtIndex in H.", "destruct l as [|x xs].", "-", "discriminate H.", "-", "destruct (eIndex x =? i) eqn: Eq.", "+", "inversion H; subst.", "split; auto.", "qsimpl use: findAtIndex_index."], "tactic": "+", "exn": "Wrong bullet +: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}]}, "chat": [], "original": "intros l i e H. unfold findAtIndex in H. destruct l as [|x xs]. - discriminate H. - simpl in H. destruct (eIndex x =? i) eqn: Eq. + inversion H; subst. split; auto. apply findAtIndex_index in Eq. auto. + destruct (eIndex x <? i) eqn: Lt. * discriminate H. * apply findAtIndex_in in H. auto.", "succ": true}]