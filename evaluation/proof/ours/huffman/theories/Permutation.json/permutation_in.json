[{"history": {"proof": "intros a l m HPerm HIn. induction HPerm. - qsimpl. - qsimpl use: in_inv. - qsimpl use: in_inv. - qsimpl use: permutation_length,in_inv.", "repairs": ["", "", "", "no_hypos", "", "no_hypos", "", "no_hypos", "", "no_hypos"], "exceptions": [{"ctx": ["intros a l m HPerm HIn.", "induction HPerm.", "-"], "tactic": "intros HIn'.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros a l m HPerm HIn.", "induction HPerm.", "-"], "tactic": "inversion HIn'.", "exn": "No such hypothesis: HIn'", "type": "no_hypos", "handled": true}, {"ctx": ["intros a l m HPerm HIn.", "induction HPerm.", "-", "qsimpl.", "-"], "tactic": "intros HIn'.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros a l m HPerm HIn.", "induction HPerm.", "-", "qsimpl.", "-"], "tactic": "apply in_inv in HIn'.", "exn": "No such hypothesis: HIn'", "type": "no_hypos", "handled": true}, {"ctx": ["intros a l m HPerm HIn.", "induction HPerm.", "-", "qsimpl.", "-", "qsimpl use: in_inv."], "tactic": "destruct HIn' as [Heq | HIn'].", "exn": "No such goal. Focus next goal with bullet -.", "type": "next_goal", "handled": true}, {"ctx": ["intros a l m HPerm HIn.", "induction HPerm.", "-", "qsimpl.", "-", "qsimpl use: in_inv.", "-"], "tactic": "intros HIn'.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros a l m HPerm HIn.", "induction HPerm.", "-", "qsimpl.", "-", "qsimpl use: in_inv.", "-"], "tactic": "apply in_inv in HIn'.", "exn": "No such hypothesis: HIn'", "type": "no_hypos", "handled": true}, {"ctx": ["intros a l m HPerm HIn.", "induction HPerm.", "-", "qsimpl.", "-", "qsimpl use: in_inv.", "-", "qsimpl use: in_inv."], "tactic": "destruct HIn' as [Heq | HIn'].", "exn": "No such goal. Focus next goal with bullet -.", "type": "next_goal", "handled": true}, {"ctx": ["intros a l m HPerm HIn.", "induction HPerm.", "-", "qsimpl.", "-", "qsimpl use: in_inv.", "-", "qsimpl use: in_inv.", "-"], "tactic": "intros HIn'.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros a l m HPerm HIn.", "induction HPerm.", "-", "qsimpl.", "-", "qsimpl use: in_inv.", "-", "qsimpl use: in_inv.", "-"], "tactic": "apply (permutation_length _ _ l2) in p as Hlen.", "exn": "No such hypothesis: p", "type": "no_hypos", "handled": true}, {"ctx": ["intros a l m HPerm HIn.", "induction HPerm.", "-", "qsimpl.", "-", "qsimpl use: in_inv.", "-", "qsimpl use: in_inv.", "-", "qsimpl use: permutation_length,in_inv."], "tactic": "rewrite <- Hlen.", "exn": "No such goal.", "type": "no_goal", "handled": true}]}, "chat": [], "original": "intros a l m HPerm HIn. induction HPerm. - intros HIn'. inversion HIn'. - intros HIn'. apply in_inv in HIn'. destruct HIn' as [Heq | HIn']. + rewrite Heq. apply in_inv in HIn. destruct HIn as [Heq | HIn]. * left. rewrite Heq. apply permutation_skip. * right. apply permutation_sym, (incl_cons b _ l2) with (a := a). ++ apply in_or_app. left. apply in_inv in HIn as [Heq'|HIn']. ** symmetry in Heq'. contradiction. ** auto. ++ apply permutation_sym. auto. ++ apply in_ex_app. exists l1, l2. auto. + apply in_inv in HIn. destruct HIn as [Heq | HIn]. * rewrite Heq. left. apply permutation_skip. * right. apply (incl_cons a _ l2). ++ apply in_or_app. right. auto. ++ auto. - intros HIn'. apply in_inv in HIn'. destruct HIn' as [Heq | HIn']. + rewrite Heq. apply permutation_swap. + apply in_inv in HIn'. destruct HIn' as [Heq|HIn']. * rewrite <- Heq. apply permutation_swap. * apply in_inv in HIn. destruct HIn as [Heq | HIn]. ++ rewrite <- Heq. apply permutation_skip. ++ right. apply Add_in with l; auto. - intros HIn'. apply (permutation_length _ _ l2) in p as Hlen. rewrite <- Hlen. apply IHHPerm2, IHHPerm1. auto.", "succ": true}]