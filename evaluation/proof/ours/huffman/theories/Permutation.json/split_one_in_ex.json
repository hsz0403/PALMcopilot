[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros a l1 Hin_a_l1."], "tactic": "exists (fst (partition (fun x => if in_dec a l1 then false else true) l1)).", "exn": "In environment A : Type a : A l1 : list A Hin_a_l1 : In a l1 x : ?A0 The term \"a\" has type \"A\" while it is expected to have type \"forall x0 y : ?A1, {x0 = y} + {x0 <> y}\".", "type": "wrong_type", "handled": true}, {"ctx": ["intros a l1 Hin_a_l1.", "qsimpl use: partition,fst,true,false,in_dec."], "tactic": "apply in_permutation_ex.", "exn": "In environment X1 : forall A : Type, (forall x y : A, {x = y} + {x = y -> False}) -> forall (a : A) (l : list A), {In a l} + {In a l -> False} H0, H : bool A : Type a : A l1 : list A Hin_a_l1 : In a l1 X : forall A : Type, (A -> bool) -> list A -> list A * list A X2 : A -> A -> A Unable to unify \"exists l1 : list A, permutation (?M1673 :: l1) ?M1674\" with \"exists l2 : list A, In (a, l2) (split_one l1)\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros a l1 Hin_a_l1.", "qsimpl use: partition,fst,true,false,in_dec.", "qsimpl use: partition,fst,true,false,in_dec,in_permutation_ex."], "tactic": "apply in_dec.", "exn": "In environment A : Type H3 : forall (a : A) (l : list A), In a l -> exists l1 : list A, permutation (a :: l1) l X4 : forall A : Type, (forall x y : A, {x = y} + {x = y -> False}) -> forall (a : A) (l : list A), {In a l} + {In a l -> False} H2, H1 : bool X1 : forall A : Type, (forall x y : A, {x = y} + {x = y -> False}) -> forall (a : A) (l : list A), {In a l} + {In a l -> False} H0, H : bool a : A l1 : list A Hin_a_l1 : In a l1 X, X0 : forall A : Type, (A -> bool) -> list A -> list A * list A X2 : A X5 : A -> A -> A Unable to unify \"{In ?M2194 ?M2195} + {~ In ?M2194 ?M2195}\" with \"exists l2 : list A, In (a, l2) (split_one l1)\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros a l1 Hin_a_l1. exists (fst (partition (fun x => if in_dec a l1 then false else true) l1)). apply in_permutation_ex. apply in_dec.", "succ": false}]