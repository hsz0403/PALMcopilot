[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros a l1 l2 H."], "tactic": "induction H.", "exn": "Not an inductive product.", "type": "not_inductive_product", "handled": true}, {"ctx": ["intros a l1 l2 H."], "tactic": "intros Hin.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros a l1 l2 H."], "tactic": "inversion_clear Hin.", "exn": "No such hypothesis: Hin", "type": "no_hypos", "handled": true}]}, "chat": [], "original": "intros a l1 l2 H. induction H. - intros Hin. inversion_clear Hin. reflexivity. inversion H. - intros Hin. apply permutation_cons_ex in H. destruct H as [l3 [l4 [H1 H2]]]. apply in_ex_app in Hin. destruct Hin as [l11 [l12 Heq]]. apply permutation_cons_ex_aux with (l11:=l11) (l12:=l12) in H. + destruct H as [l5 [l6 [H3 H4]]]. rewrite Heq. rewrite H1. apply permutation_skip. apply IHpermutation. apply H4. + apply Heq. - intros Hin. apply in_permutation_ex in Hin. destruct Hin as [l3 Hperm]. apply permutation_skip. apply IHpermutation. apply Hperm. - intros Hin. apply in_permutation_ex in Hin. destruct Hin as [l3 Hperm]. apply permutation_trans with (l2:=l3) in H. + apply IHpermutation1. apply Hperm. + apply IHpermutation2. apply Hperm.", "succ": false}]