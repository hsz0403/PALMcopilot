[{"history": {"proof": "", "repairs": [], "exceptions": []}, "chat": [], "original": "Inductive pbleaf : Set := | leaf : A -> pbleaf. Inductive pbtree : Set := | leaf_node : pbleaf -> pbtree | node : pbtree -> pbtree -> pbtree. Fixpoint compute_pbcode (t : pbtree) : list (pbtree * pbtree) := match t with | leaf_node _ => [] | node l r => [(l, r)] end. Definition distinct_pbleaves (t : pbtree) : bool := match t with | leaf_node _ => true | node l r => match eqA_dec (leaf_label l) (leaf_label r) with | left _ => false | right _ => true end end. Fixpoint pbbuild (t : pbtree) : pbtree := match t with | leaf_node _ => leaf_node empty | node l r => node (pbbuild l) (pbbuild r) end.", "hammer_times": 1, "succ": false}]