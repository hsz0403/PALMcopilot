[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["unfold well_founded."], "tactic": "apply wf_clos_trans.", "exn": "The reference wf_clos_trans was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["unfold well_founded.", "apply Wf_nat.lt_wf_ind."], "tactic": "induction x as [cond1 p1 Hrect1 cond2 p2 Hrect2] using (measure_rect (fun p => size (fst p) + size (snd p))); simpl in |- *.", "exn": "The reference measure_rect was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["unfold well_founded.", "apply Wf_nat.lt_wf_ind."], "tactic": "apply wf_clos.", "exn": "The reference wf_clos was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["unfold well_founded.", "apply Wf_nat.lt_wf_ind."], "tactic": "intros y H.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["unfold well_founded.", "apply Wf_nat.lt_wf_ind."], "tactic": "apply Hrect1.", "exn": "The reference Hrect1 was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["unfold well_founded.", "apply Wf_nat.lt_wf_ind."], "tactic": "inversion_clear H; auto.", "exn": "No such hypothesis: H", "type": "no_hypos", "handled": true}, {"ctx": ["unfold well_founded.", "apply Wf_nat.lt_wf_ind.", "qsimpl time: 1."], "tactic": "apply Hrect2.", "exn": "The reference Hrect2 was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["unfold well_founded.", "apply Wf_nat.lt_wf_ind.", "qsimpl time: 1.", "apply PeanoNat.Nat.order_induction_0."], "tactic": "inversion_clear H; auto.", "exn": "No such hypothesis: H", "type": "no_hypos", "handled": true}]}, "chat": [], "original": "unfold well_founded. apply wf_clos_trans. intros; unfold reduces. induction x as [cond1 p1 Hrect1 cond2 p2 Hrect2] using (measure_rect (fun p => size (fst p) + size (snd p))); simpl in |- *. apply wf_clos. intros y H. apply Hrect1. inversion_clear H; auto. apply Hrect2. inversion_clear H; auto. Defined.", "hammer_times": 8, "succ": false}]