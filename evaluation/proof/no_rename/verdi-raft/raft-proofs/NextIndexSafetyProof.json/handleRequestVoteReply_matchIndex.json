[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros n st src t v H.", "unfold handleRequestVoteReply in H.", "destruct (currentTerm st <? t) eqn:H1.", "-", "inversion H.", "-", "destruct (t <? currentTerm st) eqn:H2.", "+", "inversion H."], "tactic": "+", "exn": "Wrong bullet +: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros n st src t v H.", "unfold handleRequestVoteReply in H.", "destruct (currentTerm st <? t) eqn:H1.", "-", "inversion H.", "-", "destruct (t <? currentTerm st) eqn:H2.", "+", "inversion H.", "shelve.", "+"], "tactic": "destruct (voteGranted && wonElection (dedup name_eq_dec (src :: votesReceived st))) eqn:H3.", "exn": "The reference voteGranted was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros n st src t v H.", "unfold handleRequestVoteReply in H.", "destruct (currentTerm st <? t) eqn:H1.", "-", "inversion H.", "-", "destruct (t <? currentTerm st) eqn:H2.", "+", "inversion H.", "shelve.", "+", "destruct (v && wonElection (dedup name_eq_dec (src :: votesReceived st))) eqn:H3.", "*"], "tactic": "*", "exn": "Wrong bullet *: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}]}, "chat": [], "original": "intros n st src t v H. unfold handleRequestVoteReply in H. destruct (currentTerm st <? t) eqn:H1. - inversion H. - destruct (t <? currentTerm st) eqn:H2. + inversion H. + destruct (voteGranted && wonElection (dedup name_eq_dec (src :: votesReceived st))) eqn:H3. * injection H as H4 H5. split. ++ symmetry in H4. apply andb_true_eq in H4. destruct H4. apply andb_true_eq in H6. destruct H6. auto. ++ intuition. * injection H as H4 H5. right. apply andb_false_iff in H3. destruct H3. intuition.", "succ": false}]