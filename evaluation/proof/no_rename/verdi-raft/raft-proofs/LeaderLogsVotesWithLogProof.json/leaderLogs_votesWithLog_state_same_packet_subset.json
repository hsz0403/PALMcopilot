[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["unfold refined_raft_net_invariant_state_same_packet_subset.", "intros.", "unfold leaderLogs_votesWithLog in *.", "intros."], "tactic": "apply H in H0 as Hquot.", "exn": "Unable to apply lemma of type \"forall h : Net.name, nwState net h = nwState net' h\" on hypothesis of type \"forall p : packet, In p (nwPackets net') -> In p (nwPackets net)\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["unfold refined_raft_net_invariant_state_same_packet_subset.", "intros.", "unfold leaderLogs_votesWithLog in *.", "intros."], "tactic": "destruct Hquot as [quorum [Hnodup [Hlength Hvotes]]].", "exn": "The reference Hquot was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["unfold refined_raft_net_invariant_state_same_packet_subset.", "intros.", "unfold leaderLogs_votesWithLog in *.", "intros.", "destruct raft_refined_failure_params as [quorum [Hnodup [Hlength Hvotes]]]."], "tactic": "exists quorum.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params rri : raft_refinement_interface vrmutdi : votesReceived_moreUpToDate_interface rvrmutdi : requestVoteReply_moreUpToDate_interface net, net' : network H : forall h : Net.name, nwState net h = nwState net' h H0 : forall p : packet, In p (nwPackets net') -> In p (nwPackets net) H1 : forall (t : term) (ll : list entry) (leader : Net.name), In (t, ll) (leaderLogs (fst (nwState net leader))) -> exists quorum : list Net.name, NoDup quorum /\\\\ length quorum > div2 (length nodes) /\\\\ (forall h : Net.name, In h quorum -> exists log : list entry, moreUpToDate (maxTerm ll) (maxIndex ll) (maxTerm log) (maxIndex log) = true /\\\\ In (t, leader, log) (votesWithLog (fst (nwState net h)))) H2 : refined_raft_intermediate_reachable net t : term ll : list entry leader : Net.name H3 : In (t, ll) (leaderLogs (fst (nwState net' leader))) quorum : data -> data The term \"quorum\" has type \"data -> data\" while it is expected to have type \"list Net.name\".", "type": "wrong_type", "handled": true}, {"ctx": ["unfold refined_raft_net_invariant_state_same_packet_subset.", "intros.", "unfold leaderLogs_votesWithLog in *.", "intros.", "destruct raft_refined_failure_params as [quorum [Hnodup [Hlength Hvotes]]]."], "tactic": "split; [apply Hnodup|].", "exn": "Unable to find an instance for the variable x.", "type": "no_instance_var", "handled": true}, {"ctx": ["unfold refined_raft_net_invariant_state_same_packet_subset.", "intros.", "unfold leaderLogs_votesWithLog in *.", "intros.", "destruct raft_refined_failure_params as [quorum [Hnodup [Hlength Hvotes]]]."], "tactic": "split; [apply Hlength|].", "exn": "Unable to find an instance for the variable x.", "type": "no_instance_var", "handled": true}, {"ctx": ["unfold refined_raft_net_invariant_state_same_packet_subset.", "intros.", "unfold leaderLogs_votesWithLog in *.", "intros.", "destruct raft_refined_failure_params as [quorum [Hnodup [Hlength Hvotes]]]."], "tactic": "apply Hvotes in H1 as Hexists.", "exn": "The reference Hvotes was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["unfold refined_raft_net_invariant_state_same_packet_subset.", "intros.", "unfold leaderLogs_votesWithLog in *.", "intros.", "destruct raft_refined_failure_params as [quorum [Hnodup [Hlength Hvotes]]].", "apply In in H1 as Hexists."], "tactic": "destruct Hexists as [log [Hmoreup Hvoteswithlog]].", "exn": "Not an inductive product.", "type": "not_inductive_product", "handled": true}, {"ctx": ["unfold refined_raft_net_invariant_state_same_packet_subset.", "intros.", "unfold leaderLogs_votesWithLog in *.", "intros.", "destruct raft_refined_failure_params as [quorum [Hnodup [Hlength Hvotes]]].", "apply In in H1 as Hexists."], "tactic": "exists log.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params rri : raft_refinement_interface vrmutdi : votesReceived_moreUpToDate_interface rvrmutdi : requestVoteReply_moreUpToDate_interface net, net' : network H : forall h : Net.name, nwState net h = nwState net' h H0 : forall p : packet, In p (nwPackets net') -> In p (nwPackets net) H1 : forall (t : term) (ll : list entry) (leader : Net.name), In (t, ll) (leaderLogs (fst (nwState net leader))) -> exists quorum : list Net.name, NoDup quorum /\\\\ length quorum > div2 (length nodes) /\\\\ (forall h : Net.name, In h quorum -> exists log : list entry, moreUpToDate (maxTerm ll) (maxIndex ll) (maxTerm log) (maxIndex log) = true /\\\\ In (t, leader, log) (votesWithLog (fst (nwState net h)))) Hexists : Prop H2 : refined_raft_intermediate_reachable net t : term ll : list entry leader : Net.name H3 : In (t, ll) (leaderLogs (fst (nwState net' leader))) quorum : data -> data The term \"log\" has type \"RaftState.raft_data term name entry logIndex serverType data clientId output -> list entry\" while it is expected to have type \"list Net.name\".", "type": "wrong_type", "handled": true}, {"ctx": ["unfold refined_raft_net_invariant_state_same_packet_subset.", "intros.", "unfold leaderLogs_votesWithLog in *.", "intros.", "destruct raft_refined_failure_params as [quorum [Hnodup [Hlength Hvotes]]].", "apply In in H1 as Hexists."], "tactic": "split; [apply Hmoreup|].", "exn": "Unable to find an instance for the variable x.", "type": "no_instance_var", "handled": true}, {"ctx": ["unfold refined_raft_net_invariant_state_same_packet_subset.", "intros.", "unfold leaderLogs_votesWithLog in *.", "intros.", "destruct raft_refined_failure_params as [quorum [Hnodup [Hlength Hvotes]]].", "apply In in H1 as Hexists."], "tactic": "apply in_map_iff in Hvoteswithlog.", "exn": "No such hypothesis: Hvoteswithlog", "type": "no_hypos", "handled": true}, {"ctx": ["unfold refined_raft_net_invariant_state_same_packet_subset.", "intros.", "unfold leaderLogs_votesWithLog in *.", "intros.", "destruct raft_refined_failure_params as [quorum [Hnodup [Hlength Hvotes]]].", "apply In in H1 as Hexists."], "tactic": "destruct Hvoteswithlog as [[tt hh] [Heq Hin]].", "exn": "The reference Hvoteswithlog was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["unfold refined_raft_net_invariant_state_same_packet_subset.", "intros.", "unfold leaderLogs_votesWithLog in *.", "intros.", "destruct raft_refined_failure_params as [quorum [Hnodup [Hlength Hvotes]]].", "apply In in H1 as Hexists.", "destruct raft_refined_failure_params as [[tt hh] [Heq Hin]]."], "tactic": "rewrite <- Heq.", "exn": "The reference Heq was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["unfold refined_raft_net_invariant_state_same_packet_subset.", "intros.", "unfold leaderLogs_votesWithLog in *.", "intros.", "destruct raft_refined_failure_params as [quorum [Hnodup [Hlength Hvotes]]].", "apply In in H1 as Hexists.", "destruct raft_refined_failure_params as [[tt hh] [Heq Hin]]."], "tactic": "apply in_map.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params rri : raft_refinement_interface vrmutdi : votesReceived_moreUpToDate_interface rvrmutdi : requestVoteReply_moreUpToDate_interface net, net' : network H : forall h : Net.name, nwState net h = nwState net' h H0 : forall p : packet, In p (nwPackets net') -> In p (nwPackets net) H1 : forall (t : term) (ll : list entry) (leader : Net.name), In (t, ll) (leaderLogs (fst (nwState net leader))) -> exists quorum : list Net.name, NoDup quorum /\\\\ length quorum > div2 (length nodes) /\\\\ (forall h : Net.name, In h quorum -> exists log : list entry, moreUpToDate (maxTerm ll) (maxIndex ll) (maxTerm log) (maxIndex log) = true /\\\\ In (t, leader, log) (votesWithLog (fst (nwState net h)))) Hexists : Prop H2 : refined_raft_intermediate_reachable net t : term ll : list entry leader : Net.name H3 : In (t, ll) (leaderLogs (fst (nwState net' leader))) quorum : data -> data Unable to unify \"(fix In (a : ?M1659) (l : list ?M1659) {struct l} : Prop := match l with | [] => False | b :: m => b = a \\\\/ In a m end) (?M1660 ?M1662) (map ?M1660 ?M1661)\" with \"let (data, _, _) := GhostSimulations.refined_base_params in data\".", "type": "cannot_unify", "handled": true}, {"ctx": ["unfold refined_raft_net_invariant_state_same_packet_subset.", "intros.", "unfold leaderLogs_votesWithLog in *.", "intros.", "destruct raft_refined_failure_params as [quorum [Hnodup [Hlength Hvotes]]].", "apply In in H1 as Hexists.", "destruct raft_refined_failure_params as [[tt hh] [Heq Hin]]."], "tactic": "apply Hin.", "exn": "The reference Hin was not found in the current environment.", "type": "ref_not_found", "handled": true}]}, "chat": [], "original": "intros. unfold refined_raft_net_invariant_state_same_packet_subset. intros. unfold leaderLogs_votesWithLog in *. intros. apply H in H0 as Hquot. destruct Hquot as [quorum [Hnodup [Hlength Hvotes]]]. exists quorum. split; [apply Hnodup|]. split; [apply Hlength|]. intros. apply Hvotes in H1 as Hexists. destruct Hexists as [log [Hmoreup Hvoteswithlog]]. exists log. split; [apply Hmoreup|]. apply in_map_iff in Hvoteswithlog. destruct Hvoteswithlog as [[tt hh] [Heq Hin]]. rewrite <- Heq. apply in_map. apply Hin.", "succ": false}]