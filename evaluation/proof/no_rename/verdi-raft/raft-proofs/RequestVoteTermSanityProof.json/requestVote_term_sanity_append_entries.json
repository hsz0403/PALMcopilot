[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["unfold refined_raft_net_invariant_append_entries.", "intros.", "unfold requestVote_term_sanity in *.", "intros."], "tactic": "break_match; injects; rewrite Heqp.", "exn": "The reference injects was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["unfold refined_raft_net_invariant_append_entries.", "intros.", "unfold requestVote_term_sanity in *.", "intros.", "inversion H1; subst; clear H1."], "tactic": "rewrite H2 in H0.", "exn": "No such hypothesis: H0", "type": "no_hypos", "handled": true}, {"ctx": ["unfold refined_raft_net_invariant_append_entries.", "intros.", "unfold requestVote_term_sanity in *.", "intros.", "inversion H1; subst; clear H1."], "tactic": "rewrite H6 in H0.", "exn": "No such hypothesis: H0", "type": "no_hypos", "handled": true}, {"ctx": ["unfold refined_raft_net_invariant_append_entries.", "intros.", "unfold requestVote_term_sanity in *.", "intros.", "inversion H1; subst; clear H1."], "tactic": "specialize (H4 _ _ _ _ _ _ _ _ _ _ _ _ Na_eq_name _ _ _ _ _ H5 H7).", "exn": "The reference Na_eq_name was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["unfold refined_raft_net_invariant_append_entries.", "intros.", "unfold requestVote_term_sanity in *.", "intros.", "inversion H1; subst; clear H1."], "tactic": "apply H4.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params rri : raft_refinement_interface xs : list packet p : packet ys : list packet net : network st' : name -> data ps' : list packet d : raft_data m : msg t : term n : name pli : logIndex plt : term es : list entry ci : logIndex H : handleAppendEntries (pDst p) (snd (nwState net (pDst p))) t n pli plt es ci = (d, m) H2 : forall (t : term) (h : name) (mi : logIndex) (mt : term) (p : packet), In p (nwPackets net) -> pBody p = RequestVote t h mi mt -> t <= currentTerm (snd (nwState net (pSrc p))) H3 : refined_raft_intermediate_reachable net H4 : nwPackets net = xs ++ p :: ys H5 : forall h : name, st' h = update name_eq_dec (nwState net) (pDst p) (update_elections_data_appendEntries (pDst p) (nwState net (pDst p)) t n pli plt es ci, d) h H6 : forall p' : packet, In p' ps' -> In p' (xs ++ ys) \\\\/ p' = {| pSrc := pDst p; pDst := pSrc p; pBody := m |} t0 : term h : name mi : logIndex mt : term p0 : packet H7 : In p0 (nwPackets {| nwPackets := ps'; nwState := st' |}) H8 : pBody p0 = RequestVote t0 h mi mt H10 : pBody p = AppendEntries t n pli plt es ci Unable to unify \"nwPackets net = xs ++ p :: ys\" with \"t0 <= currentTerm (snd (nwState {| nwPackets := ps'; nwState := st' |} (pSrc p0)))\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros. unfold refined_raft_net_invariant_append_entries. intros. unfold requestVote_term_sanity in *. intros. unfold handleAppendEntries in H0. break_match; injects; rewrite Heqp. - inversion H1; subst; clear H1. rewrite H2 in H0. rewrite H6 in H0. specialize (H4 _ _ _ _ _ _ _ _ _ _ _ _ Na_eq_name _ _ _ _ _ H5 H7). apply H4. auto. - auto.", "succ": false}]