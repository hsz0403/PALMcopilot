[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["unfold refined_raft_net_invariant_reboot, allEntries_votesWithLog in *.", "intros."], "tactic": "apply H.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params rri : raft_refinement_interface aeli : allEntries_log_interface vwltsi : votesWithLog_term_sanity_interface vvwlci : votes_votesWithLog_correspond_interface vci : votes_correct_interface net, net' : network gd : ghost_data d : RaftState.raft_data term name entry logIndex serverType data clientId output h : Net.name d' : raft_data H : reboot d = d' H0 : forall (t : term) (e : entry) (t' : term) (leader : name) (h : Net.name) (log : list entry), In (t, e) (allEntries (fst (nwState net h))) -> In (t', leader, log) (votesWithLog (fst (nwState net h))) -> t < t' -> In e log \\\\/ (exists (t'' : term) (leader' : Net.name) (log' : list entry), In (t'', log') (leaderLogs (fst (nwState net leader'))) /\\\\ t < t'' < t' /\\\\ ~ In e log') H1 : refined_raft_intermediate_reachable net H2 : nwState net h = (gd, d) H3 : forall h' : Net.name, nwState net' h' = update name_eq_dec (nwState net) h (gd, d') h' H4 : nwPackets net = nwPackets net' t : term e : entry t' : term leader : name h0 : Net.name log : list entry H5 : In (t, e) (allEntries (fst (nwState net' h0))) H6 : In (t', leader, log) (votesWithLog (fst (nwState net' h0))) H7 : t < t' Unable to unify \"reboot d = d'\" with \"In e log \\\\/ (exists (t'' : term) (leader' : Net.name) (log' : list entry), In (t'', log') (leaderLogs (fst (nwState net' leader'))) /\\\\ t < t'' < t' /\\\\ ~ In e log')\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros. unfold refined_raft_net_invariant_reboot, allEntries_votesWithLog in *. intros. intros. intros. intros. intros. intros. intros. intros. intros. intros. intros. intros. intros. intros. intros. intros. intros. intros. intros. unfold votes_votesWithLog_correspond_invariant in *. intros. unfold allEntries_votesWithLog_invariant, allEntries_log_invariant, votesWithLog_term_sanity_invariant, votes_votesWithLog_correspond_invariant, votes_correct_invariant, refined_raft_net_invariant_reboot, refined_raft_net_invariant_reboot', refined_raft_net_invariant_reboot' in *. intros. apply H. auto.", "succ": false}]