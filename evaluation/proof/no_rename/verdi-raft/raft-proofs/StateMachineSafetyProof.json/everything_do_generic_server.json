[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["unfold msg_refined_raft_net_invariant_do_generic_server'.", "intros net st' ps' gd d os d' ms h H_doGenericServer H_P H_reachable."], "tactic": ["apply msg_refined_raft_net_invariant_do_generic_server'_weak.", ""], "exn": "Applied theorem does not have enough premises.", "type": "no_enough_premises", "handled": false}]}, "chat": [], "original": "intros. unfold msg_refined_raft_net_invariant_do_generic_server'. intros net st' ps' gd d os d' ms h H_doGenericServer H_P H_reachable. apply msg_refined_raft_net_invariant_do_generic_server'_weak. intros P_init P_clientReq P_timeout P_app P_appResp P_reqVote P_reqVoteResp P_doLeader P_doGeneric P_stateSubset P_reboot. apply (msg_refined_raft_net_invariant' P_init P_clientReq P_timeout P_app P_appResp P_reqVote P_reqVoteResp P_doLeader P_doGeneric P_stateSubset). - apply H_reachable. - intros. unfold msg_refined_raft_intermediate_reachable in *. split; auto. + apply H_P. + unfold ghost_log_entries_match_interface, ghost_log_entries_match_host in glci. apply glci; auto.", "succ": false}]