[{"history": {"proof": "", "repairs": [], "exceptions": []}, "chat": [], "original": "intros l x y H1 H2. revert x H1. induction l as [|a l' IHl]. - simpl. auto. - intros. simpl. specialize (IHl (Init.Nat.max a x)). intros. apply IHl. + apply fold_left_maximum_le with (y:=x). * apply fold_left_maximum_le' with (y:=x). apply H1. * apply fold_left_maximum_le. apply Nat.le_max_l. + apply Nat.max_le_iff. split. * apply Nat.le_max_l. * apply Nat.le_trans with (m:=Init.Nat.max a x). ++ apply Nat.le_max_l. ++ apply H2.", "succ": false}]