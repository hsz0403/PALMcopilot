[{"history": {"proof": "", "repairs": [], "exceptions": []}, "chat": [], "original": "intros net h h' t lli llt t' CEt u. unfold candidateEntriesTerm in *. unfold update. rewrite <- u. clear u. simpl. unfold handleRequestVote. simpl. destruct (currentTerm (snd (nwState net h))) as [curr_term|]; simpl. - destruct (currentTerm (advanceCurrentTerm (snd (nwState net h)) t)) as [curr_term'|]; simpl. + destruct (votedFor (advanceCurrentTerm (snd (nwState net h)) t)) as [votedFor_cid|]; simpl. * destruct (votedFor (snd (nwState net h))) as [curr_votedFor|]; simpl. { destruct (currentTerm (advanceCurrentTerm (snd (nwState net h)) t) =? curr_term') eqn:Heq2. - destruct (name_eq_dec curr_votedFor votedFor_cid) as [Heq3 | Hneq3]; simpl. + rewrite Heq3. auto. + destruct (type (snd (nwState net h)) =? Candidate) eqn:Heq4. * contradict Heq4. apply -> (candidateEntriesTerm_same (nwState net) (update name_eq_dec (nwState net) h (advanceCurrentTerm (snd (nwState net h)) t))); auto. * auto. - auto. } * auto. + auto. - auto.", "succ": false}]