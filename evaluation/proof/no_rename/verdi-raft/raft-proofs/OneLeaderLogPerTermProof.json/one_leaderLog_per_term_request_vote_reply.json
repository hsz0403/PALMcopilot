[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["unfold refined_raft_net_invariant_request_vote_reply in *.", "intros."], "tactic": "apply H0; auto.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params rri : raft_refinement_interface llvwli : leaderLogs_votesWithLog_interface vci : votes_correct_interface cci : cronies_correct_interface vvci : votes_votesWithLog_correspond_interface lltsi : leaderLogs_term_sanity_interface xs : list packet p : packet ys : list packet net : network st' : name -> data ps' : list packet gd : electionsData d : raft_data t : nat v : bool H : handleRequestVoteReply (pDst p) (snd (nwState net (pDst p))) (pSrc p) t v = d H0 : gd = update_elections_data_requestVoteReply (pDst p) (pSrc p) t v (nwState net (pDst p)) H1 : pBody p = RequestVoteReply t v H2 : one_leaderLog_per_term net H3 : refined_raft_intermediate_reachable net H4 : nwPackets net = xs ++ p :: ys H5 : forall h : name, st' h = update name_eq_dec (nwState net) (pDst p) (gd, d) h H6 : forall p' : packet, In p' ps' -> In p' (xs ++ ys) Unable to unify \"gd = update_elections_data_requestVoteReply (pDst p) (pSrc p) t v (nwState net (pDst p))\" with \"one_leaderLog_per_term {| nwPackets := ps'; nwState := st' |}\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "unfold refined_raft_net_invariant_request_vote_reply in *. intros. apply H0; auto.", "succ": false}]