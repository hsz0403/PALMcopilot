[{"history": {"proof": "", "repairs": [], "exceptions": []}, "chat": [], "original": "simpl. intros. intros. intros. intros. intros. intros. intros. intros. intros H_sorted H_in_e_l H_in_e'_l H_lt_H_in. apply Nat.leb_le in H_lt_H_in. apply in_split in H_in_e_l. destruct H_in_e_l as [l1 [l2 H_l1l2]]. rewrite H_l1l2 in H_sorted. apply sorted_Split in H_sorted. destruct H_sorted as [_ H_sorted_l2]. rewrite H_l1l2 in H_in_e'_l. apply in_or_app in H_in_e'_l. destruct H_in_e'_l as [H_in_e'_l1 | H_in_e'_l2]. - apply in_split in H_in_e'_l1. destruct H_in_e'_l1 as [l1' [l2' H_l1'l2']]. rewrite H_l1'l2' in H_sorted_l2. apply sorted_app_in_1 in H_sorted_l2. apply sorted_maxIndex in H_sorted_l2. apply Nat.lt_le_incl in H_sorted_l2. apply le_lt_or_eq in H_sorted_l2. destruct H_sorted_l2 as [H_lt_H_max | H_eq_H_max]. + apply (sorted_app_in_in l1). apply Nat.lt_le_incl. apply H_lt_H_max. apply H_in_e_l. auto. + apply Nat.eq_le_incl in H_eq_H_max. rewrite H_eq_H_max in H_lt_H_in. contradiction. - apply (sorted_app_in_in l1). apply sorted_Split in H_sorted. apply H_sorted. + apply Nat.lt_le_incl. apply (sorted_lt_max l1). apply Nat.lt_le_incl. apply H_lt_H_in. + apply in_or_app. right. apply H_in_e'_l2. - apply H_in_e_l. - apply H_in_e'_l. - apply H_in_e_l. - apply H_in_e'_l.", "succ": false}]