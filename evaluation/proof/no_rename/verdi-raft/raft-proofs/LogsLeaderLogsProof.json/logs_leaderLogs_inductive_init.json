[{"history": {"proof": "unfold refined_raft_net_invariant_init. hfcrush depth: 3.", "repairs": ["", "hammer"], "exceptions": []}, "chat": [], "original": "intros. unfold refined_raft_net_invariant_init. intros net H_reachable. unfold logs_leaderLogs_inductive. split. - unfold logs_leaderLogs. intros. unfold logs_leaderLogs_host in H. destruct H as [H_logs_sort [H_entries_match [H_gt_0 H_contig]]]. unfold logs_sorted_host, entries_sorted, entries_gt_0, entries_contiguous in *. unfold logs_sorted, logs_sorted_nw, packets_gt_prevIndex, packets_ge_prevTerm, entries_sorted_nw, entries_contiguous_nw, entries_gt_0_nw in *. intros. specialize (H_logs_sort h). specialize (H_entries_match h h' t ll). specialize (H_gt_0 h). specialize (H_contig h). intuition. - unfold logs_leaderLogs_nw. intros. unfold logs_leaderLogs_host in H. destruct H as [H_logs_sort [H_entries_match [H_gt_0 H_contig]]]. unfold logs_sorted_host, entries_sorted, entries_gt_0, entries_contiguous in *. unfold logs_sorted, logs_sorted_nw, packets_gt_prevIndex, packets_ge_prevTerm, entries_sorted_nw, entries_contiguous_nw, entries_gt_0_nw in *. intros. specialize (H_logs_sort h). specialize (H_entries_match h h' t ll). specialize (H_gt_0 h). specialize (H_contig h). intuition.", "succ": true}]