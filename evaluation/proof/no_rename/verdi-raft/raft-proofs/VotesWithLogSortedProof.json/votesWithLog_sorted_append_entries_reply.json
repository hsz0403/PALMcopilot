[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["unfold refined_raft_net_invariant_append_entries_reply, votesWithLog_sorted in *.", "intros."], "tactic": "specialize (H h t h' log).", "exn": "Illegal application (Non-functional construction): The expression \"H\" of type \"handleAppendEntriesReply (pDst p) (snd (nwState net (pDst p))) (pSrc p) t es res = (d, m)\" cannot be applied to the term \"h\" : \"Net.name\"", "type": "exp_cannot_apply", "handled": true}, {"ctx": ["unfold refined_raft_net_invariant_append_entries_reply, votesWithLog_sorted in *.", "intros."], "tactic": "apply H.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params rri : raft_refinement_interface si : sorted_interface xs : list packet p : packet ys : list packet net : network st' : name -> data ps' : list packet gd : ghost_data d : raft_data m : list (name * msg) t : nat es : list entry res : bool H : handleAppendEntriesReply (pDst p) (snd (nwState net (pDst p))) (pSrc p) t es res = (d, m) H0 : gd = fst (nwState net (pDst p)) H1 : pBody p = AppendEntriesReply t es res H2 : forall (h : Net.name) (t : term) (h' : name) (log : list entry), In (t, h', log) (votesWithLog (fst (nwState net h))) -> sorted log H3 : refined_raft_intermediate_reachable net H4 : nwPackets net = xs ++ p :: ys H5 : forall h : name, st' h = update name_eq_dec (nwState net) (pDst p) (gd, d) h H6 : forall p' : packet, In p' ps' -> In p' (xs ++ ys) \\\\/ In p' (send_packets (pDst p) m) h : Net.name t0 : term h' : name log : list entry H7 : In (t0, h', log) (votesWithLog (fst (nwState {| nwPackets := ps'; nwState := st' |} h))) Unable to unify \"handleAppendEntriesReply (pDst p) (snd (nwState net (pDst p))) (pSrc p) t es res = (d, m)\" with \"sorted log\".", "type": "cannot_unify", "handled": true}, {"ctx": ["unfold refined_raft_net_invariant_append_entries_reply, votesWithLog_sorted in *.", "intros."], "tactic": "apply H0.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params rri : raft_refinement_interface si : sorted_interface xs : list packet p : packet ys : list packet net : network st' : name -> data ps' : list packet gd : ghost_data d : raft_data m : list (name * msg) t : nat es : list entry res : bool H : handleAppendEntriesReply (pDst p) (snd (nwState net (pDst p))) (pSrc p) t es res = (d, m) H0 : gd = fst (nwState net (pDst p)) H1 : pBody p = AppendEntriesReply t es res H2 : forall (h : Net.name) (t : term) (h' : name) (log : list entry), In (t, h', log) (votesWithLog (fst (nwState net h))) -> sorted log H3 : refined_raft_intermediate_reachable net H4 : nwPackets net = xs ++ p :: ys H5 : forall h : name, st' h = update name_eq_dec (nwState net) (pDst p) (gd, d) h H6 : forall p' : packet, In p' ps' -> In p' (xs ++ ys) \\\\/ In p' (send_packets (pDst p) m) h : Net.name t0 : term h' : name log : list entry H7 : In (t0, h', log) (votesWithLog (fst (nwState {| nwPackets := ps'; nwState := st' |} h))) Unable to unify \"gd = fst (nwState net (pDst p))\" with \"sorted log\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros. unfold refined_raft_net_invariant_append_entries_reply, votesWithLog_sorted in *. intros. specialize (H h t h' log). apply H. apply H0.", "succ": false}]