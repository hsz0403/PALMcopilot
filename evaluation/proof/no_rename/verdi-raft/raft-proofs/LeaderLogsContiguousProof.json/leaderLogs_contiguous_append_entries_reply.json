[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["unfold refined_raft_net_invariant_append_entries_reply.", "intros.", "unfold leaderLogs_contiguous.", "intros."], "tactic": "unfold leaderLogs_contiguous in leaderLogs_contiguous_invariant.", "exn": "No such hypothesis: leaderLogs_contiguous_invariant", "type": "no_hypos", "handled": true}, {"ctx": ["unfold refined_raft_net_invariant_append_entries_reply.", "intros.", "unfold leaderLogs_contiguous.", "intros."], "tactic": "apply leaderLogs_contiguous_invariant; auto.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params rri : raft_refinement_interface lmi : log_matching_interface xs : list packet p : packet ys : list packet net : network st' : name -> data ps' : list packet gd : ghost_data d : raft_data m : list (name * msg) t : nat es : list entry res : bool H : handleAppendEntriesReply (pDst p) (snd (nwState net (pDst p))) (pSrc p) t es res = (d, m) H0 : gd = fst (nwState net (pDst p)) H1 : pBody p = AppendEntriesReply t es res H2 : leaderLogs_contiguous net H3 : refined_raft_intermediate_reachable net H4 : nwPackets net = xs ++ p :: ys H5 : forall h : name, st' h = update name_eq_dec (nwState net) (pDst p) (gd, d) h H6 : forall p' : packet, In p' ps' -> In p' (xs ++ ys) \\\\/ In p' (send_packets (pDst p) m) h : Net.name t0 : term ll : list entry H7 : In (t0, ll) (leaderLogs (fst (nwState {| nwPackets := ps'; nwState := st' |} h))) Unable to unify \"forall (h0 : Net.name) (t1 : term) (ll0 : list entry), In (t1, ll0) (leaderLogs (fst (nwState ?M1635 h0))) -> contiguous_range_exact_lo ll0 0\" with \"(forall i : nat, 0 < i <= maxIndex ll -> exists e : entry, eIndex e = i /\\\\ In e ll) /\\\\ (forall e : entry, In e ll -> 0 < eIndex e)\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "unfold refined_raft_net_invariant_append_entries_reply. intros. unfold leaderLogs_contiguous. intros. unfold leaderLogs_contiguous in leaderLogs_contiguous_invariant. intros. apply leaderLogs_contiguous_invariant; auto.", "succ": false}]