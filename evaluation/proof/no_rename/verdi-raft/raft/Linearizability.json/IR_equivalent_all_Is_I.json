[{"history": {"proof": "", "repairs": [], "exceptions": []}, "chat": [], "original": "simpl. intros l k H x H0. induction l. - simpl. apply IR_equiv_cons. apply IR_equiv_nil. - simpl. apply IR_equiv_move. + apply IHl. + unfold good_move. split. * intros k0 k1 contra. apply H in contra as [k2 contra]. exists k2. apply contra. * intros k0 contra. apply (H x) in H0 as [k' H0]. discriminate. * intros k0 contra. apply (H x) in H0 as [k' H0]. discriminate.", "succ": false}]