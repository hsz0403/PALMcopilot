[{"history": {"proof": "intros c i e H. unfold has_key in H. destruct e as [at' c' i' index' term' input']. destruct (clientId_eq_dec c c') as [Hc | Hc]; [| discriminate]. rewrite Bool.andb_true_iff in H. hauto lqb: on depth: 3.", "repairs": ["", "", "", "", "ref_not_found", "hammer"], "exceptions": [{"ctx": ["intros c i e H.", "unfold has_key in H.", "destruct e as [at' c' i' index' term' input'].", "destruct (clientId_eq_dec c c') as [Hc | Hc]; [| discriminate]."], "tactic": "rewrite Hc in H.", "exn": "Found no subterm matching \"c\" in H.", "type": "no_subterm", "handled": true}, {"ctx": ["intros c i e H.", "unfold has_key in H.", "destruct e as [at' c' i' index' term' input'].", "destruct (clientId_eq_dec c c') as [Hc | Hc]; [| discriminate]."], "tactic": "rewrite andb_true_iff in H.", "exn": "The reference andb_true_iff was not found in the current environment.", "type": "ref_not_found", "handled": true}]}, "chat": [], "original": "intros c i e H. unfold has_key in H. simpl in H. destruct e as [at' c' i' index' term' input']. simpl in H. destruct (clientId_eq_dec c c') as [Hc | Hc]; [| discriminate]. rewrite Hc in H. rewrite andb_true_iff in H. destruct H as [Heq _]. split; auto.", "succ": true}]