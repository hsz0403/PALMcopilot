[{"history": {"proof": "", "repairs": [], "exceptions": []}, "chat": [], "original": "intros f. unfold \"\u2aaf\". exists (fun P => exists n s, P = (n, s) /\\ MM_HALTS_ON_ZERO P <-> EILL_PROVABILITY (f P)). intros P. split. - intros [n [s [HP HMM]]]. unfold MM_HALTS_ON_ZERO, EILL_PROVABILITY in *. subst P. split; intros H. + left. exists (1, fst s, 0, snd s). apply H. + right. exists (1, fst s, 0, snd s). apply H. - intros [H | H]. + destruct H as [n [s [HP HMS]]]. unfold MM_HALTS_ON_ZERO, EILL_PROVABILITY in *. subst P. split; intros H; inversion H. + destruct H as [n [s [HP H]]]. unfold MM_HALTS_ON_ZERO, EILL_PROVABILITY in *. subst P. split; intros H; inversion H.", "succ": false}]