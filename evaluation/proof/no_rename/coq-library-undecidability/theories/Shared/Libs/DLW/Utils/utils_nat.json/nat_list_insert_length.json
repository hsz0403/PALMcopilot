[{"history": {"proof": "induction l. - simpl. apply le_n_S, le_0_n. - simpl. destruct (le_lt_dec a x). + hauto lq: on depth: 3use: le_n_S. + hauto lq: on depth: 3use: le_n_S.", "repairs": ["", "", "", "", "", "", "", "", "hammer", "", "hammer"], "exceptions": [{"ctx": ["induction l.", "-", "simpl.", "apply le_n_S, le_0_n.", "-", "simpl.", "destruct (le_lt_dec a x).", "+"], "tactic": "apply le_n_S.", "exn": "In environment x, a : nat l : list nat IHl : length (nat_list_insert x l) <= S (length l) l0 : a <= x Unable to unify \"S ?M1423 <= S ?M1424\" with \"length (if x <? a then x :: a :: l else if a <? x then a :: nat_list_insert x l else a :: l) <= S (S (length l))\".", "type": "cannot_unify", "handled": true}, {"ctx": ["induction l.", "-", "simpl.", "apply le_n_S, le_0_n.", "-", "simpl.", "destruct (le_lt_dec a x).", "+"], "tactic": "apply IHl.", "exn": "In environment x, a : nat l : list nat IHl : length (nat_list_insert x l) <= S (length l) l0 : a <= x Unable to unify \"length (nat_list_insert x l) <= S (length l)\" with \"length (if x <? a then x :: a :: l else if a <? x then a :: nat_list_insert x l else a :: l) <= S (S (length l))\".", "type": "cannot_unify", "handled": true}, {"ctx": ["induction l.", "-", "simpl.", "apply le_n_S, le_0_n.", "-", "simpl.", "destruct (le_lt_dec a x).", "+"], "tactic": "+", "exn": "[Focus] Wrong bullet +: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["induction l.", "-", "simpl.", "apply le_n_S, le_0_n.", "-", "simpl.", "destruct (le_lt_dec a x).", "+", "shelve.", "+", "apply le_S."], "tactic": "apply IHl.", "exn": "In environment x, a : nat l : list nat IHl : length (nat_list_insert x l) <= S (length l) l0 : x < a Unable to unify \"length (nat_list_insert x l) <= S (length l)\" with \"length (if x <? a then x :: a :: l else if a <? x then a :: nat_list_insert x l else a :: l) <= S (length l)\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "induction l. - simpl. apply le_n_S, le_0_n. - simpl. destruct (le_lt_dec a x). + apply le_n_S. apply IHl. + apply le_S. apply IHl.", "succ": true}]