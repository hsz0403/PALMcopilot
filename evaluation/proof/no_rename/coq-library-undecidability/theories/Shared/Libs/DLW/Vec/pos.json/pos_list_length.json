[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["induction n.", "-", "unfold pos_list.", "simpl.", "reflexivity.", "-", "unfold pos_list.", "simpl.", "rewrite <- IHn."], "tactic": "reflexivity.", "exn": "In environment n : nat IHn : length (pos_list n) = n Unable to unify \"S (length (pos_list n))\" with \"S (length (map pos_nxt ((fix pos_list (n : nat) : list (pos n) := match n as n0 return (list (pos n0)) with | 0 => nil | S n0 => pos0 :: map pos_nxt (pos_list n0) end) (length (pos_list n)))))\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "induction n. - unfold pos_list. simpl. reflexivity. - unfold pos_list. simpl. rewrite <- IHn. reflexivity.", "succ": false}]