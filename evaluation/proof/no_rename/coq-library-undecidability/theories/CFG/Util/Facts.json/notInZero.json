[{"history": {"proof": "", "repairs": [], "exceptions": []}, "chat": [], "original": "intros x A. split. - intro H. induction A as [|y A' IH]. + reflexivity. + simpl. destruct (Nat.eqb x y) eqn:E. * exfalso. apply H. left. rewrite <- Nat.eqb_eq in E. rewrite E. reflexivity. * apply IH. intro Hnot. apply H. right. apply Hnot. - intro H. induction A as [|y A' IH]. + intro Contra. inversion Contra. + simpl in H. destruct (Nat.eqb x y) eqn:E. * discriminate. * apply IH. intro Hnot. apply H. right. apply Hnot.", "succ": false}]