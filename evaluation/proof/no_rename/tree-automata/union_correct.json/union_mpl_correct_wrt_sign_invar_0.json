[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros s a p pa sigma H1 H2.", "unfold state_correct_wrt_sign_with_offset.", "intros a' p' H.", "destruct s.", "+", "simpl in H.", "auto.", "+", "destruct (N.eqb_spec a a0).", "*", "simpl in H."], "tactic": "*", "exn": "Wrong bullet *: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros s a p pa sigma H1 H2.", "unfold state_correct_wrt_sign_with_offset.", "intros a' p' H.", "destruct s.", "+", "simpl in H.", "auto.", "+", "destruct (N.eqb_spec a a0).", "*", "simpl in H.", "shelve.", "*", "simpl in H."], "tactic": "apply (H2 _ _ H).", "exn": "In environment a0 : ad p0 : prec_list a : ad p : prec_list pa : pre_ad sigma : signature H1 : state_correct_wrt_sign_with_offset (M1 prec_list a0 p0) sigma pa H2 : state_correct_wrt_sign_with_offset (M1 prec_list a p) sigma pa a' : ad p' : prec_list H : MapGet prec_list (if (a =? a0)%N then M1 prec_list a (union_pl p p0) else match N.lxor a0 a with | 0%N => M1 prec_list a0 p0 | N.pos p1 => MapPut1 prec_list a0 p0 a p p1 end) a' = Some p' n : a <> a0 The term \"H\" has type \"MapGet prec_list (if (a =? a0)%N then M1 prec_list a (union_pl p p0) else match N.lxor a0 a with | 0%N => M1 prec_list a0 p0 | N.pos p1 => MapPut1 prec_list a0 p0 a p p1 end) a' = Some p'\" while it is expected to have type \"MapGet prec_list (M1 prec_list a p) ?a = Some ?p\".", "type": "wrong_type", "handled": true}]}, "chat": [], "original": "intros s a p pa sigma H1 H2. unfold state_correct_wrt_sign_with_offset. intros a' p' H. destruct s. + simpl in H. auto. + destruct (N.eqb_spec a a0). * simpl in H. injection H as H3 H4. rewrite <- H3. apply (H1 _ _ H4). * simpl in H. apply (H2 _ _ H).", "succ": false}]