[{"history": {"proof": "intros d a a' l n s p H1 H2 H3. unfold rec_term in H1. hauto lq: on depth: 3.", "repairs": ["", "", "hammer"], "exceptions": [{"ctx": ["intros d a a' l n s p H1 H2 H3.", "unfold rec_term in H1.", "unfold MapGet in H2, H3.", "destruct n.", "-"], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros d a a' l n s p H1 H2 H3.", "unfold rec_term in H1.", "unfold MapGet in H2, H3.", "destruct n.", "-", "shelve.", "-", "simpl.", "destruct l.", "+"], "tactic": "+", "exn": "Wrong bullet +: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}]}, "chat": [], "original": "intros d a a' l n s p H1 H2 H3. unfold rec_term in H1. unfold MapGet in H2, H3. destruct n. - discriminate. - simpl. destruct l. + discriminate H1. + destruct (MapGet state d a) eqn: Eq1; [|discriminate]. destruct (MapGet prec_list s a') eqn: Eq2; [|discriminate]. apply andb_true_iff in H1 as [H1l H1r]. apply orb_true_iff. right. apply H1r.", "succ": true}]