[{"history": {"proof": "intros n m H. strivial use: Nat.add_0_l, Nat.lt_add_lt_sub_r.", "repairs": ["", "hammer"], "exceptions": [{"ctx": ["intros n m H.", "apply Nat.lt_le_incl in H."], "tactic": "apply Nat.sub_lt.", "exn": "In environment n, m : nat H : n <= m Unable to unify \"S (?M1379 - ?M1380) <= ?M1379\" with \"1 <= m - n\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros n m H.", "apply Nat.lt_le_incl in H."], "tactic": "apply lt_n_Sm_le in H.", "exn": "Unable to apply lemma of type \"forall n m : nat, n < S m -> n <= m\" on hypothesis of type \"n <= m\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["intros n m H.", "apply Nat.lt_le_incl in H."], "tactic": "apply Nat.lt_lt_0.", "exn": "Unable to find an instance for the variable n.", "type": "no_instance_var", "handled": true}, {"ctx": ["intros n m H.", "apply Nat.lt_le_incl in H."], "tactic": "apply H.", "exn": "In environment n, m : nat H : n <= m Unable to unify \"n <= m\" with \"0 < m - n\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros n m H.", "apply Nat.lt_le_incl in H."], "tactic": "apply Nat.mul_pos_cancel_l.", "exn": "In environment n, m : nat H : n <= m Unable to unify \"(0 < ?M1379 * ?M1380 -> 0 < ?M1380) /\\\\ (0 < ?M1380 -> 0 < ?M1379 * ?M1380)\" with \"1 <= m - n\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros n m H.", "apply Nat.lt_le_incl in H."], "tactic": "apply H.", "exn": "In environment n, m : nat H : n <= m Unable to unify \"n <= m\" with \"0 < m - n\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros n m H.", "apply Nat.lt_le_incl in H."], "tactic": "apply Nat.lt_lt_0.", "exn": "Unable to find an instance for the variable n.", "type": "no_instance_var", "handled": true}, {"ctx": ["intros n m H.", "apply Nat.lt_le_incl in H."], "tactic": "apply H.", "exn": "In environment n, m : nat H : n <= m Unable to unify \"n <= m\" with \"0 < m - n\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros n m H. apply Nat.lt_le_incl in H. apply Nat.sub_lt. - apply lt_n_Sm_le in H. apply Nat.lt_lt_0. apply H. - apply Nat.mul_pos_cancel_l. apply H. apply Nat.lt_lt_0. apply H.", "succ": true}]