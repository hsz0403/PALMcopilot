[{"history": {"proof": "intros Phi Hmax_consistent x y. split. - intros HPhi_x_and_y. split. + hecrush use: @maximal_consistent_derivable_closed, @DCS_andp_iff. + hecrush use: @maximal_consistent_derivable_closed, @DCS_andp_iff. - intros [HPhi_x HPhi_y]. hecrush use: @maximal_consistent_derivable_closed, @DCS_andp_iff.", "repairs": ["", "", "", "", "", "", "hammer", "", "hammer", "", "", "hammer"], "exceptions": [{"ctx": ["intros Phi Hmax_consistent x y.", "split.", "-", "intros HPhi_x_and_y.", "split.", "+"], "tactic": "+", "exn": "Wrong bullet +: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros Phi Hmax_consistent x y.", "split.", "-", "intros HPhi_x_and_y.", "split.", "+", "shelve.", "+"], "tactic": "-", "exn": "Wrong bullet -: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}]}, "chat": [], "original": "intros Phi Hmax_consistent x y. split. - intros HPhi_x_and_y. split. + apply (proj1 (maximal_consistent_spec _ Hmax_consistent) HPhi_x_and_y). + apply (proj1 (maximal_consistent_spec _ Hmax_consistent) HPhi_x_and_y). - intros [HPhi_x HPhi_y]. apply (proj2 (maximal_consistent_spec _ Hmax_consistent)). split. + apply HPhi_x. + apply HPhi_y.", "succ": true}]