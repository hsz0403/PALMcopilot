[{"history": {"proof": "intros n m H. apply N.lt_gt. apply le_not_gt in H. sfirstorder use: Nat.le_ngt, le_gt_S, Nlt_lt.", "repairs": ["", "", "", "hammer"], "exceptions": [{"ctx": ["intros n m H."], "tactic": "apply N.gt_lt.", "exn": "In environment n, m : N H : (N.to_nat n > N.to_nat m)%nat Unable to unify \"(?M1411 ?= ?M1410) = Lt\" with \"(n ?= m) = Gt\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros n m H.", "apply N.lt_gt.", "apply le_not_gt in H."], "tactic": "apply Nat.lt_le_incl in H.", "exn": "Unable to apply lemma of type \"forall n m : nat, (n < m)%nat -> (n <= m)%nat\" on hypothesis of type \"~ (S (N.to_nat m) > N.to_nat n)%nat\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["intros n m H.", "apply N.lt_gt.", "apply le_not_gt in H."], "tactic": "apply Nat2N.inj in H.", "exn": "Unable to apply lemma of type \"forall n n' : nat, N.of_nat n = N.of_nat n' -> n = n'\" on hypothesis of type \"~ (S (N.to_nat m) > N.to_nat n)%nat\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["intros n m H.", "apply N.lt_gt.", "apply le_not_gt in H."], "tactic": "apply N2Nat.inj_lt in H.", "exn": "The reference N2Nat.inj_lt was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros n m H.", "apply N.lt_gt.", "apply le_not_gt in H."], "tactic": "apply H.", "exn": "In environment n, m : N H : ~ (S (N.to_nat m) > N.to_nat n)%nat Unable to unify \"~ (S (N.to_nat m) > N.to_nat n)%nat\" with \"m < n\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros n m H. apply N.gt_lt. apply N.lt_gt. apply le_not_gt in H. apply Nat.lt_le_incl in H. apply Nat2N.inj in H. apply N2Nat.inj_lt in H. apply H.", "succ": true}]