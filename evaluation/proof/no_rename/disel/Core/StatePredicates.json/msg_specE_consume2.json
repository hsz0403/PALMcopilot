[{"history": {"proof": "hauto qb: on drew: off depth: 3use: msg_spec_consume, consume_msg, consume_valid, msg_specE_consume1, msg_specE_consume.", "repairs": ["hammer"], "exceptions": [{"ctx": ["intros H_val H_find H_neq H_spec."], "tactic": "apply msg_specE_consume1 in H_find as [H_val' [H_find' H_neq']].", "exn": "Unable to find an instance for the variables pt, to, tg, cnt.", "type": "no_instance_var", "handled": true}, {"ctx": ["intros H_val H_find H_neq H_spec."], "tactic": "apply msg_spec_consume in H_find' as H_spec_consume.", "exn": "No such hypothesis: H_find'", "type": "no_hypos", "handled": true}, {"ctx": ["intros H_val H_find H_neq H_spec."], "tactic": "apply (consume_valid H_val) in H_find as H_val'.", "exn": "In environment s : union_map_classPCM (union_mapUMC mid (msg TaggedMessage)) pt : nid from : nat to : nat_eqType to' : nat tg : nat_eqType cnt : seq_eqType nat_eqType i : mid m : TaggedMessage H_val : valid s H_find : find i s = Some {| content := m; from := from; to := to'; active := true |} H_neq : to != to' H_spec : msg_spec pt to tg cnt s The term \"H_val\" has type \"is_true (valid s)\" while it is expected to have type \"Ordered.sort mid\".", "type": "wrong_type", "handled": true}, {"ctx": ["intros H_val H_find H_neq H_spec."], "tactic": "apply (consume_msg s i) in H_find'.", "exn": "No such hypothesis: H_find'", "type": "no_hypos", "handled": true}, {"ctx": ["intros H_val H_find H_neq H_spec."], "tactic": "apply msg_specE_consume in H_val' as [H_val'' _].", "exn": "No such hypothesis: H_val'", "type": "no_hypos", "handled": true}, {"ctx": ["intros H_val H_find H_neq H_spec."], "tactic": "apply (H_spec_consume H_val'' H_find' H_neq' H_spec).", "exn": "The reference H_spec_consume was not found in the current environment.", "type": "ref_not_found", "handled": true}]}, "chat": [], "original": "simpl. intros H_val H_find H_neq H_spec. apply msg_specE_consume1 in H_find as [H_val' [H_find' H_neq']]. apply msg_spec_consume in H_find' as H_spec_consume. apply (consume_valid H_val) in H_find as H_val'. apply (consume_msg s i) in H_find'. apply msg_specE_consume in H_val' as [H_val'' _]. apply (H_spec_consume H_val'' H_find' H_neq' H_spec).", "succ": true}]