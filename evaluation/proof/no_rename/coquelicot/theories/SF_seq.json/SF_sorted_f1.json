[{"history": {"proof": "", "repairs": [], "exceptions": []}, "chat": [], "original": "intros T f1 P Ord. split. - intros H. unfold SF_sorted, sorted in H. unfold SF_sorted, SF_seq_f1, SF_lx, SF_lx, head, behead, pairmap in H. simpl in H. destruct P; simpl in H. + constructor. + destruct P; simpl in H. * constructor. * apply (SF_sorted_cat _ [_] (_ :: P0) _). { apply sorted_nth. intros. apply H. lia. } { apply (SF_sorted_map _ _ _ H), (SF_sorted_tail _ _ H). } - intros H. unfold SF_sorted, sorted. unfold SF_sorted, SF_seq_f1, SF_lx, head, behead, pairmap. simpl. destruct P; simpl. + constructor. + destruct P; simpl. * constructor. * apply (sorted_cat _ [f1 r] ((f1 r0, r) :: SF_lx (SF_seq_f1 f1 P0)) _). { apply sorted_nth. intros. apply H. lia. } { apply (sorted_cons _ (f1 r, r) _ H), (sorted_map _ _ _ H). }", "succ": false}]