[{"history": {"proof": "qauto depth: 4 l: on use: Nat.lt_0_succ, @SF_lx_f2 unfold: SF_lx, unzip1, SF_sorted, pairmap, sorted, map, SF_seq_f2, SF_t, size, behead.", "repairs": [], "exceptions": []}, "chat": [], "original": "intros T f2 P Ord. split. - intros H. unfold SF_sorted, sorted. destruct H as [H1 H2]. split. + simpl. destruct P. * trivial. * apply H1. + intros i Hi x. apply H2. destruct P as [|h [|h' t]]. * inversion Hi. * simpl in Hi. destruct t. { inversion Hi. } { apply Hi. } * simpl in Hi. apply Hi. - intros H. unfold SF_sorted, sorted in H. destruct H as [H1 H2]. split. + simpl in H1. destruct P. * trivial. * split. { apply H1. } { apply sorted_nth. - apply H2. - intros i Hi x. destruct P as [|h [|h' t]]. + inversion Hi. + simpl in Hi. destruct t. * inversion Hi. * apply Hi. + simpl in Hi. apply Hi. } + intros i Hi x. apply H2. destruct P as [|h [|h' t]]. * inversion Hi. * simpl in Hi. destruct t. { inversion Hi. } { apply Hi. } * simpl in Hi. apply Hi.", "succ": true}]