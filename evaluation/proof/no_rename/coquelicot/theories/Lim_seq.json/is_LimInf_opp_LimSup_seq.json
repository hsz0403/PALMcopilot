[{"history": {"proof": "", "repairs": [], "exceptions": []}, "chat": [], "original": "intros u l. split. - intros H. unfold is_LimInf_seq, is_LimSup_seq in *. destruct l. + intros eps. split; intros. * specialize (H (- eps)). destruct H as [H1 _]. specialize (H1 N). destruct H1 as [n [Hle Hu]]. exists n. split. apply Hle. lra. * specialize (H eps). destruct H as [_ [n [Hle Hu]]]. exists n. split. apply Hle. lra. + intros M N. specialize (H M N). destruct H as [n [Hle Hu]]. exists n. split. apply Hle. lra. + intros M. specialize (H M). destruct H as [N H]. exists N. intros n Hn. apply H. auto. - intros H. unfold is_LimInf_seq, is_LimSup_seq in *. destruct l. + intros eps. split; intros. * specialize (H eps). destruct H as [H1 _]. specialize (H1 N). destruct H1 as [n [Hle Hu]]. exists n. split. apply Hle. lra. * specialize (H (- eps)). destruct H as [_ [n [Hle Hu]]]. exists n. split. apply Hle. lra. + intros M N. specialize (H M N). destruct H as [n [Hle Hu]]. exists n. split. apply Hle. lra. + intros M. specialize (H M). destruct H as [N H]. exists N. intros n Hn. apply H. auto.", "succ": false}]