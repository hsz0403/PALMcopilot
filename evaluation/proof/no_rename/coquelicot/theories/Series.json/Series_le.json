[{"history": {"proof": "", "repairs": [], "exceptions": []}, "chat": [], "original": "intros a b H1 H2. unfold Series. apply is_series_unique. apply ex_series_Cauchy. intros eps. specialize (H2 _) as [N H2']. exists N. intros n m H3 H4. unfold norm. rewrite Rabs_right. apply Rle_lt_trans with (r2:= Series (fun k : nat => Rabs (a k - b k))). - apply Series_Rabs. apply ex_series_ext with (b0:= fun k => Rabs (a k - b k)). intros k. unfold Rabs. apply Rabs_minus_sym. apply ex_series_le with (b0:=fun k => Rabs (a k - b k)). + intros k. specialize (H1 k). apply Rabs_minus_sym. apply H1. + apply ex_series_Rabs. apply H2. - apply H2'. auto. ++ apply le_trans with (m:=n); auto. ++ apply le_trans with (m:=m); auto.", "succ": false}]