[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros b0 lb0 Ha Hb HExA HExB."], "tactic": "apply is_series_mult_pos with (a := fun n => Rabs (a n)) (la := la); auto.", "exn": "In environment a, b : nat -> R la, lb : R b0 : is_series a la lb0 : is_series b lb Ha : ex_series (fun n : nat => Rabs (a n)) Hb : ex_series (fun n : nat => Rabs (b n)) HExA : R_NormedModule -> Prop HExB : locally (la * lb) HExA Unable to unify \"forall P : R_NormedModule -> Prop, locally (la * ?M2366) P -> filtermap (sum_n (fun n : nat => sum_f_R0 (fun k : nat => Rabs (a k) * ?M2364 (n - k)%nat) n)) eventually P\" with \"exists N : nat, forall n : nat, (N <= n)%nat -> (fun x : nat => HExA (sum_n (fun n0 : nat => sum_f_R0 (fun k : nat => a k * b (n0 - k)%nat) n0) x)) n\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros b0 lb0 Ha Hb HExA HExB. apply is_series_mult_pos with (a := fun n => Rabs (a n)) (la := la); auto. intros n. unfold Rabs. destruct (Rcase_abs (a n)); lra. apply ex_series_Rabs; auto.", "succ": false}]