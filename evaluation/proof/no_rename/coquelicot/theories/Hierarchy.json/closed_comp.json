[{"history": {"proof": "", "repairs": [], "exceptions": []}, "chat": [], "original": "intros T U f D Hfilterlim Hclosed x Hclosure. apply Hclosed. intros Hc. apply Hclosure. intros eps. destruct (Hc (fun y : T => ~ D (f y))) as [eps' Heps']. unfold is_filter_lim in Heps'. specialize (Hfilterlim x). unfold filterlim, filter_le in Hfilterlim. assert (filtermap f (locally x) (fun y : U => ~D y)). { apply filtermap_filter. apply Hfilterlim. } apply Heps' in H. contradiction.", "succ": false}]