[{"history": {"proof": "", "repairs": [], "exceptions": []}, "chat": [], "original": "intros E l H. unfold Rbar_is_glb, Rbar_glb in H. destruct H as [H1 H2]. apply Rbar_is_lub_unique. apply Rbar_glb_lub. split. + intros b Hb. apply (proj2 (is_glb_Rbar_correct (fun x : Rbar => is_finite x /\\ E x) l)). split. * intros x [Hfin Ex]. apply (Rbar_lb_eq_ub _ _ H1 Hb _ Ex). destruct x; simpl in Hfin; try contradiction. apply Hfin. * intros b' Hb'. apply (Rbar_lb_ub _ _ Hb' H1). + intros b Hb. apply (proj1 (is_glb_Rbar_correct (fun x : Rbar => is_finite x /\\ E x) l)). split. * intros x [Hfin Ex]. apply (Rbar_lb_eq_ub _ _ H1 Hb _ Ex). destruct x; simpl in Hfin; try contradiction. apply Hfin. * intros b' Hb'. apply (Rbar_lb_ub _ _ Hb' H1).", "succ": false}]