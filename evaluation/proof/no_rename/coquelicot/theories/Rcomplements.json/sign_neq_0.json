[{"history": {"proof": "intros Hx Hx_neq0. destruct (total_order_T 0 x) as [[Hx_gt0 | Hx_eq0] | Hx_lt0]. - hauto use: Rlt_0_1, Rlt_irrefl, sign_eq_1. - sfirstorder depth: 3. - hfcrush use: Ropp_0, R1_neq_R0, sign_eq_1, Rabs_pos_lt, Rgt_asym, PI_RGT_0, sin_PI, PI_neq0, sign_opp unfold: Rgt, Rabs, Rge.", "repairs": ["", "", "", "hammer", "", "hammer", "", "hammer"], "exceptions": [{"ctx": ["intros Hx Hx_neq0.", "destruct (total_order_T 0 x) as [[Hx_gt0 | Hx_eq0] | Hx_lt0].", "-"], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros Hx Hx_neq0.", "destruct (total_order_T 0 x) as [[Hx_gt0 | Hx_eq0] | Hx_lt0].", "-", "shelve.", "-"], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}]}, "chat": [], "original": "intros Hx Hx_neq0. unfold sign. destruct (total_order_T 0 x) as [[Hx_gt0 | Hx_eq0] | Hx_lt0]. - discriminate. - contradiction Hx_neq0. apply Hx_eq0. - discriminate.", "succ": true}]