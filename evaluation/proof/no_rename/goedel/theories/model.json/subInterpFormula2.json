[{"history": {"proof": "intros value f v s H. strivial use: subInterpFormula.", "repairs": ["", "hammer"], "exceptions": [{"ctx": ["intros value f v s H."], "tactic": "apply subInterpFormula1.", "exn": "In environment L : Language M : Model value : nat -> U M f : Formula L v : nat s : Term L H : interpFormula value (substituteFormula L f v s) Unable to unify \"(fix interpFormula (value : nat -> U M) (f : Formula L) {struct f} : Prop := match f with | @equal _ t s => interpTerm value t = interpTerm value s | @atomic _ r ts => interpRels (arity L (inl r)) (rel M r) value ts | @impH _ A B => interpFormula value A -> interpFormula value B | @notH _ A => interpFormula value A -> False | @forallH _ v A => forall x : U M, interpFormula (updateValue value v x) A end) ?M1420 (substituteFormula L ?M1421 ?M1422 ?M1423)\" with \"(fix interpFormula (value : nat -> U M) (f : Formula L) {struct f} : Prop := match f with | @equal _ t s => interpTerm value t = interpTerm value s | @atomic _ r ts => interpRels (arity L (inl r)) (rel M r) value ts | @impH _ A B => interpFormula value A -> interpFormula value B | @notH _ A => interpFormula value A -> False | @forallH _ v A => forall x : U M, interpFormula (updateValue value v x) A end) (updateValue value v (interpTerm value s)) f\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros value f v s H."], "tactic": "apply H.", "exn": "In environment L : Language M : Model value : nat -> U M f : Formula L v : nat s : Term L H : interpFormula value (substituteFormula L f v s) Unable to unify \"interpFormula value (substituteFormula L f v s)\" with \"interpFormula (updateValue value v (interpTerm value s)) f\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros value f v s H. simpl. apply subInterpFormula1. apply H.", "succ": true}]