[{"history": {"proof": "", "repairs": [], "exceptions": []}, "chat": [], "original": "intros n m A B H. apply impI. intros H1. unfold addExists. induction m. - simpl. apply impI. apply H1. - simpl. apply impI. apply impE with (impH (addExists m n A) (addExists m n B)). + apply RepresentableAlternate with (f := addExists (S m) n) (A := B). * apply iffE2 with A (addExists M n A). apply iffSym. apply H. apply IHm. * apply extEqualCompose with m (cons A nil) (addExists m n A) B; [apply I | apply H1]. + apply IHm.", "succ": false}]