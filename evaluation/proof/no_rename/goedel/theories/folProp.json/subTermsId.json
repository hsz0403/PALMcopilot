[{"history": {"proof": "intros n ts v. induction ts. - simpl. reflexivity. - simpl. rewrite IHts. scongruence use: subTermId.", "repairs": ["", "", "", "", "", "", "", "", "hammer"], "exceptions": [{"ctx": ["intros n ts v.", "induction ts.", "-", "simpl.", "reflexivity.", "-", "simpl.", "rewrite IHts."], "tactic": "reflexivity.", "exn": "In environment L : Language var := fol.var L : nat -> fol.Term L apply := fol.apply L : forall f : Functions L, fol.Terms L (arity L (inr f)) -> fol.Term L equal := fol.equal L : fol.Term L -> fol.Term L -> fol.Formula L atomic := fol.atomic L : forall r : Relations L, fol.Terms L (arity L (inl r)) -> fol.Formula L impH := fol.impH L : fol.Formula L -> fol.Formula L -> fol.Formula L notH := fol.notH L : fol.Formula L -> fol.Formula L forallH := fol.forallH L : nat -> fol.Formula L -> fol.Formula L lt_depth := fol.lt_depth L : fol.Formula L -> fol.Formula L -> Prop n : nat t : fol.Term L ts : fol.Terms L n v : nat IHts : substituteTerms n ts v (var v) = ts Unable to unify \"Tcons L n t ts\" with \"Tcons L n (substituteTerm t v (var v)) ts\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros n ts v. induction ts. - simpl. reflexivity. - simpl. rewrite IHts. reflexivity.", "succ": true}]