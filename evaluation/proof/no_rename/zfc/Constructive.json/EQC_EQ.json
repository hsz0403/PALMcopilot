[{"history": {"proof": "", "repairs": [], "exceptions": []}, "chat": [], "original": "intros E E' H. induction H using EQ. - simpl. apply tout_vide_est_VideC. - apply EQ_INC. apply IH. apply EQ_EXType with (a:=a). apply INC_IN_Power. apply IN_EXType with (E':=E') in H0. apply IN_Paire_left in H. apply Paire_IN in H. destruct H. + rewrite H. apply CIN_INC. apply IN_Paire_right. + apply INC_sound_left with (E:=E) (E':=E') (E'':=Union E) in H. apply INC_sound_right with (E:=Union E) (E':=E') (E'':=Power (Union E)) in H0. apply INC_tran with (E':=E') (E'':=Power (Union E)). * apply IN_INC_Union. apply Union_IN. split. apply Union_mon. apply INC_IN_Power. apply IN_Paire_right. * apply IN_Power_INC. apply Union_IN in H. destruct H. apply H. - apply INC_sound_right with (E:=E) (E':=E') (E'':=Union E) in H. apply INC_sound_left with (E:=Union E) (E':=E') (E'':=Power (Union E)) in IH. apply INC_tran with (E':=E') (E'':=Power (Union E)). + apply IN_Power_INC. apply Union_IN in H. destruct H. apply H. + apply INC_IN_Power. apply Union_IN. split. apply Union_mon. apply INC_IN_Power. apply IN_Paire_right.", "succ": false}]