[{"history": {"proof": "intros a b nZa nZia Heq. sauto depth: 3use: divTerm_invTerm_l.", "repairs": ["", "hammer"], "exceptions": [{"ctx": ["intros a b nZa nZia Heq."], "tactic": "rewrite -> (divTerm_invTerm_l b a nZa Heq).", "exn": "In environment A : Set A0, A1 : A eqA : A -> A -> Prop plusA : A -> A -> A invA : A -> A minusA, multA : A -> A -> A divA : A -> forall b : A, ~ eqA b A0 -> A cs : CoefStructure A A0 A1 eqA plusA invA minusA multA divA eqA_dec : forall a b : A, {eqA a b} + {~ eqA a b} n : nat ltM : mon n -> mon n -> Prop ltM_dec : forall a b : mon n, {ltM a b} + {ltM b a} + {a = b} os : OrderStructure (mon n) (zero_mon n) ltM (mult_mon n) a, b : Term A n nZa : ~ zeroP A0 eqA (n:=n) a nZia : ~ zeroP A0 eqA (n:=n) (invTerm invA (n:=n) a) Heq : eqTerm eqA (n:=n) b (multTerm multA (n:=n) (divTerm b (b:=a) nZa) a) The term \"nZa\" has type \"~ zeroP A0 eqA (n:=n) a\" while it is expected to have type \"~ zeroP A0 eqA (n:=n) b\" (cannot unify \"zeroP A0 eqA (n:=n) b\" and \"zeroP A0 eqA (n:=n) a\").", "type": "wrong_type", "handled": true}]}, "chat": [], "original": "intros a b nZa nZia Heq. rewrite -> (divTerm_invTerm_l b a nZa Heq). reflexivity.", "succ": true}]