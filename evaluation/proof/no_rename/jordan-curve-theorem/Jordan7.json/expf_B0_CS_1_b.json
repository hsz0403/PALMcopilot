[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros m x z t Hmap Hsucc x0 xb0 xh0 xh0_1 Hexpf Hbetween.", "unfold expf in *.", "unfold B."], "tactic": "apply Hexpf.", "exn": "In environment m : fmap x, z, t : dart Hmap : inv_hmap m Hsucc : succ m zero x x0 := cA m zero x : dart xb0 := bottom m zero x : dart xh0 := top m zero x : dart xh0_1 := cA_1 m one xh0 : dart Hexpf : inv_hmap m /\\\\ MF.expo m x0 xb0 Hbetween : betweenf m xh0_1 z x0 /\\\\ betweenf m xh0_1 t x0 Unable to unify \"inv_hmap m /\\\\ MF.expo m x0 xb0\" with \"inv_hmap ((fix B (m : fmap) (k : dim) (x : dart) {struct m} : fmap := match m with | V => V | I m0 x0 t0 p0 => I (B m0 k x) x0 t0 p0 | L m0 k0 x0 y0 => if eq_dim_dec k0 k then if eq_dart_dec x0 x then m0 else L (B m0 k x) k0 x0 y0 else L (B m0 k x) k0 x0 y0 end) m zero x) /\\\\ MF.expo ((fix B (m : fmap) (k : dim) (x : dart) {struct m} : fmap := match m with | V => V | I m0 x0 t0 p0 => I (B m0 k x) x0 t0 p0 | L m0 k0 x0 y0 => if eq_dim_dec k0 k then if eq_dart_dec x0 x then m0 else L (B m0 k x) k0 x0 y0 else L (B m0 k x) k0 x0 y0 end) m zero x) z t\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros m x z t Hmap Hsucc x0 xb0 xh0 xh0_1 Hexpf Hbetween. unfold expf in *. unfold B. simpl. apply Hexpf.", "succ": false}]