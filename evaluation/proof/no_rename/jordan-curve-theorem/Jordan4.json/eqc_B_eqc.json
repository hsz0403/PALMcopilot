[{"history": {"proof": "intros m k x z t Hmap Hsucc Heqc. revert z t Heqc. induction m. - sfirstorder depth: 3. - sfirstorder depth: 3. - qauto depth: 4 l: on use: eqc_B_CS.", "repairs": ["", "", "", "", "hammer", "", "hammer", "", "hammer"], "exceptions": [{"ctx": ["intros m k x z t Hmap Hsucc Heqc.", "revert z t Heqc.", "induction m.", "-"], "tactic": ["intros z t [H | H]; inversion H; contradiction.", ""], "exn": "Expects a disjunctive pattern with 0 branches.", "type": "num_branch", "handled": false}, {"ctx": ["intros m k x z t Hmap Hsucc Heqc.", "revert z t Heqc.", "induction m.", "-"], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros m k x z t Hmap Hsucc Heqc.", "revert z t Heqc.", "induction m.", "-", "shelve.", "-"], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros m k x z t Hmap Hsucc Heqc.", "revert z t Heqc.", "induction m.", "-", "shelve.", "-", "shelve.", "-"], "tactic": "intros z t [H | [H | H]].", "exn": "Not an inductive product.", "type": "not_inductive_product", "handled": true}, {"ctx": ["intros m k x z t Hmap Hsucc Heqc.", "revert z t Heqc.", "induction m.", "-", "shelve.", "-", "shelve.", "-", "left; apply IHm; auto.", "+"], "tactic": "right; left; auto.", "exn": "Not an inductive product.", "type": "not_inductive_product", "handled": true}, {"ctx": ["intros m k x z t Hmap Hsucc Heqc.", "revert z t Heqc.", "induction m.", "-", "shelve.", "-", "shelve.", "-", "left; apply IHm; auto.", "+"], "tactic": "+", "exn": "Wrong bullet +: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros m k x z t Hmap Hsucc Heqc.", "revert z t Heqc.", "induction m.", "-", "shelve.", "-", "shelve.", "-", "left; apply IHm; auto.", "+", "shelve.", "+"], "tactic": "right; right; auto.", "exn": "Not an inductive goal with 2 constructors.", "type": "not_inductive_goal", "handled": true}]}, "chat": [], "original": "intros m k x z t Hmap Hsucc Heqc. revert z t Heqc. induction m. - intros z t [H | H]; inversion H; contradiction. - intros z t [H | H]. + inversion H; unfold eqc; auto. + apply IHm; auto. - intros z t [H | [H | H]]. + left; apply IHm; auto. + right; left; auto. + right; right; auto.", "succ": true}]