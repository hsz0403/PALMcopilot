[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros a l1 Hin_a_l1."], "tactic": "exists (fst (partition (fun x => if in_dec a l1 then false else true) l1)).", "exn": "In environment A : Type a : A l1 : list A Hin_a_l1 : In a l1 x : ?A0 The term \"a\" has type \"A\" while it is expected to have type \"forall x0 y : ?A1, {x0 = y} + {x0 <> y}\".", "type": "wrong_type", "handled": true}, {"ctx": ["intros a l1 Hin_a_l1."], "tactic": "apply in_permutation_ex.", "exn": "In environment A : Type a : A l1 : list A Hin_a_l1 : In a l1 Unable to unify \"exists l1 : list A, permutation (?M1416 :: l1) ?M1417\" with \"exists l2 : list A, In (a, l2) (split_one l1)\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros a l1 Hin_a_l1."], "tactic": "apply in_dec.", "exn": "In environment A : Type a : A l1 : list A Hin_a_l1 : In a l1 Unable to unify \"{In ?M1418 ?M1419} + {~ In ?M1418 ?M1419}\" with \"exists l2 : list A, In (a, l2) (split_one l1)\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros a l1 Hin_a_l1. exists (fst (partition (fun x => if in_dec a l1 then false else true) l1)). apply in_permutation_ex. apply in_dec.", "succ": false}]