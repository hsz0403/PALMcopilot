[{"history": {"proof": "intros l1 l2 H1 H2. unfold not_null in *. intros Hn1 Hn2. qsimpl time: 1 use: not_null_inv. qsimpl time: 1 use: not_null_inv. qsimpl time: 1 use: not_null_inv,not_null_cons. hauto use: in_app_or.", "repairs": ["", "", "", "cannot_apply_in", "no_instance_var", "cannot_unify", "hammer"], "exceptions": [{"ctx": ["intros l1 l2 H1 H2.", "unfold not_null in *.", "intros Hn1 Hn2."], "tactic": "apply not_null_inv in Hn1.", "exn": "Unable to apply lemma of type \"forall (a : A * list bool) (l : list (A * list bool)), not_null (a :: l) -> not_null l\" on hypothesis of type \"A\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["intros l1 l2 H1 H2.", "unfold not_null in *.", "intros Hn1 Hn2.", "qsimpl time: 1 use: not_null_inv."], "tactic": "apply not_null_inv in Hn2.", "exn": "Unable to find an instance for the variable a.", "type": "no_instance_var", "handled": true}, {"ctx": ["intros l1 l2 H1 H2.", "unfold not_null in *.", "intros Hn1 Hn2.", "qsimpl time: 1 use: not_null_inv.", "qsimpl time: 1 use: not_null_inv."], "tactic": "apply not_null_cons.", "exn": "In environment A : Type H0 : forall (a : A * list bool) (l : list (A * list bool)), not_null (a :: l) -> not_null l eqA_dec : forall a b : A, {a = b} + {a = b -> False} l1, l2 : list (A * list bool) H1 : forall a : A, In (a, []) l1 -> False H2 : forall a : A, In (a, []) l2 -> False Hn1 : A Hn2 : In (Hn1, []) (l1 ++ l2) Unable to unify \"forall a : A, ~ In (a, []) ((?M1850, ?M1851) :: ?M1852)\" with \"False\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros l1 l2 H1 H2. unfold not_null in *. intros Hn1 Hn2. apply not_null_inv in Hn1. apply not_null_inv in Hn2. apply not_null_cons. - intro contra. apply in_app_or in contra. destruct contra. + contradiction. + destruct H as [?|[?|?]]; destruct Hn1; eauto. - eapply add_frequency_list_unique_key; eauto. - eapply add_frequency_list_unique_key; eauto.", "succ": true}]