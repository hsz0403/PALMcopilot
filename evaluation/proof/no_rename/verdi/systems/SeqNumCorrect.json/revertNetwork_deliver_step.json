[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros st p xs ys d l l' n Hseq_sane Hseq_seen Hseq_eq Hnw Hnotin Hprocess.", "destruct st as [pkts state].", "simpl in *.", "inversion Hnw as [Heq].", "subst."], "tactic": "specialize (Hnotin (tmNum (pBody p))).", "exn": "In environment orig_base_params : BaseParams orig_multi_params : MultiParams orig_base_params state : name -> seq_num_data p : packet xs, ys : list packet d : data l : list (name * msg) l' : list (name * seq_num_msg) n : nat Hseq_eq : sequence_equality {| nwPackets := xs ++ p :: ys; nwState := state |} Hseq_seen : sequence_seen {| nwPackets := xs ++ p :: ys; nwState := state |} Hseq_sane : sequence_sane {| nwPackets := xs ++ p :: ys; nwState := state |} Hnotin : ~ In (tmNum (pBody p)) (assoc_default name_eq_dec (tdSeen (state (pDst p))) (pSrc p) []) Hprocess : processPackets (tdNum (state (pDst p))) l = (n, l') Heq : xs ++ p :: ys = xs ++ p :: ys The term \"tmNum (pBody p)\" has type \"nat\" while it is expected to have type \"In (tmNum (pBody p)) (assoc_default name_eq_dec (tdSeen (state (pDst p))) (pSrc p) [])\".", "type": "wrong_type", "handled": true}, {"ctx": ["intros st p xs ys d l l' n Hseq_sane Hseq_seen Hseq_eq Hnw Hnotin Hprocess.", "destruct st as [pkts state].", "simpl in *.", "inversion Hnw as [Heq].", "subst.", "unfold assoc_default in Hnotin."], "tactic": "rewrite Heq in Hnotin.", "exn": "Found no subterm matching \"xs ++ p :: ys\" in Hnotin.", "type": "no_subterm", "handled": true}]}, "chat": [], "original": "intros st p xs ys d l l' n Hseq_sane Hseq_seen Hseq_eq Hnw Hnotin Hprocess. destruct st as [pkts state]. simpl in *. inversion Hnw as [Heq]. subst. specialize (Hnotin (tmNum (pBody p))). unfold assoc_default in Hnotin. rewrite Heq in Hnotin. intros Hin. apply Hnotin. apply Hin.", "succ": false, "time": 18.264147363000006}]