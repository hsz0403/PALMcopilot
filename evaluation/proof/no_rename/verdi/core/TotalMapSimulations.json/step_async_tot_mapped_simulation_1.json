[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros net net' tr Hstep.", "inversion Hstep; subst.", "-", "unfold tot_map_net.", "simpl."], "tactic": "rewrite map_map.", "exn": "The LHS of map_map (map _ (map _ _)) does not match any subterm of the goal", "type": "no_match_term", "handled": true}, {"ctx": ["intros net net' tr Hstep.", "inversion Hstep; subst.", "-", "unfold tot_map_net.", "simpl."], "tactic": "apply map_ext.", "exn": "In environment base_fst, base_snd : BaseParams multi_fst : MultiParams base_fst multi_snd : MultiParams base_snd base_map : BaseParamsTotalMap base_fst base_snd name_map : MultiParamsNameTotalMap multi_fst multi_snd msg_map : MultiParamsMsgTotalMap multi_fst multi_snd name_map_bijective : MultiParamsNameTotalMapBijective name_map multi_map_congr : MultiParamsTotalMapCongruency base_map name_map msg_map net : network p : packet xs, ys : list packet d : data l : list (name * msg) out : list output Hstep : step_async net {| nwPackets := send_packets (pDst p) l ++ xs ++ ys; nwState := update name_eq_dec (nwState net) (pDst p) d |} [(pDst p, inr out)] H : nwPackets net = xs ++ p :: ys H0 : net_handlers (pDst p) (pSrc p) (pBody p) (nwState net (pDst p)) = (out, d, l) Unable to unify \"map ?M1706 ?M1709 = map ?M1707 ?M1709\" with \"step_async {| nwPackets := map tot_map_packet (nwPackets net); nwState := fun n : name => tot_map_data (nwState net (tot_map_name_inv n)) |} {| nwPackets := map tot_map_packet (map (fun m : name * msg => {| pSrc := pDst p; pDst := fst m; pBody := snd m |}) l ++ xs ++ ys); nwState := fun n : name => tot_map_data (update name_eq_dec (nwState net) (pDst p) d (tot_map_name_inv n)) |} [(tot_map_name (pDst p), inr (map tot_map_output out))]\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros net net' tr Hstep.", "inversion Hstep; subst.", "-", "unfold tot_map_net.", "simpl."], "tactic": "destruct a as [n [io | lo]]; simpl; auto.", "exn": "The reference a was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros net net' tr Hstep.", "inversion Hstep; subst.", "-", "unfold tot_map_net.", "simpl."], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros net net' tr Hstep.", "inversion Hstep; subst.", "-", "unfold tot_map_net.", "simpl.", "shelve.", "-", "unfold tot_map_net.", "simpl."], "tactic": "rewrite map_map.", "exn": "The LHS of map_map (map _ (map _ _)) does not match any subterm of the goal", "type": "no_match_term", "handled": true}, {"ctx": ["intros net net' tr Hstep.", "inversion Hstep; subst.", "-", "unfold tot_map_net.", "simpl.", "shelve.", "-", "unfold tot_map_net.", "simpl."], "tactic": "apply map_ext.", "exn": "In environment base_fst, base_snd : BaseParams multi_fst : MultiParams base_fst multi_snd : MultiParams base_snd base_map : BaseParamsTotalMap base_fst base_snd name_map : MultiParamsNameTotalMap multi_fst multi_snd msg_map : MultiParamsMsgTotalMap multi_fst multi_snd name_map_bijective : MultiParamsNameTotalMapBijective name_map multi_map_congr : MultiParamsTotalMapCongruency base_map name_map msg_map net : network h : name d : data l : list (name * msg) out : list output inp : input Hstep : step_async net {| nwPackets := send_packets h l ++ nwPackets net; nwState := update name_eq_dec (nwState net) h d |} [(h, inl inp); (h, inr out)] H : input_handlers h inp (nwState net h) = (out, d, l) Unable to unify \"map ?M1706 ?M1709 = map ?M1707 ?M1709\" with \"step_async {| nwPackets := map tot_map_packet (nwPackets net); nwState := fun n : name => tot_map_data (nwState net (tot_map_name_inv n)) |} {| nwPackets := map tot_map_packet (map (fun m : name * msg => {| pSrc := h; pDst := fst m; pBody := snd m |}) l ++ nwPackets net); nwState := fun n : name => tot_map_data (update name_eq_dec (nwState net) h d (tot_map_name_inv n)) |} [(tot_map_name h, inl (tot_map_input inp)); (tot_map_name h, inr (map tot_map_output out))]\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros net net' tr Hstep.", "inversion Hstep; subst.", "-", "unfold tot_map_net.", "simpl.", "shelve.", "-", "unfold tot_map_net.", "simpl."], "tactic": "destruct a as [n [io | lo]]; simpl; auto.", "exn": "The reference a was not found in the current environment.", "type": "ref_not_found", "handled": true}]}, "chat": [], "original": "intros net net' tr Hstep. inversion Hstep; subst. - unfold tot_map_net. simpl. rewrite map_map. simpl. f_equal. apply map_ext. intros. destruct a as [n [io | lo]]; simpl; auto. - unfold tot_map_net. simpl. rewrite map_map. simpl. f_equal. apply map_ext. intros. destruct a as [n [io | lo]]; simpl; auto.", "succ": false, "time": 18.039297026000042}]