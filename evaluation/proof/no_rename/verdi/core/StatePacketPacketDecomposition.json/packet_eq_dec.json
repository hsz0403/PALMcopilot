[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros p1 p2."], "tactic": "destruct (do_packet_eq_dec p1 p2).", "exn": "In environment B : BaseParams M : MultiParams B d : Decomposition B M p1, p2 : packet The term \"p1\" has type \"packet\" while it is expected to have type \"do_packet\".", "type": "wrong_type", "handled": true}, {"ctx": ["intros p1 p2.", "left."], "tactic": "apply e.", "exn": "The reference e was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros p1 p2.", "left.", "apply Nat.induction.", "-"], "tactic": "right.", "exn": "Not an inductive goal with 2 constructors.", "type": "not_inductive_goal", "handled": true}, {"ctx": ["intros p1 p2.", "left.", "apply Nat.induction.", "-", "intro contra."], "tactic": "apply n.", "exn": "The reference n was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros p1 p2.", "left.", "apply Nat.induction.", "-", "intro contra.", "apply Nat.induction."], "tactic": "apply contra.", "exn": "In environment B : BaseParams M : MultiParams B d : Decomposition B M p1, p2 : packet contra : nat Unable to unify \"nat\" with \"Morphisms.Proper (Morphisms.respectful eq iff) (fun _ : nat => forall y : nat, contra = y -> p1 = p2 <-> p1 = p2)\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros p1 p2. destruct (do_packet_eq_dec p1 p2). - left. apply e. - right. intro contra. apply n. apply contra.", "succ": false, "time": 15.174215942}]