[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros ns f h m m' H.", "unfold collate_ls."], "tactic": "reflexivity.", "exn": "In environment base_fst, base_snd : BaseParams multi_fst : MultiParams base_fst multi_snd : MultiParams base_snd base_map : BaseParamsPartialMap base_fst base_snd name_map : MultiParamsNameTotalMap multi_fst multi_snd msg_map : MultiParamsMsgPartialMap multi_fst multi_snd name_map_bijective : MultiParamsNameTotalMapBijective name_map multi_map_congr : MultiParamsPartialMapCongruency base_map name_map msg_map fail_fst : FailureParams multi_fst fail_snd : FailureParams multi_snd fail_map_congr : FailureParamsPartialMapCongruency fail_fst fail_snd base_map overlay_fst : NameOverlayParams multi_fst overlay_snd : NameOverlayParams multi_snd overlay_map_congr : NameOverlayParamsTotalMapCongruency overlay_fst overlay_snd name_map fail_msg_fst : FailMsgParams multi_fst fail_msg_snd : FailMsgParams multi_snd fail_msg_map_congr : FailMsgParamsPartialMapCongruency fail_msg_fst fail_msg_snd msg_map new_msg_fst : NewMsgParams multi_fst new_msg_snd : NewMsgParams multi_snd new_msg_map_congr : NewMsgParamsPartialMapCongruency new_msg_fst new_msg_snd msg_map ns : list name f : name -> name -> list msg h : name m : msg m' : msg H : pt_map_msg m = Some m' src : name dst : name Unable to unify \"(fix collate_ls (A B : Type) (A_eq_dec : forall x y : A, {x = y} + {x <> y}) (s : list A) (f : A -> A -> list B) (to : A) (m : B) {struct s} : A -> A -> list B := match s with | [] => f | from :: s' => collate_ls A B A_eq_dec s' (update2 A_eq_dec f from to (f from to ++ [m])) to m end) name msg name_eq_dec (map tot_map_name ns) (fun src dst : name => filterMap pt_map_msg (f (tot_map_name_inv src) (tot_map_name_inv dst))) (tot_map_name h) m' src dst\" with \"filterMap pt_map_msg ((fix collate_ls (A B : Type) (A_eq_dec : forall x y : A, {x = y} + {x <> y}) (s : list A) (f : A -> A -> list B) (to : A) (m : B) {struct s} : A -> A -> list B := match s with | [] => f | from :: s' => collate_ls A B A_eq_dec s' (update2 A_eq_dec f from to (f from to ++ [m])) to m end) name msg name_eq_dec ns f h m (tot_map_name_inv src) (tot_map_name_inv dst))\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros ns f h m m' H. unfold collate_ls. repeat rewrite collate_tot_map_eq. reflexivity.", "succ": false, "time": 9.023999457999992}]