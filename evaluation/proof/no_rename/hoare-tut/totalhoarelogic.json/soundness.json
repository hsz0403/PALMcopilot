[{"history": {"proof": "intros pre p post H. intros e H0. apply H in H0. srun best use: wp_sound.", "repairs": ["", "", "", "hammer"], "exceptions": [{"ctx": ["intros pre p post H."], "tactic": "unfold entails.", "exn": "The reference entails was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros pre p post H."], "tactic": "unfold exec.", "exn": "Cannot coerce exec to an evaluable reference.", "type": "not_evaluable", "handled": true}, {"ctx": ["intros pre p post H.", "intros e H0."], "tactic": "apply wp_complete in H.", "exn": "Unable to apply lemma of type \"forall (prog : ImpProg) (post : Pred), prog [=post =] |= synt_wp prog post\" on hypothesis of type \"pre |= synt_wp p post\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["intros pre p post H.", "intros e H0.", "apply H in H0."], "tactic": "apply H0.", "exn": "In environment pre : E.Env -> Type p : ImpProg post : Pred H : pre |= synt_wp p post e : E.Env H0 : synt_wp p post e Unable to unify \"synt_wp p post e\" with \"(p [=post =]) e\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros pre p post H. unfold entails. unfold synt_wp. unfold wlp. unfold aux_wlp. unfold exec. intros e H0. apply wp_complete in H. apply H in H0. apply H0.", "succ": true}]