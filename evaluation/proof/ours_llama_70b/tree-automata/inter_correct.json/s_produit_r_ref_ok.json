[{"history": {"proof": "qsimpl time: 1 use: sproductr_0. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok. qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "repairs": ["no_subterm", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify"], "exceptions": [{"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'."], "tactic": "rewrite <- (sproductr_0 s a p a' p' p').", "exn": "Found no subterm matching \"Some (pl_produit p' p')\" in the current goal.", "type": "no_subterm", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0."], "tactic": "apply pl_produit_ref_ok.", "exn": "In environment H : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_occur (pl_produit ?M2565 ?M2566) a0\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0."], "tactic": "apply s_produit_l_ref_ok.", "exn": "In environment H2 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H1 : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_list\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply pl_produit_ref_ok.", "exn": "In environment H4 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H3 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_occur (pl_produit ?M4525 ?M4526) a0\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply s_produit_l_ref_ok.", "exn": "In environment H5 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H2 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H1 : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_list\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply pl_produit_ref_ok.", "exn": "In environment H4 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H3 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_occur (pl_produit ?M6681 ?M6682) a0\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply s_produit_l_ref_ok.", "exn": "In environment H5 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H2 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H1 : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_list\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply pl_produit_ref_ok.", "exn": "In environment H4 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H3 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_occur (pl_produit ?M8837 ?M8838) a0\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply s_produit_l_ref_ok.", "exn": "In environment H5 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H2 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H1 : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_list\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply pl_produit_ref_ok.", "exn": "In environment H4 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H3 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_occur (pl_produit ?M10993 ?M10994) a0\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply s_produit_l_ref_ok.", "exn": "In environment H5 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H2 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H1 : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_list\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply pl_produit_ref_ok.", "exn": "In environment H4 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H3 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_occur (pl_produit ?M13149 ?M13150) a0\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply s_produit_l_ref_ok.", "exn": "In environment H5 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H2 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H1 : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_list\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply pl_produit_ref_ok.", "exn": "In environment H4 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H3 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_occur (pl_produit ?M15305 ?M15306) a0\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply s_produit_l_ref_ok.", "exn": "In environment H5 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H2 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H1 : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_list\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply pl_produit_ref_ok.", "exn": "In environment H4 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H3 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_occur (pl_produit ?M17461 ?M17462) a0\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply s_produit_l_ref_ok.", "exn": "In environment H5 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H2 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H1 : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_list\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply pl_produit_ref_ok.", "exn": "In environment H4 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H3 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_occur (pl_produit ?M19617 ?M19618) a0\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply s_produit_l_ref_ok.", "exn": "In environment H5 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H2 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H1 : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_list\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply pl_produit_ref_ok.", "exn": "In environment H4 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H3 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_occur (pl_produit ?M21773 ?M21774) a0\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply s_produit_l_ref_ok.", "exn": "In environment H5 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H2 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H1 : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_list\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply pl_produit_ref_ok.", "exn": "In environment H4 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H3 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_occur (pl_produit ?M23929 ?M23930) a0\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply s_produit_l_ref_ok.", "exn": "In environment H5 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H2 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H1 : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_list\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply pl_produit_ref_ok.", "exn": "In environment H4 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H3 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_occur (pl_produit ?M26085 ?M26086) a0\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply s_produit_l_ref_ok.", "exn": "In environment H5 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H2 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H1 : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_list\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply pl_produit_ref_ok.", "exn": "In environment H4 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H3 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_occur (pl_produit ?M28241 ?M28242) a0\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply s_produit_l_ref_ok.", "exn": "In environment H5 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H2 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H1 : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_list\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply pl_produit_ref_ok.", "exn": "In environment H4 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H3 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_occur (pl_produit ?M30397 ?M30398) a0\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply s_produit_l_ref_ok.", "exn": "In environment H5 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H2 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H1 : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_list\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply pl_produit_ref_ok.", "exn": "In environment H4 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H3 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_occur (pl_produit ?M32553 ?M32554) a0\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply s_produit_l_ref_ok.", "exn": "In environment H5 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H2 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H1 : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_list\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply pl_produit_ref_ok.", "exn": "In environment H4 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H3 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_occur (pl_produit ?M34709 ?M34710) a0\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply s_produit_l_ref_ok.", "exn": "In environment H5 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H2 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H1 : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_list\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply pl_produit_ref_ok.", "exn": "In environment H4 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H3 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_occur (pl_produit ?M36865 ?M36866) a0\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply s_produit_l_ref_ok.", "exn": "In environment H5 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H2 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H1 : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_list\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply pl_produit_ref_ok.", "exn": "In environment H4 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H3 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_occur (pl_produit ?M39021 ?M39022) a0\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply s_produit_l_ref_ok.", "exn": "In environment H5 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H2 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H1 : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_list\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply pl_produit_ref_ok.", "exn": "In environment H4 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H3 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_occur (pl_produit ?M41177 ?M41178) a0\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply s_produit_l_ref_ok.", "exn": "In environment H5 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H2 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H1 : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_list\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply pl_produit_ref_ok.", "exn": "In environment H4 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H3 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_occur (pl_produit ?M43333 ?M43334) a0\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply s_produit_l_ref_ok.", "exn": "In environment H5 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H2 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H1 : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_list\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply pl_produit_ref_ok.", "exn": "In environment H4 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H3 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_occur (pl_produit ?M45489 ?M45490) a0\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply s_produit_l_ref_ok.", "exn": "In environment H5 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H2 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H1 : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_list\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply pl_produit_ref_ok.", "exn": "In environment H4 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H3 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_occur (pl_produit ?M47645 ?M47646) a0\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply s_produit_l_ref_ok.", "exn": "In environment H5 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H2 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H1 : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_list\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply pl_produit_ref_ok.", "exn": "In environment H4 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H3 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_occur (pl_produit ?M49801 ?M49802) a0\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply s_produit_l_ref_ok.", "exn": "In environment H5 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H2 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H1 : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_list\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply pl_produit_ref_ok.", "exn": "In environment H4 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H3 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_occur (pl_produit ?M51957 ?M51958) a0\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply s_produit_l_ref_ok.", "exn": "In environment H5 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H2 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H1 : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_list\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply pl_produit_ref_ok.", "exn": "In environment H4 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H3 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_occur (pl_produit ?M54113 ?M54114) a0\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply s_produit_l_ref_ok.", "exn": "In environment H5 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H2 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H1 : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_list\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply pl_produit_ref_ok.", "exn": "In environment H4 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H3 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_occur (pl_produit ?M56269 ?M56270) a0\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply s_produit_l_ref_ok.", "exn": "In environment H5 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H2 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H1 : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_list\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply pl_produit_ref_ok.", "exn": "In environment H4 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H3 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_occur (pl_produit ?M58425 ?M58426) a0\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply s_produit_l_ref_ok.", "exn": "In environment H5 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H2 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H1 : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_list\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply pl_produit_ref_ok.", "exn": "In environment H4 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H3 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_occur (pl_produit ?M60581 ?M60582) a0\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply s_produit_l_ref_ok.", "exn": "In environment H5 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H2 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H1 : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_list\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply pl_produit_ref_ok.", "exn": "In environment H4 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H3 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_occur (pl_produit ?M62737 ?M62738) a0\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply s_produit_l_ref_ok.", "exn": "In environment H5 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H2 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H1 : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_list\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply pl_produit_ref_ok.", "exn": "In environment H4 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H3 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_occur (pl_produit ?M64893 ?M64894) a0\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply s_produit_l_ref_ok.", "exn": "In environment H5 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H2 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H1 : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_list\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply pl_produit_ref_ok.", "exn": "In environment H4 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H3 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_occur (pl_produit ?M67049 ?M67050) a0\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply s_produit_l_ref_ok.", "exn": "In environment H5 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H2 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H1 : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_list\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply pl_produit_ref_ok.", "exn": "In environment H4 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H3 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_occur (pl_produit ?M69205 ?M69206) a0\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply s_produit_l_ref_ok.", "exn": "In environment H5 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H2 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H1 : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_list\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply pl_produit_ref_ok.", "exn": "In environment H4 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H3 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_occur (pl_produit ?M71361 ?M71362) a0\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply s_produit_l_ref_ok.", "exn": "In environment H5 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H2 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H1 : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_list\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply pl_produit_ref_ok.", "exn": "In environment H4 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H3 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_occur (pl_produit ?M73517 ?M73518) a0\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply s_produit_l_ref_ok.", "exn": "In environment H5 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H2 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H1 : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_list\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply pl_produit_ref_ok.", "exn": "In environment H4 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H3 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_occur (pl_produit ?M75673 ?M75674) a0\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply s_produit_l_ref_ok.", "exn": "In environment H5 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H2 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H1 : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_list\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s a p d0 d1 Hs Hd0.", "unfold state_ref_ok.", "intros a' p'.", "qsimpl time: 1 use: sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok.", "qsimpl time: 1 use: pl_produit_ref_ok,sproductr_0,s_produit_l_ref_ok."], "tactic": "apply pl_produit_ref_ok.", "exn": "In environment H4 : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1) H3 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), (if (a =? c)%N then Some p else None) = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) H : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1) s : state a : ad p : prec_list d0, d1 : preDTA Hs : state_ref_ok s d1 Hd0 : state_ref_ok (M1 prec_list a p) d0 a' : ad p' : prec_list H0 : MapGet prec_list (s_produit_r a p s) a' = Some p' a0 : ad Unable to unify \"prec_occur (pl_produit ?M77829 ?M77830) a0\" with \"prec_occur p' a0\".", "type": "cannot_unify", "handled": true}]}, "chat": [{"role": "user", "content": "I will give you a Coq proof state, including both hypotheses and a specific goal and your need to prove it. Your response should be a singular code block of Coq proof starting with \"```coq\n\", ending with \"Qed.```\", without any additional explanation or commentary. Follow to these guidelines:\nIntroduce variables using unique names to avoid any conflicts.\nKeep each command distinct and separated, avoid concatenations like ';' or '[cmd|cmd]'.\nOrganize your proof with bullets like '-', '+', and '*' instead of braces ({, }). Shift to their double symbols like '--' and '++', when necessary.\nEffectively use given premises, follow the syntax and structure demonstrated in the examples provided.\n\nExample 1:\n\nHypotheses:\nn, m: nat\nIHn: m + n = n + m\n\nGoal:\nm + S n = S n + m\n\nProof:\n```coq\nsimpl. rewrite <- IHn. auto.\nQed.```\n\nExample 2:\nHypotheses:\n\nGoal:\nforall n m : nat, m + n = n + m\n\n```coq\nintros n m. induction n.\n- simpl. auto.\n- simpl. rewrite <- IHn. auto.\nQed.```\n\nSolve This Proof State:\n\nHypotheses:\n\n\nGoal:\nforall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_r a p s) (preDTA_produit d1 d0)\n\nPremises:\nstate_ref_ok = fun (s : state) (d : preDTA) => forall (a : ad) (p : prec_list), MapGet prec_list s a = Some p -> prec_list_ref_ok p d : state -> preDTA -> Prop\nM1 : forall A : Type, ad -> A -> Map A\nad = N : Set\nstate = Map prec_list : Set\ns_produit_r = fix s_produit_r (a : ad) (p : prec_list) (s : state) {struct s} : state := match s with | @M0 _ => M0 prec_list | @M1 _ a' p' => if (a =? a')%N then M1 prec_list a (pl_produit p' p) else M0 prec_list | @M2 _ s0 s1 => match a with | 0%N => M2 prec_list (s_produit_r 0%N p s0) (M0 prec_list) | N.pos (q'~1)%positive => M2 prec_list (M0 prec_list) (s_produit_r (N.pos q') p s1) | N.pos (q'~0)%positive => M2 prec\npreDTA_produit = fix preDTA_produit (d0 d1 : preDTA) {struct d1} : preDTA := match d0 with | @M0 _ => match d1 with | @M0 _ | _ => M0 state end | @M1 _ a0 s0 => match d1 with | @M0 _ => M0 state | @M1 _ a1 s1 => preDTA_produit_l a0 s0 (M1 state a1 s1) | @M2 _ s10 s11 => preDTA_produit_l a0 s0 (M2 state s10 s11) end | @M2 _ s00 s01 => match d1 with | @M0 _ => M0 state | @M1 _ a1 s1 => preDT\nInductive prec_list : Set := prec_cons : ad -> prec_list -> prec_list -> prec_list | prec_empty : prec_list\npreDTA = Map state : Set\ns_produit_l_ref_ok : forall (s : state) (a : ad) (p : prec_list) (d0 d1 : preDTA), state_ref_ok s d1 -> state_ref_ok (M1 prec_list a p) d0 -> state_ref_ok (s_produit_l a p s) (preDTA_produit d0 d1)\npl_produit_ref_ok : forall (p0 p1 : prec_list) (d0 d1 : preDTA), prec_list_ref_ok p0 d0 -> prec_list_ref_ok p1 d1 -> prec_list_ref_ok (pl_produit p0 p1) (preDTA_produit d0 d1)\nstate_ref_ok_M2_destr : forall (s0 s1 : state) (d : preDTA), state_ref_ok (M2 prec_list s0 s1) d -> state_ref_ok s0 d /\\ state_ref_ok s1 d\nstate_ref_ok_check_complete : forall (s : state) (d : preDTA), state_ref_ok_check s d = true -> state_ref_ok s d\nstate_ref_ok_check_correct : forall (s : state) (d : preDTA), state_ref_ok s d -> state_ref_ok_check s d = true\npl_produit_rec_0 : forall tl : term_list, (forall u : term, term_list_occur u tl -> forall (d0 d1 : preDTA) (a0 a1 : ad), predta_compatible d0 d1 -> reconnaissance d0 a0 u -> reconnaissance d1 a1 u -> reconnaissance (preDTA_produit d0 d1) (iad_conv a0 a1) u) -> forall (d0 d1 : preDTA) (plp0 plp1 : pl_path.pl_path), predta_compatible d0 d1 -> pl_path.pl_path_recon d0 tl plp0 -> pl_path.pl_path_recon d1 tl plp1 -> pl_path.pl_path_recon (preDTA_produit d0 d1) tl (pl_path_product plp0 plp1)\npreDTA_produit_correct_wrt_sign_invar : forall (d0 d1 : preDTA) (sigma : signature), predta_correct_wrt_sign d0 sigma -> predta_correct_wrt_sign d1 sigma -> predta_correct_wrt_sign (preDTA_produit d0 d1) sigma\npl_produit_rec_2 : forall tl : term_list, (forall u : term, term_list_occur u tl -> forall (d0 d1 : preDTA) (a0 a1 : ad), predta_compatible d0 d1 -> reconnaissance (preDTA_produit d0 d1) (iad_conv a0 a1) u -> reconnaissance d0 a0 u /\\ reconnaissance d1 a1 u) -> forall (d0 d1 : preDTA) (plp : pl_path.pl_path), predta_compatible d0 d1 -> pl_path.pl_path_recon (preDTA_produit d0 d1) tl plp -> exists plp0 plp1 : pl_path.pl_path, plp = pl_path_product plp0 plp1 /\\ pl_path.pl_path_recon d0 tl plp0 /\\ pl_path.pl_path_recon d1 tl plp1\npredta_inter_direct : forall (d0 d1 : preDTA) (a0 a1 : ad) (t : term), predta_compatible d0 d1 -> reconnaissance d0 a0 t -> reconnaissance d1 a1 t -> reconnaissance (preDTA_produit d0 d1) (iad_conv a0 a1) t\npredta_inter_reciproque : forall (d0 d1 : preDTA) (a0 a1 : ad) (t : term), predta_compatible d0 d1 -> reconnaissance (preDTA_produit d0 d1) (iad_conv a0 a1) t -> reconnaissance d0 a0 t /\\ reconnaissance d1 a1 t\npredta_inter_def_0 = fun t : term => forall (d0 d1 : preDTA) (a0 a1 : ad), predta_compatible d0 d1 -> reconnaissance d0 a0 t -> reconnaissance d1 a1 t -> reconnaissance (preDTA_produit d0 d1) (iad_conv a0 a1) t : term -> Prop\npredta_inter_def_1 = fun t : term => forall (d0 d1 : preDTA) (a0 a1 : ad), predta_compatible d0 d1 -> reconnaissance (preDTA_produit d0 d1) (iad_conv a0 a1) t -> reconnaissance d0 a0 t /\\ reconnaissance d1 a1 t : term -> Prop\npredta_produit_5 : forall (d0 d1 : preDTA) (a : ad) (s : state), MapGet state (preDTA_produit d0 d1) a = Some s -> exists (a0 a1 : ad) (s0 s1 : state), a = iad_conv a0 a1 /\\ MapGet state d0 a0 = Some s0 /\\ MapGet state d1 a1 = Some s1\npl_produit_rec_3 : forall (d0 d1 : preDTA) (tl : term_list) (pl0 pl1 : prec_list) (n : nat), liste_reconnait (preDTA_produit d0 d1) (pl_produit pl0 pl1) tl -> predta_compatible d0 d1 -> pl_tl_length pl0 n -> pl_tl_length pl1 n -> (forall u : term, term_list_occur u tl -> forall (d2 d3 : preDTA) (a0 a1 : ad), predta_compatible d2 d3 -> reconnaissance (preDTA_produit d2 d3) (iad_conv a0 a1) u -> reconnaissance d2 a0 u /\\ reconnaissance d3 a1 u) -> liste_reconnait d0 pl0 tl /\\ liste_reconnait d1 pl1 tl\nsproductr_0 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), MapGet prec_list (M1 prec_list a p) c = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0)\npredta_compatible_compat_def = fun d0 : preDTA => forall d1 : preDTA, predta_compatible d0 d1 -> dta_compat d0 d1 : preDTA -> Prop\npredta_correct_wrt_sign_M2 : forall (d0 d1 : preDTA) (sigma : signature), predta_correct_wrt_sign (M2 state d0 d1) sigma -> predta_correct_wrt_sign d0 sigma /\\ predta_correct_wrt_sign d1 sigma\npredta_produit_2 : forall (d0 d1 : preDTA) (a0 a1 : ad) (s0 s1 : state), MapGet state d0 a0 = Some s0 -> MapGet state d1 a1 = Some s1 -> MapGet state (preDTA_produit d0 d1) (iad_conv a0 a1) = Some (s_produit s0 s1)\npl_produit_rec_1 : forall (d0 d1 : preDTA) (tl : term_list) (pl0 pl1 : prec_list), liste_reconnait d0 pl0 tl -> liste_reconnait d1 pl1 tl -> pl_tl_length pl0 (lst_length tl) -> pl_tl_length pl1 (lst_length tl) -> predta_compatible d0 d1 -> (forall u : term, term_list_occur u tl -> forall (d2 d3 : preDTA) (a0 a1 : ad), predta_compatible d2 d3 -> reconnaissance d2 a0 u -> reconnaissance d3 a1 u -> reconnaissance (preDTA_produit d2 d3) (iad_conv a0 a1) u) -> liste_reconnait (preDTA_produit d0 d1) (pl_produit pl0 pl1) tl\nsproductr_1 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r : prec_list), MapGet prec_list (s_produit_r a p s) c = Some r -> exists r0 r1 : prec_list, MapGet prec_list (M1 prec_list a p) c = Some r0 /\\ MapGet prec_list s c = Some r1\npreDTA_ref_ok_def : forall d : preDTA, preDTA_ref_ok d < -> (forall (a : ad) (s : state), MapGet state d a = Some s -> state_ref_ok s d)\npreDTA_ref_ok_distinct = fun d d' : preDTA => forall (a : ad) (s : state), MapGet state d a = Some s -> state_ref_ok s d' : preDTA -> preDTA -> Prop\nsproductr_0_def = fun s : state => forall (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), MapGet prec_list (M1 prec_list a p) c = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_r a p s) c = Some (pl_produit r1 r0) : state -> Prop\nsproductl_0 : forall (s : state) (a : ad) (p : prec_list) (c : ad) (r0 r1 : prec_list), MapGet prec_list (M1 prec_list a p) c = Some r0 -> MapGet prec_list s c = Some r1 -> MapGet prec_list (s_produit_l a p s) c = Some (pl_produit r0 r1)\npredta_compatible = fun d0 d1 : preDTA => forall s0 s1 : state, state_in_dta d0 s0 -> state_in_dta d1 s1 -> st_compatible s0 s1 : preDTA -> preDTA -> Prop"}, {"role": "assistant", "content": "```coq\nintros s a p d0 d1 Hs Hd0.\nunfold state_ref_ok.\nintros a' p'.\nrewrite <- (sproductr_0 s a p a' p' p').\napply pl_produit_ref_ok.\n- apply s_produit_l_ref_ok.\n  + assumption.\n  + assumption.\n- apply pl_produit_ref_ok.\n  + apply s_produit_l_ref_ok.\n    * assumption.\n    * assumption.\n  + apply pl_produit_ref_ok.\n    * apply s_produit_l_ref_ok.\n      - assumption.\n      - assumption.\n    * apply pl_produit_ref_ok.\n      - apply s_produit_l_ref_ok.\n        + assumption.\n        + assumption.\n      - apply pl_produit_ref_ok.\n        + apply s_produit_l_ref_ok.\n          - assumption.\n          - assumption.\n        + apply pl_produit_ref_ok.\n          - apply s_produit_l_ref_ok.\n            + assumption.\n            + assumption.\n          - apply pl_produit_ref_ok.\n            + apply s_produit_l_ref_ok.\n              - assumption.\n              - assumption.\n            + apply pl_produit_ref_ok.\n              - apply s_produit_l_ref_ok.\n                + assumption.\n                + assumption.\n              - apply pl_produit_ref_ok.\n                + apply s_produit_l_ref_ok.\n                  - assumption.\n                  - assumption.\n                + apply pl_produit_ref_ok.\n                  - apply s_produit_l_ref_ok.\n                    + assumption.\n                    + assumption.\n                  - apply pl_produit_ref_ok.\n                    + apply s_produit_l_ref_ok.\n                      - assumption.\n                      - assumption.\n                    + apply pl_produit_ref_ok.\n                      - apply s_produit_l_ref_ok.\n                        + assumption.\n                        + assumption.\n                      - apply pl_produit_ref_ok.\n                        + apply s_produit_l_ref_ok.\n                          - assumption.\n                          - assumption.\n                        + apply pl_produit_ref_ok.\n                          + apply s_produit_l_ref_ok.\n                            - assumption.\n                            - assumption.\n                          + apply pl_produit_ref_ok.\n                            + apply s_produit_l_ref_ok.\n                              - assumption.\n                              - assumption.\n                            + apply pl_produit_ref_ok.\n                              + apply s_produit_l_ref_ok.\n                                - assumption.\n                                - assumption.\n                              + apply pl_produit_ref_ok.\n                                + apply s_produit_l_ref_ok.\n                                  - assumption.\n                                  - assumption.\n                                + apply pl_produit_ref_ok.\n                                  + apply s_produit_l_ref_ok.\n                                    - assumption.\n                                    - assumption.\n                                  + apply pl_produit_ref_ok.\n                                    + apply s_produit_l_ref_ok.\n                                      - assumption.\n                                      - assumption.\n                                    + apply pl_produit_ref_ok.\n                                      + apply s_produit_l_ref_ok.\n                                        - assumption.\n                                        - assumption.\n                                      + apply pl_produit_ref_ok.\n                                        + apply s_produit_l_ref_ok.\n                                          - assumption.\n                                          - assumption.\n                                        + apply pl_produit_ref_ok.\n                                          + apply s_produit_l_ref_ok.\n                                            - assumption.\n                                            - assumption.\n                                          + apply pl_produit_ref_ok.\n                                            + apply s_produit_l_ref_ok.\n                                              - assumption.\n                                              - assumption.\n                                            + apply pl_produit_ref_ok.\n                                              + apply s_produit_l_ref_ok.\n                                                - assumption.\n                                                - assumption.\n                                              + apply pl_produit_ref_ok.\n                                                + apply s_produit_l_ref_ok.\n                                                  - assumption.\n                                                  - assumption.\n                                                + apply pl_produit_ref_ok.\n                                                  + apply s_produit_l_ref_ok.\n                                                    - assumption.\n                                                    - assumption.\n                                                  + apply pl_produit_ref_ok.\n                                                    + apply s_produit_l_ref_ok.\n                                                      - assumption.\n                                                      - assumption.\n                                                    + apply pl_produit_ref_ok.\n                                                      + apply s_produit_l_ref_ok.\n                                                        - assumption.\n                                                        - assumption.\n                                                      + apply pl_produit_ref_ok.\n                                                        + apply s_produit_l_ref_ok.\n                                                          - assumption.\n                                                          - assumption.\n                                                        + apply pl_produit_ref_ok.\n                                                          + apply s_produit_l_ref_ok.\n                                                            - assumption.\n                                                            - assumption.\n                                                          + apply pl_produit_ref_ok.\n                                                            + apply s_produit_l_ref_ok.\n                                                              - assumption.\n                                                              - assumption.\n                                                            + apply pl_produit_ref_ok.\n                                                              + apply s_produit_l_ref_ok.\n                                                                - assumption.\n                                                                - assumption.\n                                                              + apply pl_produit_ref_ok.\n                                                                + apply s_produit_l_ref_ok.\n                                                                  - assumption.\n                                                                  - assumption.\n                                                                + apply pl_produit_ref_ok.\n                                                                  + apply s_produit_l_ref_ok.\n                                                                    - assumption.\n                                                                    - assumption.\n                                                                  + apply pl_produit_ref_ok.\n                                                                    + apply s_produit_l_ref_ok.\n                                                                      - assumption.\n                                                                      - assumption.\n                                                                    + apply pl_produit_ref_ok.\n                                                                      + apply s_produit"}], "original": "intros s a p d0 d1 Hs Hd0. unfold state_ref_ok. intros a' p'. rewrite <- (sproductr_0 s a p a' p' p'). apply pl_produit_ref_ok. - apply s_produit_l_ref_ok. + auto. + auto. - apply pl_produit_ref_ok. + apply s_produit_l_ref_ok. * auto. * auto. + apply pl_produit_ref_ok. * apply s_produit_l_ref_ok. - auto. - auto. * apply pl_produit_ref_ok. - apply s_produit_l_ref_ok. + auto. + auto. - apply pl_produit_ref_ok. + apply s_produit_l_ref_ok. - auto. - auto. + apply pl_produit_ref_ok. - apply s_produit_l_ref_ok. + auto. + auto. - apply pl_produit_ref_ok. + apply s_produit_l_ref_ok. - auto. - auto. + apply pl_produit_ref_ok. - apply s_produit_l_ref_ok. + auto. + auto. - apply pl_produit_ref_ok. + apply s_produit_l_ref_ok. - auto. - auto. + apply pl_produit_ref_ok. - apply s_produit_l_ref_ok. + auto. + auto. - apply pl_produit_ref_ok. + apply s_produit_l_ref_ok. - auto. - auto. + apply pl_produit_ref_ok. - apply s_produit_l_ref_ok. + auto. + auto. - apply pl_produit_ref_ok. + apply s_produit_l_ref_ok. - auto. - auto. + apply pl_produit_ref_ok. + apply s_produit_l_ref_ok. - auto. - auto. + apply pl_produit_ref_ok. + apply s_produit_l_ref_ok. - auto. - auto. + apply pl_produit_ref_ok. + apply s_produit_l_ref_ok. - auto. - auto. + apply pl_produit_ref_ok. + apply s_produit_l_ref_ok. - auto. - auto. + apply pl_produit_ref_ok. + apply s_produit_l_ref_ok. - auto. - auto. + apply pl_produit_ref_ok. + apply s_produit_l_ref_ok. - auto. - auto. + apply pl_produit_ref_ok. + apply s_produit_l_ref_ok. - auto. - auto. + apply pl_produit_ref_ok. + apply s_produit_l_ref_ok. - auto. - auto. + apply pl_produit_ref_ok. + apply s_produit_l_ref_ok. - auto. - auto. + apply pl_produit_ref_ok. + apply s_produit_l_ref_ok. - auto. - auto. + apply pl_produit_ref_ok. + apply s_produit_l_ref_ok. - auto. - auto. + apply pl_produit_ref_ok. + apply s_produit_l_ref_ok. - auto. - auto. + apply pl_produit_ref_ok. + apply s_produit_l_ref_ok. - auto. - auto. + apply pl_produit_ref_ok. + apply s_produit_l_ref_ok. - auto. - auto. + apply pl_produit_ref_ok. + apply s_produit_l_ref_ok. - auto. - auto. + apply pl_produit_ref_ok. + apply s_produit_l_ref_ok. - auto. - auto. + apply pl_produit_ref_ok. + apply s_produit_l_ref_ok. - auto. - auto. + apply pl_produit_ref_ok. + apply s_produit_l_ref_ok. - auto. - auto. + apply pl_produit_ref_ok. + apply s_produit_l_ref_ok. - auto. - auto. + apply pl_produit_ref_ok. + apply s_produit_l_ref_ok. - auto. - auto. + apply pl_produit_ref_ok. + apply s_produit_l_ref_ok. - auto. - auto. + apply pl_produit_ref_ok. + apply s_produit_l_ref_ok. - auto. - auto. + apply pl_produit_ref_ok. +", "succ": false}]