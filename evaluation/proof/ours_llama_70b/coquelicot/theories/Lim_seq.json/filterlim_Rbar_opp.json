[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros x.", "unfold filterlim.", "intros F G."], "tactic": "split.", "exn": "Not an inductive product.", "type": "not_inductive_product", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G."], "tactic": "intros H.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G.", "rewrite <- (Rbar_opp_involutive x)."], "tactic": "apply filterlim_le_le with (f := fun y => -Ropp (y)) (g := fun y => -Ropp (y)) (h := fun y => -Ropp (y)).", "exn": "In environment x : Rbar F : R -> Prop G : Rbar_locally (Rbar_opp x) F Unable to unify \"forall P : R -> Prop, Rbar_locally ?M2372 P -> filtermap (fun y : R => - - y) ?F P\" with \"match Rbar_opp (Rbar_opp x) with | Finite a => locally a (fun x : R => F (- x)) | p_infty => exists M : R, forall x : R, M < x -> (fun x0 : R => F (- x0)) x | m_infty => exists M : R, forall x : R, x < M -> (fun x0 : R => F (- x0)) x end\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G.", "rewrite <- (Rbar_opp_involutive x).", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "+"], "tactic": "intros y; simpl; auto.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G.", "rewrite <- (Rbar_opp_involutive x).", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "+"], "tactic": "+", "exn": "Wrong bullet +: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G.", "rewrite <- (Rbar_opp_involutive x).", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "+", "shelve.", "+"], "tactic": "apply H.", "exn": "The reference H was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G.", "rewrite <- (Rbar_opp_involutive x).", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "+", "shelve.", "+", "apply Rbar_is_upper_bound."], "tactic": "+", "exn": "Wrong bullet +: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G.", "rewrite <- (Rbar_opp_involutive x).", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "+", "shelve.", "+", "apply Rbar_is_upper_bound.", "*", "shelve.", "*", "shelve.", "+"], "tactic": "apply filterlim_le_le with (f := fun y => -Ropp (y)) (g := fun y => -Ropp (y)) (h := fun y => -Ropp (y)).", "exn": "In environment x : Rbar F : R -> Prop G : Rbar_locally (Rbar_opp x) F Unable to unify \"R\" with \"Rbar\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G.", "rewrite <- (Rbar_opp_involutive x).", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "+", "shelve.", "+", "apply Rbar_is_upper_bound.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "*"], "tactic": "intros y; simpl; auto.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G.", "rewrite <- (Rbar_opp_involutive x).", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "+", "shelve.", "+", "apply Rbar_is_upper_bound.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "*"], "tactic": "*", "exn": "Wrong bullet *: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G.", "rewrite <- (Rbar_opp_involutive x).", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "+", "shelve.", "+", "apply Rbar_is_upper_bound.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "*", "shelve.", "*"], "tactic": "apply H.", "exn": "The reference H was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G.", "rewrite <- (Rbar_opp_involutive x).", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "+", "shelve.", "+", "apply Rbar_is_upper_bound.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "*", "shelve.", "*", "apply Rbar_is_upper_bound."], "tactic": "*", "exn": "Wrong bullet *: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G.", "rewrite <- (Rbar_opp_involutive x).", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "+", "shelve.", "+", "apply Rbar_is_upper_bound.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "*", "shelve.", "*", "apply Rbar_is_upper_bound.", "--", "shelve.", "--", "shelve.", "*"], "tactic": "apply filterlim_le_le with (f := fun y => -Ropp (y)) (g := fun y => -Ropp (y)) (h := fun y => -Ropp (y)).", "exn": "In environment x : Rbar F : R -> Prop G : Rbar_locally (Rbar_opp x) F Unable to unify \"R\" with \"Rbar\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G.", "rewrite <- (Rbar_opp_involutive x).", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "+", "shelve.", "+", "apply Rbar_is_upper_bound.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "*", "shelve.", "*", "apply Rbar_is_upper_bound.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "--"], "tactic": "intros y; simpl; auto.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G.", "rewrite <- (Rbar_opp_involutive x).", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "+", "shelve.", "+", "apply Rbar_is_upper_bound.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "*", "shelve.", "*", "apply Rbar_is_upper_bound.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "--"], "tactic": "--", "exn": "Wrong bullet --: Current bullet -- is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G.", "rewrite <- (Rbar_opp_involutive x).", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "+", "shelve.", "+", "apply Rbar_is_upper_bound.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "*", "shelve.", "*", "apply Rbar_is_upper_bound.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "--", "shelve.", "--"], "tactic": "apply H.", "exn": "The reference H was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G.", "rewrite <- (Rbar_opp_involutive x).", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "+", "shelve.", "+", "apply Rbar_is_upper_bound.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "*", "shelve.", "*", "apply Rbar_is_upper_bound.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "--", "shelve.", "--", "apply Rbar_is_upper_bound."], "tactic": "--", "exn": "Wrong bullet --: Current bullet -- is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G.", "rewrite <- (Rbar_opp_involutive x).", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "+", "shelve.", "+", "apply Rbar_is_upper_bound.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "*", "shelve.", "*", "apply Rbar_is_upper_bound.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "--", "shelve.", "--", "apply Rbar_is_upper_bound.", "++", "shelve.", "++", "shelve.", "--"], "tactic": "apply filterlim_le_le with (f := fun y => -Ropp (y)) (g := fun y => -Ropp (y)) (h := fun y => -Ropp (y)).", "exn": "In environment x : Rbar F : R -> Prop G : Rbar_locally (Rbar_opp x) F Unable to unify \"R\" with \"Rbar\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G.", "rewrite <- (Rbar_opp_involutive x).", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "+", "shelve.", "+", "apply Rbar_is_upper_bound.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "*", "shelve.", "*", "apply Rbar_is_upper_bound.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "--", "shelve.", "--", "apply Rbar_is_upper_bound.", "++", "shelve.", "++", "shelve.", "--", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "***"], "tactic": "intros y; simpl; auto.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G.", "rewrite <- (Rbar_opp_involutive x).", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "+", "shelve.", "+", "apply Rbar_is_upper_bound.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "*", "shelve.", "*", "apply Rbar_is_upper_bound.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "--", "shelve.", "--", "apply Rbar_is_upper_bound.", "++", "shelve.", "++", "shelve.", "--", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "***"], "tactic": "***", "exn": "Wrong bullet ***: Current bullet *** is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G.", "rewrite <- (Rbar_opp_involutive x).", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "+", "shelve.", "+", "apply Rbar_is_upper_bound.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "*", "shelve.", "*", "apply Rbar_is_upper_bound.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "--", "shelve.", "--", "apply Rbar_is_upper_bound.", "++", "shelve.", "++", "shelve.", "--", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "***", "shelve.", "***"], "tactic": "apply H.", "exn": "The reference H was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G.", "rewrite <- (Rbar_opp_involutive x).", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "+", "shelve.", "+", "apply Rbar_is_upper_bound.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "*", "shelve.", "*", "apply Rbar_is_upper_bound.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "--", "shelve.", "--", "apply Rbar_is_upper_bound.", "++", "shelve.", "++", "shelve.", "--", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "***", "shelve.", "***", "apply Rbar_is_upper_bound."], "tactic": "***", "exn": "Wrong bullet ***: Current bullet *** is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G.", "rewrite <- (Rbar_opp_involutive x).", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "+", "shelve.", "+", "apply Rbar_is_upper_bound.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "*", "shelve.", "*", "apply Rbar_is_upper_bound.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "--", "shelve.", "--", "apply Rbar_is_upper_bound.", "++", "shelve.", "++", "shelve.", "--", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "***", "shelve.", "***", "apply Rbar_is_upper_bound.", "----", "shelve.", "----", "shelve.", "***"], "tactic": "apply filterlim_le_le with (f := fun y => -Ropp (y)) (g := fun y => -Ropp (y)) (h := fun y => -Ropp (y)).", "exn": "In environment x : Rbar F : R -> Prop G : Rbar_locally (Rbar_opp x) F Unable to unify \"R\" with \"Rbar\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G.", "rewrite <- (Rbar_opp_involutive x).", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "+", "shelve.", "+", "apply Rbar_is_upper_bound.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "*", "shelve.", "*", "apply Rbar_is_upper_bound.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "--", "shelve.", "--", "apply Rbar_is_upper_bound.", "++", "shelve.", "++", "shelve.", "--", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "***", "shelve.", "***", "apply Rbar_is_upper_bound.", "----", "shelve.", "----", "shelve.", "***", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "****"], "tactic": "intros y; simpl; auto.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G.", "rewrite <- (Rbar_opp_involutive x).", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "+", "shelve.", "+", "apply Rbar_is_upper_bound.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "*", "shelve.", "*", "apply Rbar_is_upper_bound.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "--", "shelve.", "--", "apply Rbar_is_upper_bound.", "++", "shelve.", "++", "shelve.", "--", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "***", "shelve.", "***", "apply Rbar_is_upper_bound.", "----", "shelve.", "----", "shelve.", "***", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "****"], "tactic": "****", "exn": "Wrong bullet ****: Current bullet **** is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G.", "rewrite <- (Rbar_opp_involutive x).", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "+", "shelve.", "+", "apply Rbar_is_upper_bound.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "*", "shelve.", "*", "apply Rbar_is_upper_bound.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "--", "shelve.", "--", "apply Rbar_is_upper_bound.", "++", "shelve.", "++", "shelve.", "--", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "***", "shelve.", "***", "apply Rbar_is_upper_bound.", "----", "shelve.", "----", "shelve.", "***", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "****", "shelve.", "****"], "tactic": "apply H.", "exn": "The reference H was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G.", "rewrite <- (Rbar_opp_involutive x).", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "+", "shelve.", "+", "apply Rbar_is_upper_bound.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "*", "shelve.", "*", "apply Rbar_is_upper_bound.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "--", "shelve.", "--", "apply Rbar_is_upper_bound.", "++", "shelve.", "++", "shelve.", "--", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "***", "shelve.", "***", "apply Rbar_is_upper_bound.", "----", "shelve.", "----", "shelve.", "***", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "****", "shelve.", "****", "apply Rbar_is_upper_bound."], "tactic": "****", "exn": "Wrong bullet ****: Current bullet **** is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G.", "rewrite <- (Rbar_opp_involutive x).", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "+", "shelve.", "+", "apply Rbar_is_upper_bound.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "*", "shelve.", "*", "apply Rbar_is_upper_bound.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "--", "shelve.", "--", "apply Rbar_is_upper_bound.", "++", "shelve.", "++", "shelve.", "--", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "***", "shelve.", "***", "apply Rbar_is_upper_bound.", "----", "shelve.", "----", "shelve.", "***", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "****", "shelve.", "****", "apply Rbar_is_upper_bound.", "-----", "shelve.", "-----", "shelve.", "****"], "tactic": "apply Rbar_locally'_le.", "exn": "In environment x : Rbar F : R -> Prop G : Rbar_locally (Rbar_opp x) F Unable to unify \"Rbar\" with \"Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G.", "rewrite <- (Rbar_opp_involutive x).", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "+", "shelve.", "+", "apply Rbar_is_upper_bound.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "*", "shelve.", "*", "apply Rbar_is_upper_bound.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "--", "shelve.", "--", "apply Rbar_is_upper_bound.", "++", "shelve.", "++", "shelve.", "--", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "***", "shelve.", "***", "apply Rbar_is_upper_bound.", "----", "shelve.", "----", "shelve.", "***", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "****", "shelve.", "****", "apply Rbar_is_upper_bound.", "-----", "shelve.", "-----", "shelve.", "****", "qsimpl time: 1 use: f,Ropp,Rbar_locally'_le,filterlim_le_le.", "-"], "tactic": "intros H.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G.", "rewrite <- (Rbar_opp_involutive x).", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "+", "shelve.", "+", "apply Rbar_is_upper_bound.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "*", "shelve.", "*", "apply Rbar_is_upper_bound.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "--", "shelve.", "--", "apply Rbar_is_upper_bound.", "++", "shelve.", "++", "shelve.", "--", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "***", "shelve.", "***", "apply Rbar_is_upper_bound.", "----", "shelve.", "----", "shelve.", "***", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "****", "shelve.", "****", "apply Rbar_is_upper_bound.", "-----", "shelve.", "-----", "shelve.", "****", "qsimpl time: 1 use: f,Ropp,Rbar_locally'_le,filterlim_le_le.", "-"], "tactic": "rewrite <- (Rbar_opp_involutive x).", "exn": "Found no subterm matching \"x\" in the current goal.", "type": "no_subterm", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G.", "rewrite <- (Rbar_opp_involutive x).", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "+", "shelve.", "+", "apply Rbar_is_upper_bound.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "*", "shelve.", "*", "apply Rbar_is_upper_bound.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "--", "shelve.", "--", "apply Rbar_is_upper_bound.", "++", "shelve.", "++", "shelve.", "--", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "***", "shelve.", "***", "apply Rbar_is_upper_bound.", "----", "shelve.", "----", "shelve.", "***", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "****", "shelve.", "****", "apply Rbar_is_upper_bound.", "-----", "shelve.", "-----", "shelve.", "****", "qsimpl time: 1 use: f,Ropp,Rbar_locally'_le,filterlim_le_le.", "-", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp."], "tactic": "apply filterlim_le_le with (f := fun y => -Ropp (y)) (g := fun y => -Ropp (y)) (h := fun y => -Ropp (y)).", "exn": "In environment H3 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x x : Rbar F : R -> Prop G : Rbar_locally (Rbar_opp x) F H1 : forall (f g h : ?T -> R) (l : Rbar), ?F (fun x : ?T => f x <= g x <= h x) -> filterlim f ?F (Rbar_locally l) -> filterlim h ?F (Rbar_locally l) -> filterlim g ?F (Rbar_locally l) H0 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x) X : family -> R -> R -> Prop X0 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop H2 : forall (f g h : ?T0 -> R) (l : Rbar), ?F0 (fun x : ?T0 => f x <= g x <= h x) -> filterlim f ?F0 (Rbar_locally l) -> filterlim h ?F0 (Rbar_locally l) -> filterlim g ?F0 (Rbar_locally l) X1 : family -> R -> R -> Prop Unable to unify \"forall P : R -> Prop, Rbar_locally ?M4828 P -> filtermap (fun y : R => - - y) ?F1 P\" with \"Prop\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G.", "rewrite <- (Rbar_opp_involutive x).", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "+", "shelve.", "+", "apply Rbar_is_upper_bound.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "*", "shelve.", "*", "apply Rbar_is_upper_bound.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "--", "shelve.", "--", "apply Rbar_is_upper_bound.", "++", "shelve.", "++", "shelve.", "--", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "***", "shelve.", "***", "apply Rbar_is_upper_bound.", "----", "shelve.", "----", "shelve.", "***", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "****", "shelve.", "****", "apply Rbar_is_upper_bound.", "-----", "shelve.", "-----", "shelve.", "****", "qsimpl time: 1 use: f,Ropp,Rbar_locally'_le,filterlim_le_le.", "-", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp."], "tactic": "+", "exn": "Wrong bullet +: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G.", "rewrite <- (Rbar_opp_involutive x).", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "+", "shelve.", "+", "apply Rbar_is_upper_bound.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "*", "shelve.", "*", "apply Rbar_is_upper_bound.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "--", "shelve.", "--", "apply Rbar_is_upper_bound.", "++", "shelve.", "++", "shelve.", "--", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "***", "shelve.", "***", "apply Rbar_is_upper_bound.", "----", "shelve.", "----", "shelve.", "***", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "****", "shelve.", "****", "apply Rbar_is_upper_bound.", "-----", "shelve.", "-----", "shelve.", "****", "qsimpl time: 1 use: f,Ropp,Rbar_locally'_le,filterlim_le_le.", "-", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve."], "tactic": "+", "exn": "Wrong bullet +: Expecting -.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G.", "rewrite <- (Rbar_opp_involutive x).", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "+", "shelve.", "+", "apply Rbar_is_upper_bound.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "*", "shelve.", "*", "apply Rbar_is_upper_bound.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "--", "shelve.", "--", "apply Rbar_is_upper_bound.", "++", "shelve.", "++", "shelve.", "--", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "***", "shelve.", "***", "apply Rbar_is_upper_bound.", "----", "shelve.", "----", "shelve.", "***", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "****", "shelve.", "****", "apply Rbar_is_upper_bound.", "-----", "shelve.", "-----", "shelve.", "****", "qsimpl time: 1 use: f,Ropp,Rbar_locally'_le,filterlim_le_le.", "-", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "-"], "tactic": "intros y; simpl; auto.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G.", "rewrite <- (Rbar_opp_involutive x).", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "+", "shelve.", "+", "apply Rbar_is_upper_bound.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "*", "shelve.", "*", "apply Rbar_is_upper_bound.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "--", "shelve.", "--", "apply Rbar_is_upper_bound.", "++", "shelve.", "++", "shelve.", "--", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "***", "shelve.", "***", "apply Rbar_is_upper_bound.", "----", "shelve.", "----", "shelve.", "***", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "****", "shelve.", "****", "apply Rbar_is_upper_bound.", "-----", "shelve.", "-----", "shelve.", "****", "qsimpl time: 1 use: f,Ropp,Rbar_locally'_le,filterlim_le_le.", "-", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "-"], "tactic": "+", "exn": "Wrong bullet +: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G.", "rewrite <- (Rbar_opp_involutive x).", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "+", "shelve.", "+", "apply Rbar_is_upper_bound.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "*", "shelve.", "*", "apply Rbar_is_upper_bound.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "--", "shelve.", "--", "apply Rbar_is_upper_bound.", "++", "shelve.", "++", "shelve.", "--", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "***", "shelve.", "***", "apply Rbar_is_upper_bound.", "----", "shelve.", "----", "shelve.", "***", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "****", "shelve.", "****", "apply Rbar_is_upper_bound.", "-----", "shelve.", "-----", "shelve.", "****", "qsimpl time: 1 use: f,Ropp,Rbar_locally'_le,filterlim_le_le.", "-", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "-", "shelve."], "tactic": "+", "exn": "Wrong bullet +: Expecting -.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G.", "rewrite <- (Rbar_opp_involutive x).", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "+", "shelve.", "+", "apply Rbar_is_upper_bound.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "*", "shelve.", "*", "apply Rbar_is_upper_bound.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "--", "shelve.", "--", "apply Rbar_is_upper_bound.", "++", "shelve.", "++", "shelve.", "--", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "***", "shelve.", "***", "apply Rbar_is_upper_bound.", "----", "shelve.", "----", "shelve.", "***", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "****", "shelve.", "****", "apply Rbar_is_upper_bound.", "-----", "shelve.", "-----", "shelve.", "****", "qsimpl time: 1 use: f,Ropp,Rbar_locally'_le,filterlim_le_le.", "-", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "-", "shelve.", "-"], "tactic": "apply H.", "exn": "The reference H was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G.", "rewrite <- (Rbar_opp_involutive x).", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "+", "shelve.", "+", "apply Rbar_is_upper_bound.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "*", "shelve.", "*", "apply Rbar_is_upper_bound.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "--", "shelve.", "--", "apply Rbar_is_upper_bound.", "++", "shelve.", "++", "shelve.", "--", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "***", "shelve.", "***", "apply Rbar_is_upper_bound.", "----", "shelve.", "----", "shelve.", "***", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "****", "shelve.", "****", "apply Rbar_is_upper_bound.", "-----", "shelve.", "-----", "shelve.", "****", "qsimpl time: 1 use: f,Ropp,Rbar_locally'_le,filterlim_le_le.", "-", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "-", "shelve.", "-"], "tactic": "+", "exn": "Wrong bullet +: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G.", "rewrite <- (Rbar_opp_involutive x).", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "+", "shelve.", "+", "apply Rbar_is_upper_bound.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "*", "shelve.", "*", "apply Rbar_is_upper_bound.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "--", "shelve.", "--", "apply Rbar_is_upper_bound.", "++", "shelve.", "++", "shelve.", "--", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "***", "shelve.", "***", "apply Rbar_is_upper_bound.", "----", "shelve.", "----", "shelve.", "***", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "****", "shelve.", "****", "apply Rbar_is_upper_bound.", "-----", "shelve.", "-----", "shelve.", "****", "qsimpl time: 1 use: f,Ropp,Rbar_locally'_le,filterlim_le_le.", "-", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "-", "shelve.", "-", "shelve."], "tactic": "+", "exn": "Wrong bullet +: Expecting -.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G.", "rewrite <- (Rbar_opp_involutive x).", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "+", "shelve.", "+", "apply Rbar_is_upper_bound.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "*", "shelve.", "*", "apply Rbar_is_upper_bound.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "--", "shelve.", "--", "apply Rbar_is_upper_bound.", "++", "shelve.", "++", "shelve.", "--", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "***", "shelve.", "***", "apply Rbar_is_upper_bound.", "----", "shelve.", "----", "shelve.", "***", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "****", "shelve.", "****", "apply Rbar_is_upper_bound.", "-----", "shelve.", "-----", "shelve.", "****", "qsimpl time: 1 use: f,Ropp,Rbar_locally'_le,filterlim_le_le.", "-", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "-", "shelve.", "-", "shelve.", "-"], "tactic": "apply filterlim_le_le with (f := fun y => -Ropp (y)) (g := fun y => -Ropp (y)) (h := fun y => -Ropp (y)).", "exn": "In environment x : Rbar F : R -> Prop G : Rbar_locally (Rbar_opp x) F Unable to unify \"forall P : R -> Prop, Rbar_locally ?M6199 P -> filtermap (fun y : R => - - y) ?F2 P\" with \"Filter ?F\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G.", "rewrite <- (Rbar_opp_involutive x).", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "+", "shelve.", "+", "apply Rbar_is_upper_bound.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "*", "shelve.", "*", "apply Rbar_is_upper_bound.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "--", "shelve.", "--", "apply Rbar_is_upper_bound.", "++", "shelve.", "++", "shelve.", "--", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "***", "shelve.", "***", "apply Rbar_is_upper_bound.", "----", "shelve.", "----", "shelve.", "***", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "****", "shelve.", "****", "apply Rbar_is_upper_bound.", "-----", "shelve.", "-----", "shelve.", "****", "qsimpl time: 1 use: f,Ropp,Rbar_locally'_le,filterlim_le_le.", "-", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "-", "shelve.", "-", "shelve.", "-", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp."], "tactic": "*", "exn": "Wrong bullet *: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G.", "rewrite <- (Rbar_opp_involutive x).", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "+", "shelve.", "+", "apply Rbar_is_upper_bound.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "*", "shelve.", "*", "apply Rbar_is_upper_bound.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "--", "shelve.", "--", "apply Rbar_is_upper_bound.", "++", "shelve.", "++", "shelve.", "--", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "***", "shelve.", "***", "apply Rbar_is_upper_bound.", "----", "shelve.", "----", "shelve.", "***", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "****", "shelve.", "****", "apply Rbar_is_upper_bound.", "-----", "shelve.", "-----", "shelve.", "****", "qsimpl time: 1 use: f,Ropp,Rbar_locally'_le,filterlim_le_le.", "-", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "-", "shelve.", "-", "shelve.", "-", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve."], "tactic": "*", "exn": "Wrong bullet *: Expecting ****.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G.", "rewrite <- (Rbar_opp_involutive x).", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "+", "shelve.", "+", "apply Rbar_is_upper_bound.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "*", "shelve.", "*", "apply Rbar_is_upper_bound.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "--", "shelve.", "--", "apply Rbar_is_upper_bound.", "++", "shelve.", "++", "shelve.", "--", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "***", "shelve.", "***", "apply Rbar_is_upper_bound.", "----", "shelve.", "----", "shelve.", "***", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "****", "shelve.", "****", "apply Rbar_is_upper_bound.", "-----", "shelve.", "-----", "shelve.", "****", "qsimpl time: 1 use: f,Ropp,Rbar_locally'_le,filterlim_le_le.", "-", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "-", "shelve.", "-", "shelve.", "-", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "****"], "tactic": "intros y; simpl; auto.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G.", "rewrite <- (Rbar_opp_involutive x).", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "+", "shelve.", "+", "apply Rbar_is_upper_bound.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "*", "shelve.", "*", "apply Rbar_is_upper_bound.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "--", "shelve.", "--", "apply Rbar_is_upper_bound.", "++", "shelve.", "++", "shelve.", "--", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "***", "shelve.", "***", "apply Rbar_is_upper_bound.", "----", "shelve.", "----", "shelve.", "***", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "****", "shelve.", "****", "apply Rbar_is_upper_bound.", "-----", "shelve.", "-----", "shelve.", "****", "qsimpl time: 1 use: f,Ropp,Rbar_locally'_le,filterlim_le_le.", "-", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "-", "shelve.", "-", "shelve.", "-", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "****"], "tactic": "*", "exn": "Wrong bullet *: Current bullet **** is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G.", "rewrite <- (Rbar_opp_involutive x).", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "+", "shelve.", "+", "apply Rbar_is_upper_bound.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "*", "shelve.", "*", "apply Rbar_is_upper_bound.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "--", "shelve.", "--", "apply Rbar_is_upper_bound.", "++", "shelve.", "++", "shelve.", "--", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "***", "shelve.", "***", "apply Rbar_is_upper_bound.", "----", "shelve.", "----", "shelve.", "***", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "****", "shelve.", "****", "apply Rbar_is_upper_bound.", "-----", "shelve.", "-----", "shelve.", "****", "qsimpl time: 1 use: f,Ropp,Rbar_locally'_le,filterlim_le_le.", "-", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "-", "shelve.", "-", "shelve.", "-", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "****", "shelve."], "tactic": "*", "exn": "Wrong bullet *: Expecting ***.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G.", "rewrite <- (Rbar_opp_involutive x).", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "+", "shelve.", "+", "apply Rbar_is_upper_bound.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "*", "shelve.", "*", "apply Rbar_is_upper_bound.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "--", "shelve.", "--", "apply Rbar_is_upper_bound.", "++", "shelve.", "++", "shelve.", "--", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "***", "shelve.", "***", "apply Rbar_is_upper_bound.", "----", "shelve.", "----", "shelve.", "***", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "****", "shelve.", "****", "apply Rbar_is_upper_bound.", "-----", "shelve.", "-----", "shelve.", "****", "qsimpl time: 1 use: f,Ropp,Rbar_locally'_le,filterlim_le_le.", "-", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "-", "shelve.", "-", "shelve.", "-", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "****", "shelve.", "***"], "tactic": "apply H.", "exn": "The reference H was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G.", "rewrite <- (Rbar_opp_involutive x).", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "+", "shelve.", "+", "apply Rbar_is_upper_bound.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "*", "shelve.", "*", "apply Rbar_is_upper_bound.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "--", "shelve.", "--", "apply Rbar_is_upper_bound.", "++", "shelve.", "++", "shelve.", "--", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "***", "shelve.", "***", "apply Rbar_is_upper_bound.", "----", "shelve.", "----", "shelve.", "***", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "****", "shelve.", "****", "apply Rbar_is_upper_bound.", "-----", "shelve.", "-----", "shelve.", "****", "qsimpl time: 1 use: f,Ropp,Rbar_locally'_le,filterlim_le_le.", "-", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "-", "shelve.", "-", "shelve.", "-", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "****", "shelve.", "***"], "tactic": "*", "exn": "Wrong bullet *: Current bullet *** is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G.", "rewrite <- (Rbar_opp_involutive x).", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "+", "shelve.", "+", "apply Rbar_is_upper_bound.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "*", "shelve.", "*", "apply Rbar_is_upper_bound.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "--", "shelve.", "--", "apply Rbar_is_upper_bound.", "++", "shelve.", "++", "shelve.", "--", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "***", "shelve.", "***", "apply Rbar_is_upper_bound.", "----", "shelve.", "----", "shelve.", "***", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "****", "shelve.", "****", "apply Rbar_is_upper_bound.", "-----", "shelve.", "-----", "shelve.", "****", "qsimpl time: 1 use: f,Ropp,Rbar_locally'_le,filterlim_le_le.", "-", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "-", "shelve.", "-", "shelve.", "-", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "****", "shelve.", "***", "shelve."], "tactic": "*", "exn": "Wrong bullet *: Expecting --.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G.", "rewrite <- (Rbar_opp_involutive x).", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "+", "shelve.", "+", "apply Rbar_is_upper_bound.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "*", "shelve.", "*", "apply Rbar_is_upper_bound.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "--", "shelve.", "--", "apply Rbar_is_upper_bound.", "++", "shelve.", "++", "shelve.", "--", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "***", "shelve.", "***", "apply Rbar_is_upper_bound.", "----", "shelve.", "----", "shelve.", "***", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "****", "shelve.", "****", "apply Rbar_is_upper_bound.", "-----", "shelve.", "-----", "shelve.", "****", "qsimpl time: 1 use: f,Ropp,Rbar_locally'_le,filterlim_le_le.", "-", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "-", "shelve.", "-", "shelve.", "-", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "****", "shelve.", "***", "shelve.", "--"], "tactic": "apply filterlim_le_le with (f := fun y => -Ropp (y)) (g := fun y => -Ropp (y)) (h := fun y => -Ropp (y)).", "exn": "In environment x : Rbar F : R -> Prop G : Rbar_locally (Rbar_opp x) F Unable to unify \"forall P : R -> Prop, Rbar_locally ?M6841 P -> filtermap (fun y : R => - - y) ?F3 P\" with \"Filter ((fun (X : family -> R -> R -> Prop) (_ : R -> R) (H0 : forall (f0 g h : Rbar_is_upper_bound ?Goal9 ?Goal10 -> R) (l : Rbar), (fun (X0 : family -> R -> R -> Prop) (_ : R -> R) (H1 : forall (f1 g0 h0 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> R) (l0 : Rbar), (fun (X1 : family -> R -> R -> Prop) (_ : R -> R) (H2 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H3 : forall (f g1 h1 : ?T -> R) (l1 : Rbar), ?F (fun x : ?T => f x <= g1 x <= h1 x) -> filterlim f ?F (Rbar_locally l1) -> filterlim h1 ?F (Rbar_locally l1) -> filterlim g1 ?F (Rbar_locally l1)) (X2 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X3 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H5 : forall (f g1 h1 : ?T0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} -> R) (l1 : Rbar), ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (fun x : ?T0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} => f x <= g1 x <= h1 x) -> filterlim f ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (Rbar_locally l1) -> filterlim h1 ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (Rbar_locally l1) -> filterlim g1 ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (Rbar_locally l1)) (H6 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H9 : forall (f g1 h1 : ?T1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} -> R) (l1 : Rbar), ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (fun x : ?T1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} => f x <= g1 x <= h1 x) -> filterlim f ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (Rbar_locally l1) -> filterlim h1 ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (Rbar_locally l1) -> filterlim g1 ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (Rbar_locally l1)) (H10 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{H5:=H10; H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3; H4:=H9; X2:=X4}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le (fun x : Rbar_is_upper_bound ?Goal12 ?Goal13 => f1 x <= g0 x <= h0 x) -> filterlim f1 ((fun (X1 : family -> R -> R -> Prop) (_ : R -> R) (H2 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H3 : forall (f g1 h1 : ?T -> R) (l1 : Rbar), ?F (fun x : ?T => f x <= g1 x <= h1 x) -> filterlim f ?F (Rbar_locally l1) -> filterlim h1 ?F (Rbar_locally l1) -> filterlim g1 ?F (Rbar_locally l1)) (X2 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X3 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H5 : forall (f g1 h1 : ?T0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} -> R) (l1 : Rbar), ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (fun x : ?T0@{ H1:=H3; H0:=H2; X:=X1; X0:=X2} => f x <= g1 x <= h1 x) -> filterlim f ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (Rbar_locally l1) -> filterlim h1 ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (Rbar_locally l1) -> filterlim g1 ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (Rbar_locally l1)) (H6 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H9 : forall (f g1 h1 : ?T1@{ H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} -> R) (l1 : Rbar), ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (fun x : ?T1@{ H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} => f x <= g1 x <= h1 x) -> filterlim f ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (Rbar_locally l1) -> filterlim h1 ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (Rbar_locally l1) -> filterlim g1 ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (Rbar_locally l1)) (H10 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{H5:=H10; H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3; H4:=H9; X2:=X4}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l0) -> filterlim h0 ((fun (X1 : family -> R -> R -> Prop) (_ : R -> R) (H2 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H3 : forall (f g1 h1 : ?T -> R) (l1 : Rbar), ?F (fun x : ?T => f x <= g1 x <= h1 x) -> filterlim f ?F (Rbar_locally l1) -> filterlim h1 ?F (Rbar_locally l1) -> filterlim g1 ?F (Rbar_locally l1)) (X2 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X3 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H5 : forall (f g1 h1 : ?T0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} -> R) (l1 : Rbar), ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (fun x : ?T0@{ H1:=H3; H0:=H2; X:=X1; X0:=X2} => f x <= g1 x <= h1 x) -> filterlim f ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (Rbar_locally l1) -> filterlim h1 ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (Rbar_locally l1) -> filterlim g1 ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (Rbar_locally l1)) (H6 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H9 : forall (f g1 h1 : ?T1@{ H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} -> R) (l1 : Rbar), ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (fun x : ?T1@{ H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} => f x <= g1 x <= h1 x) -> filterlim f ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (Rbar_locally l1) -> filterlim h1 ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (Rbar_locally l1) -> filterlim g1 ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (Rbar_locally l1)) (H10 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{H5:=H10; H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3; H4:=H9; X2:=X4}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l0) -> filterlim g0 ((fun (X1 : family -> R -> R -> Prop) (_ : R -> R) (H2 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H3 : forall (f g1 h1 : ?T -> R) (l1 : Rbar), ?F (fun x : ?T => f x <= g1 x <= h1 x) -> filterlim f ?F (Rbar_locally l1) -> filterlim h1 ?F (Rbar_locally l1) -> filterlim g1 ?F (Rbar_locally l1)) (X2 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X3 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H5 : forall (f g1 h1 : ?T0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} -> R) (l1 : Rbar), ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (fun x : ?T0@{ H1:=H3; H0:=H2; X:=X1; X0:=X2} => f x <= g1 x <= h1 x) -> filterlim f ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (Rbar_locally l1) -> filterlim h1 ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (Rbar_locally l1) -> filterlim g1 ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (Rbar_locally l1)) (H6 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H9 : forall (f g1 h1 : ?T1@{ H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} -> R) (l1 : Rbar), ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (fun x : ?T1@{ H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} => f x <= g1 x <= h1 x) -> filterlim f ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (Rbar_locally l1) -> filterlim h1 ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (Rbar_locally l1) -> filterlim g1 ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (Rbar_locally l1)) (H10 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{H5:=H10; H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3; H4:=H9; X2:=X4}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l0)) (X1 : Rbar_is_upper_bound ?Goal9 ?Goal10 -> Prop) => ?Goal11@{H0:=H1; X:=X0; X0:=X1}) f Ropp filterlim_le_le (fun x : Rbar_is_upper_bound ?Goal9 ?Goal10 => f0 x <= g x <= h x) -> filterlim f0 ((fun (X0 : family -> R -> R -> Prop) (_ : R -> R) (H1 : forall (f1 g0 h0 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> R) (l0 : Rbar), (fun (X1 : family -> R -> R -> Prop) (_ : R -> R) (H2 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H3 : forall (f g1 h1 : ?T -> R) (l1 : Rbar), ?F (fun x : ?T => f x <= g1 x <= h1 x) -> filterlim f ?F (Rbar_locally l1) -> filterlim h1 ?F (Rbar_locally l1) -> filterlim g1 ?F (Rbar_locally l1)) (X2 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X3 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H5 : forall (f g1 h1 : ?T0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} -> R) (l1 : Rbar), ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (fun x : ?T0@{ H1:=H3; H0:=H2; X:=X1; X0:=X2} => f x <= g1 x <= h1 x) -> filterlim f ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (Rbar_locally l1) -> filterlim h1 ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (Rbar_locally l1) -> filterlim g1 ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (Rbar_locally l1)) (H6 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H9 : forall (f g1 h1 : ?T1@{ H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} -> R) (l1 : Rbar), ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (fun x : ?T1@{ H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} => f x <= g1 x <= h1 x) -> filterlim f ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (Rbar_locally l1) -> filterlim h1 ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (Rbar_locally l1) -> filterlim g1 ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (Rbar_locally l1)) (H10 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{H5:=H10; H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3; H4:=H9; X2:=X4}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le (fun x : Rbar_is_upper_bound ?Goal12 ?Goal13 => f1 x <= g0 x <= h0 x) -> filterlim f1 ((fun (X1 : family -> R -> R -> Prop) (_ : R -> R) (H2 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H3 : forall (f g1 h1 : ?T -> R) (l1 : Rbar), ?F (fun x : ?T => f x <= g1 x <= h1 x) -> filterlim f ?F (Rbar_locally l1) -> filterlim h1 ?F (Rbar_locally l1) -> filterlim g1 ?F (Rbar_locally l1)) (X2 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X3 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H5 : forall (f g1 h1 : ?T0@{ H1:=H3; H0:=H2; X:=X1; X0:=X2} -> R) (l1 : Rbar), ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (fun x : ?T0@{ H1:=H3; H0:=H2; X:=X1; X0:=X2} => f x <= g1 x <= h1 x) -> filterlim f ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (Rbar_locally l1) -> filterlim h1 ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (Rbar_locally l1) -> filterlim g1 ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (Rbar_locally l1)) (H6 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H9 : forall (f g1 h1 : ?T1@{ H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} -> R) (l1 : Rbar), ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (fun x : ?T1@{ H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} => f x <= g1 x <= h1 x) -> filterlim f ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (Rbar_locally l1) -> filterlim h1 ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (Rbar_locally l1) -> filterlim g1 ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (Rbar_locally l1)) (H10 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{H5:=H10; H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3; H4:=H9; X2:=X4}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l0) -> filterlim h0 ((fun (X1 : family -> R -> R -> Prop) (_ : R -> R) (H2 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H3 : forall (f g1 h1 : ?T -> R) (l1 : Rbar), ?F (fun x : ?T => f x <= g1 x <= h1 x) -> filterlim f ?F (Rbar_locally l1) -> filterlim h1 ?F (Rbar_locally l1) -> filterlim g1 ?F (Rbar_locally l1)) (X2 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X3 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H5 : forall (f g1 h1 : ?T0@{ H1:=H3; H0:=H2; X:=X1; X0:=X2} -> R) (l1 : Rbar), ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (fun x : ?T0@{ H1:=H3; H0:=H2; X:=X1; X0:=X2} => f x <= g1 x <= h1 x) -> filterlim f ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (Rbar_locally l1) -> filterlim h1 ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (Rbar_locally l1) -> filterlim g1 ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (Rbar_locally l1)) (H6 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H9 : forall (f g1 h1 : ?T1@{ H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} -> R) (l1 : Rbar), ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (fun x : ?T1@{ H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} => f x <= g1 x <= h1 x) -> filterlim f ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (Rbar_locally l1) -> filterlim h1 ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (Rbar_locally l1) -> filterlim g1 ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (Rbar_locally l1)) (H10 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{H5:=H10; H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3; H4:=H9; X2:=X4}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l0) -> filterlim g0 ((fun (X1 : family -> R -> R -> Prop) (_ : R -> R) (H2 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H3 : forall (f g1 h1 : ?T -> R) (l1 : Rbar), ?F (fun x : ?T => f x <= g1 x <= h1 x) -> filterlim f ?F (Rbar_locally l1) -> filterlim h1 ?F (Rbar_locally l1) -> filterlim g1 ?F (Rbar_locally l1)) (X2 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X3 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H5 : forall (f g1 h1 : ?T0@{ H1:=H3; H0:=H2; X:=X1; X0:=X2} -> R) (l1 : Rbar), ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (fun x : ?T0@{ H1:=H3; H0:=H2; X:=X1; X0:=X2} => f x <= g1 x <= h1 x) -> filterlim f ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (Rbar_locally l1) -> filterlim h1 ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (Rbar_locally l1) -> filterlim g1 ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (Rbar_locally l1)) (H6 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H9 : forall (f g1 h1 : ?T1@{ H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} -> R) (l1 : Rbar), ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (fun x : ?T1@{ H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} => f x <= g1 x <= h1 x) -> filterlim f ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (Rbar_locally l1) -> filterlim h1 ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (Rbar_locally l1) -> filterlim g1 ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (Rbar_locally l1)) (H10 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{H5:=H10; H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3; H4:=H9; X2:=X4}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l0)) (X1 : Rbar_is_upper_bound ?Goal9 ?Goal10 -> Prop) => ?Goal11@{H0:=H1; X:=X0; X0:=X1}) f Ropp filterlim_le_le) (Rbar_locally l) -> filterlim h ((fun (X0 : family -> R -> R -> Prop) (_ : R -> R) (H1 : forall (f1 g0 h0 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> R) (l0 : Rbar), (fun (X1 : family -> R -> R -> Prop) (_ : R -> R) (H2 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H3 : forall (f g1 h1 : ?T -> R) (l1 : Rbar), ?F (fun x : ?T => f x <= g1 x <= h1 x) -> filterlim f ?F (Rbar_locally l1) -> filterlim h1 ?F (Rbar_locally l1) -> filterlim g1 ?F (Rbar_locally l1)) (X2 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X3 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H5 : forall (f g1 h1 : ?T0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} -> R) (l1 : Rbar), ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (fun x : ?T0@{ H1:=H3; H0:=H2; X:=X1; X0:=X2} => f x <= g1 x <= h1 x) -> filterlim f ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (Rbar_locally l1) -> filterlim h1 ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (Rbar_locally l1) -> filterlim g1 ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (Rbar_locally l1)) (H6 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H9 : forall (f g1 h1 : ?T1@{ H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} -> R) (l1 : Rbar), ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (fun x : ?T1@{ H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} => f x <= g1 x <= h1 x) -> filterlim f ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (Rbar_locally l1) -> filterlim h1 ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (Rbar_locally l1) -> filterlim g1 ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (Rbar_locally l1)) (H10 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{H5:=H10; H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3; H4:=H9; X2:=X4}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le (fun x : Rbar_is_upper_bound ?Goal12 ?Goal13 => f1 x <= g0 x <= h0 x) -> filterlim f1 ((fun (X1 : family -> R -> R -> Prop) (_ : R -> R) (H2 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H3 : forall (f g1 h1 : ?T -> R) (l1 : Rbar), ?F (fun x : ?T => f x <= g1 x <= h1 x) -> filterlim f ?F (Rbar_locally l1) -> filterlim h1 ?F (Rbar_locally l1) -> filterlim g1 ?F (Rbar_locally l1)) (X2 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X3 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H5 : forall (f g1 h1 : ?T0@{ H1:=H3; H0:=H2; X:=X1; X0:=X2} -> R) (l1 : Rbar), ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (fun x : ?T0@{ H1:=H3; H0:=H2; X:=X1; X0:=X2} => f x <= g1 x <= h1 x) -> filterlim f ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (Rbar_locally l1) -> filterlim h1 ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (Rbar_locally l1) -> filterlim g1 ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (Rbar_locally l1)) (H6 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H9 : forall (f g1 h1 : ?T1@{ H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} -> R) (l1 : Rbar), ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (fun x : ?T1@{ H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} => f x <= g1 x <= h1 x) -> filterlim f ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (Rbar_locally l1) -> filterlim h1 ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (Rbar_locally l1) -> filterlim g1 ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (Rbar_locally l1)) (H10 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{H5:=H10; H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3; H4:=H9; X2:=X4}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l0) -> filterlim h0 ((fun (X1 : family -> R -> R -> Prop) (_ : R -> R) (H2 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H3 : forall (f g1 h1 : ?T -> R) (l1 : Rbar), ?F (fun x : ?T => f x <= g1 x <= h1 x) -> filterlim f ?F (Rbar_locally l1) -> filterlim h1 ?F (Rbar_locally l1) -> filterlim g1 ?F (Rbar_locally l1)) (X2 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X3 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H5 : forall (f g1 h1 : ?T0@{ H1:=H3; H0:=H2; X:=X1; X0:=X2} -> R) (l1 : Rbar), ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (fun x : ?T0@{ H1:=H3; H0:=H2; X:=X1; X0:=X2} => f x <= g1 x <= h1 x) -> filterlim f ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (Rbar_locally l1) -> filterlim h1 ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (Rbar_locally l1) -> filterlim g1 ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (Rbar_locally l1)) (H6 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H9 : forall (f g1 h1 : ?T1@{ H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} -> R) (l1 : Rbar), ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (fun x : ?T1@{ H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} => f x <= g1 x <= h1 x) -> filterlim f ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (Rbar_locally l1) -> filterlim h1 ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (Rbar_locally l1) -> filterlim g1 ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (Rbar_locally l1)) (H10 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{H5:=H10; H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3; H4:=H9; X2:=X4}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l0) -> filterlim g0 ((fun (X1 : family -> R -> R -> Prop) (_ : R -> R) (H2 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H3 : forall (f g1 h1 : ?T -> R) (l1 : Rbar), ?F (fun x : ?T => f x <= g1 x <= h1 x) -> filterlim f ?F (Rbar_locally l1) -> filterlim h1 ?F (Rbar_locally l1) -> filterlim g1 ?F (Rbar_locally l1)) (X2 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X3 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H5 : forall (f g1 h1 : ?T0@{ H1:=H3; H0:=H2; X:=X1; X0:=X2} -> R) (l1 : Rbar), ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (fun x : ?T0@{ H1:=H3; H0:=H2; X:=X1; X0:=X2} => f x <= g1 x <= h1 x) -> filterlim f ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (Rbar_locally l1) -> filterlim h1 ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (Rbar_locally l1) -> filterlim g1 ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (Rbar_locally l1)) (H6 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H9 : forall (f g1 h1 : ?T1@{ H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} -> R) (l1 : Rbar), ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (fun x : ?T1@{ H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} => f x <= g1 x <= h1 x) -> filterlim f ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (Rbar_locally l1) -> filterlim h1 ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (Rbar_locally l1) -> filterlim g1 ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (Rbar_locally l1)) (H10 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{H5:=H10; H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3; H4:=H9; X2:=X4}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l0)) (X1 : Rbar_is_upper_bound ?Goal9 ?Goal10 -> Prop) => ?Goal11@{H0:=H1; X:=X0; X0:=X1}) f Ropp filterlim_le_le) (Rbar_locally l) -> filterlim g ((fun (X0 : family -> R -> R -> Prop) (_ : R -> R) (H1 : forall (f1 g0 h0 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> R) (l0 : Rbar), (fun (X1 : family -> R -> R -> Prop) (_ : R -> R) (H2 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H3 : forall (f g1 h1 : ?T -> R) (l1 : Rbar), ?F (fun x : ?T => f x <= g1 x <= h1 x) -> filterlim f ?F (Rbar_locally l1) -> filterlim h1 ?F (Rbar_locally l1) -> filterlim g1 ?F (Rbar_locally l1)) (X2 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X3 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H5 : forall (f g1 h1 : ?T0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} -> R) (l1 : Rbar), ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (fun x : ?T0@{ H1:=H3; H0:=H2; X:=X1; X0:=X2} => f x <= g1 x <= h1 x) -> filterlim f ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (Rbar_locally l1) -> filterlim h1 ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (Rbar_locally l1) -> filterlim g1 ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (Rbar_locally l1)) (H6 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H9 : forall (f g1 h1 : ?T1@{ H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} -> R) (l1 : Rbar), ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (fun x : ?T1@{ H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} => f x <= g1 x <= h1 x) -> filterlim f ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (Rbar_locally l1) -> filterlim h1 ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (Rbar_locally l1) -> filterlim g1 ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (Rbar_locally l1)) (H10 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{H5:=H10; H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3; H4:=H9; X2:=X4}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le (fun x : Rbar_is_upper_bound ?Goal12 ?Goal13 => f1 x <= g0 x <= h0 x) -> filterlim f1 ((fun (X1 : family -> R -> R -> Prop) (_ : R -> R) (H2 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H3 : forall (f g1 h1 : ?T -> R) (l1 : Rbar), ?F (fun x : ?T => f x <= g1 x <= h1 x) -> filterlim f ?F (Rbar_locally l1) -> filterlim h1 ?F (Rbar_locally l1) -> filterlim g1 ?F (Rbar_locally l1)) (X2 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X3 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H5 : forall (f g1 h1 : ?T0@{ H1:=H3; H0:=H2; X:=X1; X0:=X2} -> R) (l1 : Rbar), ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (fun x : ?T0@{ H1:=H3; H0:=H2; X:=X1; X0:=X2} => f x <= g1 x <= h1 x) -> filterlim f ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (Rbar_locally l1) -> filterlim h1 ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (Rbar_locally l1) -> filterlim g1 ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (Rbar_locally l1)) (H6 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H9 : forall (f g1 h1 : ?T1@{ H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} -> R) (l1 : Rbar), ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (fun x : ?T1@{ H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} => f x <= g1 x <= h1 x) -> filterlim f ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (Rbar_locally l1) -> filterlim h1 ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (Rbar_locally l1) -> filterlim g1 ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (Rbar_locally l1)) (H10 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{H5:=H10; H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3; H4:=H9; X2:=X4}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l0) -> filterlim h0 ((fun (X1 : family -> R -> R -> Prop) (_ : R -> R) (H2 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H3 : forall (f g1 h1 : ?T -> R) (l1 : Rbar), ?F (fun x : ?T => f x <= g1 x <= h1 x) -> filterlim f ?F (Rbar_locally l1) -> filterlim h1 ?F (Rbar_locally l1) -> filterlim g1 ?F (Rbar_locally l1)) (X2 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X3 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H5 : forall (f g1 h1 : ?T0@{ H1:=H3; H0:=H2; X:=X1; X0:=X2} -> R) (l1 : Rbar), ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (fun x : ?T0@{ H1:=H3; H0:=H2; X:=X1; X0:=X2} => f x <= g1 x <= h1 x) -> filterlim f ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (Rbar_locally l1) -> filterlim h1 ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (Rbar_locally l1) -> filterlim g1 ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (Rbar_locally l1)) (H6 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H9 : forall (f g1 h1 : ?T1@{ H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} -> R) (l1 : Rbar), ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (fun x : ?T1@{ H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} => f x <= g1 x <= h1 x) -> filterlim f ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (Rbar_locally l1) -> filterlim h1 ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (Rbar_locally l1) -> filterlim g1 ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (Rbar_locally l1)) (H10 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{H5:=H10; H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3; H4:=H9; X2:=X4}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l0) -> filterlim g0 ((fun (X1 : family -> R -> R -> Prop) (_ : R -> R) (H2 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H3 : forall (f g1 h1 : ?T -> R) (l1 : Rbar), ?F (fun x : ?T => f x <= g1 x <= h1 x) -> filterlim f ?F (Rbar_locally l1) -> filterlim h1 ?F (Rbar_locally l1) -> filterlim g1 ?F (Rbar_locally l1)) (X2 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X3 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H5 : forall (f g1 h1 : ?T0@{ H1:=H3; H0:=H2; X:=X1; X0:=X2} -> R) (l1 : Rbar), ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (fun x : ?T0@{ H1:=H3; H0:=H2; X:=X1; X0:=X2} => f x <= g1 x <= h1 x) -> filterlim f ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (Rbar_locally l1) -> filterlim h1 ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (Rbar_locally l1) -> filterlim g1 ?F0@{H1:=H3; H0:=H2; X:=X1; X0:=X2} (Rbar_locally l1)) (H6 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H9 : forall (f g1 h1 : ?T1@{ H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} -> R) (l1 : Rbar), ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (fun x : ?T1@{ H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} => f x <= g1 x <= h1 x) -> filterlim f ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (Rbar_locally l1) -> filterlim h1 ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (Rbar_locally l1) -> filterlim g1 ?F1@{H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3} (Rbar_locally l1)) (H10 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{H5:=H10; H1:=H3; H0:=H2; X:=X1; X0:=X2; H2:=H5; X1:=X3; H4:=H9; X2:=X4}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l0)) (X1 : Rbar_is_upper_bound ?Goal9 ?Goal10 -> Prop) => ?Goal11@{H0:=H1; X:=X0; X0:=X1}) f Ropp filterlim_le_le) (Rbar_locally l)) (X0 : Rbar_is_upper_bound ?Goal6 ?Goal7 -> Prop) => ?Goal8) f Ropp filterlim_le_le)\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G.", "rewrite <- (Rbar_opp_involutive x).", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "+", "shelve.", "+", "apply Rbar_is_upper_bound.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "*", "shelve.", "*", "apply Rbar_is_upper_bound.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "--", "shelve.", "--", "apply Rbar_is_upper_bound.", "++", "shelve.", "++", "shelve.", "--", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "***", "shelve.", "***", "apply Rbar_is_upper_bound.", "----", "shelve.", "----", "shelve.", "***", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "****", "shelve.", "****", "apply Rbar_is_upper_bound.", "-----", "shelve.", "-----", "shelve.", "****", "qsimpl time: 1 use: f,Ropp,Rbar_locally'_le,filterlim_le_le.", "-", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "-", "shelve.", "-", "shelve.", "-", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "****", "shelve.", "***", "shelve.", "--"], "tactic": "--", "exn": "Wrong bullet --: Current bullet -- is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G.", "rewrite <- (Rbar_opp_involutive x).", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "+", "shelve.", "+", "apply Rbar_is_upper_bound.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "*", "shelve.", "*", "apply Rbar_is_upper_bound.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "--", "shelve.", "--", "apply Rbar_is_upper_bound.", "++", "shelve.", "++", "shelve.", "--", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "***", "shelve.", "***", "apply Rbar_is_upper_bound.", "----", "shelve.", "----", "shelve.", "***", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "****", "shelve.", "****", "apply Rbar_is_upper_bound.", "-----", "shelve.", "-----", "shelve.", "****", "qsimpl time: 1 use: f,Ropp,Rbar_locally'_le,filterlim_le_le.", "-", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "-", "shelve.", "-", "shelve.", "-", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "****", "shelve.", "***", "shelve.", "--", "shelve."], "tactic": "--", "exn": "Wrong bullet --: Expecting *.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G.", "rewrite <- (Rbar_opp_involutive x).", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "+", "shelve.", "+", "apply Rbar_is_upper_bound.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "*", "shelve.", "*", "apply Rbar_is_upper_bound.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "--", "shelve.", "--", "apply Rbar_is_upper_bound.", "++", "shelve.", "++", "shelve.", "--", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "***", "shelve.", "***", "apply Rbar_is_upper_bound.", "----", "shelve.", "----", "shelve.", "***", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "****", "shelve.", "****", "apply Rbar_is_upper_bound.", "-----", "shelve.", "-----", "shelve.", "****", "qsimpl time: 1 use: f,Ropp,Rbar_locally'_le,filterlim_le_le.", "-", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "-", "shelve.", "-", "shelve.", "-", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "****", "shelve.", "***", "shelve.", "--", "shelve.", "*"], "tactic": "intros y; simpl; auto.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G.", "rewrite <- (Rbar_opp_involutive x).", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "+", "shelve.", "+", "apply Rbar_is_upper_bound.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "*", "shelve.", "*", "apply Rbar_is_upper_bound.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "--", "shelve.", "--", "apply Rbar_is_upper_bound.", "++", "shelve.", "++", "shelve.", "--", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "***", "shelve.", "***", "apply Rbar_is_upper_bound.", "----", "shelve.", "----", "shelve.", "***", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "****", "shelve.", "****", "apply Rbar_is_upper_bound.", "-----", "shelve.", "-----", "shelve.", "****", "qsimpl time: 1 use: f,Ropp,Rbar_locally'_le,filterlim_le_le.", "-", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "-", "shelve.", "-", "shelve.", "-", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "****", "shelve.", "***", "shelve.", "--", "shelve.", "*"], "tactic": "apply H.", "exn": "The reference H was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G.", "rewrite <- (Rbar_opp_involutive x).", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "+", "shelve.", "+", "apply Rbar_is_upper_bound.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "*", "shelve.", "*", "apply Rbar_is_upper_bound.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "--", "shelve.", "--", "apply Rbar_is_upper_bound.", "++", "shelve.", "++", "shelve.", "--", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "***", "shelve.", "***", "apply Rbar_is_upper_bound.", "----", "shelve.", "----", "shelve.", "***", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "****", "shelve.", "****", "apply Rbar_is_upper_bound.", "-----", "shelve.", "-----", "shelve.", "****", "qsimpl time: 1 use: f,Ropp,Rbar_locally'_le,filterlim_le_le.", "-", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "-", "shelve.", "-", "shelve.", "-", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "****", "shelve.", "***", "shelve.", "--", "shelve.", "*"], "tactic": "apply filterlim_le_le with (f := fun y => -Ropp (y)) (g := fun y => -Ropp (y)) (h := fun y => -Ropp (y)).", "exn": "In environment x : Rbar F : R -> Prop G : Rbar_locally (Rbar_opp x) F Unable to unify \"forall P : R -> Prop, Rbar_locally ?M6841 P -> filtermap (fun y : R => - - y) ?F3 P\" with \"Filter ((fun (X : family -> R -> R -> Prop) (_ : R -> R) (H0 : forall (f0 g h : Rbar_is_upper_bound ?Goal6 ?Goal7 -> R) (l : Rbar), (fun (X0 : family -> R -> R -> Prop) (_ : R -> R) (H1 : forall (f1 g0 h0 : Rbar_is_upper_bound ?Goal9 ?Goal10 -> R) (l0 : Rbar), (fun (X1 : family -> R -> R -> Prop) (_ : R -> R) (H2 : forall (f2 g1 h1 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> R) (l1 : Rbar), (fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le (fun x : Rbar_is_upper_bound ?Goal12 ?Goal13 => f2 x <= g1 x <= h1 x) -> filterlim f2 ((fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l1) -> filterlim h1 ((fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l1) -> filterlim g1 ((fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l1)) (X2 : Rbar_is_upper_bound ?Goal9 ?Goal10 -> Prop) => ?Goal11@{H0:=H2; X:=X1; X0:=X2}) f Ropp filterlim_le_le (fun x : Rbar_is_upper_bound ?Goal9 ?Goal10 => f1 x <= g0 x <= h0 x) -> filterlim f1 ((fun (X1 : family -> R -> R -> Prop) (_ : R -> R) (H2 : forall (f2 g1 h1 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> R) (l1 : Rbar), (fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le (fun x : Rbar_is_upper_bound ?Goal12 ?Goal13 => f2 x <= g1 x <= h1 x) -> filterlim f2 ((fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l1) -> filterlim h1 ((fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l1) -> filterlim g1 ((fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l1)) (X2 : Rbar_is_upper_bound ?Goal9 ?Goal10 -> Prop) => ?Goal11@{H0:=H2; X:=X1; X0:=X2}) f Ropp filterlim_le_le) (Rbar_locally l0) -> filterlim h0 ((fun (X1 : family -> R -> R -> Prop) (_ : R -> R) (H2 : forall (f2 g1 h1 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> R) (l1 : Rbar), (fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le (fun x : Rbar_is_upper_bound ?Goal12 ?Goal13 => f2 x <= g1 x <= h1 x) -> filterlim f2 ((fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l1) -> filterlim h1 ((fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l1) -> filterlim g1 ((fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l1)) (X2 : Rbar_is_upper_bound ?Goal9 ?Goal10 -> Prop) => ?Goal11@{H0:=H2; X:=X1; X0:=X2}) f Ropp filterlim_le_le) (Rbar_locally l0) -> filterlim g0 ((fun (X1 : family -> R -> R -> Prop) (_ : R -> R) (H2 : forall (f2 g1 h1 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> R) (l1 : Rbar), (fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le (fun x : Rbar_is_upper_bound ?Goal12 ?Goal13 => f2 x <= g1 x <= h1 x) -> filterlim f2 ((fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l1) -> filterlim h1 ((fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l1) -> filterlim g1 ((fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l1)) (X2 : Rbar_is_upper_bound ?Goal9 ?Goal10 -> Prop) => ?Goal11@{H0:=H2; X:=X1; X0:=X2}) f Ropp filterlim_le_le) (Rbar_locally l0)) (X1 : Rbar_is_upper_bound ?Goal6 ?Goal7 -> Prop) => ?Goal8@{H0:=H1; X:=X0; X0:=X1}) f Ropp filterlim_le_le (fun x : Rbar_is_upper_bound ?Goal6 ?Goal7 => f0 x <= g x <= h x) -> filterlim f0 ((fun (X0 : family -> R -> R -> Prop) (_ : R -> R) (H1 : forall (f1 g0 h0 : Rbar_is_upper_bound ?Goal9 ?Goal10 -> R) (l0 : Rbar), (fun (X1 : family -> R -> R -> Prop) (_ : R -> R) (H2 : forall (f2 g1 h1 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> R) (l1 : Rbar), (fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le (fun x : Rbar_is_upper_bound ?Goal12 ?Goal13 => f2 x <= g1 x <= h1 x) -> filterlim f2 ((fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l1) -> filterlim h1 ((fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l1) -> filterlim g1 ((fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l1)) (X2 : Rbar_is_upper_bound ?Goal9 ?Goal10 -> Prop) => ?Goal11@{H0:=H2; X:=X1; X0:=X2}) f Ropp filterlim_le_le (fun x : Rbar_is_upper_bound ?Goal9 ?Goal10 => f1 x <= g0 x <= h0 x) -> filterlim f1 ((fun (X1 : family -> R -> R -> Prop) (_ : R -> R) (H2 : forall (f2 g1 h1 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> R) (l1 : Rbar), (fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le (fun x : Rbar_is_upper_bound ?Goal12 ?Goal13 => f2 x <= g1 x <= h1 x) -> filterlim f2 ((fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l1) -> filterlim h1 ((fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l1) -> filterlim g1 ((fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l1)) (X2 : Rbar_is_upper_bound ?Goal9 ?Goal10 -> Prop) => ?Goal11@{H0:=H2; X:=X1; X0:=X2}) f Ropp filterlim_le_le) (Rbar_locally l0) -> filterlim h0 ((fun (X1 : family -> R -> R -> Prop) (_ : R -> R) (H2 : forall (f2 g1 h1 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> R) (l1 : Rbar), (fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le (fun x : Rbar_is_upper_bound ?Goal12 ?Goal13 => f2 x <= g1 x <= h1 x) -> filterlim f2 ((fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l1) -> filterlim h1 ((fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l1) -> filterlim g1 ((fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l1)) (X2 : Rbar_is_upper_bound ?Goal9 ?Goal10 -> Prop) => ?Goal11@{H0:=H2; X:=X1; X0:=X2}) f Ropp filterlim_le_le) (Rbar_locally l0) -> filterlim g0 ((fun (X1 : family -> R -> R -> Prop) (_ : R -> R) (H2 : forall (f2 g1 h1 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> R) (l1 : Rbar), (fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le (fun x : Rbar_is_upper_bound ?Goal12 ?Goal13 => f2 x <= g1 x <= h1 x) -> filterlim f2 ((fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l1) -> filterlim h1 ((fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l1) -> filterlim g1 ((fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l1)) (X2 : Rbar_is_upper_bound ?Goal9 ?Goal10 -> Prop) => ?Goal11@{H0:=H2; X:=X1; X0:=X2}) f Ropp filterlim_le_le) (Rbar_locally l0)) (X1 : Rbar_is_upper_bound ?Goal6 ?Goal7 -> Prop) => ?Goal8@{H0:=H1; X:=X0; X0:=X1}) f Ropp filterlim_le_le) (Rbar_locally l) -> filterlim h ((fun (X0 : family -> R -> R -> Prop) (_ : R -> R) (H1 : forall (f1 g0 h0 : Rbar_is_upper_bound ?Goal9 ?Goal10 -> R) (l0 : Rbar), (fun (X1 : family -> R -> R -> Prop) (_ : R -> R) (H2 : forall (f2 g1 h1 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> R) (l1 : Rbar), (fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le (fun x : Rbar_is_upper_bound ?Goal12 ?Goal13 => f2 x <= g1 x <= h1 x) -> filterlim f2 ((fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l1) -> filterlim h1 ((fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l1) -> filterlim g1 ((fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l1)) (X2 : Rbar_is_upper_bound ?Goal9 ?Goal10 -> Prop) => ?Goal11@{H0:=H2; X:=X1; X0:=X2}) f Ropp filterlim_le_le (fun x : Rbar_is_upper_bound ?Goal9 ?Goal10 => f1 x <= g0 x <= h0 x) -> filterlim f1 ((fun (X1 : family -> R -> R -> Prop) (_ : R -> R) (H2 : forall (f2 g1 h1 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> R) (l1 : Rbar), (fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le (fun x : Rbar_is_upper_bound ?Goal12 ?Goal13 => f2 x <= g1 x <= h1 x) -> filterlim f2 ((fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l1) -> filterlim h1 ((fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l1) -> filterlim g1 ((fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l1)) (X2 : Rbar_is_upper_bound ?Goal9 ?Goal10 -> Prop) => ?Goal11@{H0:=H2; X:=X1; X0:=X2}) f Ropp filterlim_le_le) (Rbar_locally l0) -> filterlim h0 ((fun (X1 : family -> R -> R -> Prop) (_ : R -> R) (H2 : forall (f2 g1 h1 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> R) (l1 : Rbar), (fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le (fun x : Rbar_is_upper_bound ?Goal12 ?Goal13 => f2 x <= g1 x <= h1 x) -> filterlim f2 ((fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l1) -> filterlim h1 ((fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l1) -> filterlim g1 ((fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l1)) (X2 : Rbar_is_upper_bound ?Goal9 ?Goal10 -> Prop) => ?Goal11@{H0:=H2; X:=X1; X0:=X2}) f Ropp filterlim_le_le) (Rbar_locally l0) -> filterlim g0 ((fun (X1 : family -> R -> R -> Prop) (_ : R -> R) (H2 : forall (f2 g1 h1 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> R) (l1 : Rbar), (fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le (fun x : Rbar_is_upper_bound ?Goal12 ?Goal13 => f2 x <= g1 x <= h1 x) -> filterlim f2 ((fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l1) -> filterlim h1 ((fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l1) -> filterlim g1 ((fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l1)) (X2 : Rbar_is_upper_bound ?Goal9 ?Goal10 -> Prop) => ?Goal11@{H0:=H2; X:=X1; X0:=X2}) f Ropp filterlim_le_le) (Rbar_locally l0)) (X1 : Rbar_is_upper_bound ?Goal6 ?Goal7 -> Prop) => ?Goal8@{H0:=H1; X:=X0; X0:=X1}) f Ropp filterlim_le_le) (Rbar_locally l) -> filterlim g ((fun (X0 : family -> R -> R -> Prop) (_ : R -> R) (H1 : forall (f1 g0 h0 : Rbar_is_upper_bound ?Goal9 ?Goal10 -> R) (l0 : Rbar), (fun (X1 : family -> R -> R -> Prop) (_ : R -> R) (H2 : forall (f2 g1 h1 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> R) (l1 : Rbar), (fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le (fun x : Rbar_is_upper_bound ?Goal12 ?Goal13 => f2 x <= g1 x <= h1 x) -> filterlim f2 ((fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l1) -> filterlim h1 ((fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l1) -> filterlim g1 ((fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l1)) (X2 : Rbar_is_upper_bound ?Goal9 ?Goal10 -> Prop) => ?Goal11@{H0:=H2; X:=X1; X0:=X2}) f Ropp filterlim_le_le (fun x : Rbar_is_upper_bound ?Goal9 ?Goal10 => f1 x <= g0 x <= h0 x) -> filterlim f1 ((fun (X1 : family -> R -> R -> Prop) (_ : R -> R) (H2 : forall (f2 g1 h1 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> R) (l1 : Rbar), (fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le (fun x : Rbar_is_upper_bound ?Goal12 ?Goal13 => f2 x <= g1 x <= h1 x) -> filterlim f2 ((fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l1) -> filterlim h1 ((fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l1) -> filterlim g1 ((fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l1)) (X2 : Rbar_is_upper_bound ?Goal9 ?Goal10 -> Prop) => ?Goal11@{H0:=H2; X:=X1; X0:=X2}) f Ropp filterlim_le_le) (Rbar_locally l0) -> filterlim h0 ((fun (X1 : family -> R -> R -> Prop) (_ : R -> R) (H2 : forall (f2 g1 h1 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> R) (l1 : Rbar), (fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le (fun x : Rbar_is_upper_bound ?Goal12 ?Goal13 => f2 x <= g1 x <= h1 x) -> filterlim f2 ((fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l1) -> filterlim h1 ((fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l1) -> filterlim g1 ((fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l1)) (X2 : Rbar_is_upper_bound ?Goal9 ?Goal10 -> Prop) => ?Goal11@{H0:=H2; X:=X1; X0:=X2}) f Ropp filterlim_le_le) (Rbar_locally l0) -> filterlim g0 ((fun (X1 : family -> R -> R -> Prop) (_ : R -> R) (H2 : forall (f2 g1 h1 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> R) (l1 : Rbar), (fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le (fun x : Rbar_is_upper_bound ?Goal12 ?Goal13 => f2 x <= g1 x <= h1 x) -> filterlim f2 ((fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l1) -> filterlim h1 ((fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l1) -> filterlim g1 ((fun (X2 : family -> R -> R -> Prop) (_ : R -> R) (H3 : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H4 : forall (f g2 h2 : ?T -> R) (l2 : Rbar), ?F (fun x : ?T => f x <= g2 x <= h2 x) -> filterlim f ?F (Rbar_locally l2) -> filterlim h2 ?F (Rbar_locally l2) -> filterlim g2 ?F (Rbar_locally l2)) (X3 : Rbar_is_upper_bound ?Goal12 ?Goal13 -> Prop) => (fun (X4 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H6 : forall (f g2 h2 : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} -> R) (l2 : Rbar), ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (fun x : ?T0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} => f x <= g2 x <= h2 x) -> filterlim f ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim h2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2) -> filterlim g2 ?F0@{ H1:=H4; H0:=H3; X:=X2; X0:=X3} (Rbar_locally l2)) (H7 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => (fun (X5 : family -> R -> R -> Prop) (_ : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)) (H10 : forall (f g2 h2 : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} -> R) (l2 : Rbar), ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (fun x : ?T1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} => f x <= g2 x <= h2 x) -> filterlim f ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim h2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2) -> filterlim g2 ?F1@{ H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4} (Rbar_locally l2)) (H11 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x) (_ : R -> R) => ?Goal14@{ H5:=H11; H1:=H4; H0:=H3; X:=X2; X0:=X3; H2:=H6; X1:=X4; H4:=H10; X2:=X5}) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Rbar_locally'_le filterlim_le_le Rbar_opp_involutive Ropp) f Ropp Rbar_locally'_le filterlim_le_le) (Rbar_locally l1)) (X2 : Rbar_is_upper_bound ?Goal9 ?Goal10 -> Prop) => ?Goal11@{H0:=H2; X:=X1; X0:=X2}) f Ropp filterlim_le_le) (Rbar_locally l0)) (X1 : Rbar_is_upper_bound ?Goal6 ?Goal7 -> Prop) => ?Goal8@{H0:=H1; X:=X0; X0:=X1}) f Ropp filterlim_le_le) (Rbar_locally l)) (X0 : Rbar_is_upper_bound ?Goal3 ?Goal4 -> Prop) => ?Goal5) f Ropp filterlim_le_le)\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros x.", "unfold filterlim.", "intros F G.", "rewrite <- (Rbar_opp_involutive x).", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "+", "shelve.", "+", "apply Rbar_is_upper_bound.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "*", "shelve.", "*", "apply Rbar_is_upper_bound.", "--", "shelve.", "--", "shelve.", "*", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "--", "shelve.", "--", "apply Rbar_is_upper_bound.", "++", "shelve.", "++", "shelve.", "--", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "***", "shelve.", "***", "apply Rbar_is_upper_bound.", "----", "shelve.", "----", "shelve.", "***", "qsimpl time: 1 use: f,Ropp,filterlim_le_le.", "****", "shelve.", "****", "apply Rbar_is_upper_bound.", "-----", "shelve.", "-----", "shelve.", "****", "qsimpl time: 1 use: f,Ropp,Rbar_locally'_le,filterlim_le_le.", "-", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "-", "shelve.", "-", "shelve.", "-", "qsimpl time: 1 use: f,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "++", "shelve.", "****", "shelve.", "***", "shelve.", "--", "shelve.", "*"], "tactic": "qsimpl time: 1 use: f,qsimpl,Rbar_locally'_le,filterlim_le_le,Rbar_opp_involutive,Ropp.", "exn": "The reference qsimpl was not found in the current environment.", "type": "ref_not_found", "handled": true}]}, "chat": [{"role": "user", "content": "I will give you a Coq proof state, including both hypotheses and a specific goal and your need to prove it. Your response should be a singular code block of Coq proof starting with \"```coq\n\", ending with \"Qed.```\", without any additional explanation or commentary. Follow to these guidelines:\nIntroduce variables using unique names to avoid any conflicts.\nKeep each command distinct and separated, avoid concatenations like ';' or '[cmd|cmd]'.\nOrganize your proof with bullets like '-', '+', and '*' instead of braces ({, }). Shift to their double symbols like '--' and '++', when necessary.\nEffectively use given premises, follow the syntax and structure demonstrated in the examples provided.\n\nExample 1:\n\nHypotheses:\nn, m: nat\nIHn: m + n = n + m\n\nGoal:\nm + S n = S n + m\n\nProof:\n```coq\nsimpl. rewrite <- IHn. auto.\nQed.```\n\nExample 2:\nHypotheses:\n\nGoal:\nforall n m : nat, m + n = n + m\n\n```coq\nintros n m. induction n.\n- simpl. auto.\n- simpl. rewrite <- IHn. auto.\nQed.```\n\nSolve This Proof State:\n\nHypotheses:\n\n\nGoal:\nforall x : Rbar, filterlim Ropp (Rbar_locally x) (Rbar_locally (Rbar_opp x))\n\nPremises:\n*** [ Ropp : R -> R ] Argument scope is [R_scope]\nfilterlim = fun (T U : Type) (f : T -> U) (F : (T -> Prop) -> Prop) (G : (U -> Prop) -> Prop) => filter_le (filtermap f F) G : forall T U : Type, (T -> U) -> ((T -> Prop) -> Prop) -> ((U -> Prop) -> Prop) -> Prop Arguments T, U are implicit and maximally inserted Argument scopes are [type_scope type_scope function_scope function_scope function_scope]\nRbar_locally = fun (a : Rbar) (P : R -> Prop) => match a with | Finite a0 => locally a0 P | p_infty => exists M : R, forall x : R, M < x -> P x | m_infty => exists M : R, forall x : R, x < M -> P x end : Rbar -> (R -> Prop) -> Prop Argument scopes are [_ function_scope]\nInductive Rbar : Set := Finite : R -> Rbar | p_infty : Rbar | m_infty : Rbar For Finite: Argument scope is [R_scope]\nRbar_opp = fun x : Rbar => match x with | Finite x0 => Finite (- x0) | p_infty => m_infty | m_infty => p_infty end : Rbar -> Rbar\nRbar_locally'_le : forall x : Rbar, filter_le (Rbar_locally' x) (Rbar_locally x)\nRbar_locally_filter : forall x : Rbar, ProperFilter (Rbar_locally x)\nfilterlim_le_le : forall (f g h : ?T -> R) (l : Rbar), ?F (fun x : ?T => f x <= g x <= h x) -> filterlim f ?F (Rbar_locally l) -> filterlim h ?F (Rbar_locally l) -> filterlim g ?F (Rbar_locally l) where ?T : [ |- Type] ?F : [ |- (?T -> Prop) -> Prop] ?FF : [ |- Filter ?F]\nfilterlim_le_m_infty : forall f g : ?T -> R, ?F (fun x : ?T => g x <= f x) -> filterlim f ?F (Rbar_locally m_infty) -> filterlim g ?F (Rbar_locally m_infty) where ?T : [ |- Type] ?F : [ |- (?T -> Prop) -> Prop] ?FF : [ |- Filter ?F]\nfilterlim_ge_p_infty : forall f g : ?T -> R, ?F (fun x : ?T => f x <= g x) -> filterlim f ?F (Rbar_locally p_infty) -> filterlim g ?F (Rbar_locally p_infty) where ?T : [ |- Type] ?F : [ |- (?T -> Prop) -> Prop] ?FF : [ |- Filter ?F]\nfilterlim_Rbar_loc_seq : forall x : Rbar, filterlim (Rbar_loc_seq x) eventually (Rbar_locally' x)\ncontinuity_pt_filterlim' : forall (f : R -> R) (x : R), continuity_pt f x < -> filterlim f (locally' x) (locally (f x))\ncontinuity_pt_filterlim : forall (f : R -> R) (x : R), continuity_pt f x < -> filterlim f (locally x) (locally (f x))\nfilterlim_norm : forall x : ?V, filterlim norm (locally x) (locally (norm x)) where ?K : [ |- AbsRing] ?V : [ |- NormedModule ?K]\nis_lim_seq = fun (u : nat -> R) (l : Rbar) => filterlim u eventually (Rbar_locally l) : (nat -> R) -> Rbar -> Prop Argument scopes are [function_scope _]\nRbar_opp_involutive : forall x : Rbar, Rbar_opp (Rbar_opp x) = x\nex_Rbar_plus_opp : forall x y : Rbar, ex_Rbar_plus x y -> ex_Rbar_plus (Rbar_opp x) (Rbar_opp y)\nRbar_mult_opp : forall x y : Rbar, Rbar_mult (Rbar_opp x) (Rbar_opp y) = Rbar_mult x y\nRbar_opp_lt : forall x y : Rbar, Rbar_lt (Rbar_opp x) (Rbar_opp y) < -> Rbar_lt y x\nRbar_opp_le : forall x y : Rbar, Rbar_le (Rbar_opp x) (Rbar_opp y) < -> Rbar_le y x\nRbar_abs_opp : forall x : Rbar, Rbar_abs (Rbar_opp x) = Rbar_abs x\nRbar_plus_opp : forall x y : Rbar, Rbar_plus (Rbar_opp x) (Rbar_opp y) = Rbar_opp (Rbar_plus x y)\nRbar_inv_opp : forall x : Rbar, x <> 0 -> Rbar_inv (Rbar_opp x) = Rbar_opp (Rbar_inv x)\nis_Rbar_mult_opp_l : forall x y z : Rbar, is_Rbar_mult x y z -> is_Rbar_mult (Rbar_opp x) y (Rbar_opp z)\nex_Rbar_mult_opp_l : forall x y : Rbar, ex_Rbar_mult x y -> ex_Rbar_mult (Rbar_opp x) y\nRbar_mult_opp_l : forall x y : Rbar, Rbar_mult (Rbar_opp x) y = Rbar_opp (Rbar_mult x y)\nRbar_abs_lt_between : forall x y : Rbar, Rbar_lt (Rbar_abs x) y < -> Rbar_lt (Rbar_opp y) x /\\ Rbar_lt x y\nfilterlim_locally_cauchy : forall f : R -> ?U, (forall eps : posreal, exists P : R -> Prop, Rbar_locally ?x P /\\ (forall u v : R, P u -> P v -> ball (f u) eps (f v))) < -> (exists y : ?U, filterlim f (Rbar_locally ?x) (locally y)) where ?U : [ |- CompleteSpace] ?x : [ |- Rbar]\nRbar_glb_lub : forall (E : Rbar -> Prop) (l : Rbar), Rbar_is_glb (fun x : Rbar => E (Rbar_opp x)) (Rbar_opp l) < -> Rbar_is_lub E l\nRbar_lb_ub : forall (E : Rbar -> Prop) (l : Rbar), Rbar_is_lower_bound (fun x : Rbar => E (Rbar_opp x)) (Rbar_opp l) < -> Rbar_is_upper_bound E l"}, {"role": "assistant", "content": "```coq\nintros x.\nunfold filterlim.\nintros F G.\nsplit.\n- intros H.\n  rewrite <- (Rbar_opp_involutive x).\n  apply filterlim_le_le with (f := fun y => -Ropp (y)) (g := fun y => -Ropp (y)) (h := fun y => -Ropp (y)).\n  + intros y; simpl; auto.\n  + apply H.\n  + apply filterlim_le_le with (f := fun y => -Ropp (y)) (g := fun y => -Ropp (y)) (h := fun y => -Ropp (y)).\n    * intros y; simpl; auto.\n    * apply H.\n    * apply filterlim_le_le with (f := fun y => -Ropp (y)) (g := fun y => -Ropp (y)) (h := fun y => -Ropp (y)).\n      -- intros y; simpl; auto.\n      -- apply H.\n      -- apply filterlim_le_le with (f := fun y => -Ropp (y)) (g := fun y => -Ropp (y)) (h := fun y => -Ropp (y)).\n        *** intros y; simpl; auto.\n        *** apply H.\n        *** apply filterlim_le_le with (f := fun y => -Ropp (y)) (g := fun y => -Ropp (y)) (h := fun y => -Ropp (y)).\n          **** intros y; simpl; auto.\n          **** apply H.\n          **** apply Rbar_locally'_le.\n- intros H.\n  rewrite <- (Rbar_opp_involutive x).\n  apply filterlim_le_le with (f := fun y => -Ropp (y)) (g := fun y => -Ropp (y)) (h := fun y => -Ropp (y)).\n  + intros y; simpl; auto.\n  + apply H.\n  + apply filterlim_le_le with (f := fun y => -Ropp (y)) (g := fun y => -Ropp (y)) (h := fun y => -Ropp (y)).\n    * intros y; simpl; auto.\n    * apply H.\n    * apply filterlim_le_le with (f := fun y => -Ropp (y)) (g := fun y => -Ropp (y)) (h := fun y => -Ropp (y)).\n      -- intros y; simpl; auto.\n      -- apply H.\n      -- apply filterlim_le_le with (f := fun y => -Ropp (y)) (g := fun y => -Ropp (y)) (h := fun y => -Ropp (y)).\n        *** intros y; simpl; auto.\n        *** apply H.\n        *** apply Rbar_locally'_le.\nQed.```"}], "original": "intros x. unfold filterlim. intros F G. split. - intros H. rewrite <- (Rbar_opp_involutive x). apply filterlim_le_le with (f := fun y => -Ropp (y)) (g := fun y => -Ropp (y)) (h := fun y => -Ropp (y)). + intros y; simpl; auto. + apply H. + apply filterlim_le_le with (f := fun y => -Ropp (y)) (g := fun y => -Ropp (y)) (h := fun y => -Ropp (y)). * intros y; simpl; auto. * apply H. * apply filterlim_le_le with (f := fun y => -Ropp (y)) (g := fun y => -Ropp (y)) (h := fun y => -Ropp (y)). -- intros y; simpl; auto. -- apply H. -- apply filterlim_le_le with (f := fun y => -Ropp (y)) (g := fun y => -Ropp (y)) (h := fun y => -Ropp (y)). *** intros y; simpl; auto. *** apply H. *** apply filterlim_le_le with (f := fun y => -Ropp (y)) (g := fun y => -Ropp (y)) (h := fun y => -Ropp (y)). **** intros y; simpl; auto. **** apply H. **** apply Rbar_locally'_le. - intros H. rewrite <- (Rbar_opp_involutive x). apply filterlim_le_le with (f := fun y => -Ropp (y)) (g := fun y => -Ropp (y)) (h := fun y => -Ropp (y)). + intros y; simpl; auto. + apply H. + apply filterlim_le_le with (f := fun y => -Ropp (y)) (g := fun y => -Ropp (y)) (h := fun y => -Ropp (y)). * intros y; simpl; auto. * apply H. * apply filterlim_le_le with (f := fun y => -Ropp (y)) (g := fun y => -Ropp (y)) (h := fun y => -Ropp (y)). -- intros y; simpl; auto. -- apply H. -- apply filterlim_le_le with (f := fun y => -Ropp (y)) (g := fun y => -Ropp (y)) (h := fun y => -Ropp (y)). *** intros y; simpl; auto. *** apply H. *** apply Rbar_locally'_le.", "succ": false}]