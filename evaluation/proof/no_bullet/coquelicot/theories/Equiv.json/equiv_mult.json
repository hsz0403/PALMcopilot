[{"history": {"proof": "qsimpl time: 1 use: Rmult_plus_distr_r. qsimpl time: 1 use: Rmult_minus_distr_l,Rmult_plus_distr_r. qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_mult,Rmult_plus_distr_r. qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_mult,Rabs_minus_sym,Rmult_plus_distr_r. qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult. qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos. qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos. qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos. qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos. qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos. qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos. qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos. qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos. qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos. qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos. qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos. qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos,Rmult_le_compat_l. qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rplus_le_le_0_compat,Rabs_mult,Rabs_pos,Rmult_le_compat_l. qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rplus_le_le_0_compat,Rabs_mult,Rabs_pos,Rmult_le_compat_l. qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rplus_le_le_0_compat,Rabs_mult,Rabs_pos,Rmult_le_compat_l. qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rplus_le_le_0_compat,Rabs_triang,Rabs_mult,Rabs_pos,Rmult_le_compat_l.", "repairs": ["no_match_term", "no_subterm", "no_match_term", "no_match_term", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify", "cannot_unify"], "exceptions": [{"ctx": ["intros T F FF f1 f2 g1 g2 H1 H2.", "unfold is_equiv, is_domin in *.", "intros eps.", "specialize (H1 eps).", "specialize (H2 eps)."], "tactic": "intros x.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros T F FF f1 f2 g1 g2 H1 H2.", "unfold is_equiv, is_domin in *.", "intros eps.", "specialize (H1 eps).", "specialize (H2 eps).", "unfold mult, minus."], "tactic": "rewrite 2! Rmult_plus_distr_r.", "exn": "At iteration 1: The LHS of Rmult_plus_distr_r ((_ + _) * _) does not match any subterm of the goal", "type": "no_match_term", "handled": true}, {"ctx": ["intros T F FF f1 f2 g1 g2 H1 H2.", "unfold is_equiv, is_domin in *.", "intros eps.", "specialize (H1 eps).", "specialize (H2 eps).", "unfold mult, minus.", "qsimpl time: 1 use: Rmult_plus_distr_r."], "tactic": "rewrite <- Rmult_minus_distr_l.", "exn": "Found no subterm matching \"?M2732 * ?M2733 - ?M2732 * ?M2734\" in the current goal.", "type": "no_subterm", "handled": true}, {"ctx": ["intros T F FF f1 f2 g1 g2 H1 H2.", "unfold is_equiv, is_domin in *.", "intros eps.", "specialize (H1 eps).", "specialize (H2 eps).", "unfold mult, minus.", "qsimpl time: 1 use: Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rmult_plus_distr_r."], "tactic": "rewrite Rabs_mult.", "exn": "The LHS of Rabs_mult (Rabs (_ * _)) does not match any subterm of the goal", "type": "no_match_term", "handled": true}, {"ctx": ["intros T F FF f1 f2 g1 g2 H1 H2.", "unfold is_equiv, is_domin in *.", "intros eps.", "specialize (H1 eps).", "specialize (H2 eps).", "unfold mult, minus.", "qsimpl time: 1 use: Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_mult,Rmult_plus_distr_r."], "tactic": "rewrite Rabs_minus_sym.", "exn": "The LHS of Rabs_minus_sym (Rabs (_ - _)) does not match any subterm of the goal", "type": "no_match_term", "handled": true}, {"ctx": ["intros T F FF f1 f2 g1 g2 H1 H2.", "unfold is_equiv, is_domin in *.", "intros eps.", "specialize (H1 eps).", "specialize (H2 eps).", "unfold mult, minus.", "qsimpl time: 1 use: Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_mult,Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_mult,Rabs_minus_sym,Rmult_plus_distr_r."], "tactic": "apply Rle_trans with (r2 := eps * (norm (f1 x) + norm (f2 x)) + norm (g1 x) * eps + norm (g2 x) * eps).", "exn": "The reference x was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros T F FF f1 f2 g1 g2 H1 H2.", "unfold is_equiv, is_domin in *.", "intros eps.", "specialize (H1 eps).", "specialize (H2 eps).", "unfold mult, minus.", "qsimpl time: 1 use: Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_mult,Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_mult,Rabs_minus_sym,Rmult_plus_distr_r."], "tactic": "apply Rmult_le_compat_r.", "exn": "In environment H7 : forall r1 r2 r3 : R, (r1 + r2) * r3 = r1 * r3 + r2 * r3 H6 : forall x y : R, Rabs (x - y) = Rabs (y - x) H3 : forall x y : R, Rabs (x * y) = Rabs x * Rabs y H0 : forall r1 r2 r3 : R, r1 * (r2 - r3) = r1 * r2 - r1 * r3 T : Type F : (T -> Prop) -> Prop f1, f2, g1, g2 : T -> R eps : posreal H1 : F (fun x : T => norm (minus (g1 x) (f1 x)) <= eps * norm (g1 x)) H2 : F (fun x : T => norm (minus (g2 x) (f2 x)) <= eps * norm (g2 x)) filter_true : F (fun _ : T => True) filter_and : forall P Q : T -> Prop, F P -> F Q -> F (fun x : T => P x /\\\\ Q x) filter_imp : forall P Q : T -> Prop, (forall x : T, P x -> Q x) -> F P -> F Q Unable to unify \"?M3765 * ?M3764 < ?M3766 * ?M3764 \\\\/ ?M3765 * ?M3764 = ?M3766 * ?M3764\" with \"F (fun x : T => norm (plus (g1 x * g2 x) (opp (f1 x * f2 x))) <= eps * norm (g1 x * g2 x))\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros T F FF f1 f2 g1 g2 H1 H2.", "unfold is_equiv, is_domin in *.", "intros eps.", "specialize (H1 eps).", "specialize (H2 eps).", "unfold mult, minus.", "qsimpl time: 1 use: Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_mult,Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_mult,Rabs_minus_sym,Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult."], "tactic": "apply Rabs_pos.", "exn": "In environment H9 : forall x y : R, Rabs (x * y) = Rabs x * Rabs y H8 : forall r r1 r2 : R, 0 <= r -> r1 <= r2 -> r1 * r <= r2 * r H5 : forall r1 r2 r3 : R, (r1 + r2) * r3 = r1 * r3 + r2 * r3 H4 : forall x y : R, Rabs (x - y) = Rabs (y - x) H : forall r1 r2 r3 : R, r1 * (r2 - r3) = r1 * r2 - r1 * r3 T : Type F : (T -> Prop) -> Prop f1, f2, g1, g2 : T -> R eps : posreal H1 : F (fun x : T => norm (minus (g1 x) (f1 x)) <= eps * norm (g1 x)) H2 : F (fun x : T => norm (minus (g2 x) (f2 x)) <= eps * norm (g2 x)) filter_true : F (fun _ : T => True) filter_and : forall P Q : T -> Prop, F P -> F Q -> F (fun x : T => P x /\\\\ Q x) filter_imp : forall P Q : T -> Prop, (forall x : T, P x -> Q x) -> F P -> F Q Unable to unify \"0 < Rabs ?M4220 \\\\/ 0 = Rabs ?M4220\" with \"F (fun x : T => norm (plus (g1 x * g2 x) (opp (f1 x * f2 x))) <= eps * norm (g1 x * g2 x))\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros T F FF f1 f2 g1 g2 H1 H2.", "unfold is_equiv, is_domin in *.", "intros eps.", "specialize (H1 eps).", "specialize (H2 eps).", "unfold mult, minus.", "qsimpl time: 1 use: Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_mult,Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_mult,Rabs_minus_sym,Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos."], "tactic": "apply H1.", "exn": "In environment H11 : forall x : R, 0 <= Rabs x H10 : forall x y : R, Rabs (x * y) = Rabs x * Rabs y H7 : forall r r1 r2 : R, 0 <= r -> r1 <= r2 -> r1 * r <= r2 * r H6 : forall r1 r2 r3 : R, (r1 + r2) * r3 = r1 * r3 + r2 * r3 H3 : forall x y : R, Rabs (x - y) = Rabs (y - x) H0 : forall r1 r2 r3 : R, r1 * (r2 - r3) = r1 * r2 - r1 * r3 T : Type F : (T -> Prop) -> Prop f1, f2, g1, g2 : T -> R eps : posreal H1 : F (fun x : T => norm (minus (g1 x) (f1 x)) <= eps * norm (g1 x)) H2 : F (fun x : T => norm (minus (g2 x) (f2 x)) <= eps * norm (g2 x)) filter_true : F (fun _ : T => True) filter_and : forall P Q : T -> Prop, F P -> F Q -> F (fun x : T => P x /\\\\ Q x) filter_imp : forall P Q : T -> Prop, (forall x : T, P x -> Q x) -> F P -> F Q Unable to unify \"F (fun x : T => norm (minus (g1 x) (f1 x)) <= eps * norm (g1 x))\" with \"F (fun x : T => norm (plus (g1 x * g2 x) (opp (f1 x * f2 x))) <= eps * norm (g1 x * g2 x))\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros T F FF f1 f2 g1 g2 H1 H2.", "unfold is_equiv, is_domin in *.", "intros eps.", "specialize (H1 eps).", "specialize (H2 eps).", "unfold mult, minus.", "qsimpl time: 1 use: Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_mult,Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_mult,Rabs_minus_sym,Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos."], "tactic": "apply Rmult_le_compat_r.", "exn": "In environment H12 : forall x : R, 0 <= Rabs x H9 : forall x y : R, Rabs (x * y) = Rabs x * Rabs y H8 : forall r r1 r2 : R, 0 <= r -> r1 <= r2 -> r1 * r <= r2 * r H5 : forall r1 r2 r3 : R, (r1 + r2) * r3 = r1 * r3 + r2 * r3 H4 : forall x y : R, Rabs (x - y) = Rabs (y - x) H : forall r1 r2 r3 : R, r1 * (r2 - r3) = r1 * r2 - r1 * r3 T : Type F : (T -> Prop) -> Prop f1, f2, g1, g2 : T -> R eps : posreal H1 : F (fun x : T => norm (minus (g1 x) (f1 x)) <= eps * norm (g1 x)) H2 : F (fun x : T => norm (minus (g2 x) (f2 x)) <= eps * norm (g2 x)) filter_true : F (fun _ : T => True) filter_and : forall P Q : T -> Prop, F P -> F Q -> F (fun x : T => P x /\\\\ Q x) filter_imp : forall P Q : T -> Prop, (forall x : T, P x -> Q x) -> F P -> F Q Unable to unify \"?M5165 * ?M5164 < ?M5166 * ?M5164 \\\\/ ?M5165 * ?M5164 = ?M5166 * ?M5164\" with \"F (fun x : T => norm (plus (g1 x * g2 x) (opp (f1 x * f2 x))) <= eps * norm (g1 x * g2 x))\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros T F FF f1 f2 g1 g2 H1 H2.", "unfold is_equiv, is_domin in *.", "intros eps.", "specialize (H1 eps).", "specialize (H2 eps).", "unfold mult, minus.", "qsimpl time: 1 use: Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_mult,Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_mult,Rabs_minus_sym,Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos."], "tactic": "apply Rabs_pos.", "exn": "In environment H11 : forall x : R, 0 <= Rabs x H10 : forall x y : R, Rabs (x * y) = Rabs x * Rabs y H7 : forall r r1 r2 : R, 0 <= r -> r1 <= r2 -> r1 * r <= r2 * r H6 : forall r1 r2 r3 : R, (r1 + r2) * r3 = r1 * r3 + r2 * r3 H3 : forall x y : R, Rabs (x - y) = Rabs (y - x) H0 : forall r1 r2 r3 : R, r1 * (r2 - r3) = r1 * r2 - r1 * r3 T : Type F : (T -> Prop) -> Prop f1, f2, g1, g2 : T -> R eps : posreal H1 : F (fun x : T => norm (minus (g1 x) (f1 x)) <= eps * norm (g1 x)) H2 : F (fun x : T => norm (minus (g2 x) (f2 x)) <= eps * norm (g2 x)) filter_true : F (fun _ : T => True) filter_and : forall P Q : T -> Prop, F P -> F Q -> F (fun x : T => P x /\\\\ Q x) filter_imp : forall P Q : T -> Prop, (forall x : T, P x -> Q x) -> F P -> F Q Unable to unify \"0 < Rabs ?M5636 \\\\/ 0 = Rabs ?M5636\" with \"F (fun x : T => norm (plus (g1 x * g2 x) (opp (f1 x * f2 x))) <= eps * norm (g1 x * g2 x))\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros T F FF f1 f2 g1 g2 H1 H2.", "unfold is_equiv, is_domin in *.", "intros eps.", "specialize (H1 eps).", "specialize (H2 eps).", "unfold mult, minus.", "qsimpl time: 1 use: Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_mult,Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_mult,Rabs_minus_sym,Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos."], "tactic": "apply H2.", "exn": "In environment H12 : forall x : R, 0 <= Rabs x H9 : forall x y : R, Rabs (x * y) = Rabs x * Rabs y H8 : forall r r1 r2 : R, 0 <= r -> r1 <= r2 -> r1 * r <= r2 * r H5 : forall r1 r2 r3 : R, (r1 + r2) * r3 = r1 * r3 + r2 * r3 H4 : forall x y : R, Rabs (x - y) = Rabs (y - x) H : forall r1 r2 r3 : R, r1 * (r2 - r3) = r1 * r2 - r1 * r3 T : Type F : (T -> Prop) -> Prop f1, f2, g1, g2 : T -> R eps : posreal H1 : F (fun x : T => norm (minus (g1 x) (f1 x)) <= eps * norm (g1 x)) H2 : F (fun x : T => norm (minus (g2 x) (f2 x)) <= eps * norm (g2 x)) filter_true : F (fun _ : T => True) filter_and : forall P Q : T -> Prop, F P -> F Q -> F (fun x : T => P x /\\\\ Q x) filter_imp : forall P Q : T -> Prop, (forall x : T, P x -> Q x) -> F P -> F Q Unable to unify \"F (fun x : T => norm (minus (g2 x) (f2 x)) <= eps * norm (g2 x))\" with \"F (fun x : T => norm (plus (g1 x * g2 x) (opp (f1 x * f2 x))) <= eps * norm (g1 x * g2 x))\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros T F FF f1 f2 g1 g2 H1 H2.", "unfold is_equiv, is_domin in *.", "intros eps.", "specialize (H1 eps).", "specialize (H2 eps).", "unfold mult, minus.", "qsimpl time: 1 use: Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_mult,Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_mult,Rabs_minus_sym,Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos."], "tactic": "apply Rmult_le_compat_r.", "exn": "In environment H11 : forall x : R, 0 <= Rabs x H10 : forall x y : R, Rabs (x * y) = Rabs x * Rabs y H7 : forall r r1 r2 : R, 0 <= r -> r1 <= r2 -> r1 * r <= r2 * r H6 : forall r1 r2 r3 : R, (r1 + r2) * r3 = r1 * r3 + r2 * r3 H3 : forall x y : R, Rabs (x - y) = Rabs (y - x) H0 : forall r1 r2 r3 : R, r1 * (r2 - r3) = r1 * r2 - r1 * r3 T : Type F : (T -> Prop) -> Prop f1, f2, g1, g2 : T -> R eps : posreal H1 : F (fun x : T => norm (minus (g1 x) (f1 x)) <= eps * norm (g1 x)) H2 : F (fun x : T => norm (minus (g2 x) (f2 x)) <= eps * norm (g2 x)) filter_true : F (fun _ : T => True) filter_and : forall P Q : T -> Prop, F P -> F Q -> F (fun x : T => P x /\\\\ Q x) filter_imp : forall P Q : T -> Prop, (forall x : T, P x -> Q x) -> F P -> F Q Unable to unify \"?M6581 * ?M6580 < ?M6582 * ?M6580 \\\\/ ?M6581 * ?M6580 = ?M6582 * ?M6580\" with \"F (fun x : T => norm (plus (g1 x * g2 x) (opp (f1 x * f2 x))) <= eps * norm (g1 x * g2 x))\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros T F FF f1 f2 g1 g2 H1 H2.", "unfold is_equiv, is_domin in *.", "intros eps.", "specialize (H1 eps).", "specialize (H2 eps).", "unfold mult, minus.", "qsimpl time: 1 use: Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_mult,Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_mult,Rabs_minus_sym,Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos."], "tactic": "apply Rabs_pos.", "exn": "In environment H12 : forall x : R, 0 <= Rabs x H9 : forall x y : R, Rabs (x * y) = Rabs x * Rabs y H8 : forall r r1 r2 : R, 0 <= r -> r1 <= r2 -> r1 * r <= r2 * r H5 : forall r1 r2 r3 : R, (r1 + r2) * r3 = r1 * r3 + r2 * r3 H4 : forall x y : R, Rabs (x - y) = Rabs (y - x) H : forall r1 r2 r3 : R, r1 * (r2 - r3) = r1 * r2 - r1 * r3 T : Type F : (T -> Prop) -> Prop f1, f2, g1, g2 : T -> R eps : posreal H1 : F (fun x : T => norm (minus (g1 x) (f1 x)) <= eps * norm (g1 x)) H2 : F (fun x : T => norm (minus (g2 x) (f2 x)) <= eps * norm (g2 x)) filter_true : F (fun _ : T => True) filter_and : forall P Q : T -> Prop, F P -> F Q -> F (fun x : T => P x /\\\\ Q x) filter_imp : forall P Q : T -> Prop, (forall x : T, P x -> Q x) -> F P -> F Q Unable to unify \"0 < Rabs ?M7052 \\\\/ 0 = Rabs ?M7052\" with \"F (fun x : T => norm (plus (g1 x * g2 x) (opp (f1 x * f2 x))) <= eps * norm (g1 x * g2 x))\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros T F FF f1 f2 g1 g2 H1 H2.", "unfold is_equiv, is_domin in *.", "intros eps.", "specialize (H1 eps).", "specialize (H2 eps).", "unfold mult, minus.", "qsimpl time: 1 use: Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_mult,Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_mult,Rabs_minus_sym,Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos."], "tactic": "apply H1.", "exn": "In environment H11 : forall x : R, 0 <= Rabs x H10 : forall x y : R, Rabs (x * y) = Rabs x * Rabs y H7 : forall r r1 r2 : R, 0 <= r -> r1 <= r2 -> r1 * r <= r2 * r H6 : forall r1 r2 r3 : R, (r1 + r2) * r3 = r1 * r3 + r2 * r3 H3 : forall x y : R, Rabs (x - y) = Rabs (y - x) H0 : forall r1 r2 r3 : R, r1 * (r2 - r3) = r1 * r2 - r1 * r3 T : Type F : (T -> Prop) -> Prop f1, f2, g1, g2 : T -> R eps : posreal H1 : F (fun x : T => norm (minus (g1 x) (f1 x)) <= eps * norm (g1 x)) H2 : F (fun x : T => norm (minus (g2 x) (f2 x)) <= eps * norm (g2 x)) filter_true : F (fun _ : T => True) filter_and : forall P Q : T -> Prop, F P -> F Q -> F (fun x : T => P x /\\\\ Q x) filter_imp : forall P Q : T -> Prop, (forall x : T, P x -> Q x) -> F P -> F Q Unable to unify \"F (fun x : T => norm (minus (g1 x) (f1 x)) <= eps * norm (g1 x))\" with \"F (fun x : T => norm (plus (g1 x * g2 x) (opp (f1 x * f2 x))) <= eps * norm (g1 x * g2 x))\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros T F FF f1 f2 g1 g2 H1 H2.", "unfold is_equiv, is_domin in *.", "intros eps.", "specialize (H1 eps).", "specialize (H2 eps).", "unfold mult, minus.", "qsimpl time: 1 use: Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_mult,Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_mult,Rabs_minus_sym,Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos."], "tactic": "apply Rmult_le_compat_r.", "exn": "In environment H12 : forall x : R, 0 <= Rabs x H9 : forall x y : R, Rabs (x * y) = Rabs x * Rabs y H8 : forall r r1 r2 : R, 0 <= r -> r1 <= r2 -> r1 * r <= r2 * r H5 : forall r1 r2 r3 : R, (r1 + r2) * r3 = r1 * r3 + r2 * r3 H4 : forall x y : R, Rabs (x - y) = Rabs (y - x) H : forall r1 r2 r3 : R, r1 * (r2 - r3) = r1 * r2 - r1 * r3 T : Type F : (T -> Prop) -> Prop f1, f2, g1, g2 : T -> R eps : posreal H1 : F (fun x : T => norm (minus (g1 x) (f1 x)) <= eps * norm (g1 x)) H2 : F (fun x : T => norm (minus (g2 x) (f2 x)) <= eps * norm (g2 x)) filter_true : F (fun _ : T => True) filter_and : forall P Q : T -> Prop, F P -> F Q -> F (fun x : T => P x /\\\\ Q x) filter_imp : forall P Q : T -> Prop, (forall x : T, P x -> Q x) -> F P -> F Q Unable to unify \"?M7997 * ?M7996 < ?M7998 * ?M7996 \\\\/ ?M7997 * ?M7996 = ?M7998 * ?M7996\" with \"F (fun x : T => norm (plus (g1 x * g2 x) (opp (f1 x * f2 x))) <= eps * norm (g1 x * g2 x))\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros T F FF f1 f2 g1 g2 H1 H2.", "unfold is_equiv, is_domin in *.", "intros eps.", "specialize (H1 eps).", "specialize (H2 eps).", "unfold mult, minus.", "qsimpl time: 1 use: Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_mult,Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_mult,Rabs_minus_sym,Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos."], "tactic": "apply Rabs_pos.", "exn": "In environment H11 : forall x : R, 0 <= Rabs x H10 : forall x y : R, Rabs (x * y) = Rabs x * Rabs y H7 : forall r r1 r2 : R, 0 <= r -> r1 <= r2 -> r1 * r <= r2 * r H6 : forall r1 r2 r3 : R, (r1 + r2) * r3 = r1 * r3 + r2 * r3 H3 : forall x y : R, Rabs (x - y) = Rabs (y - x) H0 : forall r1 r2 r3 : R, r1 * (r2 - r3) = r1 * r2 - r1 * r3 T : Type F : (T -> Prop) -> Prop f1, f2, g1, g2 : T -> R eps : posreal H1 : F (fun x : T => norm (minus (g1 x) (f1 x)) <= eps * norm (g1 x)) H2 : F (fun x : T => norm (minus (g2 x) (f2 x)) <= eps * norm (g2 x)) filter_true : F (fun _ : T => True) filter_and : forall P Q : T -> Prop, F P -> F Q -> F (fun x : T => P x /\\\\ Q x) filter_imp : forall P Q : T -> Prop, (forall x : T, P x -> Q x) -> F P -> F Q Unable to unify \"0 < Rabs ?M8468 \\\\/ 0 = Rabs ?M8468\" with \"F (fun x : T => norm (plus (g1 x * g2 x) (opp (f1 x * f2 x))) <= eps * norm (g1 x * g2 x))\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros T F FF f1 f2 g1 g2 H1 H2.", "unfold is_equiv, is_domin in *.", "intros eps.", "specialize (H1 eps).", "specialize (H2 eps).", "unfold mult, minus.", "qsimpl time: 1 use: Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_mult,Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_mult,Rabs_minus_sym,Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos."], "tactic": "apply H2.", "exn": "In environment H12 : forall x : R, 0 <= Rabs x H9 : forall x y : R, Rabs (x * y) = Rabs x * Rabs y H8 : forall r r1 r2 : R, 0 <= r -> r1 <= r2 -> r1 * r <= r2 * r H5 : forall r1 r2 r3 : R, (r1 + r2) * r3 = r1 * r3 + r2 * r3 H4 : forall x y : R, Rabs (x - y) = Rabs (y - x) H : forall r1 r2 r3 : R, r1 * (r2 - r3) = r1 * r2 - r1 * r3 T : Type F : (T -> Prop) -> Prop f1, f2, g1, g2 : T -> R eps : posreal H1 : F (fun x : T => norm (minus (g1 x) (f1 x)) <= eps * norm (g1 x)) H2 : F (fun x : T => norm (minus (g2 x) (f2 x)) <= eps * norm (g2 x)) filter_true : F (fun _ : T => True) filter_and : forall P Q : T -> Prop, F P -> F Q -> F (fun x : T => P x /\\\\ Q x) filter_imp : forall P Q : T -> Prop, (forall x : T, P x -> Q x) -> F P -> F Q Unable to unify \"F (fun x : T => norm (minus (g2 x) (f2 x)) <= eps * norm (g2 x))\" with \"F (fun x : T => norm (plus (g1 x * g2 x) (opp (f1 x * f2 x))) <= eps * norm (g1 x * g2 x))\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros T F FF f1 f2 g1 g2 H1 H2.", "unfold is_equiv, is_domin in *.", "intros eps.", "specialize (H1 eps).", "specialize (H2 eps).", "unfold mult, minus.", "qsimpl time: 1 use: Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_mult,Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_mult,Rabs_minus_sym,Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos."], "tactic": "apply Rmult_le_compat_l.", "exn": "In environment H11 : forall x : R, 0 <= Rabs x H10 : forall x y : R, Rabs (x * y) = Rabs x * Rabs y H7 : forall r r1 r2 : R, 0 <= r -> r1 <= r2 -> r1 * r <= r2 * r H6 : forall r1 r2 r3 : R, (r1 + r2) * r3 = r1 * r3 + r2 * r3 H3 : forall x y : R, Rabs (x - y) = Rabs (y - x) H0 : forall r1 r2 r3 : R, r1 * (r2 - r3) = r1 * r2 - r1 * r3 T : Type F : (T -> Prop) -> Prop f1, f2, g1, g2 : T -> R eps : posreal H1 : F (fun x : T => norm (minus (g1 x) (f1 x)) <= eps * norm (g1 x)) H2 : F (fun x : T => norm (minus (g2 x) (f2 x)) <= eps * norm (g2 x)) filter_true : F (fun _ : T => True) filter_and : forall P Q : T -> Prop, F P -> F Q -> F (fun x : T => P x /\\\\ Q x) filter_imp : forall P Q : T -> Prop, (forall x : T, P x -> Q x) -> F P -> F Q Unable to unify \"?M9412 * ?M9413 < ?M9412 * ?M9414 \\\\/ ?M9412 * ?M9413 = ?M9412 * ?M9414\" with \"F (fun x : T => norm (plus (g1 x * g2 x) (opp (f1 x * f2 x))) <= eps * norm (g1 x * g2 x))\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros T F FF f1 f2 g1 g2 H1 H2.", "unfold is_equiv, is_domin in *.", "intros eps.", "specialize (H1 eps).", "specialize (H2 eps).", "unfold mult, minus.", "qsimpl time: 1 use: Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_mult,Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_mult,Rabs_minus_sym,Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos,Rmult_le_compat_l."], "tactic": "apply Rplus_le_le_0_compat.", "exn": "In environment H13 : forall r r1 r2 : R, 0 <= r -> r1 <= r2 -> r * r1 <= r * r2 H12 : forall x : R, 0 <= Rabs x H9 : forall x y : R, Rabs (x * y) = Rabs x * Rabs y H8 : forall r r1 r2 : R, 0 <= r -> r1 <= r2 -> r1 * r <= r2 * r H5 : forall r1 r2 r3 : R, (r1 + r2) * r3 = r1 * r3 + r2 * r3 H4 : forall x y : R, Rabs (x - y) = Rabs (y - x) H : forall r1 r2 r3 : R, r1 * (r2 - r3) = r1 * r2 - r1 * r3 T : Type F : (T -> Prop) -> Prop f1, f2, g1, g2 : T -> R eps : posreal H1 : F (fun x : T => norm (minus (g1 x) (f1 x)) <= eps * norm (g1 x)) H2 : F (fun x : T => norm (minus (g2 x) (f2 x)) <= eps * norm (g2 x)) filter_true : F (fun _ : T => True) filter_and : forall P Q : T -> Prop, F P -> F Q -> F (fun x : T => P x /\\\\ Q x) filter_imp : forall P Q : T -> Prop, (forall x : T, P x -> Q x) -> F P -> F Q Unable to unify \"0 < ?M9964 + ?M9965 \\\\/ 0 = ?M9964 + ?M9965\" with \"F (fun x : T => norm (plus (g1 x * g2 x) (opp (f1 x * f2 x))) <= eps * norm (g1 x * g2 x))\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros T F FF f1 f2 g1 g2 H1 H2.", "unfold is_equiv, is_domin in *.", "intros eps.", "specialize (H1 eps).", "specialize (H2 eps).", "unfold mult, minus.", "qsimpl time: 1 use: Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_mult,Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_mult,Rabs_minus_sym,Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos,Rmult_le_compat_l.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rplus_le_le_0_compat,Rabs_mult,Rabs_pos,Rmult_le_compat_l."], "tactic": "apply Rabs_pos.", "exn": "In environment H15 : forall r r1 r2 : R, 0 <= r -> r1 <= r2 -> r * r1 <= r * r2 H14 : forall x : R, 0 <= Rabs x H11 : forall x y : R, Rabs (x * y) = Rabs x * Rabs y H10 : forall r1 r2 : R, 0 <= r1 -> 0 <= r2 -> 0 <= r1 + r2 H7 : forall r r1 r2 : R, 0 <= r -> r1 <= r2 -> r1 * r <= r2 * r H6 : forall r1 r2 r3 : R, (r1 + r2) * r3 = r1 * r3 + r2 * r3 H3 : forall x y : R, Rabs (x - y) = Rabs (y - x) H0 : forall r1 r2 r3 : R, r1 * (r2 - r3) = r1 * r2 - r1 * r3 T : Type F : (T -> Prop) -> Prop f1, f2, g1, g2 : T -> R eps : posreal H1 : F (fun x : T => norm (minus (g1 x) (f1 x)) <= eps * norm (g1 x)) H2 : F (fun x : T => norm (minus (g2 x) (f2 x)) <= eps * norm (g2 x)) filter_true : F (fun _ : T => True) filter_and : forall P Q : T -> Prop, F P -> F Q -> F (fun x : T => P x /\\\\ Q x) filter_imp : forall P Q : T -> Prop, (forall x : T, P x -> Q x) -> F P -> F Q Unable to unify \"0 < Rabs ?M10580 \\\\/ 0 = Rabs ?M10580\" with \"F (fun x : T => norm (plus (g1 x * g2 x) (opp (f1 x * f2 x))) <= eps * norm (g1 x * g2 x))\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros T F FF f1 f2 g1 g2 H1 H2.", "unfold is_equiv, is_domin in *.", "intros eps.", "specialize (H1 eps).", "specialize (H2 eps).", "unfold mult, minus.", "qsimpl time: 1 use: Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_mult,Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_mult,Rabs_minus_sym,Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos,Rmult_le_compat_l.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rplus_le_le_0_compat,Rabs_mult,Rabs_pos,Rmult_le_compat_l.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rplus_le_le_0_compat,Rabs_mult,Rabs_pos,Rmult_le_compat_l."], "tactic": "apply Rabs_pos.", "exn": "In environment H16 : forall r r1 r2 : R, 0 <= r -> r1 <= r2 -> r * r1 <= r * r2 H13 : forall x : R, 0 <= Rabs x H12 : forall x y : R, Rabs (x * y) = Rabs x * Rabs y H9 : forall r1 r2 : R, 0 <= r1 -> 0 <= r2 -> 0 <= r1 + r2 H8 : forall r r1 r2 : R, 0 <= r -> r1 <= r2 -> r1 * r <= r2 * r H5 : forall r1 r2 r3 : R, (r1 + r2) * r3 = r1 * r3 + r2 * r3 H4 : forall x y : R, Rabs (x - y) = Rabs (y - x) H : forall r1 r2 r3 : R, r1 * (r2 - r3) = r1 * r2 - r1 * r3 T : Type F : (T -> Prop) -> Prop f1, f2, g1, g2 : T -> R eps : posreal H1 : F (fun x : T => norm (minus (g1 x) (f1 x)) <= eps * norm (g1 x)) H2 : F (fun x : T => norm (minus (g2 x) (f2 x)) <= eps * norm (g2 x)) filter_true : F (fun _ : T => True) filter_and : forall P Q : T -> Prop, F P -> F Q -> F (fun x : T => P x /\\\\ Q x) filter_imp : forall P Q : T -> Prop, (forall x : T, P x -> Q x) -> F P -> F Q Unable to unify \"0 < Rabs ?M11196 \\\\/ 0 = Rabs ?M11196\" with \"F (fun x : T => norm (plus (g1 x * g2 x) (opp (f1 x * f2 x))) <= eps * norm (g1 x * g2 x))\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros T F FF f1 f2 g1 g2 H1 H2.", "unfold is_equiv, is_domin in *.", "intros eps.", "specialize (H1 eps).", "specialize (H2 eps).", "unfold mult, minus.", "qsimpl time: 1 use: Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_mult,Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_mult,Rabs_minus_sym,Rmult_plus_distr_r.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rabs_mult,Rabs_pos,Rmult_le_compat_l.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rplus_le_le_0_compat,Rabs_mult,Rabs_pos,Rmult_le_compat_l.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rplus_le_le_0_compat,Rabs_mult,Rabs_pos,Rmult_le_compat_l.", "qsimpl time: 1 use: Rmult_minus_distr_l,Rabs_minus_sym,Rmult_plus_distr_r,Rmult_le_compat_r,Rplus_le_le_0_compat,Rabs_mult,Rabs_pos,Rmult_le_compat_l."], "tactic": "apply Rabs_triang.", "exn": "In environment H15 : forall r r1 r2 : R, 0 <= r -> r1 <= r2 -> r * r1 <= r * r2 H14 : forall x : R, 0 <= Rabs x H11 : forall x y : R, Rabs (x * y) = Rabs x * Rabs y H10 : forall r1 r2 : R, 0 <= r1 -> 0 <= r2 -> 0 <= r1 + r2 H7 : forall r r1 r2 : R, 0 <= r -> r1 <= r2 -> r1 * r <= r2 * r H6 : forall r1 r2 r3 : R, (r1 + r2) * r3 = r1 * r3 + r2 * r3 H3 : forall x y : R, Rabs (x - y) = Rabs (y - x) H0 : forall r1 r2 r3 : R, r1 * (r2 - r3) = r1 * r2 - r1 * r3 T : Type F : (T -> Prop) -> Prop f1, f2, g1, g2 : T -> R eps : posreal H1 : F (fun x : T => norm (minus (g1 x) (f1 x)) <= eps * norm (g1 x)) H2 : F (fun x : T => norm (minus (g2 x) (f2 x)) <= eps * norm (g2 x)) filter_true : F (fun _ : T => True) filter_and : forall P Q : T -> Prop, F P -> F Q -> F (fun x : T => P x /\\\\ Q x) filter_imp : forall P Q : T -> Prop, (forall x : T, P x -> Q x) -> F P -> F Q Unable to unify \"Rabs (?M11812 + ?M11813) < Rabs ?M11812 + Rabs ?M11813 \\\\/ Rabs (?M11812 + ?M11813) = Rabs ?M11812 + Rabs ?M11813\" with \"F (fun x : T => norm (plus (g1 x * g2 x) (opp (f1 x * f2 x))) <= eps * norm (g1 x * g2 x))\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros T F FF f1 f2 g1 g2 H1 H2. unfold is_equiv, is_domin in *. intros eps. specialize (H1 eps). specialize (H2 eps). intros x. unfold mult, minus. rewrite 2! Rmult_plus_distr_r. rewrite <- Rmult_minus_distr_l. rewrite Rabs_mult. rewrite Rabs_minus_sym. apply Rle_trans with (r2 := eps * (norm (f1 x) + norm (f2 x)) + norm (g1 x) * eps + norm (g2 x) * eps). - repeat apply Rplus_le_compat. + apply Rmult_le_compat_r. * apply Rabs_pos. * apply H1. + apply Rmult_le_compat_r. * apply Rabs_pos. * apply H2. + apply Rmult_le_compat_r. * apply Rabs_pos. * apply H1. + apply Rmult_le_compat_r. * apply Rabs_pos. * apply H2. - repeat rewrite Rmult_plus_distr_l. repeat rewrite Rmult_assoc. repeat apply Rplus_le_compat_r. repeat apply Rplus_le_compat_l. apply Rmult_le_compat_l. + apply Rplus_le_le_0_compat. * apply Rabs_pos. * apply Rabs_pos. + apply Rabs_triang.", "succ": false}]