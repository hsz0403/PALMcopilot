[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": [], "tactic": "rewrite LimSup_seq_opp.", "exn": "The LHS of LimSup_seq_opp (LimSup_seq (fun n : nat => - _ n)) does not match any subterm of the goal", "type": "no_match_term", "handled": true}, {"ctx": ["qsimpl use: LimSup_seq_opp."], "tactic": "rewrite LimInf_seq_const.", "exn": "The LHS of LimInf_seq_const (LimInf_seq (fun _ : nat => _)) does not match any subterm of the goal", "type": "no_match_term", "handled": true}, {"ctx": ["qsimpl use: LimSup_seq_opp.", "qsimpl use: LimSup_seq_opp,LimInf_seq_const."], "tactic": "rewrite Rbar_opp_involutive.", "exn": "The LHS of Rbar_opp_involutive (Rbar_opp (Rbar_opp _)) does not match any subterm of the goal", "type": "no_match_term", "handled": true}, {"ctx": ["qsimpl use: LimSup_seq_opp.", "qsimpl use: LimSup_seq_opp,LimInf_seq_const.", "qsimpl use: LimSup_seq_opp,Rbar_opp_involutive,LimInf_seq_const."], "tactic": "reflexivity.", "exn": "In environment H3 : forall a : R, LimInf_seq (fun _ : nat => a) = a H2 : forall x : Rbar, Rbar_opp (Rbar_opp x) = x H : forall u : nat -> R, LimSup_seq (fun n : nat => - u n) = Rbar_opp (LimInf_seq u) u : nat -> R Unable to unify \"Rbar_opp (LimSup_seq u)\" with \"LimInf_seq (fun n : nat => - u n)\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "rewrite LimSup_seq_opp. rewrite LimInf_seq_const. rewrite Rbar_opp_involutive. reflexivity.", "succ": false}]