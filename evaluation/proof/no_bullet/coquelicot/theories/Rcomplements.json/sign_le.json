[{"history": {"proof": "intros H. unfold sign. destruct (total_order_T 0 x) as [[Hx|Hx]|Hx]; destruct (total_order_T 0 y) as [[Hy|Hy]|Hy]. - assert (Hxy: 0 <= y) by lra. sfirstorder depth: 3. - hecrush use: Rmult_le_0_lt_compat, Rlt_irrefl, Rmult_comm unfold: Rle. - hauto use: Rgt_not_eq, Rle_lt_trans unfold: Rgt, Rle. - srun best use: Rlt_0_1 unfold: Rle. - sfirstorder depth: 3. - hauto use: Rlt_irrefl, Rle_lt_trans unfold: Rgt. - hauto lq: on drew: off use: COS_bound, cos_PI. - hauto use: Rmult_1_r, base_Int_part, Rminus_0_r, Rlt_le_trans unfold: Rle, Rgt. - sfirstorder depth: 3.", "repairs": ["", "", "", "", "", "hammer", "", "hammer", "", "hammer", "", "hammer", "", "hammer", "", "hammer", "", "hammer", "", "hammer", "", "hammer"], "exceptions": []}, "chat": [], "original": "intros H. unfold sign. destruct (total_order_T 0 x) as [[Hx|Hx]|Hx]; destruct (total_order_T 0 y) as [[Hy|Hy]|Hy]. - assert (Hxy: 0 <= y) by lra. assert (Hc1: cos x <= cos y) by (apply cos_incr_1; lra). unfold sign. destruct (total_order_T 0 y) as [[Hy1|Hy1]|Hy1]. + rewrite Hy1. reflexivity. + apply sin_ge_0 in Hy1; [|lra]. exfalso. lra. + apply Rlt_le in H. exfalso. lra. - assert (Hc1: cos x <= cos y) by (apply cos_increasing_1; lra). unfold sign. destruct (total_order_T 0 y) as [[Hy1|Hy1]|Hy1]. + rewrite Hy1. reflexivity. + apply sin_ge_0 in Hy1; [|lra]. exfalso. lra. + apply Rlt_le in H. exfalso. lra. - assert (Hx1: x < 0) by lra. assert (Hc1: cos x <= cos y) by (apply cos_increasing_0; lra). unfold sign. destruct (total_order_T 0 y) as [[Hy1|Hy1]|Hy1]. + rewrite Hy1. reflexivity. + apply sin_ge_0 in Hy1; [|lra]. exfalso. lra. + apply Rlt_le in H. exfalso. lra. - assert (Hy1: y < 0) by lra. assert (Hc1: cos x <= cos y) by (apply cos_increasing_1; lra). unfold sign. destruct (total_order_T 0 y) as [[Hy1'|Hy1']|Hy1']. + rewrite Hy1'. reflexivity. + apply sin_ge_0 in Hy1'; [|lra]. exfalso. lra. + apply Rlt_le in H. exfalso. lra. - assert (Hc1: cos x <= cos y) by (apply cos_incr_1; lra). unfold sign. destruct (total_order_T 0 y) as [[Hy1|Hy1]|Hy1]. + rewrite Hy1. reflexivity. + apply sin_ge_0 in Hy1; [|lra]. exfalso. lra. + apply Rlt_le in H. exfalso. lra. - exfalso. apply Rlt_le in H. lra. - assert (Hc1: cos x <= cos y) by (apply cos_increasing_0; lra). unfold sign. destruct (total_order_T 0 y) as [[Hy1|Hy1]|Hy1]. + rewrite Hy1. reflexivity. + apply sin_ge_0 in Hy1; [|lra]. exfalso. lra. + apply Rlt_le in H. exfalso. lra. - assert (Hy1: y < 0) by lra. assert (Hc1: cos x <= cos y) by (apply cos_increasing_1; lra). unfold sign. destruct (total_order_T 0 y) as [[Hy1'|Hy1']|Hy1']. + rewrite Hy1'. reflexivity. + apply sin_ge_0 in Hy1'; [|lra]. exfalso. lra. + apply Rlt_le in H. exfalso. lra.", "succ": true}]