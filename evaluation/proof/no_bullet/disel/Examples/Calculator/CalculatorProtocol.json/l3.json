[{"history": {"proof": "intros. unfold calcoh, dom in *. intros Hcalcoh. qsimpl.", "repairs": ["", "", "", "cannot_unify"], "exceptions": [{"ctx": ["intros.", "unfold calcoh, dom in *.", "intros Hcalcoh."], "tactic": "apply Hcalcoh.", "exn": "In environment f : input -> option nat prec : input -> bool prec_valid : forall i : input, prec i -> exists v : nat, f i = Some v cs, cls : seq nid Huniq : uniq nodes d : dstatelet H : [/\\\\ soupCoh (dsoup d), UMC.dom_op (UMC.mixin (UMC.class (union_mapUMC [ordType of nid] heap))) (dstate d) =i nodes, valid (dstate d) & forall n : nat_eqType, n \\\\in nodes -> localCoh n (getLocal n d)] Hcalcoh : [ordType of nid] Unable to unify \"Equality.sort [ordType of nid]\" with \"(Hcalcoh \\\\in UMC.dom_op (UMC.mixin (UMC.class (union_mapUMC [ordType of nid] heap))) (dstate d)) = (Hcalcoh \\\\in nodes)\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros. unfold calcoh, dom in *. intros Hcalcoh. apply Hcalcoh.", "succ": true}]