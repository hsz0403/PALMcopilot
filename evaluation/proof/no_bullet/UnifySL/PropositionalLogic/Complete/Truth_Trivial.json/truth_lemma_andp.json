[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": [], "tactic": "intros m Phi rel H.", "exn": "rel is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros m Phi rel' H.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros.", "split.", "-", "intros H1."], "tactic": "apply proj1_sig_eq in rel as Heq.", "exn": "Unable to apply lemma of type \"?u = ?v -> proj1_sig ?u = proj1_sig ?v\" on hypothesis of type \"bijection (Kworlds M) {x : context | cP x}\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["intros.", "split.", "-", "intros H1.", "qsimpl time: 2 use: proj1_sig_eq."], "tactic": "rewrite <- Heq.", "exn": "The reference Heq was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros.", "split.", "-", "intros H1.", "qsimpl time: 2 use: proj1_sig_eq."], "tactic": "apply andp_intros.", "exn": "In environment L : Language minL : MinimumLanguage L pL : PropositionalLanguage L Gamma : Derivable L MD : Model kMD : KripkeModel MD M : Kmodel SM : Semantics L MD cP : context -> Prop rel : bijection (Kworlds M) {x : context | cP x} AL_MC : at_least (maximal consistent) cP x, y : expr m : Kworlds M x2 : context c : cP x2 H : rel m (exist cP x2 c) H1 : KRIPKE: M, m |= x && y x0 : ?A@{Phi:=exist cP x2 c} y0 : ?P@{Phi:=exist cP x2 c} x0 x1 : ?A@{Phi:=exist cP x2 c} y1 : ?P@{Phi:=exist cP x2 c} x1 H0 : exist (fun a : ?A@{Phi:=exist cP x2 c} => ?P@{Phi:=exist cP x2 c} a) x0 y0 = exist (fun a : ?A@{Phi:=exist cP x2 c} => ?P@{Phi:=exist cP x2 c} a) x1 y1 -> x0 = x1 H2 : forall (m : Kworlds M) (Phi : {x : context | cP x}), rel m Phi -> proj1_sig Phi y -> KRIPKE: M, m |= y H3 : forall (m : Kworlds M) (Phi : {x : context | cP x}), rel m Phi -> KRIPKE: M, m |= y -> proj1_sig Phi y H4 : forall (m : Kworlds M) (Phi : {x : context | cP x}), rel m Phi -> proj1_sig Phi x -> KRIPKE: M, m |= x H5 : forall (m : Kworlds M) (Phi : {x : context | cP x}), rel m Phi -> KRIPKE: M, m |= x -> proj1_sig Phi x denote_andp : forall x y : expr, Same_set model (denotation (x && y)) (Semantics.andp (denotation x) (denotation y)) denote_orp : forall x y : expr, Same_set model (denotation (x || y)) (Semantics.orp (denotation x) (denotation y)) H6 : Included model (denotation FF) Semantics.falsep H7 : Included model Semantics.falsep (denotation FF) denote_impp : forall x y : expr, Same_set model (denotation (x --> y)) (Semantics.impp (denotation x) (denotation y)) derivable_excluded_middle : forall (Phi : context) (x : expr), Phi |-- x || ~~ x deduction_andp_intros : forall (Phi : context) (x y : expr), Phi |-- x -> Phi |-- y -> Phi |-- x && y deduction_andp_elim1 : forall (Phi : context) (x y : expr), Phi |-- x && y -> Phi |-- x deduction_andp_elim2 : forall (Phi : context) (x y : expr), Phi |-- x && y -> Phi |-- y deduction_orp_intros1 : forall (Phi : context) (x y : expr), Phi |-- x -> Phi |-- x || y deduction_orp_intros2 : forall (Phi : context) (x y : expr), Phi |-- y -> Phi |-- x || y deduction_orp_elim : forall (Phi : Ensemble expr) (x y z : expr), Phi;; x |-- z -> Phi;; y |-- z -> Phi;; x || y |-- z deduction_falsep_elim : forall (Phi : context) (x : expr), Phi |-- FF -> Phi |-- x deduction_modus_ponens : forall (Phi : context) (x y : expr), Phi |-- x -> Phi |-- x --> y -> Phi |-- y deduction_impp_intros : forall (Phi : Ensemble expr) (x y : expr), Phi;; x |-- y -> Phi |-- x --> y deduction_weaken : forall (Phi Psi : Ensemble expr) (x : expr), Included expr Phi Psi -> Phi |-- x -> Psi |-- x derivable_assum : forall (Phi : Ensemble expr) (x : expr), Ensembles.In expr Phi x -> Phi |-- x deduction_subst : forall (Phi Psi : context) (y : expr), (forall x : expr, Psi x -> Phi |-- x) -> Union expr Phi Psi |-- y -> Phi |-- y Unable to unify \"(let (provable) := ?Gamma in provable) (?M4793 --> ?M4794 --> ?M4793 && ?M4794)\" with \"x2 (x && y)\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros.", "split.", "-", "intros H1.", "qsimpl time: 2 use: proj1_sig_eq.", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "+"], "tactic": "apply IHx with (m:=m) in H1.", "exn": "The reference IHx was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros.", "split.", "-", "intros H1.", "qsimpl time: 2 use: proj1_sig_eq.", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "+"], "tactic": "apply H1.", "exn": "In environment L : Language minL : MinimumLanguage L pL : PropositionalLanguage L Gamma : Derivable L MD : Model kMD : KripkeModel MD M : Kmodel SM : Semantics L MD cP : context -> Prop rel : bijection (Kworlds M) {x : context | cP x} AL_MC : at_least (maximal consistent) cP x, y : expr m : Kworlds M x2 : context c : cP x2 H : rel m (exist cP x2 c) H1 : KRIPKE: M, m |= x && y x0 : ?A@{Phi:=exist cP x2 c} y0 : ?P@{Phi:=exist cP x2 c} x0 x1 : ?A@{Phi:=exist cP x2 c} y1 : ?P@{Phi:=exist cP x2 c} x1 H0 : exist (fun a : ?A@{Phi:=exist cP x2 c} => ?P@{Phi:=exist cP x2 c} a) x0 y0 = exist (fun a : ?A@{Phi:=exist cP x2 c} => ?P@{Phi:=exist cP x2 c} a) x1 y1 -> x0 = x1 H2 : forall (m : Kworlds M) (Phi : {x : context | cP x}), rel m Phi -> proj1_sig Phi y -> KRIPKE: M, m |= y H3 : forall (m : Kworlds M) (Phi : {x : context | cP x}), rel m Phi -> KRIPKE: M, m |= y -> proj1_sig Phi y H4 : forall (m : Kworlds M) (Phi : {x : context | cP x}), rel m Phi -> proj1_sig Phi x -> KRIPKE: M, m |= x H5 : forall (m : Kworlds M) (Phi : {x : context | cP x}), rel m Phi -> KRIPKE: M, m |= x -> proj1_sig Phi x denote_andp : forall x y : expr, Same_set model (denotation (x && y)) (Semantics.andp (denotation x) (denotation y)) denote_orp : forall x y : expr, Same_set model (denotation (x || y)) (Semantics.orp (denotation x) (denotation y)) H6 : Included model (denotation FF) Semantics.falsep H7 : Included model Semantics.falsep (denotation FF) denote_impp : forall x y : expr, Same_set model (denotation (x --> y)) (Semantics.impp (denotation x) (denotation y)) derivable_excluded_middle : forall (Phi : context) (x : expr), Phi |-- x || ~~ x deduction_andp_intros : forall (Phi : context) (x y : expr), Phi |-- x -> Phi |-- y -> Phi |-- x && y deduction_andp_elim1 : forall (Phi : context) (x y : expr), Phi |-- x && y -> Phi |-- x deduction_andp_elim2 : forall (Phi : context) (x y : expr), Phi |-- x && y -> Phi |-- y deduction_orp_intros1 : forall (Phi : context) (x y : expr), Phi |-- x -> Phi |-- x || y deduction_orp_intros2 : forall (Phi : context) (x y : expr), Phi |-- y -> Phi |-- x || y deduction_orp_elim : forall (Phi : Ensemble expr) (x y z : expr), Phi;; x |-- z -> Phi;; y |-- z -> Phi;; x || y |-- z deduction_falsep_elim : forall (Phi : context) (x : expr), Phi |-- FF -> Phi |-- x deduction_modus_ponens : forall (Phi : context) (x y : expr), Phi |-- x -> Phi |-- x --> y -> Phi |-- y deduction_impp_intros : forall (Phi : Ensemble expr) (x y : expr), Phi;; x |-- y -> Phi |-- x --> y deduction_weaken : forall (Phi Psi : Ensemble expr) (x : expr), Included expr Phi Psi -> Phi |-- x -> Psi |-- x derivable_assum : forall (Phi : Ensemble expr) (x : expr), Ensembles.In expr Phi x -> Phi |-- x deduction_subst : forall (Phi Psi : context) (y : expr), (forall x : expr, Psi x -> Phi |-- x) -> Union expr Phi Psi |-- y -> Phi |-- y H9 : ?u0 = ?v0 -> proj1_sig ?u0 = proj1_sig ?v0 H8 : forall x y : expr, |-- x --> y --> x && y Unable to unify \"KRIPKE: M, m |= x && y\" with \"x2 (x && y)\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros.", "split.", "-", "intros H1.", "qsimpl time: 2 use: proj1_sig_eq.", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "+", "qsimpl time: 2 use: andp_intros,proj1_sig_eq."], "tactic": "+", "exn": "Wrong bullet +: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros.", "split.", "-", "intros H1.", "qsimpl time: 2 use: proj1_sig_eq.", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "+", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "+"], "tactic": "apply IHy with (m:=m) in H1.", "exn": "The reference IHy was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros.", "split.", "-", "intros H1.", "qsimpl time: 2 use: proj1_sig_eq.", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "+", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "+"], "tactic": "apply H1.", "exn": "In environment L : Language minL : MinimumLanguage L pL : PropositionalLanguage L Gamma : Derivable L MD : Model kMD : KripkeModel MD M : Kmodel SM : Semantics L MD cP : context -> Prop rel : bijection (Kworlds M) {x : context | cP x} AL_MC : at_least (maximal consistent) cP x, y : expr m : Kworlds M x2 : context c : cP x2 H : rel m (exist cP x2 c) H1 : KRIPKE: M, m |= x && y x0 : ?A@{Phi:=exist cP x2 c} y0 : ?P@{Phi:=exist cP x2 c} x0 x1 : ?A@{Phi:=exist cP x2 c} y1 : ?P@{Phi:=exist cP x2 c} x1 H0 : exist (fun a : ?A@{Phi:=exist cP x2 c} => ?P@{Phi:=exist cP x2 c} a) x0 y0 = exist (fun a : ?A@{Phi:=exist cP x2 c} => ?P@{Phi:=exist cP x2 c} a) x1 y1 -> x0 = x1 H2 : forall (m : Kworlds M) (Phi : {x : context | cP x}), rel m Phi -> proj1_sig Phi y -> KRIPKE: M, m |= y H3 : forall (m : Kworlds M) (Phi : {x : context | cP x}), rel m Phi -> KRIPKE: M, m |= y -> proj1_sig Phi y H4 : forall (m : Kworlds M) (Phi : {x : context | cP x}), rel m Phi -> proj1_sig Phi x -> KRIPKE: M, m |= x H5 : forall (m : Kworlds M) (Phi : {x : context | cP x}), rel m Phi -> KRIPKE: M, m |= x -> proj1_sig Phi x denote_andp : forall x y : expr, Same_set model (denotation (x && y)) (Semantics.andp (denotation x) (denotation y)) denote_orp : forall x y : expr, Same_set model (denotation (x || y)) (Semantics.orp (denotation x) (denotation y)) H6 : Included model (denotation FF) Semantics.falsep H7 : Included model Semantics.falsep (denotation FF) denote_impp : forall x y : expr, Same_set model (denotation (x --> y)) (Semantics.impp (denotation x) (denotation y)) derivable_excluded_middle : forall (Phi : context) (x : expr), Phi |-- x || ~~ x deduction_andp_intros : forall (Phi : context) (x y : expr), Phi |-- x -> Phi |-- y -> Phi |-- x && y deduction_andp_elim1 : forall (Phi : context) (x y : expr), Phi |-- x && y -> Phi |-- x deduction_andp_elim2 : forall (Phi : context) (x y : expr), Phi |-- x && y -> Phi |-- y deduction_orp_intros1 : forall (Phi : context) (x y : expr), Phi |-- x -> Phi |-- x || y deduction_orp_intros2 : forall (Phi : context) (x y : expr), Phi |-- y -> Phi |-- x || y deduction_orp_elim : forall (Phi : Ensemble expr) (x y z : expr), Phi;; x |-- z -> Phi;; y |-- z -> Phi;; x || y |-- z deduction_falsep_elim : forall (Phi : context) (x : expr), Phi |-- FF -> Phi |-- x deduction_modus_ponens : forall (Phi : context) (x y : expr), Phi |-- x -> Phi |-- x --> y -> Phi |-- y deduction_impp_intros : forall (Phi : Ensemble expr) (x y : expr), Phi;; x |-- y -> Phi |-- x --> y deduction_weaken : forall (Phi Psi : Ensemble expr) (x : expr), Included expr Phi Psi -> Phi |-- x -> Psi |-- x derivable_assum : forall (Phi : Ensemble expr) (x : expr), Ensembles.In expr Phi x -> Phi |-- x deduction_subst : forall (Phi Psi : context) (y : expr), (forall x : expr, Psi x -> Phi |-- x) -> Union expr Phi Psi |-- y -> Phi |-- y Unable to unify \"KRIPKE: M, m |= x && y\" with \"MinimumAxiomatization L {| provable := x2 |}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros.", "split.", "-", "intros H1.", "qsimpl time: 2 use: proj1_sig_eq.", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "+", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 2 use: andp_intros,proj1_sig_eq."], "tactic": "-", "exn": "Wrong bullet -: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros.", "split.", "-", "intros H1.", "qsimpl time: 2 use: proj1_sig_eq.", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "+", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve."], "tactic": "-", "exn": "Wrong bullet -: Expecting +.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros.", "split.", "-", "intros H1.", "qsimpl time: 2 use: proj1_sig_eq.", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "+", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "+"], "tactic": "intros H1.", "exn": "H1 is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros.", "split.", "-", "intros H1.", "qsimpl time: 2 use: proj1_sig_eq.", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "+", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "+"], "tactic": "intros H1'.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros.", "split.", "-", "intros H1.", "qsimpl time: 2 use: proj1_sig_eq.", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "+", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "+"], "tactic": "apply proj1_sig_eq in rel as Heq.", "exn": "Unable to apply lemma of type \"?u3 = ?v3 -> proj1_sig ?u3 = proj1_sig ?v3\" on hypothesis of type \"bijection (Kworlds M) {x : context | cP x}\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["intros.", "split.", "-", "intros H1.", "qsimpl time: 2 use: proj1_sig_eq.", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "+", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 2 use: andp_intros,proj1_sig_eq."], "tactic": "rewrite <- Heq in H1.", "exn": "The reference Heq was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros.", "split.", "-", "intros H1.", "qsimpl time: 2 use: proj1_sig_eq.", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "+", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 2 use: andp_intros,proj1_sig_eq."], "tactic": "apply andp_elim1 in H1 as Hx.", "exn": "Unable to apply lemma of type \"forall x3 y2 : expr, |-- x3 && y2 --> x3\" on hypothesis of type \"KRIPKE: M, m |= x && y\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["intros.", "split.", "-", "intros H1.", "qsimpl time: 2 use: proj1_sig_eq.", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "+", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "qsimpl time: 2 use: andp_elim1,andp_intros,proj1_sig_eq."], "tactic": "apply andp_elim2 in H1 as Hy.", "exn": "Unable to apply lemma of type \"forall x3 y2 : expr, |-- x3 && y2 --> y2\" on hypothesis of type \"KRIPKE: M, m |= x && y\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["intros.", "split.", "-", "intros H1.", "qsimpl time: 2 use: proj1_sig_eq.", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "+", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "qsimpl time: 2 use: andp_elim1,andp_intros,proj1_sig_eq.", "qsimpl time: 2 use: andp_elim1,andp_intros,andp_elim2,proj1_sig_eq."], "tactic": "apply andp_intros.", "exn": "In environment L : Language minL : MinimumLanguage L pL : PropositionalLanguage L Gamma : Derivable L MD : Model kMD : KripkeModel MD M : Kmodel SM : Semantics L MD cP : context -> Prop rel : bijection (Kworlds M) {x : context | cP x} AL_MC : at_least (maximal consistent) cP x, y : expr m : Kworlds M x2 : context c : cP x2 H : rel m (exist cP x2 c) H1 : KRIPKE: M, m |= x && y x0 : ?A@{Phi:=exist cP x2 c} y0 : ?P@{Phi:=exist cP x2 c} x0 x1 : ?A@{Phi:=exist cP x2 c} y1 : ?P@{Phi:=exist cP x2 c} x1 H0 : exist (fun a : ?A@{Phi:=exist cP x2 c} => ?P@{Phi:=exist cP x2 c} a) x0 y0 = exist (fun a : ?A@{Phi:=exist cP x2 c} => ?P@{Phi:=exist cP x2 c} a) x1 y1 -> x0 = x1 H2 : forall (m : Kworlds M) (Phi : {x : context | cP x}), rel m Phi -> proj1_sig Phi y -> KRIPKE: M, m |= y H3 : forall (m : Kworlds M) (Phi : {x : context | cP x}), rel m Phi -> KRIPKE: M, m |= y -> proj1_sig Phi y H4 : forall (m : Kworlds M) (Phi : {x : context | cP x}), rel m Phi -> proj1_sig Phi x -> KRIPKE: M, m |= x H5 : forall (m : Kworlds M) (Phi : {x : context | cP x}), rel m Phi -> KRIPKE: M, m |= x -> proj1_sig Phi x denote_andp : forall x y : expr, Same_set model (denotation (x && y)) (Semantics.andp (denotation x) (denotation y)) denote_orp : forall x y : expr, Same_set model (denotation (x || y)) (Semantics.orp (denotation x) (denotation y)) H6 : Included model (denotation FF) Semantics.falsep H7 : Included model Semantics.falsep (denotation FF) denote_impp : forall x y : expr, Same_set model (denotation (x --> y)) (Semantics.impp (denotation x) (denotation y)) derivable_excluded_middle : forall (Phi : context) (x : expr), Phi |-- x || ~~ x deduction_andp_intros : forall (Phi : context) (x y : expr), Phi |-- x -> Phi |-- y -> Phi |-- x && y deduction_andp_elim1 : forall (Phi : context) (x y : expr), Phi |-- x && y -> Phi |-- x deduction_andp_elim2 : forall (Phi : context) (x y : expr), Phi |-- x && y -> Phi |-- y deduction_orp_intros1 : forall (Phi : context) (x y : expr), Phi |-- x -> Phi |-- x || y deduction_orp_intros2 : forall (Phi : context) (x y : expr), Phi |-- y -> Phi |-- x || y deduction_orp_elim : forall (Phi : Ensemble expr) (x y z : expr), Phi;; x |-- z -> Phi;; y |-- z -> Phi;; x || y |-- z deduction_falsep_elim : forall (Phi : context) (x : expr), Phi |-- FF -> Phi |-- x deduction_modus_ponens : forall (Phi : context) (x y : expr), Phi |-- x -> Phi |-- x --> y -> Phi |-- y deduction_impp_intros : forall (Phi : Ensemble expr) (x y : expr), Phi;; x |-- y -> Phi |-- x --> y deduction_weaken : forall (Phi Psi : Ensemble expr) (x : expr), Included expr Phi Psi -> Phi |-- x -> Psi |-- x derivable_assum : forall (Phi : Ensemble expr) (x : expr), Ensembles.In expr Phi x -> Phi |-- x deduction_subst : forall (Phi Psi : context) (y : expr), (forall x : expr, Psi x -> Phi |-- x) -> Union expr Phi Psi |-- y -> Phi |-- y H9 : ?u3 = ?v3 -> proj1_sig ?u3 = proj1_sig ?v3 H8 : forall x y : expr, x2 (x --> y --> x && y) H12 : ?u4 = ?v4 -> proj1_sig ?u4 = proj1_sig ?v4 H10 : forall x y : expr, x2 (x && y --> x) H16 : ?u5 = ?v5 -> proj1_sig ?u5 = proj1_sig ?v5 H15 : forall x y : expr, |-- x && y --> y H14 : forall x y : expr, |-- x --> y --> x && y H13 : forall x y : expr, |-- x && y --> x Unable to unify \"(let (provable) := ?Gamma in provable) (?M112474 --> ?M112475 --> ?M112474 && ?M112475)\" with \"IntuitionisticPropositionalLogic L {| provable := x2 |}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros.", "split.", "-", "intros H1.", "qsimpl time: 2 use: proj1_sig_eq.", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "+", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "qsimpl time: 2 use: andp_elim1,andp_intros,proj1_sig_eq.", "qsimpl time: 2 use: andp_elim1,andp_intros,andp_elim2,proj1_sig_eq.", "qsimpl time: 2 use: andp_elim1,andp_intros,andp_elim2,proj1_sig_eq."], "tactic": "+", "exn": "Wrong bullet +: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros.", "split.", "-", "intros H1.", "qsimpl time: 2 use: proj1_sig_eq.", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "+", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "qsimpl time: 2 use: andp_elim1,andp_intros,proj1_sig_eq.", "qsimpl time: 2 use: andp_elim1,andp_intros,andp_elim2,proj1_sig_eq.", "qsimpl time: 2 use: andp_elim1,andp_intros,andp_elim2,proj1_sig_eq.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "+"], "tactic": "apply IHx with (m:=m) in Hx.", "exn": "No such hypothesis: Hx", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "split.", "-", "intros H1.", "qsimpl time: 2 use: proj1_sig_eq.", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "+", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "qsimpl time: 2 use: andp_elim1,andp_intros,proj1_sig_eq.", "qsimpl time: 2 use: andp_elim1,andp_intros,andp_elim2,proj1_sig_eq.", "qsimpl time: 2 use: andp_elim1,andp_intros,andp_elim2,proj1_sig_eq.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 2 use: andp_elim1,andp_intros,andp_elim2,proj1_sig_eq."], "tactic": "apply Hx.", "exn": "The reference Hx was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros.", "split.", "-", "intros H1.", "qsimpl time: 2 use: proj1_sig_eq.", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "+", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "qsimpl time: 2 use: andp_elim1,andp_intros,proj1_sig_eq.", "qsimpl time: 2 use: andp_elim1,andp_intros,andp_elim2,proj1_sig_eq.", "qsimpl time: 2 use: andp_elim1,andp_intros,andp_elim2,proj1_sig_eq.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 2 use: andp_elim1,andp_intros,andp_elim2,proj1_sig_eq."], "tactic": "+", "exn": "Wrong bullet +: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros.", "split.", "-", "intros H1.", "qsimpl time: 2 use: proj1_sig_eq.", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "+", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "qsimpl time: 2 use: andp_elim1,andp_intros,proj1_sig_eq.", "qsimpl time: 2 use: andp_elim1,andp_intros,andp_elim2,proj1_sig_eq.", "qsimpl time: 2 use: andp_elim1,andp_intros,andp_elim2,proj1_sig_eq.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 2 use: andp_elim1,andp_intros,andp_elim2,proj1_sig_eq.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "+"], "tactic": "apply IHy with (m:=m) in Hy.", "exn": "No such hypothesis: Hy", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "split.", "-", "intros H1.", "qsimpl time: 2 use: proj1_sig_eq.", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "+", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 2 use: andp_intros,proj1_sig_eq.", "qsimpl time: 2 use: andp_elim1,andp_intros,proj1_sig_eq.", "qsimpl time: 2 use: andp_elim1,andp_intros,andp_elim2,proj1_sig_eq.", "qsimpl time: 2 use: andp_elim1,andp_intros,andp_elim2,proj1_sig_eq.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 2 use: andp_elim1,andp_intros,andp_elim2,proj1_sig_eq.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "+", "qsimpl time: 2 use: andp_elim1,andp_intros,andp_elim2,proj1_sig_eq."], "tactic": "apply Hy.", "exn": "The reference Hy was not found in the current environment.", "type": "ref_not_found", "handled": true}]}, "chat": [], "original": "intros m Phi rel H. split. - intros H1. apply proj1_sig_eq in rel as Heq. rewrite <- Heq. apply andp_intros. + apply IHx with (m:=m) in H1. apply H1. + apply IHy with (m:=m) in H1. apply H1. - intros H1. apply proj1_sig_eq in rel as Heq. rewrite <- Heq in H1. apply andp_elim1 in H1 as Hx. apply andp_elim2 in H1 as Hy. apply andp_intros. + apply IHx with (m:=m) in Hx. apply Hx. + apply IHy with (m:=m) in Hy. apply Hy.", "succ": false}]