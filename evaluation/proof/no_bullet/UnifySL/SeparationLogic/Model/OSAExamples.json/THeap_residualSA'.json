[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["apply Build_ResidualSeparationAlgebra."], "tactic": "intros TH TH' H TH_ord.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["apply Build_ResidualSeparationAlgebra.", "intros."], "tactic": "apply (THeap_order'_ind _ _ TH_ord).", "exn": "The reference TH_ord was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["apply Build_ResidualSeparationAlgebra.", "intros."], "tactic": "intros h1 h2 Hn.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["apply Build_ResidualSeparationAlgebra.", "intros."], "tactic": "intros n c Hc.", "exn": "n is already used.", "type": "used_var", "handled": true}, {"ctx": ["apply Build_ResidualSeparationAlgebra.", "intros."], "tactic": "intros n' c Hc.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["apply Build_ResidualSeparationAlgebra.", "intros."], "tactic": "destruct (Hn n c Hc) as [c' [Hc' Hord]].", "exn": "The reference Hn was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["apply Build_ResidualSeparationAlgebra.", "intros."], "tactic": "exists c'.", "exn": "The reference c' was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["apply Build_ResidualSeparationAlgebra.", "intros."], "tactic": "split.", "exn": "Unable to find an instance for the variable x.", "type": "no_instance_var", "handled": true}, {"ctx": ["apply Build_ResidualSeparationAlgebra.", "intros."], "tactic": "apply Hord.", "exn": "The reference Hord was not found in the current environment.", "type": "ref_not_found", "handled": true}]}, "chat": [], "original": "apply Build_ResidualSeparationAlgebra. intros TH TH' H TH_ord. apply (THeap_order'_ind _ _ TH_ord). intros h1 h2 Hn. intros n c Hc. destruct (Hn n c Hc) as [c' [Hc' Hord]]. exists c'. split. auto. apply Hord.", "succ": false}]