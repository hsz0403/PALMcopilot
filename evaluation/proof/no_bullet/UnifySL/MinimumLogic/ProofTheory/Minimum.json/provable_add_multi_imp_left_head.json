[{"history": {"proof": "qsimpl time: 2 use: provable_multi_imp_weaken,multi_imp.", "repairs": ["cannot_unify"], "exceptions": [{"ctx": ["intros xs1 xs2 y."], "tactic": "intros H.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros xs1 xs2 y."], "tactic": "apply provable_multi_imp_weaken with (x := multi_imp xs2 y).", "exn": "In environment L : Language minL : MinimumLanguage L Gamma : Provable L minAX : MinimumAxiomatization L Gamma xs1, xs2 : list expr y : expr Unable to unify \"(let (provable) := Gamma in provable) (multi_imp ?M1963 (multi_imp xs2 y) --> multi_imp ?M1963 ?M1965)\" with \"(let (provable) := Gamma in provable) (multi_imp xs2 y --> multi_imp (xs1 ++ xs2) y)\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros xs1 xs2 y.", "qsimpl time: 2 use: provable_multi_imp_weaken,multi_imp."], "tactic": "apply H.", "exn": "In environment L : Language e : list expr -> expr -> expr minL : MinimumLanguage L Gamma : Provable L H : forall (xs : list expr) (x y : expr), |-- x --> y -> |-- multi_imp xs x --> multi_imp xs y xs1, xs2 : list expr y : expr modus_ponens0 : forall x y : expr, |-- x --> y -> |-- x -> |-- y axiom3 : forall x y : expr, |-- x --> y --> x axiom4 : forall x y z : expr, |-- (x --> y --> z) --> (x --> y) --> x --> z Unable to unify \"(let (provable) := Gamma in provable) (multi_imp ?M2472 ?M2473 --> multi_imp ?M2472 ?M2474)\" with \"(let (provable) := Gamma in provable) (e xs2 y --> e (xs1 ++ xs2) y)\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros xs1 xs2 y. intros H. apply provable_multi_imp_weaken with (x := multi_imp xs2 y). apply H.", "succ": false}]