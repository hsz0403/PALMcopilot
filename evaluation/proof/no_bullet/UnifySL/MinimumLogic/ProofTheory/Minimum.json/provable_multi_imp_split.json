[{"history": {"proof": "qsimpl time: 2 use: provable_multi_imp_weaken.", "repairs": ["cannot_apply_in"], "exceptions": [{"ctx": ["intros Phi1 Phi2 xs y H1 H2.", "pose proof H2 as H2'."], "tactic": "apply provable_multi_imp_weaken in H2.", "exn": "Unable to apply lemma of type \"forall (xs : list expr) (x y : expr), |-- x --> y -> |-- multi_imp xs x --> multi_imp xs y\" on hypothesis of type \"|-- multi_imp xs y\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["intros Phi1 Phi2 xs y H1 H2.", "pose proof H2 as H2'.", "qsimpl time: 2 use: provable_multi_imp_weaken.", "induction H1.", "-"], "tactic": "exists nil, xs.", "exn": "The reference xs was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros Phi1 Phi2 xs y H1 H2.", "pose proof H2 as H2'.", "qsimpl time: 2 use: provable_multi_imp_weaken.", "induction H1.", "-"], "tactic": "constructor.", "exn": "Unable to find an instance for the variable x.", "type": "no_instance_var", "handled": true}, {"ctx": ["intros Phi1 Phi2 xs y H1 H2.", "pose proof H2 as H2'.", "qsimpl time: 2 use: provable_multi_imp_weaken.", "induction H1.", "-"], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros Phi1 Phi2 xs y H1 H2.", "pose proof H2 as H2'.", "qsimpl time: 2 use: provable_multi_imp_weaken.", "induction H1.", "-", "shelve.", "-", "destruct IHForall as [xs1 [xs2 [H3 [H4 H5]]]]."], "tactic": "pose proof H4 as H4'.", "exn": "The reference H4 was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros Phi1 Phi2 xs y H1 H2.", "pose proof H2 as H2'.", "qsimpl time: 2 use: provable_multi_imp_weaken.", "induction H1.", "-", "shelve.", "-", "destruct IHForall as [xs1 [xs2 [H3 [H4 H5]]]].", "pose proof Union_introl as Union_introl'."], "tactic": "apply provable_multi_imp_arg_switch2 in H5.", "exn": "No such hypothesis: H5", "type": "no_hypos", "handled": true}]}, "chat": [], "original": "intros Phi1 Phi2 xs y H1 H2. pose proof H2 as H2'. apply provable_multi_imp_weaken in H2. induction H1. - exists nil, xs. repeat split. + constructor. + auto. + apply deduction_weaken0. auto. - destruct IHForall as [xs1 [xs2 [H3 [H4 H5]]]]. pose proof H4 as H4'. apply provable_multi_imp_arg_switch2 in H5. apply remove_rel in H5. destruct H5. exists (x :: xs1), xs2. repeat split. + constructor; auto. + auto. + apply deduction_impp_intros. apply deduction_weaken1. auto.", "succ": false}]