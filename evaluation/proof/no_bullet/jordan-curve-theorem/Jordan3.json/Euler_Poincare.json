[{"history": {"proof": "intros m H1 H2. assert (H3: inv_hmap m /\\ genus m = 0) by auto. assert (H4: 2*nc m >= ec m) by (apply (genus_theorem m); auto). qblast use: Z.sub_add, Z.add_0_l, Z.two_succ unfold: BinIntDef.Z.div, genus.", "repairs": ["", "", "", "hammer"], "exceptions": [{"ctx": ["intros m H1 H2.", "assert (H3: inv_hmap m /\\ genus m = 0) by auto.", "assert (H4: 2*nc m >= ec m) by (apply (genus_theorem m); auto)."], "tactic": "apply Z.le_antisymm in H4.", "exn": "Unable to apply lemma of type \"forall n m : Z, n <= m -> m <= n -> n = m\" on hypothesis of type \"2 * nc m >= ec m\".", "type": "cannot_apply_in", "handled": true}]}, "chat": [], "original": "intros m H1 H2. assert (H3: inv_hmap m /\\ genus m = 0) by auto. assert (H4: 2*nc m >= ec m) by (apply (genus_theorem m); auto). apply Z.le_antisymm in H4. - rewrite Z.div_wd. + rewrite Z.mul_opp_r. * rewrite <- Z.max_r with (n:=2* nc m) (m:=ec m) in H4. rewrite H4. apply Z.max_l. apply Z.le_le_succ_r. apply Z.div_wd. ++ apply even_ec; auto. ++ reflexivity. * apply Z.le_antisymm; auto. + apply Z.le_ind with (n:= m - ec m/2); auto. * apply (inj_neq (nc m)); auto. * intros. apply Zge_left. auto. - apply Z.le_ind with (n:= ec m); auto. + apply (inj_neq 0); auto. + intros. apply Zle_left. auto.", "succ": true}]