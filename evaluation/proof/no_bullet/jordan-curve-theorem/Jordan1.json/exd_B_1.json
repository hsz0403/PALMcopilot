[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros m k x z.", "split; intro H.", "-", "induction m; simpl in *; try contradiction.", "+"], "tactic": "destruct (eq_dim_dec k0 k); destruct (eq_dart_dec y0 x); try contradiction.", "exn": "The reference k0 was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros m k x z.", "split; intro H.", "-", "induction m; simpl in *; try contradiction.", "+"], "tactic": "apply IHm.", "exn": "In environment m : fmap d : dart t : tag p : point k : dim x, z : dart H : d = z \\\\/ exd m z IHm : exd m z -> exd (B_1 m k x) z Unable to unify \"exd (B_1 m k x) z\" with \"d = z \\\\/ exd (B_1 m k x) z\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros m k x z. split; intro H. - induction m; simpl in *; try contradiction. + destruct (eq_dim_dec k0 k); destruct (eq_dart_dec y0 x); try contradiction. * apply IHm. apply H. * apply IHm. apply H. + destruct (eq_dim_dec k0 k); try apply H. * destruct (eq_dart_dec y z). { rewrite <- a. left. reflexivity. } { right. apply H. } * destruct (eq_dart_dec x0 z). { rewrite <- a. left. reflexivity. } { right. apply H. } - induction m; simpl in *; try contradiction. + destruct (eq_dim_dec k0 k); destruct (eq_dart_dec y x). * rewrite <- a. apply H. * rewrite <- a. apply H. * apply IHm. apply H. * apply IHm. apply H. + destruct (eq_dim_dec k0 k); try apply H. * destruct (eq_dart_dec x z). { rewrite <- a. apply H. } { apply IHm. apply H. } * destruct (eq_dart_dec (cA_1 m k y) z). { rewrite <- a. apply H. } { apply IHm. apply H. }", "succ": false}]