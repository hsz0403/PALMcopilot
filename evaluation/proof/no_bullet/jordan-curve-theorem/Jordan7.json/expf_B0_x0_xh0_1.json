[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros m x H1 H2 H3 H4 H5 H6 H7 H8."], "tactic": ["destruct H3 as [H3 _].", ""], "exn": "Expects a disjunctive pattern with 2 branches.", "type": "num_branch", "handled": false}]}, "chat": [], "original": "intros m x H1 H2 H3 H4 H5 H6 H7 H8. destruct H3 as [H3 _]. unfold cA in H3. unfold cA_1 in H3. unfold bottom in H3. unfold top in H3. unfold cA_1 in H3. unfold expf. split. + apply H4. + destruct H4 as [H9 | [H9 | H9]]. * destruct H9 as [H9a H9b]. left. split. -- auto. -- auto. * destruct H9 as [H9 | [H9 | H9]]. -- destruct H9 as [H9a H9b]. right. left. split. ++ unfold B. unfold succ in H5. destruct (A m zero x) eqn:E. ** apply H5 in E. contradiction. ** unfold succ. apply E. ++ auto. -- destruct H9 as [H9a H9b]. right. right. split. ++ intros contra. apply H1 in contra. contradiction. ++ apply H9b. * destruct H9 as [H9a H9b]. right. left. split. -- destruct H9 as [H9a H9b]. ++ destruct H9a as [H9a1 H9a2]. apply H8 in H9a2. contradiction. ++ auto. -- auto.", "succ": false}]