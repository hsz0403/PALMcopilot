[{"history": {"proof": "intros a b c H. assert(H1: a + b = a + c -> b = c). - intros H2. qsimpl. - apply H1 in H. apply H.", "repairs": ["", "", "", "", "no_subterm", "", "", ""], "exceptions": [{"ctx": ["intros a b c H.", "assert(H1: a + b = a + c -> b = c).", "-", "intros H2."], "tactic": "rewrite <- Nat.add_cancel_l with (n := a) (m := b) (p := c) in H2.", "exn": "Found no subterm matching \"a = b\" in the current goal.", "type": "no_subterm", "handled": true}, {"ctx": ["intros a b c H.", "assert(H1: a + b = a + c -> b = c).", "-", "intros H2.", "qsimpl."], "tactic": "rewrite <- Nat.add_cancel_l with (n := a) (m := c) (p := b) in H2.", "exn": "No such goal. Focus next goal with bullet -.", "type": "next_goal", "handled": true}]}, "chat": [], "original": "intros a b c H. assert(H1: a + b = a + c -> b = c). - intros H2. rewrite <- Nat.add_cancel_l with (n := a) (m := b) (p := c) in H2. rewrite <- Nat.add_cancel_l with (n := a) (m := c) (p := b) in H2. apply H2. - apply H1 in H. apply H.", "succ": true}]