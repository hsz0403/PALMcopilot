[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": [], "tactic": "intros X n R H.", "exn": "X is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros X' n R H.", "exn": "n is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros X' n' R H.", "exn": "R is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros X' n' R' H.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros."], "tactic": "apply pos_reif_t in H as [f Hf].", "exn": "No such hypothesis: H", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "qsimpl use: pos_reif_t."], "tactic": "exists (map f (list_vec_full (pos n))).", "exn": "The reference f was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros.", "qsimpl use: pos_reif_t."], "tactic": "intros p.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros.", "qsimpl use: pos_reif_t."], "tactic": "apply ssrfun.svalP.", "exn": "In environment X1 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X : Type n : nat R : pos n -> X -> Prop X0 : forall p : pos n, {x : X | R p x} Unable to unify \"Type\" with \"Prop\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros.", "qsimpl use: pos_reif_t.", "qsimpl use: pos_reif_t."], "tactic": "pose (p' := Fin.to_nat p).", "exn": "The reference p was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros.", "qsimpl use: pos_reif_t.", "qsimpl use: pos_reif_t."], "tactic": "apply constructive_choice' with (x := p') in Hf as [x Hx].", "exn": "No such hypothesis: Hf", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "qsimpl use: pos_reif_t.", "qsimpl use: pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t."], "tactic": "subst p'.", "exn": "No such hypothesis: p'", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "qsimpl use: pos_reif_t.", "qsimpl use: pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t."], "tactic": "apply Fin.to_nat_inj in Hx.", "exn": "No such hypothesis: Hx", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "qsimpl use: pos_reif_t.", "qsimpl use: pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t."], "tactic": "subst p.", "exn": "No such hypothesis: p", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "qsimpl use: pos_reif_t.", "qsimpl use: pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t."], "tactic": "apply in_vec_dec_inv.", "exn": "In environment X10 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X9 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X8 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X7 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X6 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X5 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X4 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X3 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X2, X1 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X : Type n : nat R : pos n -> X -> Prop X0 : forall p : pos n, {x : X | R p x} X11 : forall (X : Type) (n : nat) (v : vec X n), (forall x y : X, {x = y} + {x <> y}) -> forall x : X, in_vec x v -> pos n Unable to unify \"pos ?M4449\" with \"{v : vec X n | forall p : pos n, R p (vec_pos v p)}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros.", "qsimpl use: pos_reif_t.", "qsimpl use: pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t."], "tactic": "intros x y.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros.", "qsimpl use: pos_reif_t.", "qsimpl use: pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t."], "tactic": "apply constructive_choice with (x := x = y).", "exn": "The reference x was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros.", "qsimpl use: pos_reif_t.", "qsimpl use: pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t."], "tactic": "intros x'.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros.", "qsimpl use: pos_reif_t.", "qsimpl use: pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t."], "tactic": "apply constructive_choice with (x := x = x').", "exn": "The reference x was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros.", "qsimpl use: pos_reif_t.", "qsimpl use: pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t."], "tactic": "intros H.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros.", "qsimpl use: pos_reif_t.", "qsimpl use: pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t."], "tactic": "left.", "exn": "Not an inductive goal with 2 constructors.", "type": "not_inductive_goal", "handled": true}, {"ctx": ["intros.", "qsimpl use: pos_reif_t.", "qsimpl use: pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t."], "tactic": "apply ssrfun.Tagged with (x := x).", "exn": "The reference x was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros.", "qsimpl use: pos_reif_t.", "qsimpl use: pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t."], "tactic": "apply H.", "exn": "The reference H was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros.", "qsimpl use: pos_reif_t.", "qsimpl use: pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t."], "tactic": "intros H.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros.", "qsimpl use: pos_reif_t.", "qsimpl use: pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t."], "tactic": "right.", "exn": "Not an inductive goal with 2 constructors.", "type": "not_inductive_goal", "handled": true}, {"ctx": ["intros.", "qsimpl use: pos_reif_t.", "qsimpl use: pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t."], "tactic": "apply H.", "exn": "The reference H was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros.", "qsimpl use: pos_reif_t.", "qsimpl use: pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t."], "tactic": "apply constructive_choice with (x := forall p0 : pos n, R p0 (f p0)).", "exn": "The reference f was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros.", "qsimpl use: pos_reif_t.", "qsimpl use: pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t."], "tactic": "apply Fin.cast with (n0 := n) in p.", "exn": "No such hypothesis: p", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "qsimpl use: pos_reif_t.", "qsimpl use: pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t."], "tactic": "apply p.", "exn": "The reference p was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros.", "qsimpl use: pos_reif_t.", "qsimpl use: pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t."], "tactic": "apply Fin.to_nat_inj in H.", "exn": "No such hypothesis: H", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "qsimpl use: pos_reif_t.", "qsimpl use: pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t."], "tactic": "apply H.", "exn": "The reference H was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros.", "qsimpl use: pos_reif_t.", "qsimpl use: pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t."], "tactic": "apply fin_t_vec.", "exn": "In environment X25 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X24 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X23 : forall (X : Type) (n : nat) (v : vec X n), (forall x y : X, {x = y} + {x = y -> False}) -> forall x : X, in_vec x v -> {p : pos n | vec_pos v p = x} X22 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X21 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X20 : forall (X : Type) (n : nat) (v : vec X n), (forall x y : X, {x = y} + {x = y -> False}) -> forall x : X, in_vec x v -> {p : pos n | vec_pos v p = x} X19 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X18 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X17 : forall (X : Type) (n : nat) (v : vec X n), (forall x y : X, {x = y} + {x = y -> False}) -> forall x : X, in_vec x v -> {p : pos n | vec_pos v p = x} X16 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X15 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X14 : forall (X : Type) (n : nat) (v : vec X n), (forall x y : X, {x = y} + {x = y -> False}) -> forall x : X, in_vec x v -> {p : pos n | vec_pos v p = x} X13 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X12 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X11 : forall (X : Type) (n : nat) (v : vec X n), (forall x y : X, {x = y} + {x = y -> False}) -> forall x : X, in_vec x v -> {p : pos n | vec_pos v p = x} X10 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X9 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X8 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X7 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X6 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X5 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X4 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X3 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X2, X1 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X : Type n : nat R : pos n -> X -> Prop X0 : forall p : pos n, {x : X | R p x} X26 : forall (X : Type) (P : X -> Prop) (n : nat), fin_t P -> list (vec X n) Unable to unify \"list (vec ?M13080 ?M13082)\" with \"{v : vec X n | forall p : pos n, R p (vec_pos v p)}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros.", "qsimpl use: pos_reif_t.", "qsimpl use: pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,fin_t_vec,constructive_choice',pos_reif_t."], "tactic": "apply H.", "exn": "The reference H was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros.", "qsimpl use: pos_reif_t.", "qsimpl use: pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,fin_t_vec,constructive_choice',pos_reif_t."], "tactic": "apply Forall2_vec_list.", "exn": "Found no subterm matching \"vec_pos ?M15742 ?M15744\" in the current goal.", "type": "no_subterm", "handled": true}, {"ctx": ["intros.", "qsimpl use: pos_reif_t.", "qsimpl use: pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,fin_t_vec,constructive_choice',pos_reif_t.", "qsimpl use: Forall2_vec_list,pos_reif_t,fin_t_vec,constructive_choice',in_vec_dec_inv."], "tactic": "apply Fin.to_nat_inj.", "exn": "In environment X33 : forall (X : Type) (n : nat) (v : vec X n), (forall x y : X, {x = y} + {x = y -> False}) -> forall x : X, in_vec x v -> {p : pos n | vec_pos v p = x} X32 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X31 : forall (X : Type) (P : X -> Prop) (n : nat), fin_t P -> fin_t (fun v : vec X n => forall p : pos n, P (vec_pos v p)) X30, X29 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X28 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X27 : forall (X : Type) (P : X -> Prop) (n : nat), fin_t P -> fin_t (fun v : vec X n => forall p : pos n, P (vec_pos v p)) X26 : forall (X : Type) (n : nat) (v : vec X n), (forall x y : X, {x = y} + {x = y -> False}) -> forall x : X, in_vec x v -> {p : pos n | vec_pos v p = x} X25 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X24 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X23 : forall (X : Type) (n : nat) (v : vec X n), (forall x y : X, {x = y} + {x = y -> False}) -> forall x : X, in_vec x v -> {p : pos n | vec_pos v p = x} X22 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X21 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X20 : forall (X : Type) (n : nat) (v : vec X n), (forall x y : X, {x = y} + {x = y -> False}) -> forall x : X, in_vec x v -> {p : pos n | vec_pos v p = x} X19 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X18 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X17 : forall (X : Type) (n : nat) (v : vec X n), (forall x y : X, {x = y} + {x = y -> False}) -> forall x : X, in_vec x v -> {p : pos n | vec_pos v p = x} X16 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X15 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X14 : forall (X : Type) (n : nat) (v : vec X n), (forall x y : X, {x = y} + {x = y -> False}) -> forall x : X, in_vec x v -> {p : pos n | vec_pos v p = x} X13 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X12 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X11 : forall (X : Type) (n : nat) (v : vec X n), (forall x y : X, {x = y} + {x = y -> False}) -> forall x : X, in_vec x v -> {p : pos n | vec_pos v p = x} X10 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X9 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X8 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X7 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X6 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X5 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X4 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X3 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X2, X1 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X : Type n : nat R : pos n -> X -> Prop X0 : forall p : pos n, {x : X | R p x} H : forall (X Y : Type) (R : X -> Y -> Prop) (n : nat) (v : vec X n) (w : vec Y n), (forall p : pos n, R (vec_pos v p) (vec_pos w p)) -> Forall2 R (vec_list v) (vec_list w) H0 : forall (X Y : Type) (R : X -> Y -> Prop) (n : nat) (v : vec X n) (w : vec Y n), Forall2 R (vec_list v) (vec_list w) -> forall p : pos n, R (vec_pos v p) (vec_pos w p) Unable to unify \"?M18963 = ?M18964\" with \"{v : vec X n | forall p : pos n, R p (vec_pos v p)}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros.", "qsimpl use: pos_reif_t.", "qsimpl use: pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,fin_t_vec,constructive_choice',pos_reif_t.", "qsimpl use: Forall2_vec_list,pos_reif_t,fin_t_vec,constructive_choice',in_vec_dec_inv.", "qsimpl use: Forall2_vec_list,pos_reif_t,fin_t_vec,constructive_choice',in_vec_dec_inv."], "tactic": "apply H.", "exn": "In environment X37 : forall (X : Type) (n : nat) (v : vec X n), (forall x y : X, {x = y} + {x = y -> False}) -> forall x : X, in_vec x v -> {p : pos n | vec_pos v p = x} X36 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X35 : forall (X : Type) (P : X -> Prop) (n : nat), fin_t P -> fin_t (fun v : vec X n => forall p : pos n, P (vec_pos v p)) X34 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X33 : forall (X : Type) (n : nat) (v : vec X n), (forall x y : X, {x = y} + {x = y -> False}) -> forall x : X, in_vec x v -> {p : pos n | vec_pos v p = x} X32 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X31 : forall (X : Type) (P : X -> Prop) (n : nat), fin_t P -> fin_t (fun v : vec X n => forall p : pos n, P (vec_pos v p)) X30, X29 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X28 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X27 : forall (X : Type) (P : X -> Prop) (n : nat), fin_t P -> fin_t (fun v : vec X n => forall p : pos n, P (vec_pos v p)) X26 : forall (X : Type) (n : nat) (v : vec X n), (forall x y : X, {x = y} + {x = y -> False}) -> forall x : X, in_vec x v -> {p : pos n | vec_pos v p = x} X25 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X24 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X23 : forall (X : Type) (n : nat) (v : vec X n), (forall x y : X, {x = y} + {x = y -> False}) -> forall x : X, in_vec x v -> {p : pos n | vec_pos v p = x} X22 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X21 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X20 : forall (X : Type) (n : nat) (v : vec X n), (forall x y : X, {x = y} + {x = y -> False}) -> forall x : X, in_vec x v -> {p : pos n | vec_pos v p = x} X19 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X18 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X17 : forall (X : Type) (n : nat) (v : vec X n), (forall x y : X, {x = y} + {x = y -> False}) -> forall x : X, in_vec x v -> {p : pos n | vec_pos v p = x} X16 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X15 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X14 : forall (X : Type) (n : nat) (v : vec X n), (forall x y : X, {x = y} + {x = y -> False}) -> forall x : X, in_vec x v -> {p : pos n | vec_pos v p = x} X13 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X12 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X11 : forall (X : Type) (n : nat) (v : vec X n), (forall x y : X, {x = y} + {x = y -> False}) -> forall x : X, in_vec x v -> {p : pos n | vec_pos v p = x} X10 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X9 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X8 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X7 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X6 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X5 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X4 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X3 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X2, X1 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X : Type n : nat R : pos n -> X -> Prop X0 : forall p : pos n, {x : X | R p x} H : forall (X Y : Type) (R : X -> Y -> Prop) (n : nat) (v : vec X n) (w : vec Y n), (forall p : pos n, R (vec_pos v p) (vec_pos w p)) -> Forall2 R (vec_list v) (vec_list w) H0 : forall (X Y : Type) (R : X -> Y -> Prop) (n : nat) (v : vec X n) (w : vec Y n), Forall2 R (vec_list v) (vec_list w) -> forall p : pos n, R (vec_pos v p) (vec_pos w p) Unable to unify \"Forall2 ?M22570 (vec_list ?M22572) (vec_list ?M22573)\" with \"{v : vec X n | forall p : pos n, R p (vec_pos v p)}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros.", "qsimpl use: pos_reif_t.", "qsimpl use: pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,fin_t_vec,constructive_choice',pos_reif_t.", "qsimpl use: Forall2_vec_list,pos_reif_t,fin_t_vec,constructive_choice',in_vec_dec_inv.", "qsimpl use: Forall2_vec_list,pos_reif_t,fin_t_vec,constructive_choice',in_vec_dec_inv.", "qsimpl use: Forall2_vec_list,pos_reif_t,fin_t_vec,constructive_choice',in_vec_dec_inv."], "tactic": "apply Fin.to_nat_inj.", "exn": "In environment X41 : forall (X : Type) (n : nat) (v : vec X n), (forall x y : X, {x = y} + {x = y -> False}) -> forall x : X, in_vec x v -> {p : pos n | vec_pos v p = x} X40 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X39 : forall (X : Type) (P : X -> Prop) (n : nat), fin_t P -> fin_t (fun v : vec X n => forall p : pos n, P (vec_pos v p)) X38 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X37 : forall (X : Type) (n : nat) (v : vec X n), (forall x y : X, {x = y} + {x = y -> False}) -> forall x : X, in_vec x v -> {p : pos n | vec_pos v p = x} X36 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X35 : forall (X : Type) (P : X -> Prop) (n : nat), fin_t P -> fin_t (fun v : vec X n => forall p : pos n, P (vec_pos v p)) X34 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X33 : forall (X : Type) (n : nat) (v : vec X n), (forall x y : X, {x = y} + {x = y -> False}) -> forall x : X, in_vec x v -> {p : pos n | vec_pos v p = x} X32 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X31 : forall (X : Type) (P : X -> Prop) (n : nat), fin_t P -> fin_t (fun v : vec X n => forall p : pos n, P (vec_pos v p)) X30, X29 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X28 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X27 : forall (X : Type) (P : X -> Prop) (n : nat), fin_t P -> fin_t (fun v : vec X n => forall p : pos n, P (vec_pos v p)) X26 : forall (X : Type) (n : nat) (v : vec X n), (forall x y : X, {x = y} + {x = y -> False}) -> forall x : X, in_vec x v -> {p : pos n | vec_pos v p = x} X25 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X24 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X23 : forall (X : Type) (n : nat) (v : vec X n), (forall x y : X, {x = y} + {x = y -> False}) -> forall x : X, in_vec x v -> {p : pos n | vec_pos v p = x} X22 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X21 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X20 : forall (X : Type) (n : nat) (v : vec X n), (forall x y : X, {x = y} + {x = y -> False}) -> forall x : X, in_vec x v -> {p : pos n | vec_pos v p = x} X19 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X18 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X17 : forall (X : Type) (n : nat) (v : vec X n), (forall x y : X, {x = y} + {x = y -> False}) -> forall x : X, in_vec x v -> {p : pos n | vec_pos v p = x} X16 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X15 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X14 : forall (X : Type) (n : nat) (v : vec X n), (forall x y : X, {x = y} + {x = y -> False}) -> forall x : X, in_vec x v -> {p : pos n | vec_pos v p = x} X13 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X12 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X11 : forall (X : Type) (n : nat) (v : vec X n), (forall x y : X, {x = y} + {x = y -> False}) -> forall x : X, in_vec x v -> {p : pos n | vec_pos v p = x} X10 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X9 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X8 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X7 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X6 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X5 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X4 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X3 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X2, X1 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X : Type n : nat R : pos n -> X -> Prop X0 : forall p : pos n, {x : X | R p x} H : forall (X Y : Type) (R : X -> Y -> Prop) (n : nat) (v : vec X n) (w : vec Y n), (forall p : pos n, R (vec_pos v p) (vec_pos w p)) -> Forall2 R (vec_list v) (vec_list w) H0 : forall (X Y : Type) (R : X -> Y -> Prop) (n : nat) (v : vec X n) (w : vec Y n), Forall2 R (vec_list v) (vec_list w) -> forall p : pos n, R (vec_pos v p) (vec_pos w p) Unable to unify \"?M26533 = ?M26534\" with \"{v : vec X n | forall p : pos n, R p (vec_pos v p)}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros.", "qsimpl use: pos_reif_t.", "qsimpl use: pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,fin_t_vec,constructive_choice',pos_reif_t.", "qsimpl use: Forall2_vec_list,pos_reif_t,fin_t_vec,constructive_choice',in_vec_dec_inv.", "qsimpl use: Forall2_vec_list,pos_reif_t,fin_t_vec,constructive_choice',in_vec_dec_inv.", "qsimpl use: Forall2_vec_list,pos_reif_t,fin_t_vec,constructive_choice',in_vec_dec_inv.", "qsimpl use: Forall2_vec_list,pos_reif_t,fin_t_vec,constructive_choice',in_vec_dec_inv."], "tactic": "apply H.", "exn": "In environment X45 : forall (X : Type) (n : nat) (v : vec X n), (forall x y : X, {x = y} + {x = y -> False}) -> forall x : X, in_vec x v -> {p : pos n | vec_pos v p = x} X44 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X43 : forall (X : Type) (P : X -> Prop) (n : nat), fin_t P -> fin_t (fun v : vec X n => forall p : pos n, P (vec_pos v p)) X42 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X41 : forall (X : Type) (n : nat) (v : vec X n), (forall x y : X, {x = y} + {x = y -> False}) -> forall x : X, in_vec x v -> {p : pos n | vec_pos v p = x} X40 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X39 : forall (X : Type) (P : X -> Prop) (n : nat), fin_t P -> fin_t (fun v : vec X n => forall p : pos n, P (vec_pos v p)) X38 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X37 : forall (X : Type) (n : nat) (v : vec X n), (forall x y : X, {x = y} + {x = y -> False}) -> forall x : X, in_vec x v -> {p : pos n | vec_pos v p = x} X36 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X35 : forall (X : Type) (P : X -> Prop) (n : nat), fin_t P -> fin_t (fun v : vec X n => forall p : pos n, P (vec_pos v p)) X34 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X33 : forall (X : Type) (n : nat) (v : vec X n), (forall x y : X, {x = y} + {x = y -> False}) -> forall x : X, in_vec x v -> {p : pos n | vec_pos v p = x} X32 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X31 : forall (X : Type) (P : X -> Prop) (n : nat), fin_t P -> fin_t (fun v : vec X n => forall p : pos n, P (vec_pos v p)) X30, X29 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X28 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X27 : forall (X : Type) (P : X -> Prop) (n : nat), fin_t P -> fin_t (fun v : vec X n => forall p : pos n, P (vec_pos v p)) X26 : forall (X : Type) (n : nat) (v : vec X n), (forall x y : X, {x = y} + {x = y -> False}) -> forall x : X, in_vec x v -> {p : pos n | vec_pos v p = x} X25 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X24 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X23 : forall (X : Type) (n : nat) (v : vec X n), (forall x y : X, {x = y} + {x = y -> False}) -> forall x : X, in_vec x v -> {p : pos n | vec_pos v p = x} X22 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X21 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X20 : forall (X : Type) (n : nat) (v : vec X n), (forall x y : X, {x = y} + {x = y -> False}) -> forall x : X, in_vec x v -> {p : pos n | vec_pos v p = x} X19 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X18 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X17 : forall (X : Type) (n : nat) (v : vec X n), (forall x y : X, {x = y} + {x = y -> False}) -> forall x : X, in_vec x v -> {p : pos n | vec_pos v p = x} X16 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X15 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X14 : forall (X : Type) (n : nat) (v : vec X n), (forall x y : X, {x = y} + {x = y -> False}) -> forall x : X, in_vec x v -> {p : pos n | vec_pos v p = x} X13 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X12 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X11 : forall (X : Type) (n : nat) (v : vec X n), (forall x y : X, {x = y} + {x = y -> False}) -> forall x : X, in_vec x v -> {p : pos n | vec_pos v p = x} X10 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X9 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X8 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X7 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X6 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X5 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X4 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X3 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X2, X1 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X : Type n : nat R : pos n -> X -> Prop X0 : forall p : pos n, {x : X | R p x} H : forall (X Y : Type) (R : X -> Y -> Prop) (n : nat) (v : vec X n) (w : vec Y n), (forall p : pos n, R (vec_pos v p) (vec_pos w p)) -> Forall2 R (vec_list v) (vec_list w) H0 : forall (X Y : Type) (R : X -> Y -> Prop) (n : nat) (v : vec X n) (w : vec Y n), Forall2 R (vec_list v) (vec_list w) -> forall p : pos n, R (vec_pos v p) (vec_pos w p) Unable to unify \"Forall2 ?M30860 (vec_list ?M30862) (vec_list ?M30863)\" with \"{v : vec X n | forall p : pos n, R p (vec_pos v p)}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros.", "qsimpl use: pos_reif_t.", "qsimpl use: pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,fin_t_vec,constructive_choice',pos_reif_t.", "qsimpl use: Forall2_vec_list,pos_reif_t,fin_t_vec,constructive_choice',in_vec_dec_inv.", "qsimpl use: Forall2_vec_list,pos_reif_t,fin_t_vec,constructive_choice',in_vec_dec_inv.", "qsimpl use: Forall2_vec_list,pos_reif_t,fin_t_vec,constructive_choice',in_vec_dec_inv.", "qsimpl use: Forall2_vec_list,pos_reif_t,fin_t_vec,constructive_choice',in_vec_dec_inv.", "qsimpl use: Forall2_vec_list,pos_reif_t,fin_t_vec,constructive_choice',in_vec_dec_inv."], "tactic": "apply list_reif_t.", "exn": "Unable to find an instance for the variables X, R, l, x.", "type": "no_instance_var", "handled": true}, {"ctx": ["intros.", "qsimpl use: pos_reif_t.", "qsimpl use: pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,constructive_choice',pos_reif_t.", "qsimpl use: in_vec_dec_inv,fin_t_vec,constructive_choice',pos_reif_t.", "qsimpl use: Forall2_vec_list,pos_reif_t,fin_t_vec,constructive_choice',in_vec_dec_inv.", "qsimpl use: Forall2_vec_list,pos_reif_t,fin_t_vec,constructive_choice',in_vec_dec_inv.", "qsimpl use: Forall2_vec_list,pos_reif_t,fin_t_vec,constructive_choice',in_vec_dec_inv.", "qsimpl use: Forall2_vec_list,pos_reif_t,fin_t_vec,constructive_choice',in_vec_dec_inv.", "qsimpl use: Forall2_vec_list,pos_reif_t,fin_t_vec,constructive_choice',in_vec_dec_inv.", "qsimpl use: Forall2_vec_list,pos_reif_t,fin_t_vec,list_reif_t,constructive_choice',in_vec_dec_inv."], "tactic": "apply H.", "exn": "In environment X54 : forall (X : Type) (n : nat) (v : vec X n), (forall x y : X, {x = y} + {x = y -> False}) -> forall x : X, in_vec x v -> {p : pos n | vec_pos v p = x} X53 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X52 : forall (X Y : Type) (R : X -> Y -> Prop) (l : list X), (forall x : X, In x l -> {x0 : Y | R x x0}) -> {f : forall x : X, In x l -> Y | forall (x : X) (Hx : In x l), R x (f x Hx)} X51 : forall (X : Type) (P : X -> Prop) (n : nat), fin_t P -> fin_t (fun v : vec X n => forall p : pos n, P (vec_pos v p)) X50 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X49 : forall (X : Type) (n : nat) (v : vec X n), (forall x y : X, {x = y} + {x = y -> False}) -> forall x : X, in_vec x v -> {p : pos n | vec_pos v p = x} X48 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X47 : forall (X : Type) (P : X -> Prop) (n : nat), fin_t P -> fin_t (fun v : vec X n => forall p : pos n, P (vec_pos v p)) X46 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X45 : forall (X : Type) (n : nat) (v : vec X n), (forall x y : X, {x = y} + {x = y -> False}) -> forall x : X, in_vec x v -> {p : pos n | vec_pos v p = x} X44 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X43 : forall (X : Type) (P : X -> Prop) (n : nat), fin_t P -> fin_t (fun v : vec X n => forall p : pos n, P (vec_pos v p)) X42 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X41 : forall (X : Type) (n : nat) (v : vec X n), (forall x y : X, {x = y} + {x = y -> False}) -> forall x : X, in_vec x v -> {p : pos n | vec_pos v p = x} X40 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X39 : forall (X : Type) (P : X -> Prop) (n : nat), fin_t P -> fin_t (fun v : vec X n => forall p : pos n, P (vec_pos v p)) X38 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X37 : forall (X : Type) (n : nat) (v : vec X n), (forall x y : X, {x = y} + {x = y -> False}) -> forall x : X, in_vec x v -> {p : pos n | vec_pos v p = x} X36 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X35 : forall (X : Type) (P : X -> Prop) (n : nat), fin_t P -> fin_t (fun v : vec X n => forall p : pos n, P (vec_pos v p)) X34 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X33 : forall (X : Type) (n : nat) (v : vec X n), (forall x y : X, {x = y} + {x = y -> False}) -> forall x : X, in_vec x v -> {p : pos n | vec_pos v p = x} X32 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X31 : forall (X : Type) (P : X -> Prop) (n : nat), fin_t P -> fin_t (fun v : vec X n => forall p : pos n, P (vec_pos v p)) X30, X29 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X28 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X27 : forall (X : Type) (P : X -> Prop) (n : nat), fin_t P -> fin_t (fun v : vec X n => forall p : pos n, P (vec_pos v p)) X26 : forall (X : Type) (n : nat) (v : vec X n), (forall x y : X, {x = y} + {x = y -> False}) -> forall x : X, in_vec x v -> {p : pos n | vec_pos v p = x} X25 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X24 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X23 : forall (X : Type) (n : nat) (v : vec X n), (forall x y : X, {x = y} + {x = y -> False}) -> forall x : X, in_vec x v -> {p : pos n | vec_pos v p = x} X22 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X21 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X20 : forall (X : Type) (n : nat) (v : vec X n), (forall x y : X, {x = y} + {x = y -> False}) -> forall x : X, in_vec x v -> {p : pos n | vec_pos v p = x} X19 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X18 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X17 : forall (X : Type) (n : nat) (v : vec X n), (forall x y : X, {x = y} + {x = y -> False}) -> forall x : X, in_vec x v -> {p : pos n | vec_pos v p = x} X16 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X15 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X14 : forall (X : Type) (n : nat) (v : vec X n), (forall x y : X, {x = y} + {x = y -> False}) -> forall x : X, in_vec x v -> {p : pos n | vec_pos v p = x} X13 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X12 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X11 : forall (X : Type) (n : nat) (v : vec X n), (forall x y : X, {x = y} + {x = y -> False}) -> forall x : X, in_vec x v -> {p : pos n | vec_pos v p = x} X10 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X9 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X8 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X7 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X6 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X5 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X4 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X3 : forall (X Y : Type) (R : X -> Y -> Prop), (forall x : X, {x0 : Y | R x x0}) -> {f : X -> Y | forall x : X, R x (f x)} X2, X1 : forall (X : Type) (n : nat) (R : pos n -> X -> Prop), (forall p : pos n, {x : X | R p x}) -> {f : pos n -> X | forall p : pos n, R p (f p)} X : Type n : nat R : pos n -> X -> Prop X0 : forall p : pos n, {x : X | R p x} H : forall (X Y : Type) (R : X -> Y -> Prop) (n : nat) (v : vec X n) (w : vec Y n), (forall p : pos n, R (vec_pos v p) (vec_pos w p)) -> Forall2 R (vec_list v) (vec_list w) H0 : forall (X Y : Type) (R : X -> Y -> Prop) (n : nat) (v : vec X n) (w : vec Y n), Forall2 R (vec_list v) (vec_list w) -> forall p : pos n, R (vec_pos v p) (vec_pos w p) Unable to unify \"Forall2 ?M40690 (vec_list ?M40692) (vec_list ?M40693)\" with \"{v : vec X n | forall p : pos n, R p (vec_pos v p)}\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros X n R H. apply pos_reif_t in H as [f Hf]. exists (map f (list_vec_full (pos n))). intros p. apply ssrfun.svalP. pose (p' := Fin.to_nat p). apply constructive_choice' with (x := p') in Hf as [x Hx]. subst p'. apply Fin.to_nat_inj in Hx. subst p. apply in_vec_dec_inv. intros x y. apply constructive_choice with (x := x = y). intros x'. apply constructive_choice with (x := x = x'). intros H. left. apply ssrfun.Tagged with (x := x). apply H. intros H. right. apply H. intros. apply constructive_choice with (x := forall p0 : pos n, R p0 (f p0)). intros. apply Fin.cast with (n0 := n) in p. apply p. apply Fin.to_nat_inj in H. apply H. intros. apply fin_t_vec. apply H. apply Forall2_vec_list. intros. apply Fin.to_nat_inj. apply H. apply Fin.to_nat_inj. apply H. apply list_reif_t. apply H.", "succ": false}]