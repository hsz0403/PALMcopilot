[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": [], "tactic": "apply list_bool_choose_sym in s.", "exn": "Unable to apply lemma of type \"forall lb : list bool, {k : nat & {tl : list bool | lb = list_repeat One k ++ Zero :: tl}} + {k : nat | lb = list_repeat One k}\" on hypothesis of type \"list bool\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["qsimpl use: list_bool_choose_sym."], "tactic": "destruct s as [[k [tl H]] | [k H]].", "exn": "H is already used.", "type": "used_var", "handled": true}, {"ctx": ["qsimpl use: list_bool_choose_sym."], "tactic": "destruct s as [[k [tl H']] | [k H]].", "exn": "H is already used.", "type": "used_var", "handled": true}, {"ctx": ["qsimpl use: list_bool_choose_sym."], "tactic": ["destruct s as [[k [tl H']] | [k H'']].", "used_var"], "exn": "Expects a disjunctive pattern with 2 branches.", "type": "num_branch", "handled": false}]}, "chat": [], "original": "apply list_bool_choose_sym in s. destruct s as [[k [tl H]] | [k H]]. - exists (length tl). rewrite H. reflexivity. - exists k. apply H.", "succ": false}]