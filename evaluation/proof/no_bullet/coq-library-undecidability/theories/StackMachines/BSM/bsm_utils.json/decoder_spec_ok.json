[{"history": {"proof": "srun best use: decoder_spec_rec.", "repairs": [], "exceptions": [{"ctx": ["intros."], "tactic": "unfold vec in *.", "exn": "Cannot turn inductive Vector.t into an evaluable reference.", "type": "cannot_turn_ind", "handled": true}, {"ctx": ["intros.", "qsimpl use: vec."], "tactic": "unfold bsm_sss in *.", "exn": "Cannot turn inductive bsm_sss into an evaluable reference.", "type": "cannot_turn_ind", "handled": true}]}, "chat": [], "original": "intros. intros. intros. intros. intros. intros. intros. intros. intros. intros. intros. intros. intros. intros. intros. intros. unfold vec in *. unfold bsm_sss in *. unfold in_bsm_sss_pop_0 in *. intros. inversion H. subst. unfold v_assoc_diff. rewrite <- (vec_eq_inv2 c l v Hcl). rewrite <- (vec_eq_inv2 l h v Hhl). rewrite <- (vec_eq_inv2 h c (v [lc/c][(th ++ v #> h)/h][(tl ++ v #> l)/l]) Hch). auto.", "succ": true}]