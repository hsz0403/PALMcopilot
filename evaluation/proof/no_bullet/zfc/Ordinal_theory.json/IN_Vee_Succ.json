[{"history": {"proof": "intros E X H_ord_E Y H_ord_Y H_INC_Y_E H_INC_X_VeeY. qsimpl time: 1 use: IN_Vee_Succ_EXType. qsimpl time: 1 use: IN_Vee_Succ_EXType. qsimpl time: 1 use: IN_Vee_Succ_EXType. qsimpl time: 1 use: IN_Vee_Succ_EXType. qsimpl time: 1 use: Ord_Succ,IN_Vee_Succ_EXType. apply INC_IN_Vee_Succ; auto. srun best use: mon_Vee unfold: INC.", "repairs": ["", "wrong_type", "not_inductive_product", "cannot_unify", "not_inductive_product", "cannot_unify", "", "hammer"], "exceptions": [{"ctx": ["intros E X H_ord_E Y H_ord_Y H_INC_Y_E H_INC_X_VeeY."], "tactic": "apply (IN_Vee_Succ_EXType E X H_ord_E H_INC_X_VeeY).", "exn": "In environment E, X : Ens H_ord_E : Ord E Y : Ens H_ord_Y : Ord Y H_INC_Y_E : INC Y E H_INC_X_VeeY : INC X (Vee Y) The term \"H_INC_X_VeeY\" has type \"INC X (Vee Y)\" while it is expected to have type \"IN X (Vee (Succ E))\".", "type": "wrong_type", "handled": true}, {"ctx": ["intros E X H_ord_E Y H_ord_Y H_INC_Y_E H_INC_X_VeeY.", "qsimpl time: 1 use: IN_Vee_Succ_EXType."], "tactic": "split.", "exn": "Not an inductive product.", "type": "not_inductive_product", "handled": true}, {"ctx": ["intros E X H_ord_E Y H_ord_Y H_INC_Y_E H_INC_X_VeeY.", "qsimpl time: 1 use: IN_Vee_Succ_EXType.", "qsimpl time: 1 use: IN_Vee_Succ_EXType."], "tactic": "apply H_INC_Y_E.", "exn": "In environment H0 : forall E X : Ens, Ord E -> IN X (Vee (Succ E)) -> EXType Ens (fun Y : Ens => INC Y E /\\\\ Ord Y /\\\\ INC X (Vee Y)) E, X : Ens H_ord_E : Ord E Y : Ens H_ord_Y : Ord Y H_INC_Y_E : INC Y E H_INC_X_VeeY : INC X (Vee Y) Unable to unify \"INC Y E\" with \"IN X (Vee (Succ E))\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros E X H_ord_E Y H_ord_Y H_INC_Y_E H_INC_X_VeeY.", "qsimpl time: 1 use: IN_Vee_Succ_EXType.", "qsimpl time: 1 use: IN_Vee_Succ_EXType.", "qsimpl time: 1 use: IN_Vee_Succ_EXType."], "tactic": "split.", "exn": "Not an inductive product.", "type": "not_inductive_product", "handled": true}, {"ctx": ["intros E X H_ord_E Y H_ord_Y H_INC_Y_E H_INC_X_VeeY.", "qsimpl time: 1 use: IN_Vee_Succ_EXType.", "qsimpl time: 1 use: IN_Vee_Succ_EXType.", "qsimpl time: 1 use: IN_Vee_Succ_EXType.", "qsimpl time: 1 use: IN_Vee_Succ_EXType."], "tactic": "apply Ord_Succ, H_ord_E.", "exn": "In environment H0 : forall E X : Ens, Ord E -> IN X (Vee (Succ E)) -> EXType Ens (fun Y : Ens => INC Y E /\\\\ Ord Y /\\\\ INC X (Vee Y)) E, X : Ens H_ord_E : Ord E Y : Ens H_ord_Y : Ord Y H_INC_Y_E : INC Y E H_INC_X_VeeY : INC X (Vee Y) Unable to unify \"(fix F (e : Ens) : (fun E : Ens => forall E' : Ens, INC E' E -> Prop) e := match e as e0 return ((fun E : Ens => forall E' : Ens, INC E' E -> Prop) e0) with | sup A e0 => (fun (A0 : Type) (f : A0 -> Ens) (HR : forall (a : A0) (E' : Ens), INC E' (f a) -> Prop) (E' : Ens) (_ : INC E' (sup A0 f)) => (forall a : A0, IN (f a) E' -> HR a (f a) (INC_refl (f a))) /\\\\ (forall (a : A0) (e1 : Ens), IN (f a) E' -> forall p : INC e1 (f a), HR a e1 p -> IN e1 E')) A e0 (fun a : A => F (e0 a)) end) (Succ ?M2080) (Succ ?M2080) (INC_refl (Succ ?M2080))\" with \"match Vee (Succ E) with | sup A f => EXType A (fun y : A => EQ X (f y)) end\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros E X H_ord_E Y H_ord_Y H_INC_Y_E H_INC_X_VeeY. apply (IN_Vee_Succ_EXType E X H_ord_E H_INC_X_VeeY). split. - apply H_INC_Y_E. - split. + apply Ord_Succ, H_ord_E. + apply INC_IN_Vee_Succ; auto.", "succ": true}]