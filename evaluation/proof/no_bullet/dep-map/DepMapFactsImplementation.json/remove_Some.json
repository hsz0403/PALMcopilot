[{"history": {"proof": "intros A x y u dom m. split. - intros H1. split. + intros H2. qsimpl time: 1 use: find_dom. hauto use: find_None, S.Dom.remove_spec unfold: S.Dom.elt, S.key. + hauto use: find_None, S.remove_other, S.Dom.remove_spec unfold: S.Dom.elt, S.key. - hauto use: S.remove_other unfold: S.key, S.Dom.elt.", "repairs": ["", "", "", "", "", "", "", "wrong_type", "hammer", "", "hammer", "", "hammer"], "exceptions": [{"ctx": ["intros A x y u dom m.", "split.", "-", "intros H1.", "split.", "+", "intros H2."], "tactic": "apply (find_dom A x u dom m) in H2.", "exn": "In environment A : Type x : Dom.elt y : key u : A dom : Dom.t m : t A dom H1 : find y (remove x m) = Some u H2 : X.eq y x The term \"A\" has type \"Type\" while it is expected to have type \"find ?x ?m = Some ?v\".", "type": "wrong_type", "handled": true}]}, "chat": [], "original": "intros A x y u dom m. split. - intros H1. split. + intros H2. apply (find_dom A x u dom m) in H2. contradiction. + intros H2. apply find_None. intro H3. apply H2. apply find_dom. auto. - intros [H1 H2]. apply (find_None A) in H2. intro H3. apply H2. apply find_dom. auto.", "succ": true}]