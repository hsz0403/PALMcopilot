[{"history": {"proof": "intros m m1 c H. induction m1 as [|a m1' IHm1]. - reflexivity. - simpl. qsimpl time: 1 use: encode_cons_inv. hauto lq: on use: incl_refl, restrict_code_in, incl_tl, in_eq, incl_tran unfold: incl.", "repairs": ["", "", "", "", "", "", "no_subterm", "hammer"], "exceptions": [{"ctx": ["intros m m1 c H.", "induction m1 as [|a m1' IHm1].", "-", "reflexivity.", "-", "simpl."], "tactic": "rewrite encode_cons_inv.", "exn": "Found no subterm matching \"encode ?M1494 ((?M1495, ?M1496) :: ?M1497) ?M1498\" in the current goal.", "type": "no_subterm", "handled": true}]}, "chat": [], "original": "intros m m1 c H. induction m1 as [|a m1' IHm1]. - reflexivity. - simpl. rewrite encode_cons_inv. 2: { intro Contra. apply IHm1. unfold incl in H. intros x Hin. apply H. now constructor 2. } rewrite IHm1. reflexivity. intro Contra. apply H. constructor 1. simpl. auto.", "succ": true}]