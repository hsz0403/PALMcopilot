[{"history": {"proof": "intros a l Hin. apply in_split in Hin. destruct Hin as [l1 [l2 Heq]]. qsimpl. qsimpl use: permutation_trans. qsimpl use: permutation_trans,permutation_skip. qsimpl use: permutation_trans,nil,permutation_skip. hauto lq: on drew: off use: permutation_app_swap, app_comm_cons.", "repairs": ["", "", "", "not_inductive_goal", "cannot_unify", "cannot_unify", "cannot_unify", "hammer"], "exceptions": [{"ctx": ["intros a l Hin.", "apply in_split in Hin.", "destruct Hin as [l1 [l2 Heq]]."], "tactic": "exists l1, l2.", "exn": "Not an inductive goal with 1 constructor.", "type": "not_inductive_goal", "handled": true}, {"ctx": ["intros a l Hin.", "apply in_split in Hin.", "destruct Hin as [l1 [l2 Heq]].", "qsimpl."], "tactic": "apply permutation_trans with (l2 := a :: l1 ++ l2).", "exn": "In environment A : Type a : A l1, l2 : list A Unable to unify \"permutation ?M1573 ?M1575\" with \"exists l3 : list A, permutation (a :: l3) (l1 ++ a :: l2)\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros a l Hin.", "apply in_split in Hin.", "destruct Hin as [l1 [l2 Heq]].", "qsimpl.", "qsimpl use: permutation_trans."], "tactic": "apply permutation_skip.", "exn": "In environment A : Type H : forall l1 l2 l3 : list A, permutation l1 l2 -> permutation l2 l3 -> permutation l1 l3 a : A l1, l2 : list A Unable to unify \"permutation (?M1915 :: ?M1917) (?M1915 :: ?M1916)\" with \"exists l3 : list A, permutation (a :: l3) (l1 ++ a :: l2)\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros a l Hin.", "apply in_split in Hin.", "destruct Hin as [l1 [l2 Heq]].", "qsimpl.", "qsimpl use: permutation_trans.", "qsimpl use: permutation_trans,permutation_skip."], "tactic": "apply permutation_trans with (l2 := a :: nil ++ l1 ++ l2).", "exn": "In environment A : Type H1 : forall (a : A) (l1 l2 : list A), permutation l2 l1 -> permutation (a :: l2) (a :: l1) H0 : forall l1 l2 l3 : list A, permutation l1 l2 -> permutation l2 l3 -> permutation l1 l3 a : A l1, l2 : list A Unable to unify \"permutation ?M2337 ?M2339\" with \"exists l3 : list A, permutation (a :: l3) (l1 ++ a :: l2)\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros a l Hin.", "apply in_split in Hin.", "destruct Hin as [l1 [l2 Heq]].", "qsimpl.", "qsimpl use: permutation_trans.", "qsimpl use: permutation_trans,permutation_skip.", "qsimpl use: permutation_trans,nil,permutation_skip."], "tactic": "apply permutation_swap.", "exn": "In environment A : Type H2 : forall (a : A) (l1 l2 : list A), permutation l2 l1 -> permutation (a :: l2) (a :: l1) H0 : forall l1 l2 l3 : list A, permutation l1 l2 -> permutation l2 l3 -> permutation l1 l3 a : A l1, l2 : list A X : list A Unable to unify \"permutation (?M2789 :: ?M2790 :: ?M2791) (?M2790 :: ?M2789 :: ?M2791)\" with \"exists l3 : list A, permutation (a :: l3) (l1 ++ a :: l2)\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros a l Hin.", "apply in_split in Hin.", "destruct Hin as [l1 [l2 Heq]].", "qsimpl.", "qsimpl use: permutation_trans.", "qsimpl use: permutation_trans,permutation_skip.", "qsimpl use: permutation_trans,nil,permutation_skip.", "qsimpl use: permutation_trans,nil,permutation_swap,permutation_skip."], "tactic": "apply permutation_app_swap.", "exn": "In environment A : Type H3 : forall (a : A) (l1 l2 : list A), permutation l2 l1 -> permutation (a :: l2) (a :: l1) H1 : forall (a b : A) (l : list A), permutation (a :: b :: l) (b :: a :: l) H0 : forall l1 l2 l3 : list A, permutation l1 l2 -> permutation l2 l3 -> permutation l1 l3 a : A l1, l2, X : list A X0 : list A Unable to unify \"permutation (?M3361 ++ ?M3362) (?M3362 ++ ?M3361)\" with \"exists l3 : list A, permutation (a :: l3) (l1 ++ a :: l2)\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros a l Hin.", "apply in_split in Hin.", "destruct Hin as [l1 [l2 Heq]].", "qsimpl.", "qsimpl use: permutation_trans.", "qsimpl use: permutation_trans,permutation_skip.", "qsimpl use: permutation_trans,nil,permutation_skip.", "qsimpl use: permutation_trans,nil,permutation_swap,permutation_skip.", "qsimpl use: permutation_trans,nil,permutation_swap,permutation_app_swap,permutation_skip."], "tactic": "apply permutation_app_swap.", "exn": "In environment A : Type H5 : forall (a : A) (l1 l2 : list A), permutation l2 l1 -> permutation (a :: l2) (a :: l1) H4 : forall l1 l2 : list A, permutation (l1 ++ l2) (l2 ++ l1) H2 : forall (a b : A) (l : list A), permutation (a :: b :: l) (b :: a :: l) H0 : forall l1 l2 l3 : list A, permutation l1 l2 -> permutation l2 l3 -> permutation l1 l3 a : A l1, l2, X, X0 : list A X1 : list A Unable to unify \"permutation (?M3993 ++ ?M3994) (?M3994 ++ ?M3993)\" with \"exists l3 : list A, permutation (a :: l3) (l1 ++ a :: l2)\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros a l Hin. apply in_split in Hin. destruct Hin as [l1 [l2 Heq]]. exists l1, l2. apply permutation_trans with (l2 := a :: l1 ++ l2). - apply permutation_skip. apply permutation_trans with (l2 := a :: nil ++ l1 ++ l2). + apply permutation_swap. + apply permutation_app_swap. - apply permutation_app_swap.", "succ": true}]