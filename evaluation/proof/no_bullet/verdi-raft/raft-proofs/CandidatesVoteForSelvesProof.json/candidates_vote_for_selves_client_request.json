[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["unfold raft_net_invariant_client_request."], "tactic": "intros orig_base_params one_node_params raft_params h net st' ps' out d l client id c H_handleClientRequest H_P H_reachable H_st' H_ps'.", "exn": "orig_base_params is already used.", "type": "used_var", "handled": true}, {"ctx": ["unfold raft_net_invariant_client_request."], "tactic": "intros orig_base_params' one_node_params raft_params h net st' ps' out d l client id c H_handleClientRequest H_P H_reachable H_st' H_ps'.", "exn": "one_node_params is already used.", "type": "used_var", "handled": true}, {"ctx": ["unfold raft_net_invariant_client_request."], "tactic": "intros orig_base_params' one_node_params' raft_params h net st' ps' out d l client id c H_handleClientRequest H_P H_reachable H_st' H_ps'.", "exn": "raft_params is already used.", "type": "used_var", "handled": true}, {"ctx": ["unfold raft_net_invariant_client_request."], "tactic": "intros orig_base_params' one_node_params' raft_params' h net st' ps' out d l client id c H_handleClientRequest H_P H_reachable H_st' H_ps'.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["unfold raft_net_invariant_client_request.", "intros."], "tactic": ["apply candidates_vote_for_selves_invariant with (net:=net); auto.", ""], "exn": "No such bound variable net (possible name is: net0).", "type": "no_such_bound", "handled": false}]}, "chat": [], "original": "unfold raft_net_invariant_client_request. intros orig_base_params one_node_params raft_params h net st' ps' out d l client id c H_handleClientRequest H_P H_reachable H_st' H_ps'. apply candidates_vote_for_selves_invariant with (net:=net); auto.", "succ": false}]