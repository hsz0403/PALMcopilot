[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["unfold refined_raft_net_invariant_state_same_packet_subset; intros; intros; intros; intros; unfold append_entries_leaderLogs in *; intros; intros; intros; intros; intros; intros."], "tactic": "specialize (H0 p t n pli plt es ci H H1).", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params lhllsi : leaders_have_leaderLogs_strong_interface rri : raft_refinement_interface si : sorted_interface lmi : log_matching_interface nisi : nextIndex_safety_interface net, net' : network H : forall h : Net.name, nwState net h = nwState net' h H0 : forall p : packet, In p (nwPackets net') -> In p (nwPackets net) H1 : forall (p : packet) (t : term) (n : name) (pli : logIndex) (plt : term) (es : list entry) (ci : logIndex), In p (nwPackets net) -> pBody p = AppendEntries t n pli plt es ci -> exists (h : Net.name) (ll es' ll' : list entry), es = es' ++ ll' /\\\\ (forall e : entry, In e es' -> eTerm e = t) /\\\\ In (t, ll) (leaderLogs (fst (nwState net h))) /\\\\ Prefix ll' ll /\\\\ (plt = t /\\\\ pli > maxIndex ll \\\\/ (exists e : entry, In e ll /\\\\ eIndex e = pli /\\\\ eTerm e = plt /\\\\ Prefix_sane ll' ll pli) \\\\/ plt = 0 /\\\\ pli = 0 /\\\\ ll' = ll) H2 : refined_raft_intermediate_reachable net p : packet t : term n : name pli : logIndex plt : term es : list entry ci : logIndex H3 : In p (nwPackets net') H4 : pBody p = AppendEntries t n pli plt es ci The term \"t\" has type \"term\" while it is expected to have type \"In p (nwPackets net')\".", "type": "wrong_type", "handled": true}]}, "chat": [], "original": "unfold refined_raft_net_invariant_state_same_packet_subset; intros; intros; intros; intros; unfold append_entries_leaderLogs in *; intros; intros; intros; intros; intros; intros. unfold append_entries_leaderLogs in *. intros. specialize (H0 p t n pli plt es ci H H1).", "succ": false}]