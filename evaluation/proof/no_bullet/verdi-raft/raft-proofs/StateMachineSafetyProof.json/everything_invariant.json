[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros net H."], "tactic": ["destruct H as [H_init | H_failure].", ""], "exn": "Expects a disjunctive pattern with 6 branches.", "type": "num_branch", "handled": false}]}, "chat": [], "original": "intros net H. destruct H as [H_init | H_failure]. - unfold msg_refined_raft_intermediate_reachable, msg_refined_raft_net_invariant_init in H_init. destruct H_init as [H_init' H_init'']. unfold lifted_maxIndex_sanity, commit_invariant, state_machine_safety, deghost, mgv_deghost, everything. split; auto. - inversion H_failure as [failed net failed' net' out H_mrrir H_sf]; subst. unfold msg_refined_raft_intermediate_reachable in H_mrrir. assert (H := msg_simulation_1 net H_mrrir). apply (msg_lower_prop_all_the_way everything) in H. apply H.", "succ": false}]