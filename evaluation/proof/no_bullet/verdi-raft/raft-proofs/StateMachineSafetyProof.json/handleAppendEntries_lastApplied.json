[{"history": {"proof": "intros h st t n pli plt es ci st' m H. symmetry in H. destruct (handleAppendEntries _ _ _ _ _ _ _ _) as [st'' ps] eqn:Heq. apply handleAppendEntries_same_lastApplied in Heq. rewrite <- Heq. qsimpl time: 1 use: handleAppendEntries_logs_sorted.", "repairs": ["", "", "", "", "", "cannot_apply_in"], "exceptions": [{"ctx": ["intros h st t n pli plt es ci st' m H.", "symmetry in H.", "destruct (handleAppendEntries _ _ _ _ _ _ _ _) as [st'' ps] eqn:Heq.", "apply handleAppendEntries_same_lastApplied in Heq.", "rewrite <- Heq."], "tactic": "apply handleAppendEntries_logs_sorted in Heq; try auto.", "exn": "Unable to apply lemma of type \"forall (net : network) (p : packet) (t0 : term) (n0 : name) (pli0 : logIndex) (plt0 : term) (es0 : list entry) (ci0 : logIndex) (st'0 : raft_data) (m0 : msg), raft_intermediate_reachable net -> logs_sorted net -> handleAppendEntries (pDst p) (nwState net (pDst p)) t0 n0 pli0 plt0 es0 ci0 = (st'0, m0) -> pBody p = AppendEntries t0 n0 pli0 plt0 es0 ci0 -> In p (nwPackets net) -> sorted (log st'0)\" on hypothesis of type \"lastApplied st'' = lastApplied st\".", "type": "cannot_apply_in", "handled": true}]}, "chat": [], "original": "intros h st t n pli plt es ci st' m H. symmetry in H. destruct (handleAppendEntries _ _ _ _ _ _ _ _) as [st'' ps] eqn:Heq. apply handleAppendEntries_same_lastApplied in Heq. rewrite <- Heq. apply handleAppendEntries_logs_sorted in Heq; try auto. apply handleAppendEntriesReply_same_lastApplied in H. auto.", "succ": true}]