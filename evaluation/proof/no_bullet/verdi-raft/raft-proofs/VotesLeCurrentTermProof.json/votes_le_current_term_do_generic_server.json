[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": [], "tactic": "intros orig_base_params one_node_params raft_params rri net h t n Hin.", "exn": "orig_base_params is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params raft_params rri net h t n Hin.", "exn": "one_node_params is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params rri net h t n Hin.", "exn": "raft_params is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params' rri net h t n Hin.", "exn": "rri is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros orig_base_params' one_node_params' raft_params' rri' net h t n Hin."], "tactic": "apply (votes_le_current_term_invariant orig_base_params one_node_params raft_params net h t n).", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params rri : raft_refinement_interface orig_base_params' : network one_node_params' : name -> data raft_params' : list packet rri' : GhostSimulations.ghost_data net : raft_data h : list raft_output t : raft_data n : list (name * msg) Hin : name The term \"orig_base_params\" has type \"BaseParams\" while it is expected to have type \"network\".", "type": "wrong_type", "handled": true}, {"ctx": ["intros orig_base_params' one_node_params' raft_params' rri' net h t n Hin.", "qsimpl use: votes_le_current_term_invariant."], "tactic": "apply Hin.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params rri : raft_refinement_interface orig_base_params' : network one_node_params' : name -> electionsData * raft_data raft_params' : list packet rri' : electionsData net : raft_data h : list raft_output t : raft_data n : list (name * msg) Hin : name H : forall net : network, refined_raft_intermediate_reachable net -> votes_le_currentTerm net H0 : doGenericServer Hin net = (h, t, n) H1 : votes_le_currentTerm orig_base_params' H2 : refined_raft_intermediate_reachable orig_base_params' H3 : nwState orig_base_params' Hin = (rri', net) H4 : forall h' : name, one_node_params' h' = update name_eq_dec (nwState orig_base_params') Hin (rri', t) h' H5 : forall p : packet, In p raft_params' -> In p (nwPackets orig_base_params') \\\\/ In p (map (fun m : name * msg => {| pSrc := Hin; pDst := fst m; pBody := snd m |}) n) Unable to unify \"name\" with \"votes_le_currentTerm {| nwPackets := raft_params'; nwState := one_node_params' |}\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros orig_base_params one_node_params raft_params rri net h t n Hin. apply (votes_le_current_term_invariant orig_base_params one_node_params raft_params net h t n). apply Hin.", "succ": false}]