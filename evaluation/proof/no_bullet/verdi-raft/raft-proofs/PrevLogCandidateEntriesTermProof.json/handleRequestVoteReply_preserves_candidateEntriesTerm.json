[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros net h h' t r st' t' Hhandle_refine Hrefined HcandidateEntriesTerm."], "tactic": "apply (votes_update_elections_data_request_vote_reply h (nwState net h) h' t r st' t' h).", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params rri : raft_refinement_interface cei : candidate_entries_interface cti : cronies_term_interface cci : cronies_correct_interface net : network h, h' : name t : nat r : bool st' : raft_data t' : term Hhandle_refine : handleRequestVoteReply h (snd (nwState net h)) h' t r = st' Hrefined : refined_raft_intermediate_reachable net HcandidateEntriesTerm : candidateEntriesTerm t' (nwState net) Unable to unify \"In (t', h) (votes (fst (nwState net h)))\" with \"candidateEntriesTerm t' (update name_eq_dec (nwState net) h (update_elections_data_requestVoteReply h h' t r (nwState net h), st'))\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros net h h' t r st' t' Hhandle_refine Hrefined HcandidateEntriesTerm.", "qsimpl use: votes_update_elections_data_request_vote_reply,nwState."], "tactic": "apply Hhandle_refine.", "exn": "The reference Hhandle_refine was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros net h h' t r st' t' Hhandle_refine Hrefined HcandidateEntriesTerm.", "qsimpl use: votes_update_elections_data_request_vote_reply,nwState."], "tactic": "apply Hrefined.", "exn": "In environment orig_base_params : BaseParams raft_params : RaftParams orig_base_params one_node_params : OneNodeParams orig_base_params d : network -> name -> electionsData * raft_data H : forall (h : name) (st : electionsData * RaftState.raft_data term name entry logIndex serverType data clientId output) (src : name) (t : nat) (r : bool) (st' : raft_data) (t' : term) (h' : name), handleRequestVoteReply h (snd st) src t r = st' -> In (t', h') (votes (update_elections_data_requestVoteReply h src t r st)) -> In (t', h') (votes (fst st)) net : network h, h' : name t : nat r : bool t' : term Hrefined : refined_raft_intermediate_reachable net x : name H1 : wonElection (dedup name_eq_dec (cronies (fst (nwState net x)) t')) = true H2 : currentTerm (snd (nwState net x)) = t' -> type (snd (nwState net x)) = Candidate -> False cronies_correct_invariant : forall net : network, refined_raft_intermediate_reachable net -> cronies_correct net cronies_term_invariant : forall net : network, refined_raft_intermediate_reachable net -> cronies_term net candidate_entries_invariant : forall net : network, refined_raft_intermediate_reachable net -> CandidateEntries net refined_raft_net_invariant : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request P -> refined_raft_net_invariant_timeout P -> refined_raft_net_invariant_append_entries P -> refined_raft_net_invariant_append_entries_reply P -> refined_raft_net_invariant_request_vote P -> refined_raft_net_invariant_request_vote_reply P -> refined_raft_net_invariant_do_leader P -> refined_raft_net_invariant_do_generic_server P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot P -> refined_raft_intermediate_reachable net -> P net refined_raft_net_invariant' : forall (P : network -> Prop) (net : network), refined_raft_net_invariant_init P -> refined_raft_net_invariant_client_request' P -> refined_raft_net_invariant_timeout' P -> refined_raft_net_invariant_append_entries' P -> refined_raft_net_invariant_append_entries_reply' P -> refined_raft_net_invariant_request_vote' P -> refined_raft_net_invariant_request_vote_reply' P -> refined_raft_net_invariant_do_leader' P -> refined_raft_net_invariant_do_generic_server' P -> refined_raft_net_invariant_state_same_packet_subset P -> refined_raft_net_invariant_reboot' P -> refined_raft_intermediate_reachable net -> P net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (GhostSimulations.deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (GhostSimulations.deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : name), match net with | {| nwState := nwState |} => let (_, d) := nwState h in d end = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (GhostSimulations.deghost net) Unable to unify \"refined_raft_intermediate_reachable net\" with \"candidateEntriesTerm t' (update name_eq_dec (d net) h (update_elections_data_requestVoteReply h h' t r (d net h), handleRequestVoteReply h (snd (nwState net h)) h' t r))\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros net h h' t r st' t' Hhandle_refine Hrefined HcandidateEntriesTerm.", "qsimpl use: votes_update_elections_data_request_vote_reply,nwState.", "qsimpl use: votes_update_elections_data_request_vote_reply,nwState."], "tactic": "apply HcandidateEntriesTerm.", "exn": "The reference HcandidateEntriesTerm was not found in the current environment.", "type": "ref_not_found", "handled": true}]}, "chat": [], "original": "intros net h h' t r st' t' Hhandle_refine Hrefined HcandidateEntriesTerm. apply (votes_update_elections_data_request_vote_reply h (nwState net h) h' t r st' t' h). - apply Hhandle_refine. - apply Hrefined. - apply HcandidateEntriesTerm.", "succ": false}]