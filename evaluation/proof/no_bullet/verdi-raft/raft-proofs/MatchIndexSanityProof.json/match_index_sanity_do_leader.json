[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": [], "tactic": "intros orig_base_params one_node_params raft_params aersi si net leader h H_type H_assoc.", "exn": "orig_base_params is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params raft_params aersi si net leader h H_type H_assoc.", "exn": "one_node_params is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params aersi si net leader h H_type H_assoc.", "exn": "raft_params is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params' aersi si net leader h H_type H_assoc.", "exn": "aersi is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params' aersi' si net leader h H_type H_assoc.", "exn": "si is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros orig_base_params' one_node_params' raft_params' aersi' si'' net leader h H_type H_assoc.", "unfold match_index_sanity.", "intros h' H_type'.", "simpl in *."], "tactic": "rewrite H_assoc in H_type'.", "exn": "Found no subterm matching \"assoc_default name_eq_dec (matchIndex (nwState orig_base_params' ?n)) ?n0 0\" in the current goal.", "type": "no_subterm", "handled": true}, {"ctx": ["intros orig_base_params' one_node_params' raft_params' aersi' si'' net leader h H_type H_assoc.", "unfold match_index_sanity.", "intros h' H_type'.", "simpl in *.", "qsimpl."], "tactic": "apply Peano.le_trans with (m := maxIndex (log (nwState net leader))).", "exn": "The reference Peano.le_trans was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros orig_base_params' one_node_params' raft_params' aersi' si'' net leader h H_type H_assoc.", "unfold match_index_sanity.", "intros h' H_type'.", "simpl in *.", "qsimpl."], "tactic": "apply assoc_default_in; auto.", "exn": "The reference assoc_default_in was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros orig_base_params' one_node_params' raft_params' aersi' si'' net leader h H_type H_assoc.", "unfold match_index_sanity.", "intros h' H_type'.", "simpl in *.", "qsimpl."], "tactic": "apply le_maxIndex_assoc_default with (st := nwState net leader); auto.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params orig_base_params' : network one_node_params' : name -> raft_data raft_params' : list packet si'' : name net : list raft_output leader : raft_data h : list (name * msg) H_type : doLeader (nwState orig_base_params' si'') si'' = (net, leader, h) H_assoc : match_index_sanity orig_base_params' h' : raft_intermediate_reachable orig_base_params' H : forall h' : name, one_node_params' h' = update name_eq_dec (nwState orig_base_params') si'' leader h' H0 : forall p : packet, In p raft_params' -> In p (nwPackets orig_base_params') \\\\/ In p (map (fun m : name * msg => {| pSrc := si''; pDst := fst m; pBody := snd m |}) h) leader0, h0 : name H1 : type (one_node_params' leader0) = Leader handleAppendEntries_logs_sorted : forall (net : network) (p : packet) (t : term) (n : name) (pli : logIndex) (plt : term) (es : list entry) (ci : logIndex) (st' : raft_data) (m : msg), raft_intermediate_reachable net -> logs_sorted net -> handleAppendEntries (pDst p) (nwState net (pDst p)) t n pli plt es ci = (st', m) -> pBody p = AppendEntries t n pli plt es ci -> In p (nwPackets net) -> sorted (log st') handleClientRequest_logs_sorted : forall (h : name) (client : clientId) (id : nat) (c : input) (out : list raft_output) (st : raft_data) (l : list (name * msg)) (net : network), handleClientRequest h (nwState net h) client id c = (out, st, l) -> raft_intermediate_reachable net -> logs_sorted_host net -> sorted (log st) logs_sorted_invariant : forall net : network, raft_intermediate_reachable net -> logs_sorted net append_entries_reply_sublog_invariant : forall net : network, raft_intermediate_reachable net -> append_entries_reply_sublog net The term \"net\" has type \"list raft_output\" while it is expected to have type \"network\".", "type": "wrong_type", "handled": true}]}, "chat": [], "original": "intros orig_base_params one_node_params raft_params aersi si net leader h H_type H_assoc. unfold match_index_sanity. intros h' H_type'. simpl in *. rewrite H_assoc in H_type'. apply Peano.le_trans with (m := maxIndex (log (nwState net leader))). apply assoc_default_in; auto. apply le_maxIndex_assoc_default with (st := nwState net leader); auto.", "succ": false}]