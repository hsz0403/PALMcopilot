[{"history": {"proof": "unfold refined_raft_net_invariant_state_same_packet_subset. intros. unfold leaderLogs_votesWithLog in *. intros. hauto b: on.", "repairs": ["", "", "", "", "hammer"], "exceptions": [{"ctx": ["unfold refined_raft_net_invariant_state_same_packet_subset.", "intros.", "unfold leaderLogs_votesWithLog in *.", "intros."], "tactic": "apply H in H0 as Hquot.", "exn": "Unable to apply lemma of type \"forall h : Net.name, nwState net h = nwState net' h\" on hypothesis of type \"forall p : packet, In p (nwPackets net') -> In p (nwPackets net)\".", "type": "cannot_apply_in", "handled": true}]}, "chat": [], "original": "intros. unfold refined_raft_net_invariant_state_same_packet_subset. intros. unfold leaderLogs_votesWithLog in *. intros. apply H in H0 as Hquot. destruct Hquot as [quorum [Hnodup [Hlength Hvotes]]]. exists quorum. split; [apply Hnodup|]. split; [apply Hlength|]. intros. apply Hvotes in H1 as Hexists. destruct Hexists as [log [Hmoreup Hvoteswithlog]]. exists log. split; [apply Hmoreup|]. apply in_map_iff in Hvoteswithlog. destruct Hvoteswithlog as [[tt hh] [Heq Hin]]. rewrite <- Heq. apply in_map. apply Hin.", "succ": true}]