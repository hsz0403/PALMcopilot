[{"history": {"proof": "intros h st src t v st' Hhandle Htype. unfold handleRequestVoteReply in Hhandle. destruct (currentTerm st <? t) eqn:Heq1. - inversion Hhandle. scongruence depth: 3. - hauto q: on depth: 3.", "repairs": ["", "", "", "", "", "hammer", "", "hammer"], "exceptions": []}, "chat": [], "original": "intros h st src t v st' Hhandle Htype. unfold handleRequestVoteReply in Hhandle. destruct (currentTerm st <? t) eqn:Heq1. - inversion Hhandle. - destruct (t <? currentTerm st) eqn:Heq2. + inversion Hhandle. + destruct (v && wonElection (dedup name_eq_dec (src :: votesReceived st))) eqn:Heq3; try discriminate. destruct (type st) eqn:Heq4; try discriminate. * injection Htype as Heq5 Heq6. left. reflexivity. * injection Htype as Heq5 Heq6. right. split. reflexivity. split. eapply Heq6. reflexivity.", "succ": true}]