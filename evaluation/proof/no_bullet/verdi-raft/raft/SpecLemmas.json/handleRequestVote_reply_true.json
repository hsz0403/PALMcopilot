[{"history": {"proof": "intros h h' st t lli llt st' t' H. unfold handleRequestVote in H. destruct (t <? currentTerm st) eqn:H1. - inversion H. - destruct (advanceCurrentTerm st t) eqn:H2. inversion H. split. + hauto q: on depth: 3use: moreUpToDate, maxIndex, maxTerm. + hauto lq: on depth: 3use: moreUpToDate, maxIndex, maxTerm.", "repairs": ["", "", "", "", "", "", "", "", "transform_curly", "", "hammer", "", "hammer"], "exceptions": [{"ctx": ["intros h h' st t lli llt st' t' H.", "unfold handleRequestVote in H.", "destruct (t <? currentTerm st) eqn:H1.", "-", "inversion H.", "-", "destruct (advanceCurrentTerm st t) eqn:H2."], "tactic": "destruct (leaderId r) eqn:H3.", "exn": "The reference r was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros h h' st t lli llt st' t' H.", "unfold handleRequestVote in H.", "destruct (t <? currentTerm st) eqn:H1.", "-", "inversion H.", "-", "destruct (advanceCurrentTerm st t) eqn:H2."], "tactic": "destruct (votedFor r) eqn:H4.", "exn": "The reference r was not found in the current environment.", "type": "ref_not_found", "handled": true}]}, "chat": [], "original": "intros h h' st t lli llt st' t' H. unfold handleRequestVote in H. destruct (t <? currentTerm st) eqn:H1. - inversion H. - destruct (advanceCurrentTerm st t) eqn:H2. + destruct (leaderId r) eqn:H3. * destruct (votedFor r) eqn:H4. { inversion H. subst. split. - reflexivity. - apply H4. } { inversion H. } * destruct (moreUpToDate llt lli (maxTerm (log r)) (maxIndex (log r))) eqn:H5. { destruct (votedFor r) eqn:H4. - inversion H. subst. split. + reflexivity. + apply H4. - inversion H. } { inversion H. } + inversion H.", "succ": true}]