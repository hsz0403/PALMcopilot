[{"history": {"proof": "intros h st t c li lt0 st' m H. unfold handleRequestVote in H. unfold advanceCurrentTerm in H. destruct (t <? currentTerm st) eqn:Heq. - inversion H. sfirstorder depth: 3. - hauto q: on depth: 3.", "repairs": ["", "", "", "", "", "", "hammer", "", "hammer"], "exceptions": [{"ctx": ["intros h st t c li lt0 st' m H.", "unfold handleRequestVote in H.", "unfold advanceCurrentTerm in H.", "destruct (t <? currentTerm st) eqn:Heq.", "-", "inversion H.", "left.", "apply Nat.ltb_lt in Heq."], "tactic": "lia.", "exn": "The reference lia was not found in the current environment.", "type": "ref_not_found", "handled": true}]}, "chat": [], "original": "intros h st t c li lt0 st' m H. unfold handleRequestVote in H. unfold advanceCurrentTerm in H. destruct (t <? currentTerm st) eqn:Heq. - inversion H. left. apply Nat.ltb_lt in Heq. lia. - destruct (leaderId st); destruct (negb _); try discriminate. destruct (votedFor st) eqn:Heqvf; inversion H; subst; clear H. + right. left. split. * apply Nat.ltb_ge in Heq. lia. * destruct (Nat.eq_dec (currentTerm st) t). { subst. split; auto. } { exfalso. contradict Heq. lia. } + right. right. split. * split; auto. * auto.", "succ": true}]