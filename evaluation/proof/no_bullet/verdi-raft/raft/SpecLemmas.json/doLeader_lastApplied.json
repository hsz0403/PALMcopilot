[{"history": {"proof": "intros st h os st' ms H. unfold doLeader in H. destruct (type st) eqn:type_st. - destruct (advanceCommitIndex st h) eqn:advance_eq. inversion H; subst; clear H. qsimpl time: 1 use: advanceCommitIndex. - sfirstorder depth: 3. - hauto lq: on depth: 3.", "repairs": ["", "", "", "", "", "", "not_evaluable", "", "hammer", "", "hammer"], "exceptions": [{"ctx": ["intros st h os st' ms H.", "unfold doLeader in H.", "destruct (type st) eqn:type_st.", "-", "destruct (advanceCommitIndex st h) eqn:advance_eq."], "tactic": "destruct (shouldSend r) eqn:shouldSend_eq.", "exn": "The reference r was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros st h os st' ms H.", "unfold doLeader in H.", "destruct (type st) eqn:type_st.", "-", "destruct (advanceCommitIndex st h) eqn:advance_eq.", "inversion H; subst; clear H."], "tactic": "unfold lastApplied, advanceCommitIndex in *.", "exn": "Cannot coerce lastApplied to an evaluable reference.", "type": "not_evaluable", "handled": true}]}, "chat": [], "original": "intros st h os st' ms H. unfold doLeader in H. destruct (type st) eqn:type_st. - destruct (advanceCommitIndex st h) eqn:advance_eq. + destruct (shouldSend r) eqn:shouldSend_eq. * inversion H; subst; clear H. unfold lastApplied, advanceCommitIndex in *. destruct (lt_eq_lt_dec (lastApplied st) (commitIndex st)) as [[Hlt|Heq]|Hlt]. { rewrite advance_eq in Heq; inversion Heq; auto. } { rewrite advance_eq in Heq; inversion Heq; auto. } { rewrite advance_eq in Heq; inversion Heq. } * inversion H; subst; clear H. unfold lastApplied, advanceCommitIndex in *. destruct (lt_eq_lt_dec (lastApplied st) (commitIndex st)) as [[Hlt|Heq]|Hlt]. { rewrite advance_eq in Heq; inversion Heq; auto. } { rewrite advance_eq in Heq; inversion Heq; auto. } { rewrite advance_eq in Heq; inversion Heq. } + inversion H; subst; clear H. unfold lastApplied, advanceCommitIndex in *. destruct (lt_eq_lt_dec (lastApplied st) (commitIndex st)) as [[Hlt|Heq]|Hlt]. { rewrite advance_eq in Heq; inversion Heq; auto. } { rewrite advance_eq in Heq; inversion Heq; auto. } { rewrite advance_eq in Heq; inversion Heq. } - inversion H; subst; clear H. unfold lastApplied in *. destruct (lt_eq_lt_dec (lastApplied st) (commitIndex st)) as [[Hlt|Heq]|Hlt]. { auto. } { auto. } { auto. }", "succ": true}]