[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros h st t src lli llt st' m t' h' HreqVote HvoteIn.", "unfold handleRequestVote in HreqVote.", "destruct (t <? currentTerm (snd st)) eqn:HltCurrTerm.", "-", "inversion HreqVote."], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}]}, "chat": [], "original": "intros h st t src lli llt st' m t' h' HreqVote HvoteIn. unfold handleRequestVote in HreqVote. destruct (t <? currentTerm (snd st)) eqn:HltCurrTerm. - inversion HreqVote. - destruct (advanceCurrentTerm (snd st) t) as [st_advct]. destruct (leaderId st_advct) eqn:Hleader. + destruct (votedFor st_advct) eqn:HvotedFor. * intros HvoteIn'. right. split. { right. split; auto. } simpl in HvoteIn'. destruct HvoteIn' as [Heq | [HvotedFor' Heq]]. { right; auto. } { inversion Heq; subst; auto. } * intros HvoteIn'. left. right. simpl in HvoteIn'. destruct HvoteIn' as [Heq | [Heq _]]; inversion Heq. + intros HvoteIn'. left. simpl in HvoteIn'. destruct HvoteIn' as [Heq | [_ Hciteq]]; inversion Heq.", "succ": false}]