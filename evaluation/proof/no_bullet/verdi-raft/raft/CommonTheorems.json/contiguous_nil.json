[{"history": {"proof": "intros. unfold contiguous_range_exact_lo. split. + intros i0 H. apply False_rec. qsimpl use: not_lt. + intros e H0. apply False_rec. qsimpl use: not_lt,output_correct,proj2.", "repairs": ["no_product", "", "", "", "", "", "wrong_type", "wrong_bullet", "", "", "wrong_type"], "exceptions": [{"ctx": [], "tactic": "intros orig_base_params one_node_params raft_params i.", "exn": "orig_base_params is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params raft_params i.", "exn": "one_node_params is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params i.", "exn": "raft_params is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params' i.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros.", "unfold contiguous_range_exact_lo.", "split.", "+", "intros i0 H.", "apply False_rec."], "tactic": "apply (not_lt _ _ H).", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params i, i0 : nat H : i < i0 <= maxIndex [] The term \"H\" has type \"i < i0 <= maxIndex []\" while it is expected to have type \"~ ?n < ?m\".", "type": "wrong_type", "handled": true}, {"ctx": ["intros.", "unfold contiguous_range_exact_lo.", "split.", "+", "intros i0 H.", "apply False_rec.", "qsimpl use: not_lt."], "tactic": "*", "exn": "Wrong bullet *: Expecting +.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros.", "unfold contiguous_range_exact_lo.", "split.", "+", "intros i0 H.", "apply False_rec.", "qsimpl use: not_lt.", "+", "intros e H0.", "apply False_rec."], "tactic": "apply (not_lt _ _ H).", "exn": "The reference H was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros.", "unfold contiguous_range_exact_lo.", "split.", "+", "intros i0 H.", "apply False_rec.", "qsimpl use: not_lt.", "+", "intros e H0.", "apply False_rec."], "tactic": "intros e Hin.", "exn": "e is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros.", "unfold contiguous_range_exact_lo.", "split.", "+", "intros i0 H.", "apply False_rec.", "qsimpl use: not_lt.", "+", "intros e H0.", "apply False_rec."], "tactic": "intros e' Hin.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros.", "unfold contiguous_range_exact_lo.", "split.", "+", "intros i0 H.", "apply False_rec.", "qsimpl use: not_lt.", "+", "intros e H0.", "apply False_rec."], "tactic": "apply (proj2 (output_correct orig_base_params one_node_params raft_params _ _ _ _)); auto.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params i : nat e : entry H0 : In e [] The term \"orig_base_params\" has type \"BaseParams\" while it is expected to have type \"clientId\".", "type": "wrong_type", "handled": true}]}, "chat": [], "original": "intros orig_base_params one_node_params raft_params i. unfold contiguous_range_exact_lo. split. + intros i0 H. apply False_rec. apply (not_lt _ _ H). * intros e H0. apply False_rec. apply (not_lt _ _ H). - intros e Hin. apply (proj2 (output_correct orig_base_params one_node_params raft_params _ _ _ _)); auto.", "succ": true}]