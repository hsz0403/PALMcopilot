[{"history": {"proof": "intros n m p H1 H2. strivial use: Z.mul_le_mono_neg_l. qsimpl time: 1 use: Zmult_le_reg_r. qsimpl time: 1 use: Z,Zmult_le_reg_r,lt_le_trans.", "repairs": ["", "hammer", "cannot_apply_in", "cannot_apply_in"], "exceptions": [{"ctx": ["intros n m p H1 H2.", "apply Zmult_le_compat_l_rev with (p := p) in H2."], "tactic": "apply Zmult_le_reg_r in H2.", "exn": "Unable to apply lemma of type \"forall n m p : Z, p > 0 -> n * p <= m * p -> n <= m\" on hypothesis of type \"n <= m\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["intros n m p H1 H2.", "apply Zmult_le_compat_l_rev with (p := p) in H2.", "qsimpl time: 1 use: Zmult_le_reg_r."], "tactic": "apply Z.lt_le_trans with (n*p) (m*p) (m) in H2.", "exn": "Unable to apply lemma of type \"forall n m p : Z, n < m -> m <= p -> n < p\" on hypothesis of type \"n <= m\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["intros n m p H1 H2.", "apply Zmult_le_compat_l_rev with (p := p) in H2.", "qsimpl time: 1 use: Zmult_le_reg_r.", "qsimpl time: 1 use: Z,Zmult_le_reg_r,lt_le_trans."], "tactic": "apply Zmult_lt_0_le_compat_r in H1.", "exn": "Unable to apply lemma of type \"forall n m p : Z, 0 < p -> n <= m -> n * p <= m * p\" on hypothesis of type \"forall n m p : nat, (n < m)%nat -> (m <= p)%nat -> (n < p)%nat\".", "type": "cannot_apply_in", "handled": true}]}, "chat": [], "original": "intros n m p H1 H2. apply Zmult_le_compat_l_rev with (p := p) in H2. apply Zmult_le_reg_r in H2. auto. apply Z.lt_le_trans with (n*p) (m*p) (m) in H2. auto. apply Zmult_lt_0_le_compat_r in H1. auto.", "succ": true}]