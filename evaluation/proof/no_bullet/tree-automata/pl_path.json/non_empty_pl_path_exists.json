[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros pl pl_not_empty."], "tactic": "unfold pl_not_empty in pl_not_empty.", "exn": "Cannot coerce pl_not_empty to an evaluable reference.", "type": "not_evaluable", "handled": true}, {"ctx": ["intros pl pl_not_empty.", "qsimpl."], "tactic": ["destruct (pl_path_exists pl) as [p [H1 H2]].", ""], "exn": "Expects a disjunctive pattern with 3 branches.", "type": "num_branch", "handled": false}]}, "chat": [], "original": "intros pl pl_not_empty. unfold pl_not_empty in pl_not_empty. destruct (pl_path_exists pl) as [p [H1 H2]]. exists p. split. - apply H1. - apply pl_tl_length_rec_def_0 with (lst_length pl). + apply pl_tl_O. + apply pl_compatible_empt_r. apply pl_compatible_cons_r with a ls pl. * apply H2.", "succ": false}]