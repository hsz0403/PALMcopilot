[{"history": {"proof": "intros d hd tl a la ls. unfold essence_list. simpl. destruct ls. - qsimpl use: le_n. - destruct d. + sfirstorder depth: 3. + sfirstorder depth: 3. + sfirstorder depth: 3.", "repairs": ["", "", "", "", "", "cannot_unify", "", "ref_not_found", "", "hammer", "", "hammer", "", "hammer"], "exceptions": [{"ctx": ["intros d hd tl a la ls.", "unfold essence_list.", "simpl.", "destruct ls.", "-"], "tactic": "apply le_n.", "exn": "In environment d : preDTA hd : term tl : term_list a : ad la : prec_list a0 : ad ls1, ls2 : prec_list Unable to unify \"S (taille_0 la + taille_0 (prec_cons a0 ls1 ls2) + S (DTA_taille d + Nat.max (term_high hd) (term_high_0 tl) * S (DTA_taille d)))\" with \"S (taille_0 (prec_cons a0 ls1 ls2) + S (DTA_taille d + Nat.max (term_high hd) (term_high_0 tl) * S (DTA_taille d)))\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros d hd tl a la ls.", "unfold essence_list.", "simpl.", "destruct ls.", "-", "qsimpl use: le_n.", "-"], "tactic": "destruct p.", "exn": "The reference p was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros d hd tl a la ls.", "unfold essence_list.", "simpl.", "destruct ls.", "-", "qsimpl use: le_n.", "-", "destruct d."], "tactic": ["destruct la as [a' la' ls'].", ""], "exn": "Expects a disjunctive pattern with 2 branches.", "type": "num_branch", "handled": false}]}, "chat": [], "original": "intros d hd tl a la ls. unfold essence_list. simpl. destruct ls. - apply le_n. - destruct p. destruct la as [a' la' ls']. apply le_S. apply Nat.add_le_mono. + apply taille_aux_1. + apply Nat.mul_le_mono; apply Nat.add_le_mono; apply high_aux_3.", "succ": true}]