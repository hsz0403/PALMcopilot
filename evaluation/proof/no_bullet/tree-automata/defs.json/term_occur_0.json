[{"history": {"proof": "intros t u H. induction H using term_occur_ind. - auto. - simpl. apply le_S. apply term_rec. + hecrush use: term_occur_0_2, term_occur_0_1, term_list_term_ind, term_occur_0_0 unfold: term_occur_def_1 inv: term_list. + sfirstorder depth: 3.", "repairs": ["", "", "", "", "", "", "", "ref_not_found", "", "hammer", "", "hammer"], "exceptions": [{"ctx": ["intros t u H.", "induction H using term_occur_ind.", "-", "auto.", "-", "simpl.", "apply le_S."], "tactic": "apply IHterm_occur.", "exn": "The reference IHterm_occur was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros t u H.", "induction H using term_occur_ind.", "-", "auto.", "-", "simpl.", "apply le_S.", "apply term_rec."], "tactic": ["apply H.", ""], "exn": "Applied theorem does not have enough premises.", "type": "no_enough_premises", "handled": false}]}, "chat": [], "original": "intros t u H. induction H using term_occur_ind. - intros. auto. - intros. simpl. apply le_S. apply IHterm_occur. apply H. - intros. simpl in H. apply Nat.le_trans with (m := term_high tl). + apply high_aux_3. + apply IHterm_occur. apply H. - intros. simpl in H. apply IHterm_occur. apply H.", "succ": true}]