[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros."], "tactic": "intros H0 H1 H2 H3 H4 H5 H6.", "exn": "H0 is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros."], "tactic": "intros H0' H1 H2 H3 H4 H5 H6.", "exn": "H1 is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros."], "tactic": "intros H0' H1' H2 H3 H4 H5 H6.", "exn": "H2 is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros."], "tactic": "intros H0' H1' H2' H3 H4 H5 H6.", "exn": "H3 is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros."], "tactic": "intros H0' H1' H2' H3' H4 H5 H6.", "exn": "H4 is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros."], "tactic": "intros H0' H1' H2' H3' H4' H5 H6.", "exn": "H5 is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros."], "tactic": "intros H0' H1' H2' H3' H4' H5' H6.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros."], "tactic": "intros H7 H8 H9.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros.", "unfold insert_ostate.", "destruct a.", "-"], "tactic": "pose proof H10 as H10'.", "exn": "The reference H10 was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros.", "unfold insert_ostate.", "destruct a.", "-", "pose proof u_merge_inv_1_dta as u_merge_inv_1_dta'."], "tactic": "apply H10 in H7.", "exn": "No such hypothesis: H7", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "unfold insert_ostate.", "destruct a.", "-", "pose proof u_merge_inv_1_dta as u_merge_inv_1_dta'.", "qsimpl time: 2."], "tactic": "apply H10' in H11.", "exn": "No such hypothesis: H11", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "unfold insert_ostate.", "destruct a.", "-", "pose proof u_merge_inv_1_dta as u_merge_inv_1_dta'.", "qsimpl time: 2."], "tactic": "rewrite H7.", "exn": "Found no subterm matching \"MapGet prec_list ladj c\" in the current goal.", "type": "no_subterm", "handled": true}, {"ctx": ["intros.", "unfold insert_ostate.", "destruct a.", "-", "pose proof u_merge_inv_1_dta as u_merge_inv_1_dta'.", "qsimpl time: 2."], "tactic": "rewrite H11.", "exn": "The reference H11 was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros.", "unfold insert_ostate.", "destruct a.", "-", "pose proof u_merge_inv_1_dta as u_merge_inv_1_dta'.", "qsimpl time: 2.", "rewrite insert_ostate_0."], "tactic": "split; intros.", "exn": "Unable to find an instance for the variable ladj.", "type": "no_instance_var", "handled": true}, {"ctx": ["intros.", "unfold insert_ostate.", "destruct a.", "-", "pose proof u_merge_inv_1_dta as u_merge_inv_1_dta'.", "qsimpl time: 2.", "rewrite insert_ostate_0.", "qsimpl time: 2.", "*"], "tactic": "intros [H12 | H12].", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros.", "unfold insert_ostate.", "destruct a.", "-", "pose proof u_merge_inv_1_dta as u_merge_inv_1_dta'.", "qsimpl time: 2.", "rewrite insert_ostate_0.", "qsimpl time: 2.", "*"], "tactic": "left.", "exn": "Not an inductive goal with 2 constructors.", "type": "not_inductive_goal", "handled": true}, {"ctx": ["intros.", "unfold insert_ostate.", "destruct a.", "-", "pose proof u_merge_inv_1_dta as u_merge_inv_1_dta'.", "qsimpl time: 2.", "rewrite insert_ostate_0.", "qsimpl time: 2.", "*"], "tactic": "apply (rec_dta d0 a0 t ladj); auto.", "exn": "The reference t was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros.", "unfold insert_ostate.", "destruct a.", "-", "pose proof u_merge_inv_1_dta as u_merge_inv_1_dta'.", "qsimpl time: 2.", "rewrite insert_ostate_0.", "qsimpl time: 2.", "*"], "tactic": "right.", "exn": "Not an inductive goal with 2 constructors.", "type": "not_inductive_goal", "handled": true}, {"ctx": ["intros.", "unfold insert_ostate.", "destruct a.", "-", "pose proof u_merge_inv_1_dta as u_merge_inv_1_dta'.", "qsimpl time: 2.", "rewrite insert_ostate_0.", "qsimpl time: 2.", "*"], "tactic": "apply (rec_dta d1 a1 t ladj); auto.", "exn": "The reference t was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros.", "unfold insert_ostate.", "destruct a.", "-", "pose proof u_merge_inv_1_dta as u_merge_inv_1_dta'.", "qsimpl time: 2.", "rewrite insert_ostate_0.", "qsimpl time: 2.", "*"], "tactic": "*", "exn": "Wrong bullet *: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros.", "unfold insert_ostate.", "destruct a.", "-", "pose proof u_merge_inv_1_dta as u_merge_inv_1_dta'.", "qsimpl time: 2.", "rewrite insert_ostate_0.", "qsimpl time: 2.", "*", "shelve.", "*"], "tactic": "destruct H12.", "exn": "The reference H12 was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros.", "unfold insert_ostate.", "destruct a.", "-", "pose proof u_merge_inv_1_dta as u_merge_inv_1_dta'.", "qsimpl time: 2.", "rewrite insert_ostate_0.", "qsimpl time: 2.", "*", "shelve.", "*"], "tactic": "left.", "exn": "Not an inductive goal with 2 constructors.", "type": "not_inductive_goal", "handled": true}, {"ctx": ["intros.", "unfold insert_ostate.", "destruct a.", "-", "pose proof u_merge_inv_1_dta as u_merge_inv_1_dta'.", "qsimpl time: 2.", "rewrite insert_ostate_0.", "qsimpl time: 2.", "*", "shelve.", "*"], "tactic": "inversion H12.", "exn": "No such hypothesis: H12", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "unfold insert_ostate.", "destruct a.", "-", "pose proof u_merge_inv_1_dta as u_merge_inv_1_dta'.", "qsimpl time: 2.", "rewrite insert_ostate_0.", "qsimpl time: 2.", "*", "shelve.", "*"], "tactic": "apply (rec_dta (u_merge d0 d1) a t (union_mpl s0' s1')); auto.", "exn": "The reference t was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros.", "unfold insert_ostate.", "destruct a.", "-", "pose proof u_merge_inv_1_dta as u_merge_inv_1_dta'.", "qsimpl time: 2.", "rewrite insert_ostate_0.", "qsimpl time: 2.", "*", "shelve.", "*"], "tactic": "right.", "exn": "Not an inductive goal with 2 constructors.", "type": "not_inductive_goal", "handled": true}, {"ctx": ["intros.", "unfold insert_ostate.", "destruct a.", "-", "pose proof u_merge_inv_1_dta as u_merge_inv_1_dta'.", "qsimpl time: 2.", "rewrite insert_ostate_0.", "qsimpl time: 2.", "*", "shelve.", "*"], "tactic": "inversion H12.", "exn": "No such hypothesis: H12", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "unfold insert_ostate.", "destruct a.", "-", "pose proof u_merge_inv_1_dta as u_merge_inv_1_dta'.", "qsimpl time: 2.", "rewrite insert_ostate_0.", "qsimpl time: 2.", "*", "shelve.", "*"], "tactic": "apply (rec_dta (u_merge d0 d1) a t (union_mpl s0' s1')); auto.", "exn": "The reference t was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros.", "unfold insert_ostate.", "destruct a.", "-", "pose proof u_merge_inv_1_dta as u_merge_inv_1_dta'.", "qsimpl time: 2.", "rewrite insert_ostate_0.", "qsimpl time: 2.", "*", "shelve.", "*"], "tactic": "-", "exn": "Wrong bullet -: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros.", "unfold insert_ostate.", "destruct a.", "-", "pose proof u_merge_inv_1_dta as u_merge_inv_1_dta'.", "qsimpl time: 2.", "rewrite insert_ostate_0.", "qsimpl time: 2.", "*", "shelve.", "*", "shelve."], "tactic": "-", "exn": "Wrong bullet -: Expecting *.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros.", "unfold insert_ostate.", "destruct a.", "-", "pose proof u_merge_inv_1_dta as u_merge_inv_1_dta'.", "qsimpl time: 2.", "rewrite insert_ostate_0.", "qsimpl time: 2.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "pose proof H10 as H10'.", "exn": "The reference H10 was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros.", "unfold insert_ostate.", "destruct a.", "-", "pose proof u_merge_inv_1_dta as u_merge_inv_1_dta'.", "qsimpl time: 2.", "rewrite insert_ostate_0.", "qsimpl time: 2.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "apply H10 in H7.", "exn": "The reference H10 was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros.", "unfold insert_ostate.", "destruct a.", "-", "pose proof u_merge_inv_1_dta as u_merge_inv_1_dta'.", "qsimpl time: 2.", "rewrite insert_ostate_0.", "qsimpl time: 2.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "apply H10' in H11.", "exn": "No such hypothesis: H11", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "unfold insert_ostate.", "destruct a.", "-", "pose proof u_merge_inv_1_dta as u_merge_inv_1_dta'.", "qsimpl time: 2.", "rewrite insert_ostate_0.", "qsimpl time: 2.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "rewrite H7.", "exn": "Found no subterm matching \"MapGet prec_list ladj c\" in the current goal.", "type": "no_subterm", "handled": true}, {"ctx": ["intros.", "unfold insert_ostate.", "destruct a.", "-", "pose proof u_merge_inv_1_dta as u_merge_inv_1_dta'.", "qsimpl time: 2.", "rewrite insert_ostate_0.", "qsimpl time: 2.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "rewrite H11.", "exn": "The reference H11 was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros.", "unfold insert_ostate.", "destruct a.", "-", "pose proof u_merge_inv_1_dta as u_merge_inv_1_dta'.", "qsimpl time: 2.", "rewrite insert_ostate_0.", "qsimpl time: 2.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "split; intros.", "exn": "Unable to find an instance for the variable ladj.", "type": "no_instance_var", "handled": true}, {"ctx": ["intros.", "unfold insert_ostate.", "destruct a.", "-", "pose proof u_merge_inv_1_dta as u_merge_inv_1_dta'.", "qsimpl time: 2.", "rewrite insert_ostate_0.", "qsimpl time: 2.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "*", "exn": "Wrong bullet *: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros.", "unfold insert_ostate.", "destruct a.", "-", "pose proof u_merge_inv_1_dta as u_merge_inv_1_dta'.", "qsimpl time: 2.", "rewrite insert_ostate_0.", "qsimpl time: 2.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "intros [H12 | H12].", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros.", "unfold insert_ostate.", "destruct a.", "-", "pose proof u_merge_inv_1_dta as u_merge_inv_1_dta'.", "qsimpl time: 2.", "rewrite insert_ostate_0.", "qsimpl time: 2.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "left.", "exn": "Not an inductive goal with 2 constructors.", "type": "not_inductive_goal", "handled": true}, {"ctx": ["intros.", "unfold insert_ostate.", "destruct a.", "-", "pose proof u_merge_inv_1_dta as u_merge_inv_1_dta'.", "qsimpl time: 2.", "rewrite insert_ostate_0.", "qsimpl time: 2.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "apply (rec_dta d0 a0 t ladj); auto.", "exn": "The reference t was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros.", "unfold insert_ostate.", "destruct a.", "-", "pose proof u_merge_inv_1_dta as u_merge_inv_1_dta'.", "qsimpl time: 2.", "rewrite insert_ostate_0.", "qsimpl time: 2.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "right.", "exn": "Not an inductive goal with 2 constructors.", "type": "not_inductive_goal", "handled": true}, {"ctx": ["intros.", "unfold insert_ostate.", "destruct a.", "-", "pose proof u_merge_inv_1_dta as u_merge_inv_1_dta'.", "qsimpl time: 2.", "rewrite insert_ostate_0.", "qsimpl time: 2.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "apply (rec_dta d1 a1 t ladj); auto.", "exn": "The reference t was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros.", "unfold insert_ostate.", "destruct a.", "-", "pose proof u_merge_inv_1_dta as u_merge_inv_1_dta'.", "qsimpl time: 2.", "rewrite insert_ostate_0.", "qsimpl time: 2.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "*", "exn": "Wrong bullet *: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros.", "unfold insert_ostate.", "destruct a.", "-", "pose proof u_merge_inv_1_dta as u_merge_inv_1_dta'.", "qsimpl time: 2.", "rewrite insert_ostate_0.", "qsimpl time: 2.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "destruct H12.", "exn": "The reference H12 was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros.", "unfold insert_ostate.", "destruct a.", "-", "pose proof u_merge_inv_1_dta as u_merge_inv_1_dta'.", "qsimpl time: 2.", "rewrite insert_ostate_0.", "qsimpl time: 2.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct M2.", "+"], "tactic": "left.", "exn": "Not an inductive goal with 2 constructors.", "type": "not_inductive_goal", "handled": true}, {"ctx": ["intros.", "unfold insert_ostate.", "destruct a.", "-", "pose proof u_merge_inv_1_dta as u_merge_inv_1_dta'.", "qsimpl time: 2.", "rewrite insert_ostate_0.", "qsimpl time: 2.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct M2.", "+", "qsimpl time: 2."], "tactic": "inversion H12.", "exn": "No such goal. Focus next goal with bullet +.", "type": "next_goal", "handled": true}]}, "chat": [], "original": "intros. intros. intros. intros. intros. intros. intros. intros. intros H0 H1 H2 H3 H4 H5 H6. intros H7 H8 H9. unfold insert_ostate. destruct a. - pose proof H10 as H10'. apply H10 in H7. apply H10' in H11. rewrite H7. rewrite H11. intros. split; intros. * intros [H12 | H12]. + left. apply (rec_dta d0 a0 t ladj); auto. + right. apply (rec_dta d1 a1 t ladj); auto. * destruct H12. + left. inversion H12. apply (rec_dta (u_merge d0 d1) a t (union_mpl s0' s1')); auto. + right. inversion H12. apply (rec_dta (u_merge d0 d1) a t (union_mpl s0' s1')); auto. - pose proof H10 as H10'. apply H10 in H7. apply H10' in H11. rewrite H7. rewrite H11. intros. split; intros. * intros [H12 | H12]. + left. apply (rec_dta d0 a0 t ladj); auto. + right. apply (rec_dta d1 a1 t ladj); auto. * destruct H12. + left. inversion H12.", "succ": false}]