[{"history": {"proof": "intros d m sigma H. srun best use: kill_empty_correct_wrt_sign_invar.", "repairs": ["", "hammer"], "exceptions": [{"ctx": ["intros d m sigma H.", "unfold predta_correct_wrt_sign, preDTA_kill in *.", "intros a s H'.", "destruct d.", "-", "simpl in *.", "intro H1."], "tactic": "apply H1 in H'.", "exn": "Unable to apply lemma of type \"ad\" on hypothesis of type \"None = Some s\".", "type": "cannot_apply_in", "handled": true}]}, "chat": [], "original": "intros d m sigma H. unfold predta_correct_wrt_sign, preDTA_kill in *. intros a s H'. destruct d. - simpl in *. intro H1. apply H1 in H'. auto. - destruct (states_kill m s) eqn:E. + apply kill_empty_correct_wrt_sign_invar. apply H. + discriminate. - destruct (preDTA_kill m d1) eqn:E1. + destruct (preDTA_kill m d2) eqn:E2. * apply kill_empty_correct_wrt_sign_invar. apply H. * destruct m1 eqn:E3. ** inversion E2. ** apply kill_empty_correct_wrt_sign_invar. apply H. * destruct (preDTA_kill m d0) eqn:E3. ** apply dt_kill_0 with (s:=s'). apply E. apply H'. ** discriminate.", "succ": true}]