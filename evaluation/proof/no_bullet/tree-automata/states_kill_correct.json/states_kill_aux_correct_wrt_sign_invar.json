[{"history": {"proof": "intros s m sigma H. srun best use: kill_empty_correct_wrt_sign_invar_1.", "repairs": ["", "hammer"], "exceptions": [{"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+"], "tactic": "intros a' p' H''.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+"], "tactic": "apply H in H''.", "exn": "No such hypothesis: H''", "type": "no_hypos", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl."], "tactic": "destruct H'' as [n' [H1' H2']].", "exn": "No such goal. Focus next goal with bullet +.", "type": "next_goal", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+"], "tactic": "apply pl_tl_length.", "exn": "In environment m : Map bool sigma : signature H : forall (a : ad) (p : prec_list), MapGet prec_list (M0 prec_list) a = Some p -> exists n : nat, MapGet nat sigma a = Some n /\\\\ pl_tl_length p n a : ad p : prec_list n : nat H1 : MapGet nat sigma a = Some n H2 : pl_tl_length p n Unable to unify \"Prop\" with \"pl_tl_length p n\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length."], "tactic": "auto.", "exn": "No such goal. Focus next goal with bullet -.", "type": "next_goal", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+"], "tactic": "exists (M1 prec_list a p0).", "exn": "In environment a : ad p : prec_list m : Map bool sigma : signature H : state_correct_wrt_sign (M1 prec_list a p) sigma p0 : prec_list Eq_kill : prec_list_kill m p = Some p0 a0 : ad p1 : prec_list H0 : MapGet prec_list (M1 prec_list a p0) a0 = Some p1 The term \"M1 prec_list a p0\" has type \"Map prec_list\" while it is expected to have type \"nat\".", "type": "wrong_type", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'."], "tactic": "apply H in H'.", "exn": "Unable to apply lemma of type \"state_correct_wrt_sign (M1 prec_list a p) sigma\" on hypothesis of type \"MapGet prec_list (m0 prec_list a p0) a' = Some p'\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]]."], "tactic": "exists n.", "exn": "The reference n was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]]."], "tactic": "split.", "exn": "Unable to find an instance for the variable x.", "type": "no_instance_var", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length."], "tactic": "unfold MapGet in H'.", "exn": "No such hypothesis: H'", "type": "no_hypos", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length."], "tactic": "destruct (ad_eqb a a') eqn: Eq_ad.", "exn": "The reference ad_eqb was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length."], "tactic": "apply Nat.eqb_eq in Eq_ad.", "exn": "No such hypothesis: Eq_ad", "type": "no_hypos", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list."], "tactic": "rewrite <- H1.", "exn": "The reference H1 was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list."], "tactic": "rewrite <- H1'.", "exn": "The reference H1' was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list."], "tactic": "apply Nat.eqb_neq in Eq_ad.", "exn": "No such hypothesis: Eq_ad", "type": "no_hypos", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list."], "tactic": "rewrite Eq_ad.", "exn": "The reference Eq_ad was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list."], "tactic": "apply H.", "exn": "In environment X5 : forall A : Type, Map A -> ad -> option A H1 : forall x y : bool, Is_true (eqb x y) -> x = y X4 : forall A : Type, ad -> A -> Map A X3 : forall A : Type, Map A -> ad -> option A X2, X1 : forall A : Type, ad -> A -> Map A o : forall A : Type, Map A -> ad -> option A X0, X, m0 : forall A : Type, ad -> A -> Map A a : ad p : prec_list m : Map bool sigma : signature H : state_correct_wrt_sign (M1 prec_list a p) sigma p0 : prec_list Eq_kill : prec_list_kill m p = Some p0 a' : ad p' : prec_list Unable to unify \"state_correct_wrt_sign (M1 prec_list a p) sigma\" with \"exists n : nat, o nat sigma a' = Some n /\\\\ pl_tl_length p' n\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list."], "tactic": "apply pl_tl_length.", "exn": "In environment X7 : forall A : Type, Map A -> ad -> option A H0 : forall x y : bool, Is_true (eqb x y) -> x = y X6 : forall A : Type, ad -> A -> Map A X5 : forall A : Type, Map A -> ad -> option A X4 : forall A : Type, ad -> A -> Map A X3 : forall A : Type, Map A -> ad -> option A X2, X1 : forall A : Type, ad -> A -> Map A o : forall A : Type, Map A -> ad -> option A X0, X, m0 : forall A : Type, ad -> A -> Map A a : ad p : prec_list m : Map bool sigma : signature H : state_correct_wrt_sign (M1 prec_list a p) sigma p0 : prec_list Eq_kill : prec_list_kill m p = Some p0 a' : ad p' : prec_list Unable to unify \"Prop\" with \"exists n : nat, o nat sigma a' = Some n /\\\\ pl_tl_length p' n\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list."], "tactic": "+", "exn": "Wrong bullet +: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+"], "tactic": "exists (M0 prec_list).", "exn": "In environment a : ad p : prec_list m : Map bool sigma : signature H : state_correct_wrt_sign (M1 prec_list a p) sigma Eq_kill : prec_list_kill m p = None a0 : ad p0 : prec_list H0 : MapGet prec_list (M0 prec_list) a0 = Some p0 The term \"M0 prec_list\" has type \"Map prec_list\" while it is expected to have type \"nat\".", "type": "wrong_type", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign."], "tactic": "intros a p' H'.", "exn": "a is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'."], "tactic": "-", "exn": "Wrong bullet -: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+"], "tactic": "exists (M1 prec_list (N.double a) p).", "exn": "The reference p was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'."], "tactic": "apply H in H'.", "exn": "Unable to apply lemma of type \"state_correct_wrt_sign (M2 prec_list s1 s2) sigma\" on hypothesis of type \"MapGet prec_list match (fix states_kill_aux (m : Map bool) (s : state) {struct s} : state := match s with | @M0 _ => M0 prec_list | @M1 _ a p => match prec_list_kill m p with | Some p' => M1 prec_list a p' | None => M0 prec_list end | @M2 _ s0 s1 => match states_kill_aux m s0 with | @M0 _ => match states_kill_aux m s1 with | @M0 _ => M0 prec_list | @M1 _ a p => M1 prec_list (N.succ_double a) p | @M2 _ m0 m1 => M2 prec_list (M0 prec_list) (M2 prec_list m0 m1) end | @M1 _ a p => match states_kill_aux m s1 with | @M0 _ => M1 prec_list (N.double a) p | @M1 _ a0 p0 => M2 prec_list (M1 prec_list a p) (M1 prec_list a0 p0) | @M2 _ m0 m1 => M2 prec_list (M1 prec_list a p) (M2 prec_list m0 m1) end | @M2 _ m0 m1 => M2 prec_list (M2 prec_list m0 m1) (states_kill_aux m s1) end end) m s1 with | @M0 _ => match (fix states_kill_aux (m : Map bool) (s : state) {struct s} : state := match s with | @M0 _ => M0 prec_list | @M1 _ a p => match prec_list_kill m p with | Some p' => M1 prec_list a p' | None => M0 prec_list end | @M2 _ s0 s1 => match states_kill_aux m s0 with | @M0 _ => match states_kill_aux m s1 with | @M0 _ => M0 prec_list | @M1 _ a p => M1 prec_list (N.succ_double a) p | @M2 _ m0 m1 => M2 prec_list (M0 prec_list) (M2 prec_list m0 m1) end | @M1 _ a p => match states_kill_aux m s1 with | @M0 _ => M1 prec_list (N.double a) p | @M1 _ a0 p0 => M2 prec_list (M1 prec_list a p) (M1 prec_list a0 p0) | @M2 _ m0 m1 => M2 prec_list (M1 prec_list a p) (M2 prec_list m0 m1) end | @M2 _ m0 m1 => M2 prec_list (M2 prec_list m0 m1) (states_kill_aux m s1) end end) m s2 with | @M0 _ => M0 prec_list | @M1 _ a p => M1 prec_list (N.succ_double a) p | @M2 _ m0 m1 => M2 prec_list (M0 prec_list) (M2 prec_list m0 m1) end | @M1 _ a p => match (fix states_kill_aux (m : Map bool) (s : state) {struct s} : state := match s with | @M0 _ => M0 prec_list | @M1 _ a0 p0 => match prec_list_kill m p0 with | Some p' => M1 prec_list a0 p' | None => M0 prec_list end | @M2 _ s0 s1 => match states_kill_aux m s0 with | @M0 _ => match states_kill_aux m s1 with | @M0 _ => M0 prec_list | @M1 _ a0 p0 => M1 prec_list (N.succ_double a0) p0 | @M2 _ m0 m1 => M2 prec_list (M0 prec_list) (M2 prec_list m0 m1) end | @M1 _ a0 p0 => match states_kill_aux m s1 with | @M0 _ => M1 prec_list (N.double a0) p0 | @M1 _ a1 p1 => M2 prec_list (M1 prec_list a0 p0) (M1 prec_list a1 p1) | @M2 _ m0 m1 => M2 prec_list (M1 prec_list a0 p0) (M2 prec_list m0 m1) end | @M2 _ m0 m1 => M2 prec_list (M2 prec_list m0 m1) (states_kill_aux m s1) end end) m s2 with | @M0 _ => M1 prec_list (N.double a) p | @M1 _ a0 p0 => M2 prec_list (M1 prec_list a p) (M1 prec_list a0 p0) | @M2 _ m0 m1 => M2 prec_list (M1 prec_list a p) (M2 prec_list m0 m1) end | @M2 _ m0 m1 => M2 prec_list (M2 prec_list m0 m1) ((fix states_kill_aux (m : Map bool) (s : state) {struct s} : state := match s with | @M0 _ => M0 prec_list | @M1 _ a p => match prec_list_kill m p with | Some p' => M1 prec_list a p' | None => M0 prec_list end | @M2 _ s0 s1 => match states_kill_aux m s0 with | @M0 _ => match states_kill_aux m s1 with | @M0 _ => M0 prec_list | @M1 _ a p => M1 prec_list (N.succ_double a) p | @M2 _ m2 m3 => M2 prec_list (M0 prec_list) (M2 prec_list m2 m3) end | @M1 _ a p => match states_kill_aux m s1 with | @M0 _ => M1 prec_list (N.double a) p | @M1 _ a0 p0 => M2 prec_list (M1 prec_list a p) (M1 prec_list a0 p0) | @M2 _ m2 m3 => M2 prec_list (M1 prec_list a p) (M2 prec_list m2 m3) end | @M2 _ m2 m3 => M2 prec_list (M2 prec_list m2 m3) (states_kill_aux m s1) end end) m s2) end a' = Some p'\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'."], "tactic": "qsimpl use: M1,discriminate,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "exn": "The reference discriminate was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list."], "tactic": "destruct H' as [n [H1 H2]].", "exn": "The reference H' was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list."], "tactic": "destruct (ad_eqb a a') eqn: Eq_ad.", "exn": "The reference ad_eqb was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*"], "tactic": "apply Nat.eqb_eq in Eq_ad.", "exn": "No such hypothesis: Eq_ad", "type": "no_hypos", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*"], "tactic": "qsimpl use: M1,discriminate,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "exn": "The reference discriminate was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list."], "tactic": "exists n.", "exn": "The reference n was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list."], "tactic": "split.", "exn": "Unable to find an instance for the variable x.", "type": "no_instance_var", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list."], "tactic": "qsimpl use: M1,discriminate,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "exn": "The reference discriminate was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list."], "tactic": "unfold MapGet in H'.", "exn": "No such hypothesis: H'", "type": "no_hypos", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list."], "tactic": "qsimpl use: M1,discriminate,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "exn": "The reference discriminate was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list."], "tactic": "destruct (ad_eqb a (N.double a)) eqn: Eq_ad'.", "exn": "The reference ad_eqb was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list."], "tactic": "-", "exn": "Wrong bullet -: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve."], "tactic": "-", "exn": "Wrong bullet -: Expecting *.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*"], "tactic": "apply ad_eqb_eq in Eq_ad'.", "exn": "No such hypothesis: Eq_ad'", "type": "no_hypos", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*"], "tactic": "qsimpl use: M1,discriminate,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "exn": "The reference discriminate was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list."], "tactic": "discriminate Eq_ad'.", "exn": "The reference Eq_ad' was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list."], "tactic": "-", "exn": "Wrong bullet -: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve."], "tactic": "-", "exn": "Wrong bullet -: Expecting *.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*"], "tactic": "apply ad_eqb_neq in Eq_ad'.", "exn": "No such hypothesis: Eq_ad'", "type": "no_hypos", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*"], "tactic": "qsimpl use: M1,discriminate,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "exn": "The reference discriminate was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list."], "tactic": "rewrite Eq_ad in H'.", "exn": "The reference Eq_ad was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list."], "tactic": "*", "exn": "Wrong bullet *: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*"], "tactic": "apply Nat.eqb_neq in Eq_ad.", "exn": "No such hypothesis: Eq_ad", "type": "no_hypos", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*"], "tactic": "qsimpl use: M1,discriminate,injection,eqb_eq,pl_tl_length,M0,MapGet,auto,prec_list.", "exn": "The reference discriminate was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*"], "tactic": "rewrite Eq_ad.", "exn": "The reference Eq_ad was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*"], "tactic": "apply H.", "exn": "In environment o : forall A : Type, Map A -> ad -> option A X0 : forall A : Type, Map A H1 : forall x y : bool, Is_true (eqb x y) -> x = y H0 : forall (d : preDTA) (p : prec_list) (plp : pl_path), pl_path_incl plp p -> pl_path_true plp (dta_non_empty_states d) -> exists tl : term_list, pl_path_recon d tl plp X : forall A : Type, ad -> A -> Map A s1, s2 : Map prec_list m : Map bool sigma : signature H : state_correct_wrt_sign (M2 prec_list s1 s2) sigma Eq : states_kill_aux m s1 = M0 prec_list p' : prec_list s3, s4 : Map prec_list Heqs0 : (fix states_kill_aux (m : Map bool) (s : state) {struct s} : state := match s with | @M0 _ => M0 prec_list | @M1 _ a p => match prec_list_kill m p with | Some p' => M1 prec_list a p' | None => M0 prec_list end | @M2 _ s0 s1 => match states_kill_aux m s0 with | @M0 _ => match states_kill_aux m s1 with | @M0 _ => M0 prec_list | @M1 _ a p => M1 prec_list (N.succ_double a) p | @M2 _ m0 m1 => M2 prec_list (M0 prec_list) (M2 prec_list m0 m1) end | @M1 _ a p => match states_kill_aux m s1 with | @M0 _ => M1 prec_list (N.double a) p | @M1 _ a0 p0 => M2 prec_list (M1 prec_list a p) (M1 prec_list a0 p0) | @M2 _ m0 m1 => M2 prec_list (M1 prec_list a p) (M2 prec_list m0 m1) end | @M2 _ m0 m1 => M2 prec_list (M2 prec_list m0 m1) (states_kill_aux m s1) end end) m s2 = M2 prec_list s3 s4 H' : MapGet prec_list s4 0%N = Some p' Unable to unify \"state_correct_wrt_sign (M2 prec_list s1 s2) sigma\" with \"exists n : nat, o nat sigma 3%N = Some n /\\\\ pl_tl_length p' n\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*"], "tactic": "qsimpl use: M1,discriminate,injection,eqb_eq,pl_tl_length,M0,MapGet,auto,prec_list.", "exn": "The reference discriminate was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*"], "tactic": "+", "exn": "Wrong bullet +: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve."], "tactic": "+", "exn": "Wrong bullet +: Expecting *.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*"], "tactic": "destruct (prec_list_kill m p) eqn: Eq_kill'.", "exn": "The reference p was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*"], "tactic": "*", "exn": "Wrong bullet *: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "destruct (states_kill_aux m s0) eqn: Eq'.", "exn": "The reference s0 was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'."], "tactic": "destruct (states_kill_aux m1 s1) eqn: Eq''.", "exn": "The reference m1 was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''."], "tactic": "-", "exn": "Wrong bullet -: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve."], "tactic": "-", "exn": "Wrong bullet -: Expecting *.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*"], "tactic": "exists (M2 prec_list (M0 prec_list) (M2 prec_list m2 m3)).", "exn": "The reference m3 was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*"], "tactic": "intros a p' H'.", "exn": "p' is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*"], "tactic": "intros a p'' H'.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*"], "tactic": "apply H in H'.", "exn": "No such hypothesis: H'", "type": "no_hypos", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*"], "tactic": "qsimpl use: M1,discriminate,injection,eqb_eq,pl_tl_length,M0,MapGet,auto,prec_list.", "exn": "The reference discriminate was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*"], "tactic": "destruct H' as [n [H1 H2]].", "exn": "The reference H' was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*"], "tactic": "destruct (ad_eqb a a0) eqn: Eq_ad.", "exn": "The reference ad_eqb was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*"], "tactic": "+", "exn": "Wrong bullet +: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve."], "tactic": "+", "exn": "Wrong bullet +: Expecting *.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*"], "tactic": "apply Nat.eqb_eq in Eq_ad.", "exn": "No such hypothesis: Eq_ad", "type": "no_hypos", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*"], "tactic": "qsimpl use: M1,discriminate,injection,eqb_eq,pl_tl_length,M0,MapGet,auto,prec_list.", "exn": "The reference discriminate was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*"], "tactic": "exists n.", "exn": "The reference n was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*"], "tactic": "split.", "exn": "Unable to find an instance for the variable x.", "type": "no_instance_var", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*"], "tactic": "qsimpl use: M1,discriminate,injection,eqb_eq,pl_tl_length,M0,MapGet,auto,prec_list.", "exn": "The reference discriminate was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*"], "tactic": "unfold MapGet in H'.", "exn": "No such hypothesis: H'", "type": "no_hypos", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*"], "tactic": "qsimpl use: M1,discriminate,injection,eqb_eq,pl_tl_length,M0,MapGet,auto,prec_list.", "exn": "The reference discriminate was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*"], "tactic": "destruct (ad_eqb a a) eqn: Eq_ad'.", "exn": "The reference ad_eqb was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*"], "tactic": "-", "exn": "Wrong bullet -: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve."], "tactic": "-", "exn": "Wrong bullet -: Expecting *.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "apply ad_eqb_eq in Eq_ad'.", "exn": "No such hypothesis: Eq_ad'", "type": "no_hypos", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "qsimpl use: M1,discriminate,injection,eqb_eq,pl_tl_length,M0,MapGet,auto,prec_list.", "exn": "The reference discriminate was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "discriminate Eq_ad'.", "exn": "The reference Eq_ad' was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "-", "exn": "Wrong bullet -: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve."], "tactic": "-", "exn": "Wrong bullet -: Expecting *.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "apply ad_eqb_neq in Eq_ad'.", "exn": "No such hypothesis: Eq_ad'", "type": "no_hypos", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "qsimpl use: M1,discriminate,injection,eqb_eq,pl_tl_length,M0,MapGet,auto,prec_list.", "exn": "The reference discriminate was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "rewrite Eq_ad in H'.", "exn": "No such hypothesis: H'", "type": "no_hypos", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "qsimpl use: M1,discriminate,injection,eqb_eq,pl_tl_length,M0,MapGet,auto,prec_list.", "exn": "The reference discriminate was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "injection H' as H''.", "exn": "The reference H' was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "rewrite <- Eq_kill in H''.", "exn": "No such hypothesis: H''", "type": "no_hypos", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "qsimpl use: M1,discriminate,injection,eqb_eq,pl_tl_length,M0,MapGet,auto,prec_list.", "exn": "The reference discriminate was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "discriminate H''.", "exn": "The reference H'' was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "apply pl_tl_length.", "exn": "In environment o : forall A : Type, Map A -> ad -> option A X0 : forall A : Type, Map A H1 : forall x y : bool, Is_true (eqb x y) -> x = y H0 : forall (d : preDTA) (p : prec_list) (plp : pl_path), pl_path_incl plp p -> pl_path_true plp (dta_non_empty_states d) -> exists tl : term_list, pl_path_recon d tl plp X : forall A : Type, ad -> A -> Map A s1, s2 : Map prec_list m : Map bool sigma : signature H : state_correct_wrt_sign (M2 prec_list s1 s2) sigma Eq : states_kill_aux m s1 = M0 prec_list p' : prec_list a : ad p : prec_list Heqs : (fix states_kill_aux (m : Map bool) (s : state) {struct s} : state := match s with | @M0 _ => M0 prec_list | @M1 _ a p => match prec_list_kill m p with | Some p' => M1 prec_list a p' | None => M0 prec_list end | @M2 _ s0 s1 => match states_kill_aux m s0 with | @M0 _ => match states_kill_aux m s1 with | @M0 _ => M0 prec_list | @M1 _ a p => M1 prec_list (N.succ_double a) p | @M2 _ m0 m1 => M2 prec_list (M0 prec_list) (M2 prec_list m0 m1) end | @M1 _ a p => match states_kill_aux m s1 with | @M0 _ => M1 prec_list (N.double a) p | @M1 _ a0 p0 => M2 prec_list (M1 prec_list a p) (M1 prec_list a0 p0) | @M2 _ m0 m1 => M2 prec_list (M1 prec_list a p) (M2 prec_list m0 m1) end | @M2 _ m0 m1 => M2 prec_list (M2 prec_list m0 m1) (states_kill_aux m s1) end end) m s1 = M1 prec_list a p Heqs0 : (fix states_kill_aux (m : Map bool) (s : state) {struct s} : state := match s with | @M0 _ => M0 prec_list | @M1 _ a p => match prec_list_kill m p with | Some p' => M1 prec_list a p' | None => M0 prec_list end | @M2 _ s0 s1 => match states_kill_aux m s0 with | @M0 _ => match states_kill_aux m s1 with | @M0 _ => M0 prec_list | @M1 _ a p => M1 prec_list (N.succ_double a) p | @M2 _ m0 m1 => M2 prec_list (M0 prec_list) (M2 prec_list m0 m1) end | @M1 _ a p => match states_kill_aux m s1 with | @M0 _ => M1 prec_list (N.double a) p | @M1 _ a0 p0 => M2 prec_list (M1 prec_list a p) (M1 prec_list a0 p0) | @M2 _ m0 m1 => M2 prec_list (M1 prec_list a p) (M2 prec_list m0 m1) end | @M2 _ m0 m1 => M2 prec_list (M2 prec_list m0 m1) (states_kill_aux m s1) end end) m s2 = M1 prec_list 0%N p' Unable to unify \"Prop\" with \"exists n : nat, o nat sigma 1%N = Some n /\\\\ pl_tl_length p' n\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "qsimpl use: M1,discriminate,injection,eqb_eq,pl_tl_length,M0,MapGet,auto,prec_list.", "exn": "The reference discriminate was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "+", "exn": "Wrong bullet +: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve."], "tactic": "+", "exn": "Wrong bullet +: Expecting *.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "apply Nat.eqb_neq in Eq_ad.", "exn": "No such hypothesis: Eq_ad", "type": "no_hypos", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "qsimpl use: M1,discriminate,injection,eqb_eq,pl_tl_length,M0,MapGet,auto,prec_list.", "exn": "The reference discriminate was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "rewrite Eq_ad.", "exn": "The reference Eq_ad was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "apply H.", "exn": "In environment o : forall A : Type, Map A -> ad -> option A X0 : forall A : Type, Map A H1 : forall x y : bool, Is_true (eqb x y) -> x = y H0 : forall (d : preDTA) (p : prec_list) (plp : pl_path), pl_path_incl plp p -> pl_path_true plp (dta_non_empty_states d) -> exists tl : term_list, pl_path_recon d tl plp X : forall A : Type, ad -> A -> Map A s1, s2 : Map prec_list m : Map bool sigma : signature H : state_correct_wrt_sign (M2 prec_list s1 s2) sigma Eq : states_kill_aux m s1 = M0 prec_list p' : prec_list Heqs : (fix states_kill_aux (m : Map bool) (s : state) {struct s} : state := match s with | @M0 _ => M0 prec_list | @M1 _ a p => match prec_list_kill m p with | Some p' => M1 prec_list a p' | None => M0 prec_list end | @M2 _ s0 s1 => match states_kill_aux m s0 with | @M0 _ => match states_kill_aux m s1 with | @M0 _ => M0 prec_list | @M1 _ a p => M1 prec_list (N.succ_double a) p | @M2 _ m0 m1 => M2 prec_list (M0 prec_list) (M2 prec_list m0 m1) end | @M1 _ a p => match states_kill_aux m s1 with | @M0 _ => M1 prec_list (N.double a) p | @M1 _ a0 p0 => M2 prec_list (M1 prec_list a p) (M1 prec_list a0 p0) | @M2 _ m0 m1 => M2 prec_list (M1 prec_list a p) (M2 prec_list m0 m1) end | @M2 _ m0 m1 => M2 prec_list (M2 prec_list m0 m1) (states_kill_aux m s1) end end) m s1 = M1 prec_list 0%N p' s3, s4 : Map prec_list Heqs0 : (fix states_kill_aux (m : Map bool) (s : state) {struct s} : state := match s with | @M0 _ => M0 prec_list | @M1 _ a p => match prec_list_kill m p with | Some p' => M1 prec_list a p' | None => M0 prec_list end | @M2 _ s0 s1 => match states_kill_aux m s0 with | @M0 _ => match states_kill_aux m s1 with | @M0 _ => M0 prec_list | @M1 _ a p => M1 prec_list (N.succ_double a) p | @M2 _ m0 m1 => M2 prec_list (M0 prec_list) (M2 prec_list m0 m1) end | @M1 _ a p => match states_kill_aux m s1 with | @M0 _ => M1 prec_list (N.double a) p | @M1 _ a0 p0 => M2 prec_list (M1 prec_list a p) (M1 prec_list a0 p0) | @M2 _ m0 m1 => M2 prec_list (M1 prec_list a p) (M2 prec_list m0 m1) end | @M2 _ m0 m1 => M2 prec_list (M2 prec_list m0 m1) (states_kill_aux m s1) end end) m s2 = M2 prec_list s3 s4 Unable to unify \"state_correct_wrt_sign (M2 prec_list s1 s2) sigma\" with \"exists n : nat, o nat sigma 0%N = Some n /\\\\ pl_tl_length p' n\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "qsimpl use: M1,discriminate,injection,eqb_eq,pl_tl_length,M0,MapGet,auto,prec_list.", "exn": "The reference discriminate was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "-", "exn": "Wrong bullet -: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve."], "tactic": "-", "exn": "Wrong bullet -: Expecting *.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "exists (M1 prec_list (N.double a) p).", "exn": "In environment o : forall A : Type, Map A -> ad -> option A X0 : forall A : Type, Map A H1 : forall x y : bool, Is_true (eqb x y) -> x = y H0 : forall (d : preDTA) (p : prec_list) (plp : pl_path), pl_path_incl plp p -> pl_path_true plp (dta_non_empty_states d) -> exists tl : term_list, pl_path_recon d tl plp X : forall A : Type, ad -> A -> Map A s1, s2 : Map prec_list m : Map bool sigma : signature H : state_correct_wrt_sign (M2 prec_list s1 s2) sigma Eq : states_kill_aux m s1 = M0 prec_list p0 : positive p' : prec_list a : ad p : prec_list Heqs : (fix states_kill_aux (m : Map bool) (s : state) {struct s} : state := match s with | @M0 _ => M0 prec_list | @M1 _ a p => match prec_list_kill m p with | Some p' => M1 prec_list a p' | None => M0 prec_list end | @M2 _ s0 s1 => match states_kill_aux m s0 with | @M0 _ => match states_kill_aux m s1 with | @M0 _ => M0 prec_list | @M1 _ a p => M1 prec_list (N.succ_double a) p | @M2 _ m0 m1 => M2 prec_list (M0 prec_list) (M2 prec_list m0 m1) end | @M1 _ a p => match states_kill_aux m s1 with | @M0 _ => M1 prec_list (N.double a) p | @M1 _ a0 p0 => M2 prec_list (M1 prec_list a p) (M1 prec_list a0 p0) | @M2 _ m0 m1 => M2 prec_list (M1 prec_list a p) (M2 prec_list m0 m1) end | @M2 _ m0 m1 => M2 prec_list (M2 prec_list m0 m1) (states_kill_aux m s1) end end) m s1 = M1 prec_list a p s3, s4 : Map prec_list Heqs0 : (fix states_kill_aux (m : Map bool) (s : state) {struct s} : state := match s with | @M0 _ => M0 prec_list | @M1 _ a p => match prec_list_kill m p with | Some p' => M1 prec_list a p' | None => M0 prec_list end | @M2 _ s0 s1 => match states_kill_aux m s0 with | @M0 _ => match states_kill_aux m s1 with | @M0 _ => M0 prec_list | @M1 _ a p => M1 prec_list (N.succ_double a) p | @M2 _ m0 m1 => M2 prec_list (M0 prec_list) (M2 prec_list m0 m1) end | @M1 _ a p => match states_kill_aux m s1 with | @M0 _ => M1 prec_list (N.double a) p | @M1 _ a0 p0 => M2 prec_list (M1 prec_list a p) (M1 prec_list a0 p0) | @M2 _ m0 m1 => M2 prec_list (M1 prec_list a p) (M2 prec_list m0 m1) end | @M2 _ m0 m1 => M2 prec_list (M2 prec_list m0 m1) (states_kill_aux m s1) end end) m s2 = M2 prec_list s3 s4 H' : MapGet prec_list s4 (N.pos p0) = Some p' The term \"M1 prec_list (N.double a) p\" has type \"Map prec_list\" while it is expected to have type \"nat\".", "type": "wrong_type", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "qsimpl use: M1,discriminate,injection,eqb_eq,pl_tl_length,M0,MapGet,N,auto,prec_list.", "exn": "The reference discriminate was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "intros a' p' H'.", "exn": "p' is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "intros a' p'' H'.", "exn": "H' is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "intros a' p'' H''.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "apply H in H'.", "exn": "Unable to apply lemma of type \"state_correct_wrt_sign (M2 prec_list s1 s2) sigma\" on hypothesis of type \"MapGet prec_list s4 (N.pos p0) = Some p'\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "qsimpl use: M1,discriminate,injection,eqb_eq,pl_tl_length,M0,MapGet,N,auto,prec_list.", "exn": "The reference discriminate was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "destruct H' as [n [H1 H2]].", "exn": "H1 is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct H' as [n [H1' H2]]."], "tactic": "destruct (ad_eqb a a') eqn: Eq_ad.", "exn": "The reference ad_eqb was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct H' as [n [H1' H2]]."], "tactic": "apply Nat.eqb_eq in Eq_ad.", "exn": "No such hypothesis: Eq_ad", "type": "no_hypos", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct H' as [n [H1' H2]]."], "tactic": "qsimpl use: M1,discriminate,injection,eqb_eq,pl_tl_length,M0,MapGet,N,auto,prec_list.", "exn": "The reference discriminate was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct H' as [n [H1' H2]]."], "tactic": "exists n.", "exn": "The reference n was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct H' as [n [H1' H2]]."], "tactic": "split.", "exn": "Unable to find an instance for the variable x.", "type": "no_instance_var", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct H' as [n [H1' H2]]."], "tactic": "qsimpl use: M1,discriminate,injection,eqb_eq,pl_tl_length,M0,MapGet,N,auto,prec_list.", "exn": "The reference discriminate was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct H' as [n [H1' H2]]."], "tactic": "unfold MapGet in H'.", "exn": "No such hypothesis: H'", "type": "no_hypos", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct H' as [n [H1' H2]]."], "tactic": "qsimpl use: M1,discriminate,injection,eqb_eq,pl_tl_length,M0,MapGet,N,auto,prec_list.", "exn": "The reference discriminate was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct H' as [n [H1' H2]]."], "tactic": "destruct (ad_eqb a (N.double a)) eqn: Eq_ad'.", "exn": "The reference ad_eqb was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct H' as [n [H1' H2]]."], "tactic": "-", "exn": "Wrong bullet -: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct H' as [n [H1' H2]].", "shelve."], "tactic": "-", "exn": "Wrong bullet -: Expecting *.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct H' as [n [H1' H2]].", "shelve.", "*"], "tactic": "apply ad_eqb_eq in Eq_ad'.", "exn": "No such hypothesis: Eq_ad'", "type": "no_hypos", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct H' as [n [H1' H2]].", "shelve.", "*"], "tactic": "qsimpl use: M1,discriminate,injection,eqb_eq,pl_tl_length,M0,MapGet,N,auto,prec_list.", "exn": "The reference discriminate was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct H' as [n [H1' H2]].", "shelve.", "*"], "tactic": "discriminate Eq_ad'.", "exn": "The reference Eq_ad' was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct H' as [n [H1' H2]].", "shelve.", "*"], "tactic": "-", "exn": "Wrong bullet -: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct H' as [n [H1' H2]].", "shelve.", "*", "shelve."], "tactic": "-", "exn": "Wrong bullet -: Expecting *.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct H' as [n [H1' H2]].", "shelve.", "*", "shelve.", "*"], "tactic": "apply ad_eqb_neq in Eq_ad'.", "exn": "No such hypothesis: Eq_ad'", "type": "no_hypos", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct H' as [n [H1' H2]].", "shelve.", "*", "shelve.", "*"], "tactic": "qsimpl use: M1,discriminate,injection,eqb_eq,pl_tl_length,M0,MapGet,N,auto,prec_list.", "exn": "The reference discriminate was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct H' as [n [H1' H2]].", "shelve.", "*", "shelve.", "*"], "tactic": "rewrite Eq_ad in H'.", "exn": "The reference Eq_ad was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct H' as [n [H1' H2]].", "shelve.", "*", "shelve.", "*"], "tactic": "*", "exn": "Wrong bullet *: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct H' as [n [H1' H2]].", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "exists (M1 prec_list a p).", "exn": "The reference p was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct H' as [n [H1' H2]].", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "intros a' p' H'.", "exn": "p' is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct H' as [n [H1' H2]].", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "intros a' p'' H'.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct H' as [n [H1' H2]].", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "apply H in H'.", "exn": "No such hypothesis: H'", "type": "no_hypos", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct H' as [n [H1' H2]].", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "qsimpl use: M1,discriminate,Nat,eqb_neq,injection,eqb_eq,pl_tl_length,M0,MapGet,N,auto,prec_list.", "exn": "The reference discriminate was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct H' as [n [H1' H2]].", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "destruct H' as [n [H1 H2]].", "exn": "The reference H' was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct H' as [n [H1' H2]].", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "destruct (ad_eqb a a') eqn: Eq_ad.", "exn": "The reference ad_eqb was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct H' as [n [H1' H2]].", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "apply Nat.eqb_eq in Eq_ad.", "exn": "No such hypothesis: Eq_ad", "type": "no_hypos", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct H' as [n [H1' H2]].", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "qsimpl use: M1,discriminate,Nat,eqb_neq,injection,eqb_eq,pl_tl_length,M0,MapGet,N,auto,prec_list.", "exn": "The reference discriminate was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct H' as [n [H1' H2]].", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "exists n.", "exn": "The reference n was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct H' as [n [H1' H2]].", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "split.", "exn": "Unable to find an instance for the variable x.", "type": "no_instance_var", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct H' as [n [H1' H2]].", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "qsimpl use: M1,discriminate,Nat,eqb_neq,injection,eqb_eq,pl_tl_length,M0,MapGet,N,auto,prec_list.", "exn": "The reference discriminate was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct H' as [n [H1' H2]].", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "unfold MapGet in H'.", "exn": "No such hypothesis: H'", "type": "no_hypos", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct H' as [n [H1' H2]].", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "qsimpl use: M1,discriminate,Nat,eqb_neq,injection,eqb_eq,pl_tl_length,M0,MapGet,N,auto,prec_list.", "exn": "The reference discriminate was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct H' as [n [H1' H2]].", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "destruct (ad_eqb a a).", "exn": "The reference ad_eqb was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct H' as [n [H1' H2]].", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "-", "exn": "Wrong bullet -: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct H' as [n [H1' H2]].", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve."], "tactic": "-", "exn": "Wrong bullet -: Expecting *.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct H' as [n [H1' H2]].", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "discriminate Eq_ad.", "exn": "The reference Eq_ad was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct H' as [n [H1' H2]].", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "-", "exn": "Wrong bullet -: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct H' as [n [H1' H2]].", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve."], "tactic": "-", "exn": "Wrong bullet -: Expecting *.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct H' as [n [H1' H2]].", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "apply H.", "exn": "In environment o : forall A : Type, Map A -> ad -> option A X0 : forall A : Type, Map A H1 : forall x y : bool, Is_true (eqb x y) -> x = y H0 : forall (d : preDTA) (p : prec_list) (plp : pl_path), pl_path_incl plp p -> pl_path_true plp (dta_non_empty_states d) -> exists tl : term_list, pl_path_recon d tl plp X : forall A : Type, ad -> A -> Map A s1, s2 : Map prec_list m : Map bool sigma : signature H : state_correct_wrt_sign (M2 prec_list s1 s2) sigma Eq : states_kill_aux m s1 = M0 prec_list p' : prec_list s3, s4 : Map prec_list Heqs : (fix states_kill_aux (m : Map bool) (s : state) {struct s} : state := match s with | @M0 _ => M0 prec_list | @M1 _ a p => match prec_list_kill m p with | Some p' => M1 prec_list a p' | None => M0 prec_list end | @M2 _ s0 s1 => match states_kill_aux m s0 with | @M0 _ => match states_kill_aux m s1 with | @M0 _ => M0 prec_list | @M1 _ a p => M1 prec_list (N.succ_double a) p | @M2 _ m0 m1 => M2 prec_list (M0 prec_list) (M2 prec_list m0 m1) end | @M1 _ a p => match states_kill_aux m s1 with | @M0 _ => M1 prec_list (N.double a) p | @M1 _ a0 p0 => M2 prec_list (M1 prec_list a p) (M1 prec_list a0 p0) | @M2 _ m0 m1 => M2 prec_list (M1 prec_list a p) (M2 prec_list m0 m1) end | @M2 _ m0 m1 => M2 prec_list (M2 prec_list m0 m1) (states_kill_aux m s1) end end) m s1 = M2 prec_list s3 s4 H' : MapGet prec_list s3 0%N = Some p' Unable to unify \"state_correct_wrt_sign (M2 prec_list s1 s2) sigma\" with \"exists n : nat, o nat sigma 0%N = Some n /\\\\ pl_tl_length p' n\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct H' as [n [H1' H2]].", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "qsimpl use: M1,discriminate,Nat,eqb_neq,injection,eqb_eq,pl_tl_length,M0,MapGet,N,auto,prec_list.", "exn": "The reference discriminate was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct H' as [n [H1' H2]].", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "apply pl_tl_length.", "exn": "In environment o : forall A : Type, Map A -> ad -> option A X0 : forall A : Type, Map A H1 : forall x y : bool, Is_true (eqb x y) -> x = y H0 : forall (d : preDTA) (p : prec_list) (plp : pl_path), pl_path_incl plp p -> pl_path_true plp (dta_non_empty_states d) -> exists tl : term_list, pl_path_recon d tl plp X : forall A : Type, ad -> A -> Map A s1, s2 : Map prec_list m : Map bool sigma : signature H : state_correct_wrt_sign (M2 prec_list s1 s2) sigma Eq : states_kill_aux m s1 = M0 prec_list p' : prec_list s3, s4 : Map prec_list Heqs : (fix states_kill_aux (m : Map bool) (s : state) {struct s} : state := match s with | @M0 _ => M0 prec_list | @M1 _ a p => match prec_list_kill m p with | Some p' => M1 prec_list a p' | None => M0 prec_list end | @M2 _ s0 s1 => match states_kill_aux m s0 with | @M0 _ => match states_kill_aux m s1 with | @M0 _ => M0 prec_list | @M1 _ a p => M1 prec_list (N.succ_double a) p | @M2 _ m0 m1 => M2 prec_list (M0 prec_list) (M2 prec_list m0 m1) end | @M1 _ a p => match states_kill_aux m s1 with | @M0 _ => M1 prec_list (N.double a) p | @M1 _ a0 p0 => M2 prec_list (M1 prec_list a p) (M1 prec_list a0 p0) | @M2 _ m0 m1 => M2 prec_list (M1 prec_list a p) (M2 prec_list m0 m1) end | @M2 _ m0 m1 => M2 prec_list (M2 prec_list m0 m1) (states_kill_aux m s1) end end) m s1 = M2 prec_list s3 s4 H' : MapGet prec_list s3 0%N = Some p' Unable to unify \"Prop\" with \"exists n : nat, o nat sigma 0%N = Some n /\\\\ pl_tl_length p' n\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct H' as [n [H1' H2]].", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "qsimpl use: M1,discriminate,Nat,eqb_neq,injection,eqb_eq,pl_tl_length,M0,MapGet,N,auto,prec_list.", "exn": "The reference discriminate was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct H' as [n [H1' H2]].", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "apply Nat.eqb_neq in Eq_ad.", "exn": "No such hypothesis: Eq_ad", "type": "no_hypos", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct H' as [n [H1' H2]].", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "qsimpl use: M1,discriminate,Nat,eqb_neq,injection,eqb_eq,pl_tl_length,M0,MapGet,N,auto,prec_list.", "exn": "The reference discriminate was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct H' as [n [H1' H2]].", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "rewrite Eq_ad.", "exn": "The reference Eq_ad was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct H' as [n [H1' H2]].", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "apply H.", "exn": "In environment o : forall A : Type, Map A -> ad -> option A X0 : forall A : Type, Map A H1 : forall x y : bool, Is_true (eqb x y) -> x = y H0 : forall (d : preDTA) (p : prec_list) (plp : pl_path), pl_path_incl plp p -> pl_path_true plp (dta_non_empty_states d) -> exists tl : term_list, pl_path_recon d tl plp X : forall A : Type, ad -> A -> Map A s1, s2 : Map prec_list m : Map bool sigma : signature H : state_correct_wrt_sign (M2 prec_list s1 s2) sigma Eq : states_kill_aux m s1 = M0 prec_list p' : prec_list s3, s4 : Map prec_list Heqs : (fix states_kill_aux (m : Map bool) (s : state) {struct s} : state := match s with | @M0 _ => M0 prec_list | @M1 _ a p => match prec_list_kill m p with | Some p' => M1 prec_list a p' | None => M0 prec_list end | @M2 _ s0 s1 => match states_kill_aux m s0 with | @M0 _ => match states_kill_aux m s1 with | @M0 _ => M0 prec_list | @M1 _ a p => M1 prec_list (N.succ_double a) p | @M2 _ m0 m1 => M2 prec_list (M0 prec_list) (M2 prec_list m0 m1) end | @M1 _ a p => match states_kill_aux m s1 with | @M0 _ => M1 prec_list (N.double a) p | @M1 _ a0 p0 => M2 prec_list (M1 prec_list a p) (M1 prec_list a0 p0) | @M2 _ m0 m1 => M2 prec_list (M1 prec_list a p) (M2 prec_list m0 m1) end | @M2 _ m0 m1 => M2 prec_list (M2 prec_list m0 m1) (states_kill_aux m s1) end end) m s1 = M2 prec_list s3 s4 H' : MapGet prec_list s3 0%N = Some p' Unable to unify \"state_correct_wrt_sign (M2 prec_list s1 s2) sigma\" with \"exists n : nat, o nat sigma 0%N = Some n /\\\\ pl_tl_length p' n\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros s m sigma H.", "unfold states_kill_aux.", "destruct s.", "-", "unfold state_correct_wrt_sign in H.", "intros a p H'.", "apply H in H'.", "destruct H' as [n [H1 H2]].", "exists n.", "split.", "+", "qsimpl.", "+", "qsimpl use: pl_tl_length.", "-", "destruct (prec_list_kill m p) eqn: Eq_kill.", "+", "qsimpl use: M1,prec_list,pl_tl_length.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,prec_list,pl_tl_length.", "destruct H' as [n [H1 H2]].", "qsimpl use: M1,prec_list,pl_tl_length.", "qsimpl use: MapGet,M1,prec_list,pl_tl_length.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "qsimpl use: M1,eqb_eq,pl_tl_length,MapGet,prec_list.", "shelve.", "+", "qsimpl use: M1,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "shelve.", "-", "destruct (states_kill_aux m s1) eqn: Eq.", "+", "unfold state_correct_wrt_sign.", "intros a' p' H'.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "qsimpl use: M1,dt_kill_empty_kill_empty_2,eqb_eq,pl_tl_length,M0,MapGet,prec_list.", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct (states_kill_aux m s2) eqn: Eq'.", "destruct (states_kill_aux m s1) eqn: Eq''.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "destruct H' as [n [H1' H2]].", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*", "shelve.", "*"], "tactic": "qsimpl use: M1,discriminate,Nat,eqb_neq,injection,eqb_eq,pl_tl_length,M0,MapGet,N,auto,prec_list.", "exn": "The reference discriminate was not found in the current environment.", "type": "ref_not_found", "handled": true}]}, "chat": [], "original": "intros s m sigma H. unfold states_kill_aux. destruct s. - unfold state_correct_wrt_sign in H. intros a p H'. apply H in H'. destruct H' as [n [H1 H2]]. exists n. split. + unfold state_correct_wrt_sign. intros a' p' H''. apply H in H''. destruct H'' as [n' [H1' H2']]. rewrite H1'. auto. + apply pl_tl_length. auto. - destruct (prec_list_kill m p) eqn: Eq_kill. + exists (M1 prec_list a p0). unfold state_correct_wrt_sign. intros a' p' H'. apply H in H'. destruct H' as [n [H1 H2]]. exists n. split. * unfold MapGet in H'. destruct (ad_eqb a a') eqn: Eq_ad. { apply Nat.eqb_eq in Eq_ad. subst. rewrite <- H1. rewrite <- H1'. auto. } { apply Nat.eqb_neq in Eq_ad. unfold MapGet. rewrite Eq_ad. apply H. auto. } * apply pl_tl_length. auto. + exists (M0 prec_list). unfold state_correct_wrt_sign. intros a p' H'. discriminate H'. - destruct (states_kill_aux m s1) eqn: Eq. + exists (M1 prec_list (N.double a) p). unfold state_correct_wrt_sign. intros a' p' H'. apply H in H'. destruct H' as [n [H1 H2]]. destruct (ad_eqb a a') eqn: Eq_ad. * apply Nat.eqb_eq in Eq_ad. subst. exists n. split. { unfold MapGet in H'. destruct (ad_eqb a (N.double a)) eqn: Eq_ad'. - apply ad_eqb_eq in Eq_ad'. discriminate Eq_ad'. - apply ad_eqb_neq in Eq_ad'. rewrite Eq_ad in H'. injection H' as H''. rewrite <- Eq_kill in H''. discriminate H''. } { apply pl_tl_length. auto. } * apply Nat.eqb_neq in Eq_ad. unfold MapGet. rewrite Eq_ad. apply H. auto. + destruct (prec_list_kill m p) eqn: Eq_kill'. * destruct (states_kill_aux m s0) eqn: Eq'. { destruct (states_kill_aux m1 s1) eqn: Eq''. - exists (M2 prec_list (M0 prec_list) (M2 prec_list m2 m3)). unfold state_correct_wrt_sign. intros a p' H'. apply H in H'. destruct H' as [n [H1 H2]]. destruct (ad_eqb a a0) eqn: Eq_ad. + apply Nat.eqb_eq in Eq_ad. subst. exists n. split. { unfold MapGet in H'. destruct (ad_eqb a a) eqn: Eq_ad'. - apply ad_eqb_eq in Eq_ad'. discriminate Eq_ad'. - apply ad_eqb_neq in Eq_ad'. rewrite Eq_ad in H'. injection H' as H''. rewrite <- Eq_kill in H''. discriminate H''. } { apply pl_tl_length. auto. } + apply Nat.eqb_neq in Eq_ad. unfold MapGet. rewrite Eq_ad. apply H. auto. - exists (M1 prec_list (N.double a) p). unfold state_correct_wrt_sign. intros a' p' H'. apply H in H'. destruct H' as [n [H1 H2]]. destruct (ad_eqb a a') eqn: Eq_ad. { apply Nat.eqb_eq in Eq_ad. subst. exists n. split. { unfold MapGet in H'. destruct (ad_eqb a (N.double a)) eqn: Eq_ad'. - apply ad_eqb_eq in Eq_ad'. discriminate Eq_ad'. - apply ad_eqb_neq in Eq_ad'. rewrite Eq_ad in H'. injection H' as H''. rewrite <- Eq_kill in H''. discriminate H''. } { apply pl_tl_length. auto. } } { apply Nat.eqb_neq in Eq_ad. unfold MapGet. rewrite Eq_ad. apply H. auto. } } * exists (M1 prec_list a p). unfold state_correct_wrt_sign. intros a' p' H'. apply H in H'. destruct H' as [n [H1 H2]]. destruct (ad_eqb a a') eqn: Eq_ad. { apply Nat.eqb_eq in Eq_ad. subst. exists n. split. { unfold MapGet in H'. destruct (ad_eqb a a). - discriminate Eq_ad. - apply H. auto. } { apply pl_tl_length. auto. } } { apply Nat.eqb_neq in Eq_ad. unfold MapGet. rewrite Eq_ad. apply H. auto. }", "succ": true}]