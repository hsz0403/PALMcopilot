[{"history": {"proof": "intros d a t H. inversion H as [d' a' t' ladj H0 H1]. qsimpl time: 1 use: dt_non_empty_5.", "repairs": ["", "used_var", "cannot_apply_in"], "exceptions": [{"ctx": ["intros d a t H."], "tactic": "inversion H as [d a t ladj H0 H1].", "exn": "d is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros d a t H."], "tactic": "inversion H as [d' a t ladj H0 H1].", "exn": "a is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros d a t H."], "tactic": "inversion H as [d' a' t ladj H0 H1].", "exn": "t is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros d a t H.", "inversion H as [d' a' t' ladj H0 H1]."], "tactic": "apply (dt_non_empty_5 d a t) in H1.", "exn": "Unable to apply lemma of type \"reconnaissance d a t -> forall n : nat, term_high t <= n -> MapGet bool (power (Map bool) (dta_app_ne d) (map_mini state d) n) a = Some true\" on hypothesis of type \"state_reconnait d ladj t\".", "type": "cannot_apply_in", "handled": true}]}, "chat": [], "original": "intros d a t H. inversion H as [d a t ladj H0 H1]. apply (dt_non_empty_5 d a t) in H1. apply H1.", "succ": true}]