[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros a b Hz_a Hz_b."], "tactic": "destruct (eqA_dec (multTerm multA a b) A0) as [H | H].", "exn": "In environment A : Set A0, A1 : A eqA : A -> A -> Prop plusA : A -> A -> A invA : A -> A minusA, multA : A -> A -> A divA : A -> forall b : A, ~ eqA b A0 -> A cs : CoefStructure A A0 A1 eqA plusA invA minusA multA divA eqA_dec : forall a b : A, {eqA a b} + {~ eqA a b} n : nat ltM : mon n -> mon n -> Prop ltM_dec : forall a b : mon n, {ltM a b} + {ltM b a} + {a = b} os : OrderStructure (mon n) (zero_mon n) ltM (mult_mon n) gb := fun H' : mon n * bool => let (_, b) := H' in b : mon n * bool -> bool gm := fun H' : mon n * bool => let (m, _) := H' in m : mon n * bool -> mon n a, b : Term A n Hz_a : ~ zeroP A0 eqA (n:=n) a Hz_b : ~ zeroP A0 eqA (n:=n) b The term \"multTerm multA (n:=n) a b\" has type \"Term A n\" while it is expected to have type \"A\".", "type": "wrong_type", "handled": true}, {"ctx": ["intros a b Hz_a Hz_b.", "qsimpl use: multTerm.", "right.", "intros contra."], "tactic": "apply H.", "exn": "The reference H was not found in the current environment.", "type": "ref_not_found", "handled": true}]}, "chat": [], "original": "intros a b Hz_a Hz_b. destruct (eqA_dec (multTerm multA a b) A0) as [H | H]. - right. intros contra. apply H. destruct contra as [nZa _]. apply (multTerm_zeroP_div _ _ A _ plusA _ invA _ multA _ divA cs eqA_dec) in H. destruct H as [H | H]; contradiction. - left. apply divTerm_def; auto.", "succ": false}]