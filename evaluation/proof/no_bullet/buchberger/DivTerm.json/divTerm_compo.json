[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros a b c nZb nZc divPab divPbc."], "tactic": "apply (eqT_divTerm_plusTerm A eqA n a b c nZc nZb divPab divPbc).", "exn": "In environment A : Set A0, A1 : A eqA : A -> A -> Prop plusA : A -> A -> A invA : A -> A minusA, multA : A -> A -> A divA : A -> forall b : A, ~ eqA b A0 -> A cs : CoefStructure A A0 A1 eqA plusA invA minusA multA divA eqA_dec : forall a b : A, {eqA a b} + {~ eqA a b} n : nat ltM : mon n -> mon n -> Prop ltM_dec : forall a b : mon n, {ltM a b} + {ltM b a} + {a = b} os : OrderStructure (mon n) (zero_mon n) ltM (mult_mon n) gb := fun H' : mon n * bool => let (_, b) := H' in b : mon n * bool -> bool gm := fun H' : mon n * bool => let (m, _) := H' in m : mon n * bool -> mon n a, b, c : Term A n nZb : ~ zeroP A0 eqA (n:=n) b nZc : ~ zeroP A0 eqA (n:=n) c divPab : divP a b divPbc : divP b c The term \"A\" has type \"Set\" while it is expected to have type \"Term A n\".", "type": "wrong_type", "handled": true}]}, "chat": [], "original": "intros a b c nZb nZc divPab divPbc. apply (eqT_divTerm_plusTerm A eqA n a b c nZc nZb divPab divPbc).", "succ": false}]