[{"history": {"proof": "intros. unfold poly in *. qsimpl use: CombLinear. qsimpl use: poly,CombLinear. qsimpl use: poly,CombLinear. qsimpl use: poly,CombLinear. hauto lq: on depth: 3.", "repairs": ["", "", "not_evaluable", "no_hypos", "not_evaluable", "not_evaluable", "hammer"], "exceptions": [{"ctx": ["intros.", "unfold poly in *."], "tactic": "unfold CombLinear in *.", "exn": "Cannot coerce CombLinear to an evaluable reference.", "type": "not_evaluable", "handled": true}, {"ctx": ["intros.", "unfold poly in *.", "qsimpl use: CombLinear."], "tactic": "unfold CombLinear in H.", "exn": "Cannot coerce CombLinear to an evaluable reference.", "type": "not_evaluable", "handled": true}, {"ctx": ["intros.", "unfold poly in *.", "qsimpl use: CombLinear."], "tactic": "unfold CombLinear in H.", "exn": "Cannot coerce CombLinear to an evaluable reference.", "type": "not_evaluable", "handled": true}, {"ctx": ["intros.", "unfold poly in *.", "qsimpl use: CombLinear."], "tactic": "unfold CombLinear; intros.", "exn": "Cannot coerce CombLinear to an evaluable reference.", "type": "not_evaluable", "handled": true}, {"ctx": ["intros.", "unfold poly in *.", "qsimpl use: CombLinear."], "tactic": "unfold CombLinear in *.", "exn": "Cannot coerce CombLinear to an evaluable reference.", "type": "not_evaluable", "handled": true}, {"ctx": ["intros.", "unfold poly in *.", "qsimpl use: CombLinear."], "tactic": "unfold CombLinear in H.", "exn": "Cannot coerce CombLinear to an evaluable reference.", "type": "not_evaluable", "handled": true}, {"ctx": ["intros.", "unfold poly in *.", "qsimpl use: CombLinear."], "tactic": "unfold CombLinear in H.", "exn": "Cannot coerce CombLinear to an evaluable reference.", "type": "not_evaluable", "handled": true}, {"ctx": ["intros.", "unfold poly in *.", "qsimpl use: CombLinear."], "tactic": "unfold poly in H.", "exn": "No such hypothesis: H", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "unfold poly in *.", "qsimpl use: CombLinear.", "qsimpl use: poly,CombLinear."], "tactic": "unfold CombLinear in H.", "exn": "Cannot coerce CombLinear to an evaluable reference.", "type": "not_evaluable", "handled": true}, {"ctx": ["intros.", "unfold poly in *.", "qsimpl use: CombLinear.", "qsimpl use: poly,CombLinear.", "qsimpl use: poly,CombLinear."], "tactic": "unfold CombLinear in *; intros.", "exn": "Cannot coerce CombLinear to an evaluable reference.", "type": "not_evaluable", "handled": true}, {"ctx": ["intros.", "unfold poly in *.", "qsimpl use: CombLinear.", "qsimpl use: poly,CombLinear.", "qsimpl use: poly,CombLinear.", "qsimpl use: poly,CombLinear."], "tactic": "apply H.", "exn": "The reference H was not found in the current environment.", "type": "ref_not_found", "handled": true}]}, "chat": [], "original": "intros. unfold poly in *. unfold poly in H. unfold CombLinear in *. unfold CombLinear in H. unfold CombLinear in H. unfold CombLinear; intros. unfold CombLinear in *. unfold CombLinear in H. unfold CombLinear in H. unfold poly; intros. unfold poly in H. unfold CombLinear in H. unfold CombLinear in *; intros. apply H.", "succ": true}]