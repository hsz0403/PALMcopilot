[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros r p q a nZa Cp Cq Cr.", "unfold canonical in Cp, Cq, Cr.", "unfold canonical.", "split.", "-"], "tactic": "rewrite <- (spminusf_plusTerm A A0 A1 eqA plusA invA minusA multA divA cs eqA_dec n ltM ltM_dec a nZa p q).", "exn": "In environment A : Set A0, A1 : A eqA : A -> A -> Prop plusA : A -> A -> A invA : A -> A minusA, multA : A -> A -> A divA : A -> forall b : A, ~ eqA b A0 -> A cs : CoefStructure A A0 A1 eqA plusA invA minusA multA divA eqA_dec : forall a b : A, {eqA a b} + {~ eqA a b} n : nat ltM : mon n -> mon n -> Prop ltM_dec : forall a b : mon n, {ltM a b} + {ltM b a} + {a = b} os : OrderStructure (mon n) (zero_mon n) ltM (mult_mon n) r, p, q : list (Term A n) a : Term A n nZa : ~ zeroP A0 eqA (n:=n) a Cp : olist (A:=A) ltM p /\\\\ nZterm A0 eqA (n:=n) p Cq : olist (A:=A) ltM q /\\\\ nZterm A0 eqA (n:=n) q Cr : olist (A:=A) ltM r /\\\\ nZterm A0 eqA (n:=n) r The term \"a\" has type \"Term A n\" while it is expected to have type \"OrderStructure (mon n) (zero_mon n) ltM (mult_mon n)\".", "type": "wrong_type", "handled": true}, {"ctx": ["intros r p q a nZa Cp Cq Cr.", "unfold canonical in Cp, Cq, Cr.", "unfold canonical.", "split.", "-", "qsimpl time: 1 use: spminusf_plusTerm."], "tactic": "apply canonical_spminusf_full_t.", "exn": "In environment H : forall (A : Set) (A0 A1 : A) (eqA : A -> A -> Prop) (plusA : A -> A -> A) (invA : A -> A) (minusA multA : A -> A -> A) (divA : A -> forall b : A, (eqA b A0 -> False) -> A), CoefStructure A A0 A1 eqA plusA invA minusA multA divA -> forall (eqA_dec : forall a b : A, {eqA a b} + {eqA a b -> False}) (n : nat) (ltM : mon n -> mon n -> Prop) (ltM_dec : forall a b : mon n, {ltM a b} + {ltM b a} + {a = b}), OrderStructure (mon n) (zero_mon n) ltM (mult_mon n) -> forall (a b c : Term A n) (nZc : zeroP A0 eqA (n:=n) c -> False) (p q r : list (Term A n)), canonical A0 eqA ltM p -> canonical A0 eqA ltM q -> canonical A0 eqA ltM r -> divP A A0 eqA multA divA n a c -> divP A A0 eqA multA divA n b c -> eqT (A:=A) (n:=n) a b -> (zeroP A0 eqA (n:=n) (plusTerm plusA (n:=n) a b) -> False) -> eqP A eqA n (spminusf A A0 A1 eqA invA minusA multA divA eqA_dec n ltM ltM_dec (plusTerm plusA (n:=n) a b) c nZc (pluspf A0 (eqA:=eqA) plusA eqA_dec (ltM:=ltM) ltM_dec p q) r) (pluspf A0 (eqA:=eqA) plusA eqA_dec (ltM:=ltM) ltM_dec (spminusf A A0 A1 eqA invA minusA multA divA eqA_dec n ltM ltM_dec a c nZc p r) (spminusf A A0 A1 eqA invA minusA multA divA eqA_dec n ltM ltM_dec b c nZc q r)) A : Set A0, A1 : A eqA : A -> A -> Prop plusA : A -> A -> A invA : A -> A minusA, multA : A -> A -> A divA : A -> forall b : A, (eqA b A0 -> False) -> A eqA_dec : forall a b : A, {eqA a b} + {eqA a b -> False} n : nat ltM : mon n -> mon n -> Prop ltM_dec : forall a b : mon n, {ltM a b} + {ltM b a} + {a = b} r, p, q : list (Term A n) a : Term A n nZa : zeroP A0 eqA (n:=n) a -> False H0 : olist (A:=A) ltM r H1 : nZterm A0 eqA (n:=n) r H2 : olist (A:=A) ltM q H3 : nZterm A0 eqA (n:=n) q H4 : olist (A:=A) ltM p H5 : nZterm A0 eqA (n:=n) p M1_min : forall x : mon n, ltM x (zero_mon n) -> False ltM_nonrefl : forall x : mon n, ltM x x -> False ltM_trans : transitive (mon n) ltM ltM_wf : well_founded ltM ltM_plusr : forall x y z : mon n, ltM x y -> ltM (mult_mon n x z) (mult_mon n y z) ltM_plusl : forall x y z : mon n, ltM x y -> ltM (mult_mon n z x) (mult_mon n z y) A1_diff_A0 : eqA A1 A0 -> False eqA_ref : reflexive A eqA eqA_sym : symmetric A eqA eqA_trans : transitive A eqA plusA_assoc : forall a b c : A, eqA (plusA a (plusA b c)) (plusA (plusA a b) c) plusA_com : forall a b : A, eqA (plusA a b) (plusA b a) plusA_eqA_comp : forall a b c d : A, eqA a c -> eqA b d -> eqA (plusA a b) (plusA c d) plusA_A0 : forall a : A, eqA a (plusA a A0) invA_plusA : forall a : A, eqA A0 (plusA a (invA a)) invA_eqA_comp : forall a b : A, eqA a b -> eqA (invA a) (invA b) minusA_def : forall a b : A, eqA (minusA a b) (plusA a (invA b)) multA_eqA_comp : forall a b c d : A, eqA a c -> eqA b d -> eqA (multA a b) (multA c d) multA_assoc : forall a b c : A, eqA (multA a (multA b c)) (multA (multA a b) c) multA_com : forall a b : A, eqA (multA a b) (multA b a) multA_dist_l : forall a b c : A, eqA (plusA (multA c a) (multA c b)) (multA c (plusA a b)) multA_A0_l : forall a : A, eqA (multA A0 a) A0 multA_A1_l : forall a : A, eqA (multA A1 a) a divA_rew : forall (a b : A) (nZ1 nZ2 : eqA b A0 -> False), divA a b nZ1 = divA a b nZ2 divA_is_multA : forall (a b : A) (nZb : eqA b A0 -> False), eqA a (multA (divA a b nZb) b) divA_eqA_comp : forall (a b c d : A) (nZb : eqA b A0 -> False) (nZd : eqA d A0 -> False), eqA a c -> eqA b d -> eqA (divA a b nZb) (divA c d nZd) divA_multA_comp_r : forall (a b c : A) (nZc : eqA c A0 -> False), eqA (divA (multA a b) c nZc) (multA (divA a c nZc) b) divA_invA_r : forall (a b : A) (nZb : eqA b A0 -> False) (nZib : eqA (invA b) A0 -> False), eqA (divA a (invA b) nZib) (invA (divA a b nZb)) Unable to unify \"olist ?M6277 (pX ?M6280 (spminusf ?M6265 ?M6266 ?M6267 ?M6268 ?M6270 ?M6271 ?M6272 ?M6273 ?M6275 ?M6276 ?M6277 ?M6278 ?M6280 ?M6281 ?M6282 ?M6283 ?M6284)) /\\\\ nZterm ?M6266 ?M6268 (pX ?M6280 (spminusf ?M6265 ?M6266 ?M6267 ?M6268 ?M6270 ?M6271 ?M6272 ?M6273 ?M6275 ?M6276 ?M6277 ?M6278 ?M6280 ?M6281 ?M6282 ?M6283 ?M6284))\" with \"Relation_Operators_compat.Desc (mon n) ltM (fP A n (Rminus a nZa p q r))\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros r p q a nZa Cp Cq Cr. unfold canonical in Cp, Cq, Cr. unfold canonical. split. - rewrite <- (spminusf_plusTerm A A0 A1 eqA plusA invA minusA multA divA cs eqA_dec n ltM ltM_dec a nZa p q). apply canonical_spminusf_full_t. auto. auto. - apply canonical_reduce. auto. apply canonical_reduce. auto.", "succ": false}]