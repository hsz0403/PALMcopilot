[{"history": {"proof": "intros a b c H1 H2. unfold ltT in H2. hauto lq: on depth: 3. qsimpl time: 1 use: mon,ltT. qsimpl time: 1 use: mon,ltT,T2M. qsimpl time: 1 use: mon,ltT,T2M. qsimpl time: 1 use: ltT,T2M,minusTerm,mult_mon,mon. qsimpl time: 1 use: ltT,T2M,minusTerm,mult_mon,mon. qsimpl time: 1 use: ltT,T2M,minusTerm,mult_mon,mon. qsimpl time: 1 use: ltT,T2M,minusTerm,zero_mon,mult_mon,mon. qsimpl time: 1 use: ltT,T2M,minusTerm,zero_mon,mult_mon,mon. qsimpl time: 1 use: ltT,T2M,minusTerm,zero_mon,mult_mon,mon. qsimpl time: 1 use: ltT,T2M,minusTerm,zero_mon,mult_mon,mon. qsimpl time: 1 use: ltT,T2M,minusTerm,zero_mon,mult_mon,mon. qsimpl time: 1 use: ltT,T2M,minusTerm,zero_mon,mult_mon,mon. qsimpl time: 1 use: ltT,T2M,minusTerm,zero_mon,S,mult_mon,mon. qsimpl time: 1 use: ltT,T2M,minusTerm,zero_mon,S,mult_mon,mon.", "repairs": ["", "", "hammer", "not_evaluable", "not_evaluable", "not_evaluable", "not_evaluable", "not_evaluable", "not_evaluable", "not_evaluable", "not_evaluable", "not_evaluable", "not_evaluable", "not_evaluable", "not_evaluable", "not_evaluable", "cannot_unify"], "exceptions": [{"ctx": ["intros a b c H1 H2.", "unfold ltT in H2.", "unfold minusTerm."], "tactic": "unfold ltT, mon in H2.", "exn": "Cannot coerce mon to an evaluable reference.", "type": "not_evaluable", "handled": true}, {"ctx": ["intros a b c H1 H2.", "unfold ltT in H2.", "unfold minusTerm.", "qsimpl time: 1 use: mon,ltT.", "unfold T2M in H2."], "tactic": "unfold T2M, T2M, mon in H2.", "exn": "Cannot coerce mon to an evaluable reference.", "type": "not_evaluable", "handled": true}, {"ctx": ["intros a b c H1 H2.", "unfold ltT in H2.", "unfold minusTerm.", "qsimpl time: 1 use: mon,ltT.", "unfold T2M in H2.", "qsimpl time: 1 use: mon,ltT,T2M."], "tactic": "unfold T2M, T2M, mon in H2.", "exn": "Cannot coerce mon to an evaluable reference.", "type": "not_evaluable", "handled": true}, {"ctx": ["intros a b c H1 H2.", "unfold ltT in H2.", "unfold minusTerm.", "qsimpl time: 1 use: mon,ltT.", "unfold T2M in H2.", "qsimpl time: 1 use: mon,ltT,T2M.", "qsimpl time: 1 use: mon,ltT,T2M."], "tactic": "unfold ltT, mon, mult_mon, minusTerm in H2.", "exn": "Cannot coerce mon to an evaluable reference.", "type": "not_evaluable", "handled": true}, {"ctx": ["intros a b c H1 H2.", "unfold ltT in H2.", "unfold minusTerm.", "qsimpl time: 1 use: mon,ltT.", "unfold T2M in H2.", "qsimpl time: 1 use: mon,ltT,T2M.", "qsimpl time: 1 use: mon,ltT,T2M.", "qsimpl time: 1 use: ltT,T2M,minusTerm,mult_mon,mon."], "tactic": "unfold ltM in H2.", "exn": "Cannot coerce ltM to an evaluable reference.", "type": "not_evaluable", "handled": true}, {"ctx": ["intros a b c H1 H2.", "unfold ltT in H2.", "unfold minusTerm.", "qsimpl time: 1 use: mon,ltT.", "unfold T2M in H2.", "qsimpl time: 1 use: mon,ltT,T2M.", "qsimpl time: 1 use: mon,ltT,T2M.", "qsimpl time: 1 use: ltT,T2M,minusTerm,mult_mon,mon.", "qsimpl time: 1 use: ltT,T2M,minusTerm,mult_mon,mon."], "tactic": "unfold mon, mult_mon in H2.", "exn": "Cannot coerce mon to an evaluable reference.", "type": "not_evaluable", "handled": true}, {"ctx": ["intros a b c H1 H2.", "unfold ltT in H2.", "unfold minusTerm.", "qsimpl time: 1 use: mon,ltT.", "unfold T2M in H2.", "qsimpl time: 1 use: mon,ltT,T2M.", "qsimpl time: 1 use: mon,ltT,T2M.", "qsimpl time: 1 use: ltT,T2M,minusTerm,mult_mon,mon.", "qsimpl time: 1 use: ltT,T2M,minusTerm,mult_mon,mon.", "qsimpl time: 1 use: ltT,T2M,minusTerm,mult_mon,mon."], "tactic": "unfold mon, mult_mon, zero_mon in H2.", "exn": "Cannot coerce mon to an evaluable reference.", "type": "not_evaluable", "handled": true}, {"ctx": ["intros a b c H1 H2.", "unfold ltT in H2.", "unfold minusTerm.", "qsimpl time: 1 use: mon,ltT.", "unfold T2M in H2.", "qsimpl time: 1 use: mon,ltT,T2M.", "qsimpl time: 1 use: mon,ltT,T2M.", "qsimpl time: 1 use: ltT,T2M,minusTerm,mult_mon,mon.", "qsimpl time: 1 use: ltT,T2M,minusTerm,mult_mon,mon.", "qsimpl time: 1 use: ltT,T2M,minusTerm,mult_mon,mon.", "qsimpl time: 1 use: ltT,T2M,minusTerm,zero_mon,mult_mon,mon."], "tactic": "unfold mon in H2.", "exn": "Cannot coerce mon to an evaluable reference.", "type": "not_evaluable", "handled": true}, {"ctx": ["intros a b c H1 H2.", "unfold ltT in H2.", "unfold minusTerm.", "qsimpl time: 1 use: mon,ltT.", "unfold T2M in H2.", "qsimpl time: 1 use: mon,ltT,T2M.", "qsimpl time: 1 use: mon,ltT,T2M.", "qsimpl time: 1 use: ltT,T2M,minusTerm,mult_mon,mon.", "qsimpl time: 1 use: ltT,T2M,minusTerm,mult_mon,mon.", "qsimpl time: 1 use: ltT,T2M,minusTerm,mult_mon,mon.", "qsimpl time: 1 use: ltT,T2M,minusTerm,zero_mon,mult_mon,mon.", "qsimpl time: 1 use: ltT,T2M,minusTerm,zero_mon,mult_mon,mon."], "tactic": "unfold ltM in H2.", "exn": "Cannot coerce ltM to an evaluable reference.", "type": "not_evaluable", "handled": true}, {"ctx": ["intros a b c H1 H2.", "unfold ltT in H2.", "unfold minusTerm.", "qsimpl time: 1 use: mon,ltT.", "unfold T2M in H2.", "qsimpl time: 1 use: mon,ltT,T2M.", "qsimpl time: 1 use: mon,ltT,T2M.", "qsimpl time: 1 use: ltT,T2M,minusTerm,mult_mon,mon.", "qsimpl time: 1 use: ltT,T2M,minusTerm,mult_mon,mon.", "qsimpl time: 1 use: ltT,T2M,minusTerm,mult_mon,mon.", "qsimpl time: 1 use: ltT,T2M,minusTerm,zero_mon,mult_mon,mon.", "qsimpl time: 1 use: ltT,T2M,minusTerm,zero_mon,mult_mon,mon.", "qsimpl time: 1 use: ltT,T2M,minusTerm,zero_mon,mult_mon,mon."], "tactic": "unfold mon in H2.", "exn": "Cannot coerce mon to an evaluable reference.", "type": "not_evaluable", "handled": true}, {"ctx": ["intros a b c H1 H2.", "unfold ltT in H2.", "unfold minusTerm.", "qsimpl time: 1 use: mon,ltT.", "unfold T2M in H2.", "qsimpl time: 1 use: mon,ltT,T2M.", "qsimpl time: 1 use: mon,ltT,T2M.", "qsimpl time: 1 use: ltT,T2M,minusTerm,mult_mon,mon.", "qsimpl time: 1 use: ltT,T2M,minusTerm,mult_mon,mon.", "qsimpl time: 1 use: ltT,T2M,minusTerm,mult_mon,mon.", "qsimpl time: 1 use: ltT,T2M,minusTerm,zero_mon,mult_mon,mon.", "qsimpl time: 1 use: ltT,T2M,minusTerm,zero_mon,mult_mon,mon.", "qsimpl time: 1 use: ltT,T2M,minusTerm,zero_mon,mult_mon,mon.", "qsimpl time: 1 use: ltT,T2M,minusTerm,zero_mon,mult_mon,mon."], "tactic": "unfold ltM in H2.", "exn": "Cannot coerce ltM to an evaluable reference.", "type": "not_evaluable", "handled": true}, {"ctx": ["intros a b c H1 H2.", "unfold ltT in H2.", "unfold minusTerm.", "qsimpl time: 1 use: mon,ltT.", "unfold T2M in H2.", "qsimpl time: 1 use: mon,ltT,T2M.", "qsimpl time: 1 use: mon,ltT,T2M.", "qsimpl time: 1 use: ltT,T2M,minusTerm,mult_mon,mon.", "qsimpl time: 1 use: ltT,T2M,minusTerm,mult_mon,mon.", "qsimpl time: 1 use: ltT,T2M,minusTerm,mult_mon,mon.", "qsimpl time: 1 use: ltT,T2M,minusTerm,zero_mon,mult_mon,mon.", "qsimpl time: 1 use: ltT,T2M,minusTerm,zero_mon,mult_mon,mon.", "qsimpl time: 1 use: ltT,T2M,minusTerm,zero_mon,mult_mon,mon.", "qsimpl time: 1 use: ltT,T2M,minusTerm,zero_mon,mult_mon,mon.", "qsimpl time: 1 use: ltT,T2M,minusTerm,zero_mon,mult_mon,mon."], "tactic": "unfold mon, zero_mon in H2.", "exn": "Cannot coerce mon to an evaluable reference.", "type": "not_evaluable", "handled": true}, {"ctx": ["intros a b c H1 H2.", "unfold ltT in H2.", "unfold minusTerm.", "qsimpl time: 1 use: mon,ltT.", "unfold T2M in H2.", "qsimpl time: 1 use: mon,ltT,T2M.", "qsimpl time: 1 use: mon,ltT,T2M.", "qsimpl time: 1 use: ltT,T2M,minusTerm,mult_mon,mon.", "qsimpl time: 1 use: ltT,T2M,minusTerm,mult_mon,mon.", "qsimpl time: 1 use: ltT,T2M,minusTerm,mult_mon,mon.", "qsimpl time: 1 use: ltT,T2M,minusTerm,zero_mon,mult_mon,mon.", "qsimpl time: 1 use: ltT,T2M,minusTerm,zero_mon,mult_mon,mon.", "qsimpl time: 1 use: ltT,T2M,minusTerm,zero_mon,mult_mon,mon.", "qsimpl time: 1 use: ltT,T2M,minusTerm,zero_mon,mult_mon,mon.", "qsimpl time: 1 use: ltT,T2M,minusTerm,zero_mon,mult_mon,mon.", "qsimpl time: 1 use: ltT,T2M,minusTerm,zero_mon,mult_mon,mon."], "tactic": "unfold mon, mult_mon, S in H2.", "exn": "Cannot coerce mon to an evaluable reference.", "type": "not_evaluable", "handled": true}, {"ctx": ["intros a b c H1 H2.", "unfold ltT in H2.", "unfold minusTerm.", "qsimpl time: 1 use: mon,ltT.", "unfold T2M in H2.", "qsimpl time: 1 use: mon,ltT,T2M.", "qsimpl time: 1 use: mon,ltT,T2M.", "qsimpl time: 1 use: ltT,T2M,minusTerm,mult_mon,mon.", "qsimpl time: 1 use: ltT,T2M,minusTerm,mult_mon,mon.", "qsimpl time: 1 use: ltT,T2M,minusTerm,mult_mon,mon.", "qsimpl time: 1 use: ltT,T2M,minusTerm,zero_mon,mult_mon,mon.", "qsimpl time: 1 use: ltT,T2M,minusTerm,zero_mon,mult_mon,mon.", "qsimpl time: 1 use: ltT,T2M,minusTerm,zero_mon,mult_mon,mon.", "qsimpl time: 1 use: ltT,T2M,minusTerm,zero_mon,mult_mon,mon.", "qsimpl time: 1 use: ltT,T2M,minusTerm,zero_mon,mult_mon,mon.", "qsimpl time: 1 use: ltT,T2M,minusTerm,zero_mon,mult_mon,mon.", "qsimpl time: 1 use: ltT,T2M,minusTerm,zero_mon,S,mult_mon,mon."], "tactic": "apply H2.", "exn": "In environment H18 : forall d : nat, mon d -> mon d -> mon d H16 : forall d : nat, mon d X22 : forall A : Set, (A -> A -> A) -> forall n : nat, Term A n -> Term A n -> Term A n X21 : forall (A : Set) (n : nat), Term A n -> mon n A : Set n : nat H15 : forall d : nat, mon d -> mon d -> mon d H14 : forall d : nat, mon d X20 : forall A : Set, (A -> A -> A) -> forall n : nat, Term A n -> Term A n -> Term A n X19 : forall (A : Set) (n : nat), Term A n -> mon n H13 : forall d : nat, mon d -> mon d -> mon d H12 : forall d : nat, mon d X18 : forall A : Set, (A -> A -> A) -> forall n : nat, Term A n -> Term A n -> Term A n X17 : forall (A : Set) (n : nat), Term A n -> mon n H11 : forall d : nat, mon d -> mon d -> mon d H10 : forall d : nat, mon d X16 : forall A : Set, (A -> A -> A) -> forall n : nat, Term A n -> Term A n -> Term A n X15 : forall (A : Set) (n : nat), Term A n -> mon n H9 : forall d : nat, mon d -> mon d -> mon d H8 : forall d : nat, mon d X14 : forall A : Set, (A -> A -> A) -> forall n : nat, Term A n -> Term A n -> Term A n X13 : forall (A : Set) (n : nat), Term A n -> mon n H7 : forall d : nat, mon d -> mon d -> mon d H6 : forall d : nat, mon d X12 : forall A : Set, (A -> A -> A) -> forall n : nat, Term A n -> Term A n -> Term A n X11 : forall (A : Set) (n : nat), Term A n -> mon n H5 : forall d : nat, mon d -> mon d -> mon d H4 : forall d : nat, mon d X10 : forall A : Set, (A -> A -> A) -> forall n : nat, Term A n -> Term A n -> Term A n X9 : forall (A : Set) (n : nat), Term A n -> mon n H3 : forall d : nat, mon d -> mon d -> mon d X8 : forall A : Set, (A -> A -> A) -> forall n : nat, Term A n -> Term A n -> Term A n X7 : forall (A : Set) (n : nat), Term A n -> mon n H1 : forall d : nat, mon d -> mon d -> mon d X6 : forall A : Set, (A -> A -> A) -> forall n : nat, Term A n -> Term A n -> Term A n X5 : forall (A : Set) (n : nat), Term A n -> mon n H0 : forall d : nat, mon d -> mon d -> mon d X4 : forall A : Set, (A -> A -> A) -> forall n : nat, Term A n -> Term A n -> Term A n X3, X2, X0 : forall (A : Set) (n : nat), Term A n -> mon n P : Term A n -> Term A n -> Prop A0, A1 : A eqA : A -> A -> Prop plusA : A -> A -> A invA : A -> A minusA, multA : A -> A -> A divA : A -> forall b : A, (eqA b A0 -> False) -> A eqA_dec : forall a b : A, {eqA a b} + {eqA a b -> False} ltM : mon n -> mon n -> Prop ltM_dec : forall a b : mon n, {ltM a b} + {ltM b a} + {a = b} a, a0 : A m0 : mon n a1 : A m : mon n H2 : ltM m0 m M1_min : forall x : mon n, ltM x (zero_mon n) -> False ltM_nonrefl : forall x : mon n, ltM x x -> False ltM_trans : transitive (mon n) ltM ltM_wf : well_founded ltM ltM_plusr : forall x y z : mon n, ltM x y -> ltM (mult_mon n x z) (mult_mon n y z) ltM_plusl : forall x y z : mon n, ltM x y -> ltM (mult_mon n z x) (mult_mon n z y) A1_diff_A0 : eqA A1 A0 -> False eqA_ref : reflexive A eqA eqA_sym : symmetric A eqA eqA_trans : transitive A eqA plusA_assoc : forall a b c : A, eqA (plusA a (plusA b c)) (plusA (plusA a b) c) plusA_com : forall a b : A, eqA (plusA a b) (plusA b a) plusA_eqA_comp : forall a b c d : A, eqA a c -> eqA b d -> eqA (plusA a b) (plusA c d) plusA_A0 : forall a : A, eqA a (plusA a A0) invA_plusA : forall a : A, eqA A0 (plusA a (invA a)) invA_eqA_comp : forall a b : A, eqA a b -> eqA (invA a) (invA b) minusA_def : forall a b : A, eqA (minusA a b) (plusA a (invA b)) multA_eqA_comp : forall a b c d : A, eqA a c -> eqA b d -> eqA (multA a b) (multA c d) multA_assoc : forall a b c : A, eqA (multA a (multA b c)) (multA (multA a b) c) multA_com : forall a b : A, eqA (multA a b) (multA b a) multA_dist_l : forall a b c : A, eqA (plusA (multA c a) (multA c b)) (multA c (plusA a b)) multA_A0_l : forall a : A, eqA (multA A0 a) A0 multA_A1_l : forall a : A, eqA (multA A1 a) a divA_rew : forall (a b : A) (nZ1 nZ2 : eqA b A0 -> False), divA a b nZ1 = divA a b nZ2 divA_is_multA : forall (a b : A) (nZb : eqA b A0 -> False), eqA a (multA (divA a b nZb) b) divA_eqA_comp : forall (a b c d : A) (nZb : eqA b A0 -> False) (nZd : eqA d A0 -> False), eqA a c -> eqA b d -> eqA (divA a b nZb) (divA c d nZd) divA_multA_comp_r : forall (a b c : A) (nZc : eqA c A0 -> False), eqA (divA (multA a b) c nZc) (multA (divA a c nZc) b) divA_invA_r : forall (a b : A) (nZb : eqA b A0 -> False) (nZib : eqA (invA b) A0 -> False), eqA (divA a (invA b) nZib) (invA (divA a b nZb)) X : Prop H : Term A n -> Prop H19 : nat Unable to unify \"ltM m0 m\" with \"P (minusA a a0, m0) (a1, m)\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros a b c H1 H2. unfold ltT in H2. unfold minusTerm. unfold ltT, mon in H2. unfold mult_mon, minusTerm. unfold mult_mon, mult_mon in H2. unfold T2M in H2. unfold T2M, T2M in H2. unfold T2M, T2M, mult_mon in H2. unfold mult_mon, minusTerm, minusTerm. unfold mult_mon, mult_mon, T2M in H2. unfold T2M, mult_mon in H2. unfold T2M, T2M, mon in H2. unfold T2M, mult_mon, minusTerm in H2. unfold ltT, mult_mon in H2. unfold mult_mon, mult_mon. unfold T2M in H2. unfold T2M, T2M in H2. unfold T2M, T2M, mult_mon in H2. unfold mult_mon, minusTerm, minusTerm. unfold mult_mon, mult_mon in H2. unfold mult_mon, mult_mon, T2M in H2. unfold T2M, mult_mon in H2. unfold T2M, T2M, mon in H2. unfold T2M, mult_mon, minusTerm in H2. unfold ltT, mult_mon in H2. unfold mult_mon, minusTerm, minusTerm, mult_mon. unfold mult_mon, mult_mon, T2M in H2. unfold mult_mon, T2M in H2. unfold ltT, mon, mult_mon, minusTerm in H2. unfold mult_mon, mult_mon, T2M in H2. unfold mult_mon, T2M, minusTerm in H2. unfold mult_mon, minusTerm, mult_mon in H2. unfold ltM in H2. unfold mon, mult_mon in H2. unfold mon, mult_mon, zero_mon in H2. unfold mult_mon in H2. unfold mon in H2. unfold zero_mon in H2. unfold ltM in H2. unfold mon in H2. unfold zero_mon in H2. unfold ltM in H2. unfold mon, zero_mon in H2. unfold mult_mon in H2. unfold mon, mult_mon, S in H2. apply H2.", "succ": true}]