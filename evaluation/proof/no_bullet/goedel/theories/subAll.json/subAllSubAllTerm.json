[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros t m1 m2.", "induction t using Term_ind.", "-", "simpl.", "reflexivity.", "-", "simpl.", "f_equal."], "tactic": "apply subAllTerms_ext.", "exn": "In environment L : Language f : Functions L t : fol.Terms L (arity L (inr f)) m1, m2 : nat -> fol.Term L Unable to unify \"t\" with \"subAllTerms (arity L (inr f)) t m1\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros t m1 m2.", "induction t using Term_ind.", "-", "simpl.", "reflexivity.", "-", "simpl.", "f_equal.", "qsimpl use: subAllTerms_ext."], "tactic": "apply H.", "exn": "In environment L : Language H : forall (n : nat) (ts : fol.Terms L n) (m1 m2 : nat -> fol.Term L), (forall m : nat, In m (freeVarTerms L n ts) -> m1 m = m2 m) -> subAllTerms n ts m1 = subAllTerms n ts m2 f : Functions L t : fol.Terms L (arity L (inr f)) m1, m2 : nat -> fol.Term L Unable to unify \"t\" with \"subAllTerms (arity L (inr f)) t m1\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros t m1 m2. induction t using Term_ind. - simpl. reflexivity. - simpl. f_equal. apply subAllTerms_ext. intros. apply H.", "succ": false}]