[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": [], "tactic": "apply compose1_1IsPR with (f := searchXY) (g := idIsPR).", "exn": "In environment searchXY := fun a : nat => boundedSearch (fun a0 y : nat => ltBool a0 (sumToN (S y))) a : nat -> nat The term \"idIsPR\" has type \"{p : PrimRec 1 | extEqual 1 (evalPrimRec 1 p) (fun x : nat => x)}\" while it is expected to have type \"nat -> nat\".", "type": "wrong_type", "handled": true}]}, "chat": [], "original": "apply compose1_1IsPR with (f := searchXY) (g := idIsPR).", "succ": false}]