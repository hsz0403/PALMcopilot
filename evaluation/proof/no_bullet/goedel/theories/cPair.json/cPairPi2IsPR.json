[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["unfold isPR.", "unfold cPairPi2.", "simpl."], "tactic": "apply compose2IsPR with (g:=searchXY) (f:=fun a : nat => a-cPairPi1 a).", "exn": "In environment searchXY := fun a : nat => boundedSearch (fun a0 y : nat => ltBool a0 (sumToN (S y))) a : nat -> nat Unable to unify \"{p : PrimRec ?M1431 | extEqual ?M1431 (evalPrimRec ?M1431 p) (compose2 ?M1431 (fun a : nat => a - cPairPi1 a) searchXY)}\" with \"{p : PrimRec 1 | forall c : nat, evalPrimRec 1 p c = searchXY c - cPairPi1 c}\".", "type": "cannot_unify", "handled": true}, {"ctx": ["unfold isPR.", "unfold cPairPi2.", "simpl.", "qsimpl use: compose2IsPR,cPairPi1,nat."], "tactic": "apply swapIsPR.", "exn": "In environment n : nat -> nat H : forall (n : nat) (f : naryFunc n), isPR n f -> forall g : nat -> naryFunc n, isPR (S n) g -> isPR n (compose2 n f g) Unable to unify \"{p : PrimRec 2 | extEqual 2 (evalPrimRec 2 p) (fun x y : nat => ?M1610 y x)}\" with \"{p : PrimRec 1 | forall c : nat, evalPrimRec 1 p c = boundedSearch (fun a y : nat => ltBool a (S (y + sumToN y))) c - n c}\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "unfold isPR. unfold cPairPi2. simpl. apply compose2IsPR with (g:=searchXY) (f:=fun a : nat => a-cPairPi1 a). apply swapIsPR. apply indIsPR with (g:=fun _ _ : nat => 1). apply filter10IsPR. apply const1_NIsPR. apply const1_NIsPR. unfold cPairPi1. apply compose1_2IsPR with (f:=fun x : nat => x) (f':=fun _:nat => 1). apply idIsPR. apply const1_NIsPR. apply succIsPR.", "succ": false}]