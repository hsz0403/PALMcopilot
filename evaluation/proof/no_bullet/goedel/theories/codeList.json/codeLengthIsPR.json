[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": [], "tactic": "apply compose1_NIsPR with (g := codeLength) (f := codeList).", "exn": "The term \"codeList\" has type \"list nat -> nat\" while it is expected to have type \"nat -> naryFunc 0\" (cannot unify \"nat\" and \"list nat\").", "type": "wrong_type", "handled": true}, {"ctx": ["qsimpl use: compose1_NIsPR,codeLength,codeList."], "tactic": "apply codeLengthCorrect.", "exn": "In environment H0 : list nat -> nat n : nat -> nat H : forall (n : nat) (g : nat -> naryFunc n), isPR (S n) g -> forall f : nat -> nat, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)) Unable to unify \"codeLength (codeList ?M1603) = length ?M1603\" with \"{p : PrimRec 1 | extEqual 1 (evalPrimRec 1 p) n}\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "apply compose1_NIsPR with (g := codeLength) (f := codeList). apply codeLengthCorrect.", "succ": false}]