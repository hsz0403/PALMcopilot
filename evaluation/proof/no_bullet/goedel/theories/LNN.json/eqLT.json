[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros T a b c d H1 H2.", "apply iffI.", "-"], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}]}, "chat": [], "original": "intros T a b c d H1 H2. apply iffI. - apply impE with (LT a c) (LT b d). + apply sysExtend with T. intros z Hz. unfold iffH. apply BinInt.Z.ldiff_neg. * apply andE1 with (equal a c). apply sysExtend with T. intros z Hz'. apply eqRefl. apply sysExtend with T. intros z Hz''. apply eqSym. apply sysExtend with T. intros z Hz. apply eqTrans with a. apply sysExtend with T. intros z Hz'. apply eqSym. apply sysExtend with T. intros z Hz''. apply eqSucc. auto. auto. apply eqSym. apply sysExtend with T. intros z Hz. apply eqTrans with a. auto. auto. * apply BinInt.Z.ldiff_neg. apply andE2 with (equal b d). apply sysExtend with T. intros z Hz'. apply eqRefl. apply sysExtend with T. intros z Hz''. apply eqSym. apply sysExtend with T. intros z Hz. apply eqTrans with b. apply sysExtend with T. intros z Hz'. apply eqSym. apply sysExtend with T. intros z Hz. auto. auto. apply eqSym. apply sysExtend with T. intros z Hz. apply eqTrans with b. auto. auto. * apply BinInt.Z.ldiff_neg. apply andI; apply sysExtend with T; intros z Hz; apply eqRefl. + apply BinInt.Z.ldiff_neg; apply andI; apply sysExtend with T; intros z Hz; apply eqRefl. - apply impE with (LT b d) (LT a c). + apply sysExtend with T. intros z Hz. unfold iffH. apply BinInt.Z.ldiff_neg. * apply andE2 with (equal b d). apply sysExtend with T. intros z Hz'. apply eqRefl. apply sysExtend with T. intros z Hz''. apply eqSym. apply sysExtend with T. intros z Hz. apply eqTrans with b. apply sysExtend with T. intros z Hz'. apply eqSym. apply sysExtend with T. intros z Hz''. apply eqSucc. auto. auto. apply eqSym. apply sysExtend with T. intros z Hz. apply eqTrans with b. auto. auto. * apply BinInt.Z.ldiff_neg. apply andE1 with (equal a c). apply sysExtend with T. intros z Hz'. apply eqRefl. apply sysExtend with T. intros z Hz''. apply eqSym. apply sysExtend with T. intros z Hz. apply eqTrans with a. apply sysExtend with T. intros z Hz'. apply eqSym. apply sysExtend with T. intros z Hz. auto. auto. apply eqSym. apply sysExtend with T. intros z Hz. apply eqTrans with a. auto. auto. * apply BinInt.Z.ldiff_neg. apply andI; apply sysExtend with T; intros z Hz; apply eqRefl. + apply BinInt.Z.ldiff_neg; apply andI; apply sysExtend with T; intros z Hz; apply eqRefl.", "succ": false}]