[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros n.", "unfold isPR."], "tactic": "intros p q.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros n.", "unfold isPR."], "tactic": "destruct p as [m k].", "exn": "The reference p was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros n.", "unfold isPR.", "destruct minusIsPR as [m k]."], "tactic": "destruct k.", "exn": "Unable to find an instance for the variables c, c.", "type": "no_instance_var", "handled": true}, {"ctx": ["intros n.", "unfold isPR.", "destruct minusIsPR as [m k].", "qsimpl.", "destruct (Nat.eqb_spec n 0) as [eqn | neqn].", "+", "subst."], "tactic": "+", "exn": "Wrong bullet +: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros n.", "unfold isPR.", "destruct minusIsPR as [m k].", "qsimpl.", "destruct (Nat.eqb_spec n 0) as [eqn | neqn].", "+", "subst.", "shelve.", "+", "contradict neqn.", "apply Nat.eqb_eq."], "tactic": "destruct (Nat.eqb_spec n (S n0)) as [eqn | neqn].", "exn": "The reference n0 was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros n.", "unfold isPR.", "destruct minusIsPR as [m k].", "qsimpl.", "destruct (Nat.eqb_spec n 0) as [eqn | neqn].", "+", "subst.", "shelve.", "+", "contradict neqn.", "apply Nat.eqb_eq."], "tactic": "+", "exn": "Wrong bullet +: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros n.", "unfold isPR.", "destruct minusIsPR as [m k].", "qsimpl.", "destruct (Nat.eqb_spec n 0) as [eqn | neqn].", "+", "subst.", "shelve.", "+", "contradict neqn.", "apply Nat.eqb_eq.", "shelve."], "tactic": "+", "exn": "Wrong bullet +: No more subgoals.", "type": "no_more_subgoals", "handled": true}]}, "chat": [], "original": "intros n. unfold isPR. intros p q. destruct p as [m k]. destruct k. - simpl. destruct (Nat.eqb_spec n 0) as [eqn | neqn]. + subst. auto. + contradict neqn. apply Nat.eqb_eq. auto. - simpl. destruct (Nat.eqb_spec n (S n0)) as [eqn | neqn]. + subst. auto. + contradict neqn. apply Nat.eqb_neq. auto.", "succ": false}]