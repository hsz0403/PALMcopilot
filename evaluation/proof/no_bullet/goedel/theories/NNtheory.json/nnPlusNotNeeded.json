[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros.", "unfold impH, orH, LT, var, natToTerm, Succ in *.", "apply impTrans with (LT (var 1) (natToTerm n)).", "-"], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros.", "unfold impH, orH, LT, var, natToTerm, Succ in *.", "apply impTrans with (LT (var 1) (natToTerm n)).", "-", "shelve.", "-"], "tactic": "apply nn8.", "exn": "In environment n : nat Unable to unify \"exists (Axm : fol.Formulas LNN) (_ : folProof.Prf LNN Axm (impH (LT ?M1462 (Succ ?M1463)) (orH (LT ?M1462 ?M1463) (equal ?M1462 ?M1463)))), forall g : fol.Formula LNN, List.In g Axm -> mem (fol.Formula LNN) NN g\" with \"exists (Axm : fol.Formulas LNN) (_ : folProof.Prf LNN Axm (impH (LT (var 1) (natToTerm n)) (atomic LNN Languages.LT (Tcons LNN 1 (fol.var LNN 1) (Tcons LNN 0 (apply LNN Languages.Succ (Tcons LNN 0 ((fix natToTerm (n : nat) : Term := match n with | 0 => Zero | S m => apply LNN Languages.Succ (Tcons LNN 0 (natToTerm m) (Tnil LNN)) end) n) (Tnil LNN))) (Tnil LNN)))))), forall g : fol.Formula LNN, List.In g Axm -> mem (fol.Formula LNN) NN g\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros. unfold impH, orH, LT, var, natToTerm, Succ in *. apply impTrans with (LT (var 1) (natToTerm n)). - apply orE with (LT (var 1) (natToTerm n)) (orH (LT (var 1) (natToTerm n)) (equal (var 1) (natToTerm n))) _. + apply nn9. + apply eqLT. * apply nn1. * apply eqSucc, nn1. + apply cp1, eqLT. * apply nn1. * apply eqSucc, nn3. - apply nn8.", "succ": false}]