[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros m x y z t H1 H2.", "unfold expf, betweenf.", "unfold cA, cA_1.", "destruct (expf_dec m (cA_1 m one x) y) as [H|H].", "-", "split.", "+"], "tactic": ["intros [H3|H3].", ""], "exn": "Expects a disjunctive pattern with 1 branch or a conjunctive pattern made of 2 patterns.", "type": "num_branch_both", "handled": false}, {"ctx": ["intros m x y z t H1 H2.", "unfold expf, betweenf.", "unfold cA, cA_1.", "destruct (expf_dec m (cA_1 m one x) y) as [H|H].", "-", "split.", "+"], "tactic": "+", "exn": "Wrong bullet +: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros m x y z t H1 H2.", "unfold expf, betweenf.", "unfold cA, cA_1.", "destruct (expf_dec m (cA_1 m one x) y) as [H|H].", "-", "split.", "+", "shelve.", "+"], "tactic": "intros [H3|[H3|H3]].", "exn": "Not an inductive product.", "type": "not_inductive_product", "handled": true}, {"ctx": ["intros m x y z t H1 H2.", "unfold expf, betweenf.", "unfold cA, cA_1.", "destruct (expf_dec m (cA_1 m one x) y) as [H|H].", "-", "split.", "+", "shelve.", "+"], "tactic": "left.", "exn": "Not an inductive goal with 2 constructors.", "type": "not_inductive_goal", "handled": true}, {"ctx": ["intros m x y z t H1 H2.", "unfold expf, betweenf.", "unfold cA, cA_1.", "destruct (expf_dec m (cA_1 m one x) y) as [H|H].", "-", "split.", "+", "shelve.", "+"], "tactic": "-", "exn": "Wrong bullet -: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros m x y z t H1 H2.", "unfold expf, betweenf.", "unfold cA, cA_1.", "destruct (expf_dec m (cA_1 m one x) y) as [H|H].", "-", "split.", "+", "shelve.", "+", "shelve.", "-"], "tactic": "right.", "exn": "Not an inductive goal with 2 constructors.", "type": "not_inductive_goal", "handled": true}, {"ctx": ["intros m x y z t H1 H2.", "unfold expf, betweenf.", "unfold cA, cA_1.", "destruct (expf_dec m (cA_1 m one x) y) as [H|H].", "-", "split.", "+", "shelve.", "+", "shelve.", "-"], "tactic": "destruct H2 as [H2|[H2|H2]]; auto.", "exn": "Not an inductive product.", "type": "not_inductive_product", "handled": true}, {"ctx": ["intros m x y z t H1 H2.", "unfold expf, betweenf.", "unfold cA, cA_1.", "destruct (expf_dec m (cA_1 m one x) y) as [H|H].", "-", "split.", "+", "shelve.", "+", "shelve.", "-"], "tactic": "intros H3.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros m x y z t H1 H2.", "unfold expf, betweenf.", "unfold cA, cA_1.", "destruct (expf_dec m (cA_1 m one x) y) as [H|H].", "-", "split.", "+", "shelve.", "+", "shelve.", "-"], "tactic": "destruct H2 as [H2|H2].", "exn": "Not an inductive product.", "type": "not_inductive_product", "handled": true}]}, "chat": [], "original": "intros m x y z t H1 H2. unfold expf, betweenf. unfold cA, cA_1. destruct (expf_dec m (cA_1 m one x) y) as [H|H]. - split. + intros [H3|H3]. * left. split. { apply H3. } { apply H1. } * right. left. split. { apply H3. } { apply H2. } + intros [H3|[H3|H3]]. * left. apply H3. * left. apply H3. * right. apply H3. - right. destruct H2 as [H2|[H2|H2]]; auto. intros H3. destruct H2 as [H2|H2]. + contradiction. + destruct H2 as [H2|H2]; contradiction.", "succ": false}]