[{"history": {"proof": "intros n m p H1 H2. apply Z.gt_lt in H2. hauto use: Z.gt_lt, Z.lt_gt, Z.mul_lt_mono_neg_l.", "repairs": ["", "", "hammer"], "exceptions": [{"ctx": ["intros n m p H1 H2."], "tactic": "apply Z.lt_gt in H1.", "exn": "Unable to apply lemma of type \"forall n m : Z, n < m -> m > n\" on hypothesis of type \"0 > p\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["intros n m p H1 H2."], "tactic": "apply Z.lt_gt in H2.", "exn": "Unable to apply lemma of type \"forall n m : Z, n < m -> m > n\" on hypothesis of type \"p * n > p * m\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["intros n m p H1 H2."], "tactic": "apply Zmult_gt_compat_l in H2; auto.", "exn": "Unable to find an instance for the variable p.", "type": "no_instance_var", "handled": true}, {"ctx": ["intros n m p H1 H2.", "apply Z.gt_lt in H2."], "tactic": "apply Zmult_gt_compat_l_rev; auto.", "exn": "Unable to find an instance for the variable p.", "type": "no_instance_var", "handled": true}]}, "chat": [], "original": "intros n m p H1 H2. apply Z.lt_gt in H1. apply Z.lt_gt in H2. apply Zmult_gt_compat_l in H2; auto. apply Z.gt_lt in H2. apply Zmult_gt_compat_l_rev; auto.", "succ": true}]