[{"history": {"proof": "intros out to. unfold map2fst. unfold filterMap. induction out as [|out_head out_tail IHout]. - simpl. reflexivity. - simpl. hauto lq: on depth: 3.", "repairs": ["", "", "", "", "", "", "", "", "", "hammer"], "exceptions": [{"ctx": ["intros out to.", "unfold map2fst.", "unfold filterMap.", "induction out as [|out_head out_tail IHout].", "-", "simpl.", "reflexivity.", "-", "simpl."], "tactic": "destruct out_head as [out_name out_msg].", "exn": "Not an inductive product.", "type": "not_inductive_product", "handled": true}]}, "chat": [], "original": "intros out to. unfold map2fst. unfold filterMap. induction out as [|out_head out_tail IHout]. - simpl. reflexivity. - simpl. destruct out_head as [out_name out_msg]. destruct out_msg. + simpl. destruct (pt_map_input i) eqn:inp_map. * simpl. rewrite IHout. reflexivity. * apply IHout. + simpl. destruct (pt_map_output o) eqn:out_map. * simpl. rewrite IHout. reflexivity. * apply IHout.", "succ": true, "time": 2.252883238999857}]