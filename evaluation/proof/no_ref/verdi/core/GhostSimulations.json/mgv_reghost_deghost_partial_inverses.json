[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros net.", "unfold mgv_deghost, mgv_reghost.", "unfold mgv_ghost_packet, mgv_deghost_packet.", "destruct net as [nwPackets nwState].", "f_equal."], "tactic": "apply map_ext_in.", "exn": "In environment base_params : BaseParams multi_params : MultiParams base_params failure_params : FailureParams multi_params msg_ghost_params : MsgGhostMultiParams multi_params nwPackets : list packet nwState : name -> data Unable to unify \"map ?M1660 ?M1662 = map ?M1661 ?M1662\" with \"map (fun p : packet => {| pSrc := pSrc p; pDst := pDst p; pBody := snd (pBody p) |}) (Net.nwPackets {| nwPackets := map (fun p : packet => {| pSrc := pSrc p; pDst := pDst p; pBody := (ghost_msg_default, pBody p) |}) (Net.nwPackets {| nwPackets := nwPackets; nwState := nwState |}); nwState := fun X : name => nwState X |}) = nwPackets\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros net.", "unfold mgv_deghost, mgv_reghost.", "unfold mgv_ghost_packet, mgv_deghost_packet.", "destruct net as [nwPackets nwState].", "f_equal."], "tactic": "intros p Hin.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}]}, "chat": [], "original": "intros net. unfold mgv_deghost, mgv_reghost. unfold mgv_ghost_packet, mgv_deghost_packet. destruct net as [nwPackets nwState]. f_equal. - apply map_ext_in. intros p Hin. destruct p as [src [dest msg]]. unfold mgv_ghost_packet, key, unkeyed. rewrite map_id_tr. destruct (name_eq_dec (unkeyed dest) src); auto. - apply functional_extensionality. intros x. unfold unkeyed. destruct x. f_equal. apply map_id_tr.", "succ": false, "time": 25.702150845000006}]