[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros p q Hcan1 Hcan2.", "unfold canonical in Hcan1.", "unfold canonical in Hcan2."], "tactic": "intros c1 c2 Hm.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros p q Hcan1 Hcan2.", "unfold canonical in Hcan1.", "unfold canonical in Hcan2."], "tactic": "destruct Hcan1 as [_ [_ Hcan1]].", "exn": "Not an inductive product.", "type": "not_inductive_product", "handled": true}, {"ctx": ["intros p q Hcan1 Hcan2.", "unfold canonical in Hcan1.", "unfold canonical in Hcan2."], "tactic": "destruct Hcan2 as [_ [_ Hcan2]].", "exn": "Not an inductive product.", "type": "not_inductive_product", "handled": true}, {"ctx": ["intros p q Hcan1 Hcan2.", "unfold canonical in Hcan1.", "unfold canonical in Hcan2."], "tactic": "apply plusP_uniq_eqP with (plusA:=plusA) in Hm; try auto.", "exn": "No such hypothesis: Hm", "type": "no_hypos", "handled": true}]}, "chat": [], "original": "intros p q Hcan1 Hcan2. unfold canonical in Hcan1. unfold canonical in Hcan2. intros c1 c2 Hm. destruct Hcan1 as [_ [_ Hcan1]]. destruct Hcan2 as [_ [_ Hcan2]]. apply plusP_uniq_eqP with (plusA:=plusA) in Hm; try auto.", "succ": false}]