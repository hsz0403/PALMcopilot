[{"history": {"proof": "hauto lq: on use: divTerm_nZ inv: divP.", "repairs": ["hammer"], "exceptions": [{"ctx": ["intros a b nZb divP_ab nZaZb."], "tactic": "intro zP_b.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros a b nZb divP_ab nZaZb."], "tactic": "unfold zeroP, divP, zeroP in zP_b.", "exn": "Cannot coerce divP to an evaluable reference.", "type": "not_evaluable", "handled": true}, {"ctx": ["intros a b nZb divP_ab nZaZb.", "destruct divP_ab as [a b nza eqab]."], "tactic": ["destruct (nzeroP_multTerm A A0 A1 eqA plusA invA minusA multA divA cs eqA_dec n a b nza nZb) as [nza|nzb].", ""], "exn": "Expects a disjunctive pattern with 0 branches.", "type": "num_branch", "handled": false}]}, "chat": [], "original": "intros a b nZb divP_ab nZaZb. intro zP_b. unfold zeroP, divP, zeroP in zP_b. destruct divP_ab as [a b nza eqab]. destruct (nzeroP_multTerm A A0 A1 eqA plusA invA minusA multA divA cs eqA_dec n a b nza nZb) as [nza|nzb]. - apply nza. - apply (nzb eqab).", "succ": true}]