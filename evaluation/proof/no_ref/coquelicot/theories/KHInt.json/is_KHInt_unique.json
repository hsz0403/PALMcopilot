[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": [], "tactic": "intros V f a b l H.", "exn": "V is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros V' f a b l H.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros.", "unfold KHInt.", "unfold is_KHInt in H."], "tactic": "apply (iota_filterlimi_locally (fun ptd If => scal (sign (b - a)) (Riemann_sum f ptd) = If) l).", "exn": "In environment V : CompleteNormedModule R_AbsRing f : R -> V a, b : R l : V H : filterlim (fun ptd : SF_seq => scal (sign (b - a)) (Riemann_sum f ptd)) (KH_fine a b) (locally l) Unable to unify \"iota (fun x : V => filterlimi (fun (ptd : SF_seq) (If : V) => scal (sign (b - a)) (Riemann_sum f ptd) = If) ?F (locally x)) = l\" with \"iota (is_KHInt f a b) = l\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros.", "unfold KHInt.", "unfold is_KHInt in H."], "tactic": "intros ptd1 ptd2 H1 H2.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}]}, "chat": [], "original": "intros V f a b l H. unfold KHInt. unfold is_KHInt in H. apply (iota_filterlimi_locally (fun ptd If => scal (sign (b - a)) (Riemann_sum f ptd) = If) l). - unfold KH_fine. intros ptd1 ptd2 H1 H2. apply proof_irrelevance. - apply H.", "succ": false}]