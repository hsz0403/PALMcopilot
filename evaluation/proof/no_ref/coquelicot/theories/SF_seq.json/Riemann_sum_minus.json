[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["unfold Riemann_sum."], "tactic": "rewrite Riemann_sum_plus.", "exn": "The LHS of Riemann_sum_plus (Riemann_sum (fun x : R => plus (_ x) (_ x)) _) does not match any subterm of the goal", "type": "no_match_term", "handled": true}, {"ctx": ["unfold Riemann_sum."], "tactic": "rewrite Riemann_sum_opp.", "exn": "The LHS of Riemann_sum_opp (Riemann_sum (fun x : R => opp (_ x)) _) does not match any subterm of the goal", "type": "no_match_term", "handled": true}, {"ctx": ["unfold Riemann_sum."], "tactic": "rewrite Riemann_sum_opp.", "exn": "The LHS of Riemann_sum_opp (Riemann_sum (fun x : R => opp (_ x)) _) does not match any subterm of the goal", "type": "no_match_term", "handled": true}, {"ctx": ["unfold Riemann_sum."], "tactic": "rewrite Riemann_sum_plus.", "exn": "The LHS of Riemann_sum_plus (Riemann_sum (fun x : R => plus (_ x) (_ x)) _) does not match any subterm of the goal", "type": "no_match_term", "handled": true}, {"ctx": ["unfold Riemann_sum."], "tactic": "reflexivity.", "exn": "In environment V : ModuleSpace R_Ring f, g : R -> V ptd : SF_seq Unable to unify \"minus (foldr plus zero (pairmap (fun x y : R * R => scal (fst y - fst x) (f (snd y))) (SF_h ptd, zero) (SF_t ptd))) (foldr plus zero (pairmap (fun x y : R * R => scal (fst y - fst x) (g (snd y))) (SF_h ptd, zero) (SF_t ptd)))\" with \"foldr plus zero (pairmap (fun x y : R * R => scal (fst y - fst x) (minus (f (snd y)) (g (snd y)))) (SF_h ptd, zero) (SF_t ptd))\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "unfold Riemann_sum. rewrite Riemann_sum_plus. rewrite Riemann_sum_opp. rewrite Riemann_sum_opp. rewrite Riemann_sum_plus. reflexivity.", "succ": false}]