[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["unfold Riemann_sum.", "unfold scal."], "tactic": "rewrite Riemann_sum_rcons.", "exn": "The LHS of Riemann_sum_rcons (Riemann_sum _ (SF_rcons _ _)) does not match any subterm of the goal", "type": "no_match_term", "handled": true}, {"ctx": ["unfold Riemann_sum.", "unfold scal."], "tactic": "rewrite scal_distr_l.", "exn": "The LHS of scal_distr_l (scal _ (plus _ _)) does not match any subterm of the goal", "type": "no_match_term", "handled": true}, {"ctx": ["unfold Riemann_sum.", "unfold scal."], "tactic": "rewrite minus_eq_zero.", "exn": "The LHS of minus_eq_zero (minus _ _) does not match any subterm of the goal", "type": "no_match_term", "handled": true}, {"ctx": ["unfold Riemann_sum.", "unfold scal."], "tactic": "rewrite scal_zero_l.", "exn": "The LHS of scal_zero_l (scal zero _) does not match any subterm of the goal", "type": "no_match_term", "handled": true}, {"ctx": ["unfold Riemann_sum.", "unfold scal."], "tactic": "reflexivity.", "exn": "In environment V : ModuleSpace R_Ring v : V ptd : SF_seq Unable to unify \"ModuleSpace.scal R_Ring (AbelianGroup.Pack V (ModuleSpace.class R_Ring V) V) (ModuleSpace.class R_Ring V) (last (SF_h ptd) (SF_lx ptd) - SF_h ptd) v\" with \"foldr plus zero (pairmap (fun x y : R * R => ModuleSpace.scal R_Ring (AbelianGroup.Pack V (ModuleSpace.class R_Ring V) V) (ModuleSpace.class R_Ring V) (fst y - fst x) v) (SF_h ptd, zero) (SF_t ptd))\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "unfold Riemann_sum. unfold scal. rewrite Riemann_sum_rcons. rewrite scal_distr_l. rewrite minus_eq_zero. rewrite scal_zero_l. reflexivity.", "succ": false}]