[{"history": {"proof": "split. - intro H. strivial use: Nat.le_pred_le_succ. - intro H. apply Nat.le_pred_le_succ. apply Nat.le_succ_r. sauto lq: on depth: 3.", "repairs": ["", "", "", "hammer", "", "", "", "", "hammer"], "exceptions": [{"ctx": [], "tactic": "intros m n.", "exn": "m is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros m' n.", "exn": "n is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros m' n'.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["split.", "-", "intro H."], "tactic": "apply Nat.le_trans with (p := S (S m)).", "exn": "In environment n, m : nat H : Init.Nat.pred n <= m Unable to unify \"?M2269 <= S (S m)\" with \"n <= S m\".", "type": "cannot_unify", "handled": true}, {"ctx": ["split.", "-", "intro H."], "tactic": "apply Nat.le_wd.", "exn": "In environment n, m : nat H : Init.Nat.pred n <= m Unable to unify \"Morphisms.Proper (Morphisms.respectful eq (Morphisms.respectful eq iff)) le\" with \"n <= S m\".", "type": "cannot_unify", "handled": true}, {"ctx": ["split.", "-", "intro H."], "tactic": "reflexivity.", "exn": "In environment n, m : nat H : Init.Nat.pred n <= m Unable to unify \"S m\" with \"n\".", "type": "cannot_unify", "handled": true}, {"ctx": ["split.", "-", "intro H.", "apply le_S in H."], "tactic": "apply Nat.le_succ_l.", "exn": "In environment n, m : nat H : Init.Nat.pred n <= S m Unable to unify \"(S ?M2272 <= ?M2273 -> ?M2272 < ?M2273) /\\\\ (?M2272 < ?M2273 -> S ?M2272 <= ?M2273)\" with \"n <= S m\".", "type": "cannot_unify", "handled": true}, {"ctx": ["split.", "-", "intro H.", "apply le_S in H."], "tactic": "apply H.", "exn": "In environment n, m : nat H : Init.Nat.pred n <= S m Unable to unify \"Init.Nat.pred n <= S m\" with \"n <= S m\".", "type": "cannot_unify", "handled": true}, {"ctx": ["split.", "-", "intro H.", "apply le_S in H."], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["split.", "-", "intro H.", "apply le_S in H.", "shelve.", "-", "intro H.", "apply Nat.le_pred_le_succ."], "tactic": "apply Nat.le_trans with (p := S m).", "exn": "Unable to find an instance for the variable m.", "type": "no_instance_var", "handled": true}, {"ctx": ["split.", "-", "intro H.", "apply le_S in H.", "shelve.", "-", "intro H.", "apply Nat.le_pred_le_succ.", "apply Nat.le_succ_r."], "tactic": "apply Nat.le_wd.", "exn": "In environment n, m : nat H : n <= S m Unable to unify \"Morphisms.Proper (Morphisms.respectful eq (Morphisms.respectful eq iff)) le\" with \"n <= m \\\\/ n = S m\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros m n. split. - intro H. apply Nat.le_trans with (p := S (S m)). + apply Nat.le_wd. * reflexivity. * apply le_S in H. apply Nat.le_succ_l. apply H. + apply Nat.le_S. apply Nat.le_wd. * reflexivity. * apply Nat.le_succ_r. apply Nat.le_wd. ++ reflexivity. ++ apply H. - intro H. apply Nat.le_pred_le_succ. apply Nat.le_trans with (p := S m). + apply Nat.le_succ_r. apply Nat.le_wd. * reflexivity. * apply H. + apply Nat.le_pred_le_succ. apply Nat.le_wd. * reflexivity. * apply H.", "succ": true}]