[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros c a l H.", "unfold is_series in *.", "unfold filterlim in *.", "intros eps H_eps."], "tactic": "pose (eps' := eps / abs c).", "exn": "In environment K : AbsRing V : NormedModule K c : K a : nat -> V l : V H : filter_le (filtermap (sum_n a) eventually) (locally l) eps : V -> Prop H_eps : locally (scal c l) eps The term \"eps\" has type \"V -> Prop\" while it is expected to have type \"R\".", "type": "wrong_type", "handled": true}]}, "chat": [], "original": "intros c a l H. unfold is_series in *. unfold filterlim in *. intros eps H_eps. pose (eps' := eps / abs c). assert (H_eps' : eps' > 0) by (apply Rlt_div_r; auto). destruct (H c (scal l) H) as [N HN]. exists N. intros n Hn. specialize (HN n Hn). unfold scal. rewrite <- norm_scal. replace (Rabs c) with (abs c). apply Rle_lt_trans with (r2 := abs c * eps'). - apply NormedModule.ax2. - apply Rlt_le_trans with (r2 := abs c * (eps' / abs c)). + rewrite Rmult_assoc. rewrite Rinv_l. * rewrite Rmult_1_r. }", "succ": false}]