[{"history": {"proof": "unfold Rbar_is_upper_bound, Rbar_is_lower_bound. split. - intros H x Hx. apply Rbar_opp_le. apply H. scongruence use: Rbar_opp_involutive. - intros H x Hx. apply Rbar_opp_le. apply Rbar_opp_le. apply Rbar_opp_le. apply Rbar_opp_le. hauto use: Rbar_opp_involutive, Rbar_opp_le.", "repairs": ["", "", "", "", "", "", "hammer", "", "", "", "", "", "", "hammer"], "exceptions": [{"ctx": [], "tactic": "intros E l.", "exn": "E is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros E' l.", "exn": "l is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros E' l'.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["unfold Rbar_is_upper_bound, Rbar_is_lower_bound.", "split.", "-", "intros H x Hx.", "apply Rbar_opp_le.", "apply H."], "tactic": "apply Rbar_opp_le in Hx.", "exn": "Unable to apply lemma of type \"forall x y : Rbar, Rbar_le (Rbar_opp x) (Rbar_opp y) <-> Rbar_le y x\" on hypothesis of type \"E x\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["unfold Rbar_is_upper_bound, Rbar_is_lower_bound.", "split.", "-", "intros H x Hx.", "apply Rbar_opp_le.", "apply H."], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["unfold Rbar_is_upper_bound, Rbar_is_lower_bound.", "split.", "-", "intros H x Hx.", "apply Rbar_opp_le.", "apply H.", "shelve.", "-", "intros H x Hx."], "tactic": "apply Rbar_le_antisym.", "exn": "In environment E : Rbar -> Prop l : Rbar H : forall x : Rbar, E x -> Rbar_le l x x : Rbar Hx : E (Rbar_opp x) Unable to unify \"?M2305 = ?M2306\" with \"match x with | Finite x => match Rbar_opp l with | Finite y => x <= y | p_infty => True | m_infty => False end | p_infty => match Rbar_opp l with | p_infty => True | _ => False end | m_infty => True end\".", "type": "cannot_unify", "handled": true}, {"ctx": ["unfold Rbar_is_upper_bound, Rbar_is_lower_bound.", "split.", "-", "intros H x Hx.", "apply Rbar_opp_le.", "apply H.", "shelve.", "-", "intros H x Hx.", "apply Rbar_opp_le."], "tactic": "apply H.", "exn": "In environment E : Rbar -> Prop l : Rbar H : forall x : Rbar, E x -> Rbar_le l x x : Rbar Hx : E (Rbar_opp x) Unable to unify \"match l with | Finite x => match ?M2321 with | Finite y => x <= y | p_infty => True | m_infty => False end | p_infty => match ?M2321 with | p_infty => True | _ => False end | m_infty => True end\" with \"match Rbar_opp (Rbar_opp l) with | Finite x0 => match Rbar_opp x with | Finite y => x0 <= y | p_infty => True | m_infty => False end | p_infty => match Rbar_opp x with | p_infty => True | _ => False end | m_infty => True end\".", "type": "cannot_unify", "handled": true}, {"ctx": ["unfold Rbar_is_upper_bound, Rbar_is_lower_bound.", "split.", "-", "intros H x Hx.", "apply Rbar_opp_le.", "apply H.", "shelve.", "-", "intros H x Hx.", "apply Rbar_opp_le.", "apply Rbar_opp_le.", "apply Rbar_opp_le."], "tactic": "apply H.", "exn": "In environment E : Rbar -> Prop l : Rbar H : forall x : Rbar, E x -> Rbar_le l x x : Rbar Hx : E (Rbar_opp x) Unable to unify \"match l with | Finite x => match ?M2344 with | Finite y => x <= y | p_infty => True | m_infty => False end | p_infty => match ?M2344 with | p_infty => True | _ => False end | m_infty => True end\" with \"match Rbar_opp (Rbar_opp l) with | Finite x0 => match Rbar_opp x with | Finite y => x0 <= y | p_infty => True | m_infty => False end | p_infty => match Rbar_opp x with | p_infty => True | _ => False end | m_infty => True end\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros E l. unfold Rbar_is_upper_bound, Rbar_is_lower_bound. split. - intros H x Hx. apply Rbar_opp_le. apply H. apply Rbar_opp_le in Hx. rewrite Rbar_opp_invol in Hx. auto. - intros H x Hx. apply Rbar_le_antisym. + apply Rbar_opp_le. apply H. apply Rbar_opp_le. auto. + apply Rbar_opp_le. apply H. apply Rbar_opp_le. auto.", "succ": true}]