[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros."], "tactic": "apply is_RInt_ext.", "exn": "In environment V : CompleteNormedModule R_AbsRing f : R -> V g, dg : R -> R a, b : R H : forall x : R, Rmin a b <= x <= Rmax a b -> continuous f (g x) H0 : forall x : R, Rmin a b <= x <= Rmax a b -> is_derive g x (dg x) /\\\\ continuous dg x Unable to unify \"forall P : ?V -> Prop, locally ?M2369 P -> filtermap (fun ptd : SF_seq => scal (sign (?M2368 - ?M2367)) (Riemann_sum ?M2366 ptd)) (Riemann_fine ?M2367 ?M2368) P\" with \"RInt (fun y : R => scal (dg y) (f (g y))) a b = RInt f (g a) (g b)\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros."], "tactic": "intros y H.", "exn": "H is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros."], "tactic": "intros y H'.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros.", "unfold scal."], "tactic": "now rewrite RInt_comp_lin.", "exn": "The LHS of RInt_comp_lin (RInt (fun y : R => scal _ (_ (_ * y + _))) _ _) does not match any subterm of the goal", "type": "no_match_term", "handled": true}, {"ctx": ["intros.", "unfold scal."], "tactic": "apply is_RInt_comp; auto.", "exn": "In environment V : CompleteNormedModule R_AbsRing f : R -> V g, dg : R -> R a, b : R H : forall x : R, Rmin a b <= x <= Rmax a b -> continuous f (g x) H0 : forall x : R, Rmin a b <= x <= Rmax a b -> is_derive g x (dg x) /\\\\ continuous dg x Unable to unify \"forall P : V -> Prop, locally (RInt ?M2365 (?M2366 ?M2368) (?M2366 ?M2369)) P -> filtermap (fun ptd : SF_seq => scal (sign (?M2369 - ?M2368)) (Riemann_sum (fun y : R => scal (?M2367 y) (?M2365 (?M2366 y))) ptd)) (Riemann_fine ?M2368 ?M2369) P\" with \"RInt (fun y : R => ModuleSpace.scal R_Ring (AbelianGroup.Pack V (ModuleSpace.class R_Ring V) V) (ModuleSpace.class R_Ring V) (dg y) (f (g y))) a b = RInt f (g a) (g b)\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros. apply is_RInt_ext. - intros y H. unfold scal. now rewrite RInt_comp_lin. - apply is_RInt_comp; auto.", "succ": false}]