[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros H1 H2 H3.", "destruct H1 as [eps1 H1'].", "destruct H2 as [eps2 H2']."], "tactic": "intros H4.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}]}, "chat": [], "original": "intros H1 H2 H3. destruct H1 as [eps1 H1']. destruct H2 as [eps2 H2']. intros H4. assert (H5: exists eps : posreal, locally x (fun y : R_UniformSpace => ex_RInt (f y) (a x - eps) (a x + eps) /\\ ex_RInt (f y) (a x) b)). { exists (mkposreal (pos eps1 / 2) (Rlt_half_pos (pos eps1) (cond_pos eps1))). intros y [H6 H7]. split. - apply H1'. intros z Hz. apply H6. split. + eapply ball_triangle. apply Hz. + apply cond_pos. - apply H2'. intros z Hz. apply H7. split. + eapply ball_triangle. apply Hz. + apply cond_pos. } destruct (H3 x eps2 H5) as [delta H6]. exists delta. intros x' H7. apply RInt_ext. intros. f_equal; apply proof_irrelevance.", "succ": false}]