[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros F H."], "tactic": "unfold wmonotonic, monotonic, increasing in *.", "exn": "Cannot coerce wmonotonic to an evaluable reference.", "type": "not_evaluable", "handled": true}, {"ctx": ["intros F H."], "tactic": "intros R S H0 H1 H2 H3.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros F H.", "apply mkwmon.", "-"], "tactic": "apply (wmon_a A X Y TX TY F H).", "exn": "In environment A : Type X, Y : Type TX : reduction_t A X TY : reduction_t A Y F : function X Y H : monotonic TX TY F The term \"A\" has type \"Type\" while it is expected to have type \"wmonotonic ?TX ?TY ?F\".", "type": "wrong_type", "handled": true}, {"ctx": ["intros F H.", "apply mkwmon.", "-"], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros F H.", "apply mkwmon.", "-", "shelve.", "-"], "tactic": "apply (mon_m A X Y TX TY F H).", "exn": "In environment A : Type X, Y : Type TX : reduction_t A X TY : reduction_t A Y F : function X Y H : monotonic TX TY F The term \"A\" has type \"Type\" while it is expected to have type \"monotonic ?TX ?TY ?F\".", "type": "wrong_type", "handled": true}, {"ctx": ["intros F H.", "apply mkwmon.", "-", "shelve.", "-"], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros F H.", "apply mkwmon.", "-", "shelve.", "-", "shelve.", "-"], "tactic": "apply (UExp_mon A X Y TX TY F H).", "exn": "In environment A : Type X, Y : Type TX : reduction_t A X TY : reduction_t A Y F : function X Y H : monotonic TX TY F The term \"A\" has type \"Type\" while it is expected to have type \"monotonic ?TX ?TY ?F\".", "type": "wrong_type", "handled": true}]}, "chat": [], "original": "intros F H. unfold wmonotonic, monotonic, increasing in *. intros R S H0 H1 H2 H3. apply mkwmon. - apply (wmon_a A X Y TX TY F H). apply H0. - apply (mon_m A X Y TX TY F H). apply H1. - apply (UExp_mon A X Y TX TY F H). apply H2.", "succ": false}]