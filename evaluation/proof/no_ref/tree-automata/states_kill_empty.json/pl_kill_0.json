[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros p m plp H1 H2."], "tactic": "exists (prec_list_kill m p).", "exn": "In environment p : prec_list m : Map bool plp : pl_path H1 : pl_path_incl plp p H2 : pl_path_true plp m The term \"prec_list_kill m p\" has type \"option prec_list\" while it is expected to have type \"prec_list\".", "type": "wrong_type", "handled": true}, {"ctx": ["intros p m plp H1 H2."], "tactic": "split.", "exn": "Unable to find an instance for the variable x.", "type": "no_instance_var", "handled": true}, {"ctx": ["intros p m plp H1 H2.", "induction p.", "+", "simpl."], "tactic": "+", "exn": "Wrong bullet +: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros p m plp H1 H2.", "induction p.", "+", "simpl.", "shelve.", "+"], "tactic": "+", "exn": "Wrong bullet +: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros p m plp H1 H2.", "induction p.", "+", "simpl.", "shelve.", "+", "shelve."], "tactic": "+", "exn": "Wrong bullet +: No more subgoals.", "type": "no_more_subgoals", "handled": true}]}, "chat": [], "original": "intros p m plp H1 H2. exists (prec_list_kill m p). split. - induction p. + simpl. reflexivity. + destruct a as [ad la ls]. destruct (MapGet bool m ad) eqn:E. * destruct (prec_list_kill m la) eqn:Ela; destruct (prec_list_kill m ls) eqn:Els. { inversion H1; subst. rewrite Ela. rewrite Els. reflexivity. } { inversion H1; subst. rewrite Ela. rewrite Els. reflexivity. } { inversion H1; subst. rewrite Ela. reflexivity. } { inversion H1; subst. rewrite Ela. reflexivity. } * destruct (prec_list_kill m ls) eqn:Els. { inversion H1; subst. rewrite Els. reflexivity. } { inversion H1; subst. reflexivity. } - split. + induction p. * simpl. apply pl_path_incl_nil. * destruct a as [a la ls]. apply pl_path_incl_cons. { apply IHp. } { apply IHp. } + induction p. * simpl. apply pl_path_true_nil. * destruct a as [ad la ls]. apply pl_path_true_cons. { apply IHp. } { }", "succ": false}]