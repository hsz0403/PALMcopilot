[{"history": {"proof": "intros. unfold iad_conv. unfold iad_conv_inv. destruct a0 as [|p0]; destruct a1 as [|p1]. - reflexivity. - srun best use: iad_inv_0. - destruct p0. + hauto use: iad_inv_1. + hauto use: iad_inv_1. + sfirstorder depth: 3. - unfold iad_conv_inv_0. unfold iad_conv_aux_2. rewrite iad_inv_2. reflexivity.", "repairs": ["", "", "", "", "", "", "", "hammer", "", "", "", "hammer", "", "hammer", "wrong_bullet", "hammer", "wrong_bullet", "", "", "", ""], "exceptions": [{"ctx": ["intros.", "unfold iad_conv.", "unfold iad_conv_inv.", "destruct a0 as [|p0]; destruct a1 as [|p1].", "-"], "tactic": "rewrite iad_inv_0.", "exn": "Found no subterm matching \"iad_conv_inv_0 (iad_conv_aux_0 ?M1863)\" in the current goal.", "type": "no_subterm", "handled": true}, {"ctx": ["intros.", "unfold iad_conv.", "unfold iad_conv_inv.", "destruct a0 as [|p0]; destruct a1 as [|p1].", "-", "reflexivity.", "-"], "tactic": "rewrite Ndouble_inv_N0.", "exn": "Unable to find an instance for the variable x.", "type": "no_instance_var", "handled": true}, {"ctx": ["intros.", "unfold iad_conv.", "unfold iad_conv_inv.", "destruct a0 as [|p0]; destruct a1 as [|p1].", "-", "reflexivity.", "-", "unfold iad_conv_inv_0."], "tactic": "rewrite iad_inv_1.", "exn": "Found no subterm matching \"iad_conv_inv_0 (iad_conv_aux_1 ?M1865)\" in the current goal.", "type": "no_subterm", "handled": true}, {"ctx": ["intros.", "unfold iad_conv.", "unfold iad_conv_inv.", "destruct a0 as [|p0]; destruct a1 as [|p1].", "-", "reflexivity.", "-", "unfold iad_conv_inv_0."], "tactic": "reflexivity.", "exn": "In environment p1 : positive Unable to unify \"cpla 0%N (N.pos p1)\" with \"(fix iad_conv_inv_0 (p : positive) : ad_couple := match p with | (p'~1~1)%positive => match iad_conv_inv_0 p' with | cpla 0%N 0%N => cpla 1%N 1%N | cpla 0%N (N.pos p1) => cpla 1%N (N.pos p1~1) | cpla (N.pos p1) 0%N => cpla (N.pos p1~1) 1%N | cpla (N.pos p1) (N.pos p2) => cpla (N.pos p1~1) (N.pos p2~1) end | (p'~0~1)%positive => match iad_conv_inv_0 p' with | cpla 0%N 0%N => cpla 1%N 0%N | cpla 0%N (N.pos p1) => cpla 1%N (N.pos p1~0) | cpla (N.pos p1) 0%N => cpla (N.pos p1~1) 0%N | cpla (N.pos p1) (N.pos p2) => cpla (N.pos p1~1) (N.pos p2~0) end | 3%positive => cpla 1%N 1%N | (p'~1~0)%positive => match iad_conv_inv_0 p' with | cpla 0%N 0%N => cpla 0%N 1%N | cpla 0%N (N.pos p1) => cpla 0%N (N.pos p1~1) | cpla (N.pos p1) 0%N => cpla (N.pos p1~0) 1%N | cpla (N.pos p1) (N.pos p2) => cpla (N.pos p1~0) (N.pos p2~1) end | (p'~0~0)%positive => match iad_conv_inv_0 p' with | cpla 0%N 0%N => cpla 0%N 0%N | cpla 0%N (N.pos p1) => cpla 0%N (N.pos p1~0) | cpla (N.pos p1) 0%N => cpla (N.pos p1~0) 0%N | cpla (N.pos p1) (N.pos p2) => cpla (N.pos p1~0) (N.pos p2~0) end | 2%positive => cpla 0%N 1%N | 1%positive => cpla 1%N 0%N end) (iad_conv_aux_0 p1)\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros.", "unfold iad_conv.", "unfold iad_conv_inv.", "destruct a0 as [|p0]; destruct a1 as [|p1].", "-", "reflexivity.", "-", "unfold iad_conv_inv_0."], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros.", "unfold iad_conv.", "unfold iad_conv_inv.", "destruct a0 as [|p0]; destruct a1 as [|p1].", "-", "reflexivity.", "-", "unfold iad_conv_inv_0.", "shelve.", "-", "destruct p0.", "+"], "tactic": "+", "exn": "Wrong bullet +: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros.", "unfold iad_conv.", "unfold iad_conv_inv.", "destruct a0 as [|p0]; destruct a1 as [|p1].", "-", "reflexivity.", "-", "unfold iad_conv_inv_0.", "shelve.", "-", "destruct p0.", "+", "shelve.", "+"], "tactic": "-", "exn": "Wrong bullet -: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros.", "unfold iad_conv.", "unfold iad_conv_inv.", "destruct a0 as [|p0]; destruct a1 as [|p1].", "-", "reflexivity.", "-", "unfold iad_conv_inv_0.", "shelve.", "-", "destruct p0.", "+", "shelve.", "+", "shelve."], "tactic": "-", "exn": "Wrong bullet -: Expecting +.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros.", "unfold iad_conv.", "unfold iad_conv_inv.", "destruct a0 as [|p0]; destruct a1 as [|p1].", "-", "reflexivity.", "-", "unfold iad_conv_inv_0.", "shelve.", "-", "destruct p0.", "+", "shelve.", "+", "shelve.", "+"], "tactic": "+", "exn": "Wrong bullet +: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros.", "unfold iad_conv.", "unfold iad_conv_inv.", "destruct a0 as [|p0]; destruct a1 as [|p1].", "-", "reflexivity.", "-", "unfold iad_conv_inv_0.", "shelve.", "-", "destruct p0.", "+", "shelve.", "+", "shelve.", "+", "shelve."], "tactic": "+", "exn": "Wrong bullet +: Expecting -.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros.", "unfold iad_conv.", "unfold iad_conv_inv.", "destruct a0 as [|p0]; destruct a1 as [|p1].", "-", "reflexivity.", "-", "unfold iad_conv_inv_0.", "shelve.", "-", "destruct p0.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "-", "unfold iad_conv_inv_0."], "tactic": "rewrite iad_inv_0.", "exn": "Found no subterm matching \"iad_conv_inv_0 (iad_conv_aux_0 ?M1870)\" in the current goal.", "type": "no_subterm", "handled": true}, {"ctx": ["intros.", "unfold iad_conv.", "unfold iad_conv_inv.", "destruct a0 as [|p0]; destruct a1 as [|p1].", "-", "reflexivity.", "-", "unfold iad_conv_inv_0.", "shelve.", "-", "destruct p0.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "-", "unfold iad_conv_inv_0."], "tactic": "reflexivity.", "exn": "In environment p0, p1 : positive Unable to unify \"cpla (N.pos p0) (N.pos p1)\" with \"(fix iad_conv_inv_0 (p : positive) : ad_couple := match p with | (p'~1~1)%positive => match iad_conv_inv_0 p' with | cpla 0%N 0%N => cpla 1%N 1%N | cpla 0%N (N.pos p1) => cpla 1%N (N.pos p1~1) | cpla (N.pos p1) 0%N => cpla (N.pos p1~1) 1%N | cpla (N.pos p1) (N.pos p2) => cpla (N.pos p1~1) (N.pos p2~1) end | (p'~0~1)%positive => match iad_conv_inv_0 p' with | cpla 0%N 0%N => cpla 1%N 0%N | cpla 0%N (N.pos p1) => cpla 1%N (N.pos p1~0) | cpla (N.pos p1) 0%N => cpla (N.pos p1~1) 0%N | cpla (N.pos p1) (N.pos p2) => cpla (N.pos p1~1) (N.pos p2~0) end | 3%positive => cpla 1%N 1%N | (p'~1~0)%positive => match iad_conv_inv_0 p' with | cpla 0%N 0%N => cpla 0%N 1%N | cpla 0%N (N.pos p1) => cpla 0%N (N.pos p1~1) | cpla (N.pos p1) 0%N => cpla (N.pos p1~0) 1%N | cpla (N.pos p1) (N.pos p2) => cpla (N.pos p1~0) (N.pos p2~1) end | (p'~0~0)%positive => match iad_conv_inv_0 p' with | cpla 0%N 0%N => cpla 0%N 0%N | cpla 0%N (N.pos p1) => cpla 0%N (N.pos p1~0) | cpla (N.pos p1) 0%N => cpla (N.pos p1~0) 0%N | cpla (N.pos p1) (N.pos p2) => cpla (N.pos p1~0) (N.pos p2~0) end | 2%positive => cpla 0%N 1%N | 1%positive => cpla 1%N 0%N end) (iad_conv_aux_2 p0 p1)\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros.", "unfold iad_conv.", "unfold iad_conv_inv.", "destruct a0 as [|p0]; destruct a1 as [|p1].", "-", "reflexivity.", "-", "unfold iad_conv_inv_0.", "shelve.", "-", "destruct p0.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "-", "unfold iad_conv_inv_0."], "tactic": "rewrite Ndouble_inv_xO.", "exn": "Unable to find an instance for the variables x, p.", "type": "no_instance_var", "handled": true}, {"ctx": ["intros.", "unfold iad_conv.", "unfold iad_conv_inv.", "destruct a0 as [|p0]; destruct a1 as [|p1].", "-", "reflexivity.", "-", "unfold iad_conv_inv_0.", "shelve.", "-", "destruct p0.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "-", "unfold iad_conv_inv_0."], "tactic": "rewrite iad_inv_1.", "exn": "Found no subterm matching \"iad_conv_inv_0 (iad_conv_aux_1 ?M1870)\" in the current goal.", "type": "no_subterm", "handled": true}, {"ctx": ["intros.", "unfold iad_conv.", "unfold iad_conv_inv.", "destruct a0 as [|p0]; destruct a1 as [|p1].", "-", "reflexivity.", "-", "unfold iad_conv_inv_0.", "shelve.", "-", "destruct p0.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "-", "unfold iad_conv_inv_0."], "tactic": "reflexivity.", "exn": "In environment p0, p1 : positive Unable to unify \"cpla (N.pos p0) (N.pos p1)\" with \"(fix iad_conv_inv_0 (p : positive) : ad_couple := match p with | (p'~1~1)%positive => match iad_conv_inv_0 p' with | cpla 0%N 0%N => cpla 1%N 1%N | cpla 0%N (N.pos p1) => cpla 1%N (N.pos p1~1) | cpla (N.pos p1) 0%N => cpla (N.pos p1~1) 1%N | cpla (N.pos p1) (N.pos p2) => cpla (N.pos p1~1) (N.pos p2~1) end | (p'~0~1)%positive => match iad_conv_inv_0 p' with | cpla 0%N 0%N => cpla 1%N 0%N | cpla 0%N (N.pos p1) => cpla 1%N (N.pos p1~0) | cpla (N.pos p1) 0%N => cpla (N.pos p1~1) 0%N | cpla (N.pos p1) (N.pos p2) => cpla (N.pos p1~1) (N.pos p2~0) end | 3%positive => cpla 1%N 1%N | (p'~1~0)%positive => match iad_conv_inv_0 p' with | cpla 0%N 0%N => cpla 0%N 1%N | cpla 0%N (N.pos p1) => cpla 0%N (N.pos p1~1) | cpla (N.pos p1) 0%N => cpla (N.pos p1~0) 1%N | cpla (N.pos p1) (N.pos p2) => cpla (N.pos p1~0) (N.pos p2~1) end | (p'~0~0)%positive => match iad_conv_inv_0 p' with | cpla 0%N 0%N => cpla 0%N 0%N | cpla 0%N (N.pos p1) => cpla 0%N (N.pos p1~0) | cpla (N.pos p1) 0%N => cpla (N.pos p1~0) 0%N | cpla (N.pos p1) (N.pos p2) => cpla (N.pos p1~0) (N.pos p2~0) end | 2%positive => cpla 0%N 1%N | 1%positive => cpla 1%N 0%N end) (iad_conv_aux_2 p0 p1)\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros.", "unfold iad_conv.", "unfold iad_conv_inv.", "destruct a0 as [|p0]; destruct a1 as [|p1].", "-", "reflexivity.", "-", "unfold iad_conv_inv_0.", "shelve.", "-", "destruct p0.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "-", "unfold iad_conv_inv_0.", "unfold iad_conv_aux_2.", "rewrite iad_inv_2.", "reflexivity."], "tactic": "+", "exn": "Wrong bullet +: No more subgoals.", "type": "no_more_subgoals", "handled": true}]}, "chat": [], "original": "intros. unfold iad_conv. unfold iad_conv_inv. destruct a0 as [|p0]; destruct a1 as [|p1]. - simpl. unfold iad_conv_aux_0. unfold iad_conv_inv_0. rewrite iad_inv_0. reflexivity. - simpl. unfold iad_conv_aux_1. rewrite Ndouble_inv_N0. unfold iad_conv_inv_0. rewrite iad_inv_1. reflexivity. - destruct p0. + destruct p1. * simpl. unfold iad_conv_aux_0. unfold iad_conv_inv_0. rewrite iad_inv_0. reflexivity. * simpl. unfold iad_conv_aux_1. rewrite Ndouble_inv_xO. unfold iad_conv_inv_0. rewrite iad_inv_2. reflexivity. * simpl. unfold iad_conv_aux_2. replace (iad_conv_aux_2 (N.pos p0) (N.pos p1)) with (N.pos (Ndouble p0~1)). unfold iad_conv_inv_0. rewrite iad_inv_2. reflexivity. rewrite Ndouble_succ_double. reflexivity. + destruct p1. * simpl. unfold iad_conv_aux_1. rewrite Ndouble_inv_xO. unfold iad_conv_inv_0. rewrite iad_inv_1. reflexivity. * simpl. unfold iad_conv_aux_2. unfold iad_conv_inv_0. rewrite iad_inv_2. reflexivity. - destruct p0; destruct p1. + simpl. unfold iad_conv_aux_0. unfold iad_conv_inv_0. rewrite iad_inv_0. reflexivity. + simpl. unfold iad_conv_aux_1. rewrite Ndouble_inv_xO. unfold iad_conv_inv_0. rewrite iad_inv_1. reflexivity. + simpl. unfold iad_conv_aux_2. unfold iad_conv_inv_0. rewrite iad_inv_2. reflexivity. + simpl. rewrite Ndouble_inv_xO. reflexivity. + simpl. unfold iad_conv_aux_1. rewrite Ndouble_inv_N0. reflexivity. + simpl. unfold iad_conv_aux_2. reflexivity. - destruct p0; destruct p1. + simpl. unfold iad_conv_aux_0. rewrite iad_inv_0. reflexivity. + simpl. unfold iad_conv_aux_1. rewrite Ndouble_inv_xO. rewrite iad_inv_1. reflexivity. + simpl. unfold iad_conv_aux_2. unfold iad_conv_inv_0. rewrite iad_inv_2. reflexivity. + simpl. rewrite Ndouble_inv_xO. reflexivity. + simpl. unfold iad_conv_aux_1. rewrite Ndouble_inv_N0. reflexivity. + simpl. unfold iad_conv_aux_2. reflexivity.", "succ": true}]