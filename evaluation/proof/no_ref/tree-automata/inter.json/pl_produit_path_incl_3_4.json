[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros a la ls p H1 H2.", "unfold pl_produit_path_incl_def_3 in *.", "intros n m plp H3 H4 H5 H6."], "tactic": "specialize (H1 n m (pl_produit_1 la m ls) H3 H4 H5 H6) as [plp0 [plp1 [H7 [H8 H9]]]].", "exn": "In environment a : ad la, ls, p : prec_list H1 : pl_produit_path_incl_def_2 la p H2 : forall (n m : nat) (plp : pl_path), pl_path_incl plp (pl_produit_1 ls m p) -> pl_tl_length ls n -> pl_tl_length p n -> pl_essence ls p <= m -> exists plp0 plp1 : pl_path, plp = pl_path_product plp0 plp1 /\\\\ pl_path_incl plp0 ls /\\\\ pl_path_incl plp1 p n, m : nat plp : pl_path H3 : pl_path_incl plp (pl_produit_1 (prec_cons a la ls) m p) H4 : pl_tl_length (prec_cons a la ls) n H5 : pl_tl_length p n H6 : pl_essence (prec_cons a la ls) p <= m The term \"pl_produit_1 la m ls\" has type \"prec_list\" while it is expected to have type \"pl_path\".", "type": "wrong_type", "handled": true}]}, "chat": [], "original": "intros a la ls p H1 H2. unfold pl_produit_path_incl_def_3 in *. intros n m plp H3 H4 H5 H6. specialize (H1 n m (pl_produit_1 la m ls) H3 H4 H5 H6) as [plp0 [plp1 [H7 [H8 H9]]]]. specialize (H2 n m plp0 a la ls H8 H3 H4 (le_trans H5 H9)) as [plp0' [plp1' [H10 [H11 H12]]]]. exists plp0', plp1'; auto.", "succ": false}]