[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros."], "tactic": "intros H0 H1 H2 H3 H4 H5 H6.", "exn": "H0 is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros."], "tactic": "intros H0' H1 H2 H3 H4 H5 H6.", "exn": "H1 is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros."], "tactic": "intros H0' H1' H2 H3 H4 H5 H6.", "exn": "H2 is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros."], "tactic": "intros H0' H1' H2' H3 H4 H5 H6.", "exn": "H3 is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros."], "tactic": "intros H0' H1' H2' H3' H4 H5 H6.", "exn": "H4 is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros."], "tactic": "intros H0' H1' H2' H3' H4' H5 H6.", "exn": "H5 is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros."], "tactic": "intros H0' H1' H2' H3' H4' H5' H6.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros."], "tactic": "intros H7 H8 H9.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros.", "unfold insert_ostate.", "destruct a.", "-"], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}]}, "chat": [], "original": "intros. intros. intros. intros. intros. intros. intros. intros. intros H0 H1 H2 H3 H4 H5 H6. intros H7 H8 H9. unfold insert_ostate. destruct a. - pose proof H10 as H10'. apply H10 in H7. apply H10' in H11. rewrite H7. rewrite H11. intros. split; intros. * intros [H12 | H12]. + left. apply (rec_dta d0 a0 t ladj); auto. + right. apply (rec_dta d1 a1 t ladj); auto. * destruct H12. + left. inversion H12. apply (rec_dta (u_merge d0 d1) a t (union_mpl s0' s1')); auto. + right. inversion H12. apply (rec_dta (u_merge d0 d1) a t (union_mpl s0' s1')); auto. - pose proof H10 as H10'. apply H10 in H7. apply H10' in H11. rewrite H7. rewrite H11. intros. split; intros. * intros [H12 | H12]. + left. apply (rec_dta d0 a0 t ladj); auto. + right. apply (rec_dta d1 a1 t ladj); auto. * destruct H12. + left. inversion H12.", "succ": false}]