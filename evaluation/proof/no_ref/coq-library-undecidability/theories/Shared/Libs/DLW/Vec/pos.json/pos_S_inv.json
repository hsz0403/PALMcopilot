[{"history": {"proof": "pose proof (Fin.eq_dec p pos0) as H_dec. destruct H_dec. - left. auto. - right. sauto lq: on dep: on depth: 3.", "repairs": ["", "", "", "", "", "", "", "hammer"], "exceptions": [{"ctx": ["pose proof (Fin.eq_dec p pos0) as H_dec.", "destruct H_dec.", "-", "left.", "auto.", "-", "right."], "tactic": "exists p.", "exn": "In environment pos_inv_t := fun n : nat => match n as x return (pos x -> Set) with | 0 => fun _ : pos 0 => False | S n0 => fun i : pos (S n0) => ((i = pos0) + {p : pos n0 | i = pos_nxt p})%type end : forall n : nat, pos n -> Set pos_inv := fun (_tmp : nat) (p0 : pos _tmp) => match p0 as t in (pos n) return (pos_inv_t t) with | @Fin.F1 n => inl eq_refl | @Fin.FS n p => inr (exist (fun p1 : pos n => pos_nxt p = pos_nxt p1) p eq_refl) end : forall (n : nat) (p : pos n), pos_inv_t p n : nat p : pos (S n) n0 : p <> pos0 The term \"p\" has type \"pos (S n)\" while it is expected to have type \"pos n\".", "type": "wrong_type", "handled": true}]}, "chat": [], "original": "pose proof (Fin.eq_dec p pos0) as H_dec. destruct H_dec. - left. auto. - right. exists p. auto.", "succ": true}]