[{"history": {"proof": "revert l m. induction l. - intros. simpl. destruct m. + reflexivity. + simpl. reflexivity. - intros. simpl. destruct m. + reflexivity. + reflexivity.", "repairs": ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""], "exceptions": [{"ctx": ["revert l m.", "induction l.", "-", "intros.", "simpl.", "destruct m.", "+"], "tactic": "rewrite lb_pointwise_nil.", "exn": "Found no subterm matching \"lb_pointwise nil nil\" in the current goal.", "type": "no_subterm", "handled": true}, {"ctx": ["revert l m.", "induction l.", "-", "intros.", "simpl.", "destruct m.", "+", "reflexivity.", "+", "simpl."], "tactic": "rewrite lb_pointwise_left.", "exn": "Found no subterm matching \"lb_pointwise ?M1446 nil\" in the current goal.", "type": "no_subterm", "handled": true}, {"ctx": ["revert l m.", "induction l.", "-", "intros.", "simpl.", "destruct m.", "+", "reflexivity.", "+", "simpl.", "reflexivity.", "-", "intros.", "simpl.", "destruct m.", "+"], "tactic": "rewrite lb_pointwise_right.", "exn": "Found no subterm matching \"lb_pointwise nil ?M1453\" in the current goal.", "type": "no_subterm", "handled": true}, {"ctx": ["revert l m.", "induction l.", "-", "intros.", "simpl.", "destruct m.", "+", "reflexivity.", "+", "simpl.", "reflexivity.", "-", "intros.", "simpl.", "destruct m.", "+", "reflexivity.", "+"], "tactic": "rewrite !map_cons.", "exn": "Found no subterm matching \"map ?M1457 (?M1458 :: ?M1459)\" in the current goal.", "type": "no_subterm", "handled": true}, {"ctx": ["revert l m.", "induction l.", "-", "intros.", "simpl.", "destruct m.", "+", "reflexivity.", "+", "simpl.", "reflexivity.", "-", "intros.", "simpl.", "destruct m.", "+", "reflexivity.", "+"], "tactic": "rewrite IHl.", "exn": "Found no subterm matching \"lb_pointwise (x :: l) (y :: ?M1455)\" in the current goal.", "type": "no_subterm", "handled": true}]}, "chat": [], "original": "revert l m. induction l. - intros. simpl. destruct m. + simpl. rewrite lb_pointwise_nil. reflexivity. + simpl. rewrite lb_pointwise_left. reflexivity. - intros. simpl. destruct m. + simpl. rewrite lb_pointwise_right. reflexivity. + simpl. rewrite !map_cons. rewrite IHl. reflexivity.", "succ": true}]