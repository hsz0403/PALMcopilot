[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": [], "tactic": "intros X H.", "exn": "X is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros X' H.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros.", "unfold enumerable__T in *."], "tactic": "intros [f Hf].", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}]}, "chat": [], "original": "intros X H. unfold enumerable__T in *. intros [f Hf]. exists (fun n => tab X (fun n => map f (L_T (X -> Prop) (ex_intro (fun L : nat -> list X => enum (X -> Prop) L) H (enum_enumT _ H)))) n). intros l. destruct l as [|x l]. - exists 0. reflexivity. - destruct (Hf x) as [n Hn]. exists (S n). rewrite tab_S. rewrite map_map. unfold tab. simpl. rewrite concat_cons. rewrite concat_filter_map. rewrite map_id_list. + rewrite <- Hn. split; auto. + intros. apply H.", "succ": false}]