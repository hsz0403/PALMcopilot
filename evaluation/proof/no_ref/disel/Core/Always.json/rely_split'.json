[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros.", "split.", "-"], "tactic": "intros H1 H2 H3.", "exn": "H1 is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros.", "split.", "-"], "tactic": "intros H1' H2 H3.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros.", "split.", "-"], "tactic": "split.", "exn": "Not an inductive goal with 1 constructor.", "type": "not_inductive_goal", "handled": true}, {"ctx": ["intros.", "split.", "-"], "tactic": "apply (Idle V z s1 s2).", "exn": "In environment V, W : world K : hooks A : Type w : injects V W K this, z : nid s1 : state s1' : union_mapPCM Label dstatelet s2 : state s2' : union_mapPCM Label dstatelet H : s1 \\\\In Coh V H0 : s2 \\\\In Coh V H1 : network_step W z (s1 \\\\+ s1') (s2 \\\\+ s2') The term \"V\" has type \"world\" while it is expected to have type \"nid\".", "type": "wrong_type", "handled": true}, {"ctx": ["intros.", "split.", "-"], "tactic": "apply (Idle W2 z s1' s2').", "exn": "In environment V, W : world K : hooks A : Type w : injects V W K this, z : nid s1 : state s1' : union_mapPCM Label dstatelet s2 : state s2' : union_mapPCM Label dstatelet H : s1 \\\\In Coh V H0 : s2 \\\\In Coh V H1 : network_step W z (s1 \\\\+ s1') (s2 \\\\+ s2') The term \"W2\" has type \"world\" while it is expected to have type \"nid\".", "type": "wrong_type", "handled": true}, {"ctx": ["intros.", "split.", "-"], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros.", "split.", "-", "shelve.", "-"], "tactic": "intros [H1 H2].", "exn": "H1 is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros.", "split.", "-", "shelve.", "-"], "tactic": "intros [H1' H2].", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}]}, "chat": [], "original": "intros. split. - intros H1 H2 H3. split. + apply (Idle V z s1 s2). auto. + apply (Idle W2 z s1' s2'). auto. - intros [H1 H2]. apply (sem_split _ _ _ _ _ this). auto. auto. auto.", "succ": false}]