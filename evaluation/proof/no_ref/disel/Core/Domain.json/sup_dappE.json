[{"history": {"proof": "sfirstorder depth: 3use: supP, sup_appE, sup_closed.", "repairs": ["hammer"], "exceptions": [{"ctx": [], "tactic": "rewrite sup_appE.", "exn": "The LHS of sup_appE (sup _ _) does not match any subterm of the goal", "type": "no_match_term", "handled": true}, {"ctx": [], "tactic": "apply sup_closed.", "exn": "In environment A : Type B : A -> lattice s : Pred (dfunLattice B) x : A Unable to unify \"simpl_fun (Pred ?T) Prop\" with \"sup s x = sup [Pred y | exists f : dfunLattice B, f \\\\In s /\\\\ y = f x]\".", "type": "cannot_unify", "handled": true}, {"ctx": [], "tactic": "intros d Hd.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": [], "tactic": "apply supP.", "exn": "In environment A : Type B : A -> lattice s : Pred (dfunLattice B) x : A Unable to unify \"(let (mx_leq, _, _, _) := Poset.mixin (Poset.class ?M1464) in mx_leq) ?M1466 (sup ?M1465)\" with \"sup s x = sup [Pred y | exists f : dfunLattice B, f \\\\In s /\\\\ y = f x]\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "rewrite sup_appE. apply sup_closed. intros d Hd. apply supP. exists d. split. * apply Hd. * reflexivity.", "succ": true}]