[{"history": {"proof": "intros. unfold fun_leq in *. intros. sfirstorder depth: 3use: poset_trans.", "repairs": ["", "", "", "hammer"], "exceptions": [{"ctx": ["intros."], "tactic": "intros H1 H2.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros.", "unfold fun_leq in *.", "intros."], "tactic": "apply poset_trans with (y := y x).", "exn": "In environment A : Type B : poset x, y, z : A -> B H : forall x0 : A, x x0 <== y x0 H0 : forall x : A, y x <== z x x0 : A The term \"x\" has type \"A -> B\" while it is expected to have type \"A\".", "type": "wrong_type", "handled": true}]}, "chat": [], "original": "intros. intros H1 H2. unfold fun_leq in *. intros. apply poset_trans with (y := y x). - apply H1. - apply H2.", "succ": true}]