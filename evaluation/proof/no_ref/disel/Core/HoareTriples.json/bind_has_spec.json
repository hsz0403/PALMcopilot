[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["unfold has_spec, bind_s."], "tactic": "apply or_introl.", "exn": "In environment this : nid W : world A, B : Type e1 : DT this W A e2 : A -> DT this W B Unable to unify \"?M1558 \\\\/ ?M1559\" with \"(let 'MemProp p := Mem [Pred T | forall (i : state) (t : proc this W B), (fun i0 : state => s1.1 i0 /\\\\ (forall (x : A) (s : state), s1.2 i0 x s -> (spec_of (e2 x)).1 s), fun (i0 : state) (y : B) (m : state) => exists (x : A) (s : state), s1.2 i0 x s /\\\\ (spec_of (e2 x)).2 s y m).1 i -> i \\\\In Coh W -> t \\\\In T -> after i t ((fun i0 : state => s1.1 i0 /\\\\ (forall (x : A) (s : state), s1.2 i0 x s -> (spec_of (e2 x)).1 s), fun (i0 : state) (y : B) (m : state) => exists (x : A) (s : state), s1.2 i0 x s /\\\\ (spec_of (e2 x)).2 s y m).2 i)] in [eta p]) (bnd_prog (code_of e1) (fun x : A => code_of (e2 x)))\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros. unfold has_spec, bind_s. apply or_introl. reflexivity.", "succ": false}]