[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": [], "tactic": "intros orig_base_params one_node_params raft_params.", "exn": "orig_base_params is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params raft_params.", "exn": "one_node_params is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params.", "exn": "raft_params is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros orig_base_params' one_node_params' raft_params'.", "unfold raft_net_invariant_request_vote, lastApplied_le_commitIndex."], "tactic": "intros xs p ys net st' ps' d m t cid lli llt HhandleRequestVote HpBody HPinterm HRRachange Hpackets Hst' Hps'.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}]}, "chat": [], "original": "intros orig_base_params one_node_params raft_params. unfold raft_net_invariant_request_vote, lastApplied_le_commitIndex. intros xs p ys net st' ps' d m t cid lli llt HhandleRequestVote HpBody HPinterm HRRachange Hpackets Hst' Hps'. apply (lastApplied_le_commitIndex_invariant orig_base_params one_node_params raft_params net HRRachange).", "succ": false}]