[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["unfold refined_raft_net_invariant_append_entries, votes_received_cronies, cronies_votes, votes_nw.", "intros.", "split; intros.", "-", "unfold votes_received_cronies, votes_correct in *.", "destruct rri as [Hrri _]."], "tactic": "unfold raft_refinement_interface, votes_correct_interface in Hrri.", "exn": "Cannot coerce raft_refinement_interface to an evaluable reference.", "type": "not_evaluable", "handled": true}, {"ctx": ["unfold refined_raft_net_invariant_append_entries, votes_received_cronies, cronies_votes, votes_nw.", "intros.", "split; intros.", "-", "unfold votes_received_cronies, votes_correct in *.", "destruct rri as [Hrri _].", "specialize (Hrri cronies_correct)."], "tactic": "specialize (Hrri one_node_params raft_params).", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params rri : raft_refinement_interface vci : votes_correct_interface cvfsi : candidates_vote_for_selves_interface xs : list packet p : packet ys : list packet net : network st' : name -> data ps' : list packet gd : electionsData d : raft_data m : msg t : term n : name pli : logIndex plt : term es : list entry ci : logIndex H : handleAppendEntries (pDst p) (snd (nwState net (pDst p))) t n pli plt es ci = (d, m) H0 : gd = update_elections_data_appendEntries (pDst p) (nwState net (pDst p)) t n pli plt es ci H1 : pBody p = AppendEntries t n pli plt es ci H2 : cronies_correct net H3 : refined_raft_intermediate_reachable net H4 : nwPackets net = xs ++ p :: ys H5 : forall h : name, st' h = update name_eq_dec (nwState net) (pDst p) (gd, d) h H6 : forall p' : packet, In p' ps' -> In p' (xs ++ ys) \\\\/ p' = {| pSrc := pDst p; pDst := pSrc p; pBody := m |} Hrri : forall net : network, refined_raft_net_invariant_init cronies_correct -> refined_raft_net_invariant_client_request cronies_correct -> refined_raft_net_invariant_timeout cronies_correct -> refined_raft_net_invariant_append_entries cronies_correct -> refined_raft_net_invariant_append_entries_reply cronies_correct -> refined_raft_net_invariant_request_vote cronies_correct -> refined_raft_net_invariant_request_vote_reply cronies_correct -> refined_raft_net_invariant_do_leader cronies_correct -> refined_raft_net_invariant_do_generic_server cronies_correct -> refined_raft_net_invariant_state_same_packet_subset cronies_correct -> refined_raft_net_invariant_reboot cronies_correct -> refined_raft_intermediate_reachable net -> cronies_correct net lift_prop : forall P : network -> Prop, (forall net : network, raft_intermediate_reachable net -> P net) -> forall net : network, refined_raft_intermediate_reachable net -> P (deghost net) lower_prop : forall P : network -> Prop, (forall net : network, refined_raft_intermediate_reachable net -> P (deghost net)) -> forall net : network, raft_intermediate_reachable net -> P net deghost_spec : forall (net : network) (h : Net.name), nwState (deghost net) h = snd (nwState net h) simulation_1 : forall net : network, refined_raft_intermediate_reachable net -> raft_intermediate_reachable (deghost net) The term \"one_node_params\" has type \"OneNodeParams orig_base_params\" while it is expected to have type \"network\".", "type": "wrong_type", "handled": true}, {"ctx": ["unfold refined_raft_net_invariant_append_entries, votes_received_cronies, cronies_votes, votes_nw.", "intros.", "split; intros.", "-", "unfold votes_received_cronies, votes_correct in *.", "destruct rri as [Hrri _].", "specialize (Hrri cronies_correct)."], "tactic": "apply Hrri in H; auto.", "exn": "Unable to apply lemma of type \"forall net : network, refined_raft_net_invariant_init cronies_correct -> refined_raft_net_invariant_client_request cronies_correct -> refined_raft_net_invariant_timeout cronies_correct -> refined_raft_net_invariant_append_entries cronies_correct -> refined_raft_net_invariant_append_entries_reply cronies_correct -> refined_raft_net_invariant_request_vote cronies_correct -> refined_raft_net_invariant_request_vote_reply cronies_correct -> refined_raft_net_invariant_do_leader cronies_correct -> refined_raft_net_invariant_do_generic_server cronies_correct -> refined_raft_net_invariant_state_same_packet_subset cronies_correct -> refined_raft_net_invariant_reboot cronies_correct -> refined_raft_intermediate_reachable net -> cronies_correct net\" on hypothesis of type \"handleAppendEntries (pDst p) (snd (nwState net (pDst p))) t n pli plt es ci = (d, m)\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["unfold refined_raft_net_invariant_append_entries, votes_received_cronies, cronies_votes, votes_nw.", "intros.", "split; intros.", "-", "unfold votes_received_cronies, votes_correct in *.", "destruct rri as [Hrri _].", "specialize (Hrri cronies_correct)."], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["unfold refined_raft_net_invariant_append_entries, votes_received_cronies, cronies_votes, votes_nw.", "intros.", "split; intros.", "-", "unfold votes_received_cronies, votes_correct in *.", "destruct rri as [Hrri _].", "specialize (Hrri cronies_correct).", "shelve.", "-", "unfold votes_received_cronies, cronies_votes, votes_nw in *.", "destruct H as [Hvotes_received_cronies Hvotes_cronies_votes].", "split; intros.", "+"], "tactic": "+", "exn": "Wrong bullet +: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}]}, "chat": [], "original": "unfold refined_raft_net_invariant_append_entries, votes_received_cronies, cronies_votes, votes_nw. intros. unfold votes_received_cronies, cronies_votes, votes_nw in *. split; intros. - unfold votes_received_cronies, votes_correct in *. destruct rri as [Hrri _]. unfold raft_refinement_interface, votes_correct_interface in Hrri. specialize (Hrri cronies_correct). specialize (Hrri one_node_params raft_params). unfold votes_received_cronies, cronies_correct in H. apply Hrri in H; auto. - unfold votes_received_cronies, cronies_votes, votes_nw in *. destruct H as [Hvotes_received_cronies Hvotes_cronies_votes]. unfold votes_received_cronies, cronies_votes, votes_nw. split; intros. + destruct Hvotes_received_cronies as [Hvotes_received_cronies _]. specialize (Hvotes_received_cronies h crony). apply Hvotes_received_cronies. apply H; auto. + destruct Hvotes_cronies_votes as [_ [_ Hvotes_nw]]. specialize (Hvotes_nw p t). apply Hvotes_nw. apply H; auto.", "succ": false}]