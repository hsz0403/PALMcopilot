[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["unfold refined_raft_net_invariant_append_entries_reply.", "intros.", "unfold requestVoteReply_moreUpToDate in *.", "intros."], "tactic": "eapply H; eauto.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params rri : raft_refinement_interface rvmimti : requestVote_maxIndex_maxTerm_interface rvrtsi : requestVoteReply_term_sanity_interface vfmutdi : votedFor_moreUpToDate_interface xs : list packet p : packet ys : list packet net : network st' : name -> data ps' : list packet gd : GhostSimulations.ghost_data d : raft_data m : list (name * msg) t : nat es : list entry res : bool H : handleAppendEntriesReply (pDst p) (snd (nwState net (pDst p))) (pSrc p) t es res = (d, m) H0 : gd = fst (nwState net (pDst p)) H1 : pBody p = AppendEntriesReply t es res H2 : forall (t : term) (h h' : Net.name) (p : packet), currentTerm (snd (nwState net h)) = t -> type (snd (nwState net h)) = Candidate -> In p (nwPackets net) -> pBody p = RequestVoteReply t true -> pDst p = h -> pSrc p = h' -> exists vl : list entry, moreUpToDate (maxTerm (log (snd (nwState net h)))) (maxIndex (log (snd (nwState net h)))) (maxTerm vl) (maxIndex vl) = true /\\\\ In (t, h, vl) (votesWithLog (fst (nwState net h'))) H3 : refined_raft_intermediate_reachable net H4 : nwPackets net = xs ++ p :: ys H5 : forall h : name, st' h = update name_eq_dec (nwState net) (pDst p) (gd, d) h H6 : forall p' : packet, In p' ps' -> In p' (xs ++ ys) \\\\/ In p' (send_packets (pDst p) m) t0 : term h, h' : Net.name p0 : packet H7 : currentTerm (snd (nwState {| nwPackets := ps'; nwState := st' |} h)) = t0 H8 : type (snd (nwState {| nwPackets := ps'; nwState := st' |} h)) = Candidate H9 : In p0 (nwPackets {| nwPackets := ps'; nwState := st' |}) H10 : pBody p0 = RequestVoteReply t0 true H11 : pDst p0 = h H12 : pSrc p0 = h' Unable to unify \"handleAppendEntriesReply (pDst p) (snd (nwState net (pDst p))) (pSrc p) t es res = (d, m)\" with \"exists vl : list entry, moreUpToDate (maxTerm (log (snd (nwState {| nwPackets := ps'; nwState := st' |} h)))) (maxIndex (log (snd (nwState {| nwPackets := ps'; nwState := st' |} h)))) (maxTerm vl) (maxIndex vl) = true /\\\\ In (t0, h, vl) (votesWithLog (fst (nwState {| nwPackets := ps'; nwState := st' |} h')))\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "unfold refined_raft_net_invariant_append_entries_reply. intros. unfold requestVoteReply_moreUpToDate in *. intros. eapply H; eauto.", "succ": false}]