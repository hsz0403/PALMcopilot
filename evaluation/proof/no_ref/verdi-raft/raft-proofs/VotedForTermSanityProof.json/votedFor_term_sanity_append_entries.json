[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["unfold refined_raft_net_invariant_append_entries, votedFor_term_sanity in *.", "intros."], "tactic": "apply H; auto 10.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params rri : raft_refinement_interface rvtsi : requestVote_term_sanity_interface xs : list packet p : packet ys : list packet net : network st' : name -> data ps' : list packet gd : electionsData d : raft_data m : msg t : term n : name pli : logIndex plt : term es : list entry ci : logIndex H : handleAppendEntries (pDst p) (snd (nwState net (pDst p))) t n pli plt es ci = (d, m) H0 : gd = update_elections_data_appendEntries (pDst p) (nwState net (pDst p)) t n pli plt es ci H1 : pBody p = AppendEntries t n pli plt es ci H2 : forall (t : term) (h : name) (h' : Net.name), currentTerm (snd (nwState net h')) = t -> votedFor (snd (nwState net h')) = Some h -> t <= currentTerm (snd (nwState net h)) H3 : refined_raft_intermediate_reachable net H4 : nwPackets net = xs ++ p :: ys H5 : forall h : name, st' h = update name_eq_dec (nwState net) (pDst p) (gd, d) h H6 : forall p' : packet, In p' ps' -> In p' (xs ++ ys) \\\\/ p' = {| pSrc := pDst p; pDst := pSrc p; pBody := m |} t0 : term h : name h' : Net.name H7 : currentTerm (snd (nwState {| nwPackets := ps'; nwState := st' |} h')) = t0 H8 : votedFor (snd (nwState {| nwPackets := ps'; nwState := st' |} h')) = Some h Unable to unify \"handleAppendEntries (pDst p) (snd (nwState net (pDst p))) t n pli plt es ci = (d, m)\" with \"t0 <= currentTerm (snd (nwState {| nwPackets := ps'; nwState := st' |} h))\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "unfold refined_raft_net_invariant_append_entries, votedFor_term_sanity in *. intros. apply H; auto 10.", "succ": false}]