[{"history": {"proof": "intros h d out d' l H. unfold handleTimeout in H. destruct (type d) eqn:H_type; inversion H; subst; clear H. - unfold nextIndex_preserved. intros H_type'. split. + scongruence depth: 3. + split. * scongruence depth: 3. * scongruence depth: 3. - sauto depth: 3. - hauto l: on depth: 3.", "repairs": ["", "", "", "", "", "used_var", "", "", "hammer", "", "", "", "hammer", "", "hammer", "", "hammer", "", "hammer"], "exceptions": [{"ctx": ["intros h d out d' l H.", "unfold handleTimeout in H.", "destruct (type d) eqn:H_type; inversion H; subst; clear H.", "-", "unfold nextIndex_preserved."], "tactic": "intros H_type.", "exn": "H_type is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros h d out d' l H.", "unfold handleTimeout in H.", "destruct (type d) eqn:H_type; inversion H; subst; clear H.", "-", "unfold nextIndex_preserved.", "intros H_type'.", "split.", "+"], "tactic": "reflexivity.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params aersi : append_entries_reply_sublog_interface si : sorted_interface h : name d : raft_data H_type : type d = Follower H_type' : type (mkRaft_data (S (currentTerm d)) (Some h) (leaderId d) (log d) (commitIndex d) (lastApplied d) (stateMachine d) (nextIndex d) (matchIndex d) (shouldSend d) [h] Candidate (clientCache d) (electoralVictories d)) = Leader Unable to unify \"Leader\" with \"type d\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros h d out d' l H.", "unfold handleTimeout in H.", "destruct (type d) eqn:H_type; inversion H; subst; clear H.", "-", "unfold nextIndex_preserved.", "intros H_type'.", "split.", "+"], "tactic": "+", "exn": "Wrong bullet +: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros h d out d' l H.", "unfold handleTimeout in H.", "destruct (type d) eqn:H_type; inversion H; subst; clear H.", "-", "unfold nextIndex_preserved.", "intros H_type'.", "split.", "+", "shelve.", "+", "split.", "*"], "tactic": "apply handleTimeout_commitIndex in H.", "exn": "No such hypothesis: H", "type": "no_hypos", "handled": true}, {"ctx": ["intros h d out d' l H.", "unfold handleTimeout in H.", "destruct (type d) eqn:H_type; inversion H; subst; clear H.", "-", "unfold nextIndex_preserved.", "intros H_type'.", "split.", "+", "shelve.", "+", "split.", "*"], "tactic": "*", "exn": "Wrong bullet *: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros h d out d' l H.", "unfold handleTimeout in H.", "destruct (type d) eqn:H_type; inversion H; subst; clear H.", "-", "unfold nextIndex_preserved.", "intros H_type'.", "split.", "+", "shelve.", "+", "split.", "*", "shelve.", "*"], "tactic": "apply handleTimeout_currentTerm in H.", "exn": "No such hypothesis: H", "type": "no_hypos", "handled": true}, {"ctx": ["intros h d out d' l H.", "unfold handleTimeout in H.", "destruct (type d) eqn:H_type; inversion H; subst; clear H.", "-", "unfold nextIndex_preserved.", "intros H_type'.", "split.", "+", "shelve.", "+", "split.", "*", "shelve.", "*"], "tactic": "-", "exn": "Wrong bullet -: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros h d out d' l H.", "unfold handleTimeout in H.", "destruct (type d) eqn:H_type; inversion H; subst; clear H.", "-", "unfold nextIndex_preserved.", "intros H_type'.", "split.", "+", "shelve.", "+", "split.", "*", "shelve.", "*", "shelve.", "-"], "tactic": "unfold tryToBecomeLeader in H.", "exn": "No such hypothesis: H", "type": "no_hypos", "handled": true}, {"ctx": ["intros h d out d' l H.", "unfold handleTimeout in H.", "destruct (type d) eqn:H_type; inversion H; subst; clear H.", "-", "unfold nextIndex_preserved.", "intros H_type'.", "split.", "+", "shelve.", "+", "split.", "*", "shelve.", "*", "shelve.", "-"], "tactic": "inversion H.", "exn": "No such hypothesis: H", "type": "no_hypos", "handled": true}]}, "chat": [], "original": "intros h d out d' l H. unfold handleTimeout in H. destruct (type d) eqn:H_type; inversion H; subst; clear H. - unfold nextIndex_preserved. intros H_type. split. + reflexivity. + split. * apply handleTimeout_commitIndex in H. rewrite H. apply handleTimeout_lastApplied in H. rewrite H. apply H_type. * apply handleTimeout_currentTerm in H. lia. - unfold tryToBecomeLeader in H. inversion H.", "succ": true}]