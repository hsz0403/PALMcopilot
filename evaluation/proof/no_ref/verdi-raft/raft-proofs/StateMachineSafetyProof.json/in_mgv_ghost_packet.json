[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros net p Hin.", "unfold In in Hin.", "unfold mgv_deghost.", "simpl."], "tactic": "rewrite map_map.", "exn": "Found no subterm matching \"map ?M3359 (map ?M3358 ?M3360)\" in the current goal.", "type": "no_subterm", "handled": true}, {"ctx": ["intros net p Hin.", "unfold In in Hin.", "unfold mgv_deghost.", "simpl."], "tactic": "apply in_map_iff in Hin.", "exn": "Unable to apply lemma of type \"forall (A B : Type) (f : A -> B) (l : list A) (y : B), In y (map f l) <-> (exists x : A, f x = y /\\\\ In x l)\" on hypothesis of type \"(fix In (a : packet) (l : list packet) {struct l} : Prop := match l with | [] => False | b :: m => b = a \\\\/ In a m end) p (nwPackets net)\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["intros net p Hin.", "unfold In in Hin.", "unfold mgv_deghost.", "simpl."], "tactic": "destruct Hin as [p_orig [Hin_eq Hin_in]].", "exn": "Not an inductive product.", "type": "not_inductive_product", "handled": true}]}, "chat": [], "original": "intros net p Hin. unfold In in Hin. unfold mgv_deghost. simpl. rewrite map_map. apply in_map_iff in Hin. destruct Hin as [p_orig [Hin_eq Hin_in]]. exists p_orig. split. - apply in_map_iff. exists p. split. + symmetry. auto. + apply in_map_iff. auto. - auto.", "succ": false}]