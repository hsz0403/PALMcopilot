[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros net net' h src t v st' e t' HhandleRequestVoteReply Hupdate_state Hlifted_committed."], "tactic": "apply Hlifted_committed.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params rri : raft_refinement_interface si : sorted_interface lmi : log_matching_interface smspi : state_machine_safety'interface rlmli : refined_log_matching_lemmas_interface pllsi : prevLog_leader_sublog_interface ctgt0 : current_term_gt_zero_interface lalcii : lastApplied_le_commitIndex_interface miaei : match_index_all_entries_interface lhlli : leaders_have_leaderLogs_interface lci : leader_completeness_interface lsi : leader_sublog_interface taifoli : terms_and_indices_from_one_log_interface glci : ghost_log_correct_interface lphogli : log_properties_hold_on_ghost_logs_interface glemi : ghost_log_entries_match_interface tci : transitive_commit_interface tsi : term_sanity_interface lhllsi : leaders_have_leaderLogs_strong_interface ollpti : one_leaderLog_per_term_interface rmri : raft_msg_refinement_interface net, net' : ghost_log_network h, src : name t : nat v : bool st' : raft_data e : entry t' : term HhandleRequestVoteReply : handleRequestVoteReply h (snd (nwState net h)) src t v = st' Hupdate_state : forall h' : Net.name, nwState net' h' = update name_eq_dec (nwState net) h (update_elections_data_requestVoteReply h src t v (nwState net h), st') h' Hlifted_committed : lifted_committed net e t' Unable to unify \"lifted_committed net e t'\" with \"lifted_committed net' e t'\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros net net' h src t v st' e t' HhandleRequestVoteReply Hupdate_state Hlifted_committed. apply Hlifted_committed.", "succ": false}]