[{"history": {"proof": "intros h st os st' ps H. unfold type_term_log_monotonic. intros HdoGenericServer. inversion H; subst. hauto use: @doGenericServer_log_type_term_votesReceived.", "repairs": ["", "", "", "", "hammer"], "exceptions": [{"ctx": ["intros h st os st' ps H.", "unfold type_term_log_monotonic.", "intros HdoGenericServer.", "inversion H; subst."], "tactic": "split; [reflexivity | split; [reflexivity | intros e Hin; right; assumption]].", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params rri : raft_refinement_interface aecfli : append_entries_came_from_leaders_interface ollpti : one_leaderLog_per_term_interface lltsi : leaderLogs_term_sanity_interface olpti : one_leader_per_term_interface h : name st : raft_data os : list raft_output st' : raft_data ps : list (name * msg) H : doGenericServer h st = (os, st', ps) HdoGenericServer : type st' = Leader H1 : doGenericServer h st = (os, st', ps) Unable to unify \"Leader\" with \"type st\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros h st os st' ps H. unfold type_term_log_monotonic. intros HdoGenericServer. inversion H; subst. split; [reflexivity | split; [reflexivity | intros e Hin; right; assumption]].", "succ": true}]