[{"history": {"proof": "unfold raft_net_invariant_state_same_packet_subset. intros orig_base_params' one_node_params' raft_params' net net' H_eq_state H_packets_subset H_P H_reachable. hauto l: on depth: 3.", "repairs": ["", "used_var", "hammer"], "exceptions": [{"ctx": ["unfold raft_net_invariant_state_same_packet_subset."], "tactic": "intros orig_base_params one_node_params raft_params net net' H_eq_state H_packets_subset H_P H_reachable.", "exn": "orig_base_params is already used.", "type": "used_var", "handled": true}, {"ctx": ["unfold raft_net_invariant_state_same_packet_subset."], "tactic": "intros orig_base_params' one_node_params raft_params net net' H_eq_state H_packets_subset H_P H_reachable.", "exn": "one_node_params is already used.", "type": "used_var", "handled": true}, {"ctx": ["unfold raft_net_invariant_state_same_packet_subset."], "tactic": "intros orig_base_params' one_node_params' raft_params net net' H_eq_state H_packets_subset H_P H_reachable.", "exn": "raft_params is already used.", "type": "used_var", "handled": true}, {"ctx": ["unfold raft_net_invariant_state_same_packet_subset.", "intros orig_base_params' one_node_params' raft_params' net net' H_eq_state H_packets_subset H_P H_reachable."], "tactic": ["apply H_P.", ""], "exn": "Applied theorem does not have enough premises.", "type": "no_enough_premises", "handled": false}]}, "chat": [], "original": "unfold raft_net_invariant_state_same_packet_subset. intros orig_base_params one_node_params raft_params net net' H_eq_state H_packets_subset H_P H_reachable. apply H_P. apply H_eq_state. apply H_packets_subset.", "succ": true}]