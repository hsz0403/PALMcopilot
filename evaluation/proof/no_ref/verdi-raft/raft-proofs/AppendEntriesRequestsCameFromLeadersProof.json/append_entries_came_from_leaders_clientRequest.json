[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["unfold refined_raft_net_invariant_client_request."], "tactic": "intros orig_base_params one_node_params raft_params h net st' ps' gd out d l client id c Hclient Hgd HP Hintermediate_reachable Hst'_update Hps'_contents.", "exn": "orig_base_params is already used.", "type": "used_var", "handled": true}, {"ctx": ["unfold refined_raft_net_invariant_client_request."], "tactic": "intros orig_base_params' one_node_params raft_params h net st' ps' gd out d l client id c Hclient Hgd HP Hintermediate_reachable Hst'_update Hps'_contents.", "exn": "one_node_params is already used.", "type": "used_var", "handled": true}, {"ctx": ["unfold refined_raft_net_invariant_client_request."], "tactic": "intros orig_base_params' one_node_params' raft_params h net st' ps' gd out d l client id c Hclient Hgd HP Hintermediate_reachable Hst'_update Hps'_contents.", "exn": "raft_params is already used.", "type": "used_var", "handled": true}]}, "chat": [], "original": "unfold refined_raft_net_invariant_client_request. intros orig_base_params one_node_params raft_params h net st' ps' gd out d l client id c Hclient Hgd HP Hintermediate_reachable Hst'_update Hps'_contents. apply H. - apply Hclient. - apply Hgd. - apply HP. - apply Hintermediate_reachable. - apply Hst'_update. - apply Hps'_contents.", "succ": false}]