[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": [], "tactic": "intros orig_base_params one_node_params raft_params tsi net h st' ps' out d l handle_timeout P raft_reachable handleStateUpdate handleNetworkPackets.", "exn": "orig_base_params is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params raft_params tsi net h st' ps' out d l handle_timeout P raft_reachable handleStateUpdate handleNetworkPackets.", "exn": "one_node_params is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params tsi net h st' ps' out d l handle_timeout P raft_reachable handleStateUpdate handleNetworkPackets.", "exn": "raft_params is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params' tsi net h st' ps' out d l handle_timeout P raft_reachable handleStateUpdate handleNetworkPackets.", "exn": "tsi is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params' tsi' net h st' ps' out d l handle_timeout P raft_reachable handleStateUpdate handleNetworkPackets.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}]}, "chat": [], "original": "intros orig_base_params one_node_params raft_params tsi net h st' ps' out d l handle_timeout P raft_reachable handleStateUpdate handleNetworkPackets. apply (RAFT_NET_INVARIANT_TIMEOUT orig_base_params one_node_params raft_params tsi net h st' ps' out d l handle_timeout P raft_reachable handleStateUpdate handleNetworkPackets).", "succ": false}]