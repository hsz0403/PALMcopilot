[{"history": {"proof": "intros net ps' p' st' H1 H2 H3. unfold packets_ge_prevTerm. intros p t n pli plt entries c e H4 H5 H6. qauto drew: off depth: 3.", "repairs": ["", "", "", "hammer"], "exceptions": [{"ctx": ["intros net ps' p' st' H1 H2 H3.", "unfold packets_ge_prevTerm.", "intros p t n pli plt entries c e H4 H5 H6."], "tactic": "apply H1 in H4; clear H1.", "exn": "Unable to apply lemma of type \"packets_ge_prevTerm net\" on hypothesis of type \"In p (nwPackets {| nwPackets := ps'; nwState := st' |})\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["intros net ps' p' st' H1 H2 H3.", "unfold packets_ge_prevTerm.", "intros p t n pli plt entries c e H4 H5 H6."], "tactic": "apply H4 in H5; clear H4.", "exn": "Unable to apply lemma of type \"In p (nwPackets {| nwPackets := ps'; nwState := st' |})\" on hypothesis of type \"pBody p = AppendEntries t n pli plt entries c\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["intros net ps' p' st' H1 H2 H3.", "unfold packets_ge_prevTerm.", "intros p t n pli plt entries c e H4 H5 H6."], "tactic": "apply H5 in H6.", "exn": "Unable to apply lemma of type \"pBody p = AppendEntries t n pli plt entries c\" on hypothesis of type \"In e entries\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["intros net ps' p' st' H1 H2 H3.", "unfold packets_ge_prevTerm.", "intros p t n pli plt entries c e H4 H5 H6."], "tactic": "apply H6.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params tsi : term_sanity_interface net : network ps' : list packet p' : packet st' : Net.name -> data H1 : packets_ge_prevTerm net H2 : forall p : packet, In p ps' -> In p (nwPackets net) \\\\/ p = p' H3 : ~ is_append_entries (pBody p') p : packet t : term n : name pli : logIndex plt : term entries : list entry c : logIndex e : entry H4 : In p (nwPackets {| nwPackets := ps'; nwState := st' |}) H5 : pBody p = AppendEntries t n pli plt entries c H6 : In e entries Unable to unify \"In e entries\" with \"eTerm e >= plt\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros net ps' p' st' H1 H2 H3. unfold packets_ge_prevTerm. intros p t n pli plt entries c e H4 H5 H6. apply H1 in H4; clear H1. apply H4 in H5; clear H4. apply H5 in H6. apply H6.", "succ": true}]