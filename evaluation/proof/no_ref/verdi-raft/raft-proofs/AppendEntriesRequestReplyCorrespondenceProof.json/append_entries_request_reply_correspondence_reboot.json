[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["unfold raft_net_invariant_reboot."], "tactic": "intros orig_base_params one_node_params raft_params net net' d h d' Hreboot HP Hreach HnwState Hupdate HnwPackets.", "exn": "orig_base_params is already used.", "type": "used_var", "handled": true}, {"ctx": ["unfold raft_net_invariant_reboot."], "tactic": "intros orig_base_params' one_node_params raft_params net net' d h d' Hreboot HP Hreach HnwState Hupdate HnwPackets.", "exn": "one_node_params is already used.", "type": "used_var", "handled": true}, {"ctx": ["unfold raft_net_invariant_reboot."], "tactic": "intros orig_base_params' one_node_params' raft_params net net' d h d' Hreboot HP Hreach HnwState Hupdate HnwPackets.", "exn": "raft_params is already used.", "type": "used_var", "handled": true}, {"ctx": ["unfold raft_net_invariant_reboot.", "intros orig_base_params' one_node_params' raft_params' net net' d h d' Hreboot HP Hreach HnwState Hupdate HnwPackets."], "tactic": ["apply Hreboot with (net := net) (d := d) (h := h) (d' := d').", ""], "exn": "Applied theorem does not have enough premises.", "type": "no_enough_premises", "handled": false}]}, "chat": [], "original": "unfold raft_net_invariant_reboot. intros orig_base_params one_node_params raft_params net net' d h d' Hreboot HP Hreach HnwState Hupdate HnwPackets. apply Hreboot with (net := net) (d := d) (h := h) (d' := d'). - auto. - apply HP. - auto. - apply HnwState. - apply Hupdate. - auto. - auto.", "succ": false}]