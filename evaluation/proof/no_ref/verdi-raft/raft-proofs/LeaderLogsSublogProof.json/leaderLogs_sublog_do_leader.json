[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": [], "tactic": "intros orig_base_params one_node_params raft_params rri lsi lltsi eewci llcei cci vci net leader t ll e h Htype HinLL HinE HeTerm Hlog; apply leaderLogs_sublog_invariant with (h:=h) (t:=t) (ll:=ll); auto.", "exn": "orig_base_params is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params raft_params rri lsi lltsi eewci llcei cci vci net leader t ll e h Htype HinLL HinE HeTerm Hlog; apply leaderLogs_sublog_invariant with (h:=h) (t:=t) (ll:=ll); auto.", "exn": "one_node_params is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params rri lsi lltsi eewci llcei cci vci net leader t ll e h Htype HinLL HinE HeTerm Hlog; apply leaderLogs_sublog_invariant with (h:=h) (t:=t) (ll:=ll); auto.", "exn": "raft_params is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params' rri lsi lltsi eewci llcei cci vci net leader t ll e h Htype HinLL HinE HeTerm Hlog; apply leaderLogs_sublog_invariant with (h:=h) (t:=t) (ll:=ll); auto.", "exn": "rri is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params' rri' lsi lltsi eewci llcei cci vci net leader t ll e h Htype HinLL HinE HeTerm Hlog; apply leaderLogs_sublog_invariant with (h:=h) (t:=t) (ll:=ll); auto.", "exn": "lsi is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params' rri' lsi' lltsi eewci llcei cci vci net leader t ll e h Htype HinLL HinE HeTerm Hlog; apply leaderLogs_sublog_invariant with (h:=h) (t:=t) (ll:=ll); auto.", "exn": "lltsi is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params' rri' lsi' lltsi' eewci llcei cci vci net leader t ll e h Htype HinLL HinE HeTerm Hlog; apply leaderLogs_sublog_invariant with (h:=h) (t:=t) (ll:=ll); auto.", "exn": "eewci is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params' rri' lsi' lltsi' eewci' llcei cci vci net leader t ll e h Htype HinLL HinE HeTerm Hlog; apply leaderLogs_sublog_invariant with (h:=h) (t:=t) (ll:=ll); auto.", "exn": "llcei is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params' rri' lsi' lltsi' eewci' llcei' cci vci net leader t ll e h Htype HinLL HinE HeTerm Hlog; apply leaderLogs_sublog_invariant with (h:=h) (t:=t) (ll:=ll); auto.", "exn": "cci is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params' rri' lsi' lltsi' eewci' llcei' cci' vci net leader t ll e h Htype HinLL HinE HeTerm Hlog; apply leaderLogs_sublog_invariant with (h:=h) (t:=t) (ll:=ll); auto.", "exn": "vci is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": ["intros orig_base_params' one_node_params' raft_params' rri' lsi' lltsi' eewci' llcei' cci' vci' net leader t ll e h Htype HinLL HinE HeTerm Hlog; apply leaderLogs_sublog_invariant with (h:=h) (t:=t) (ll:=ll); auto.", "used_var"], "exn": "Applied theorem does not have enough premises.", "type": "no_enough_premises", "handled": false}]}, "chat": [], "original": "intros orig_base_params one_node_params raft_params rri lsi lltsi eewci llcei cci vci net leader t ll e h Htype HinLL HinE HeTerm Hlog; apply leaderLogs_sublog_invariant with (h:=h) (t:=t) (ll:=ll); auto.", "succ": false}]