[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": [], "tactic": "intros orig_base_params one_node_params raft_params rri cci cti cei lltsi xs p ys net st' ps' gd d m t n pli plt es ci HhandleAppendEntries.", "exn": "orig_base_params is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params raft_params rri cci cti cei lltsi xs p ys net st' ps' gd d m t n pli plt es ci HhandleAppendEntries.", "exn": "one_node_params is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params rri cci cti cei lltsi xs p ys net st' ps' gd d m t n pli plt es ci HhandleAppendEntries.", "exn": "raft_params is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params' rri cci cti cei lltsi xs p ys net st' ps' gd d m t n pli plt es ci HhandleAppendEntries.", "exn": "rri is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params' rri' cci cti cei lltsi xs p ys net st' ps' gd d m t n pli plt es ci HhandleAppendEntries.", "exn": "cci is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params' rri' cci' cti cei lltsi xs p ys net st' ps' gd d m t n pli plt es ci HhandleAppendEntries.", "exn": "cti is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params' rri' cci' cti' cei lltsi xs p ys net st' ps' gd d m t n pli plt es ci HhandleAppendEntries.", "exn": "cei is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params' rri' cci' cti' cei' lltsi xs p ys net st' ps' gd d m t n pli plt es ci HhandleAppendEntries.", "exn": "lltsi is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros orig_base_params' one_node_params' raft_params' rri' cci' cti' cei' lltsi' xs p ys net st' ps' gd d m t n pli plt es ci HhandleAppendEntries.", "intros Hgd."], "tactic": "apply Hgd in HhandleAppendEntries.", "exn": "Unable to apply lemma of type \"term\" on hypothesis of type \"Net.name\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["intros orig_base_params' one_node_params' raft_params' rri' cci' cti' cei' lltsi' xs p ys net st' ps' gd d m t n pli plt es ci HhandleAppendEntries.", "intros Hgd."], "tactic": ["apply HhandleAppendEntries.", ""], "exn": "Applied theorem does not have enough premises.", "type": "no_enough_premises", "handled": false}]}, "chat": [], "original": "intros orig_base_params one_node_params raft_params rri cci cti cei lltsi xs p ys net st' ps' gd d m t n pli plt es ci HhandleAppendEntries. unfold refined_raft_net_invariant_append_entries in *. intros Hgd. apply Hgd in HhandleAppendEntries. apply HhandleAppendEntries.", "succ": false}]