[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["unfold refined_raft_net_invariant_state_same_packet_subset.", "intros.", "unfold allEntries_votesWithLog in *."], "tactic": "unfold raft_refinement_interface in *.", "exn": "Cannot coerce raft_refinement_interface to an evaluable reference.", "type": "not_evaluable", "handled": true}, {"ctx": ["unfold refined_raft_net_invariant_state_same_packet_subset.", "intros.", "unfold allEntries_votesWithLog in *."], "tactic": "unfold allEntries_log_interface in *.", "exn": "Cannot coerce allEntries_log_interface to an evaluable reference.", "type": "not_evaluable", "handled": true}, {"ctx": ["unfold refined_raft_net_invariant_state_same_packet_subset.", "intros.", "unfold allEntries_votesWithLog in *."], "tactic": "unfold RaftParams in *.", "exn": "Cannot coerce RaftParams to an evaluable reference.", "type": "not_evaluable", "handled": true}, {"ctx": ["unfold refined_raft_net_invariant_state_same_packet_subset.", "intros.", "unfold allEntries_votesWithLog in *."], "tactic": "unfold BaseParams in *.", "exn": "Cannot coerce BaseParams to an evaluable reference.", "type": "not_evaluable", "handled": true}, {"ctx": ["unfold refined_raft_net_invariant_state_same_packet_subset.", "intros.", "unfold allEntries_votesWithLog in *."], "tactic": "unfold OneNodeParams in *.", "exn": "Cannot coerce OneNodeParams to an evaluable reference.", "type": "not_evaluable", "handled": true}, {"ctx": ["unfold refined_raft_net_invariant_state_same_packet_subset.", "intros.", "unfold allEntries_votesWithLog in *."], "tactic": "unfold votes_correct_interface in *.", "exn": "Cannot coerce votes_correct_interface to an evaluable reference.", "type": "not_evaluable", "handled": true}, {"ctx": ["unfold refined_raft_net_invariant_state_same_packet_subset.", "intros.", "unfold allEntries_votesWithLog in *."], "tactic": "unfold votesWithLog_term_sanity_interface in *.", "exn": "Cannot coerce votesWithLog_term_sanity_interface to an evaluable reference.", "type": "not_evaluable", "handled": true}, {"ctx": ["unfold refined_raft_net_invariant_state_same_packet_subset.", "intros.", "unfold allEntries_votesWithLog in *."], "tactic": "unfold votes_votesWithLog_correspond_interface in *.", "exn": "Cannot coerce votes_votesWithLog_correspond_interface to an evaluable reference.", "type": "not_evaluable", "handled": true}]}, "chat": [], "original": "unfold refined_raft_net_invariant_state_same_packet_subset. intros. intros. intros. intros. intros. intros. unfold allEntries_votesWithLog in *. unfold votes_votesWithLog_correspond in *. unfold votesWithLog_term_sanity in *. unfold votes_votesWithLog in *. unfold votes_correct in *. unfold raft_refinement_interface in *. unfold allEntries_log_interface in *. unfold RaftParams in *. unfold BaseParams in *. unfold OneNodeParams in *. unfold votesWithLog_term_sanity in *. unfold votes_votesWithLog_correspond in *. unfold refined_raft_net_invariant_state_same_packet_subset in *. unfold votes_correct_interface in *. unfold raft_refined_multi_params in *. unfold raft_net_invariant_init in *. unfold votesWithLog_term_sanity_interface in *. unfold raft_refined_base_params in *. unfold raft_refined_failure_params in *. unfold votes_votesWithLog_correspond_interface in *. unfold votesVotesWithLog_correspond_invariant in *. unfold update in *. unfold Build_votes_withLog_term_sanity_interface in *. unfold refined_raft_net_invariant in *. unfold build_votesVotesWithLogCorrespondInterface in *. unfold allEntriesVotesWithLog in *. unfold raftNetHandler in *. unfold raftInputHandler in *. unfold applyEntries in *. unfold allEntriesVotesWithLogInterface in *. unfold raftNetInvariantDoLeader in *. unfold raftNetInvariantStateSamePacketSubset in *. unfold raftRefinementInterface in *. unfold executeLog' in *. unfold raftBaseParams in *. unfold raftRefinedBaseParams in *. unfold raftRefinementInterface in *. unfold raftRefinedMultiParams in *. unfold votesWithLogVotes in *. unfold votesWithLogTermSanity in *. unfold allEntriesVotesWithLogInvariant in *. unfold RaftInputHandler in *. unfold RaftNetHandler in *. unfold doGenericServer in *. unfold raftNetInvariantDoLeader in *. unfold raftNetInvariantTimeout in *. unfold allEntriesVotesWithLogInterface in *. unfold votesVotesWithLogCorrespond in *. refine msg.", "succ": false}]