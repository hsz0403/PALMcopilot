[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros."], "tactic": "intros H_doLeader H_In_m.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros."], "tactic": "unfold doLeader in H_doLeader.", "exn": "No such hypothesis: H_doLeader", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "destruct (type st).", "-"], "tactic": "simpl in H_doLeader.", "exn": "No such hypothesis: H_doLeader", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "destruct (type st).", "-"], "tactic": "inversion H_doLeader.", "exn": "No such hypothesis: H_doLeader", "type": "no_hypos", "handled": true}, {"ctx": ["intros.", "destruct (type st).", "-"], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros.", "destruct (type st).", "-", "shelve.", "-", "destruct (shouldSend (advanceCommitIndex st h)) eqn:Heq_send.", "+"], "tactic": "+", "exn": "Wrong bullet +: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros.", "destruct (type st).", "-", "shelve.", "-", "destruct (shouldSend (advanceCommitIndex st h)) eqn:Heq_send.", "+", "shelve.", "+"], "tactic": "inversion H_doLeader; subst.", "exn": "No such hypothesis: H_doLeader", "type": "no_hypos", "handled": true}]}, "chat": [], "original": "intros. intros. intros. intros. intros. intros. intros. intros. intros. intros. intros. intros. intros. intros. intros. intros. intros. intros. intros. intros. intros. intros. intros. intros. intros. intros. intros H_doLeader H_In_m. unfold doLeader in H_doLeader. destruct (type st). - simpl in H_doLeader. inversion H_doLeader. - destruct (shouldSend (advanceCommitIndex st h)) eqn:Heq_send. + destruct (set_raft_data_shouldSend term name entry logIndex serverType data clientId output (advanceCommitIndex st h) false) as [[out st''] ms''] eqn:Heq_set. inversion H_doLeader; subst. inversion H0; subst. inversion H1; subst. intros H_In_e. apply handleTimeout_not_is_append_entries in H6; [|assumption]. contradiction. + inversion H_doLeader; subst. inversion H0; subst. intros. apply handleTimeout_not_is_append_entries with (m:=m) in H6; auto.", "succ": false}]