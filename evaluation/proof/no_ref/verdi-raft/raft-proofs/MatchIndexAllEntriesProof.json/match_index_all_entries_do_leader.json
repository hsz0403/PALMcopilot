[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["unfold refined_raft_net_invariant_do_leader; intros."], "tactic": "unfold terms_and_indices_from_one_log_interface in taifoli.", "exn": "Cannot coerce terms_and_indices_from_one_log_interface to an evaluable reference.", "type": "not_evaluable", "handled": true}, {"ctx": ["unfold refined_raft_net_invariant_do_leader; intros."], "tactic": "unfold refined_log_matching_lemmas_interface in rlmli.", "exn": "Cannot coerce refined_log_matching_lemmas_interface to an evaluable reference.", "type": "not_evaluable", "handled": true}]}, "chat": [], "original": "unfold refined_raft_net_invariant_do_leader; intros. unfold append_entries_leaderLogs_invariant in aelli. unfold no_append_entries_to_leader_invariant in naetli. unfold no_append_entries_to_self_invariant in naetsi. unfold terms_and_indices_from_one_log_interface in taifoli. unfold refined_log_matching_lemmas_interface in rlmli. unfold log_all_entries_invariant in laei. unfold candidate_entries_invariant in cei. unfold leader_sublog_invariant_invariant in lsi. unfold leaders_have_leaderLogs_strong_invariant in lhllsi. unfold one_leaderLog_per_term_invariant in ollpti. unfold match_index_leader_invariant in mili. unfold match_index_sanity_invariant in matchisi. unfold append_entries_reply_sublog_invariant in aersi. intros. specialize (aelli net H0). specialize (naetli net H0). specialize (naetsi net H0). specialize (taifoli net H0). specialize (rlmli net H0). specialize (laei net H0). specialize (cei net H0). specialize (lsi net H0). specialize (lhllsi net H0). specialize (ollpti net H0). specialize (mili net H0). specialize (matchisi net H0). specialize (aersi net H0). unfold match_index_all_entries_inv in H. destruct H. unfold match_index_all_entries in H, H1. intros. specialize (H e leader h). apply H in H2. revert H2. apply H1.", "succ": false}]