[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": [], "tactic": "intros orig_base_params one_node_params raft_params tsi h Hst Hin e HinLog.", "exn": "orig_base_params is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params raft_params tsi h Hst Hin e HinLog.", "exn": "one_node_params is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params tsi h Hst Hin e HinLog.", "exn": "raft_params is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params' tsi h Hst Hin e HinLog.", "exn": "tsi is already used.", "type": "used_var", "handled": true}]}, "chat": [], "original": "intros orig_base_params one_node_params raft_params tsi h Hst Hin e HinLog. unfold candidate_term_gt_log in *. unfold raft_net_invariant_append_entries_reply in *. specialize (tsi.(no_entries_past_current_term_invariant) net). specialize (tsi.(candidate_term_gt_log_invariant) net). intros; eapply Hst. auto. auto. auto. auto. intros p Hmsg. eapply HinLog. auto. auto.", "succ": false}]