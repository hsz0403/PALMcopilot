[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros net st' ps' h gd d H_votesWithLog H_update_st H_sameTerm H_termSanity H_ge currentTerm_ge_update.", "unfold votesWithLog_term_sanity in *."], "tactic": "intros t' h' l' H_in_votesWithLog.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros net st' ps' h gd d H_votesWithLog H_update_st H_sameTerm H_termSanity H_ge currentTerm_ge_update.", "unfold votesWithLog_term_sanity in *.", "intros."], "tactic": "apply currentTerm_ge_update in H_ge.", "exn": "Unable to apply lemma of type \"name\" on hypothesis of type \"term\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["intros net st' ps' h gd d H_votesWithLog H_update_st H_sameTerm H_termSanity H_ge currentTerm_ge_update.", "unfold votesWithLog_term_sanity in *.", "intros."], "tactic": "apply H_votesWithLog in H_in_votesWithLog.", "exn": "No such hypothesis: H_in_votesWithLog", "type": "no_hypos", "handled": true}]}, "chat": [], "original": "intros net st' ps' h gd d H_votesWithLog H_update_st H_sameTerm H_termSanity H_ge currentTerm_ge_update. unfold votesWithLog_term_sanity in *. intros t' h' l' H_in_votesWithLog. apply currentTerm_ge_update in H_ge. apply H_votesWithLog in H_in_votesWithLog. destruct H_in_votesWithLog as [H_in_net | [H_term H_log]]. - left. auto. - right. subst. split; reflexivity.", "succ": false}]