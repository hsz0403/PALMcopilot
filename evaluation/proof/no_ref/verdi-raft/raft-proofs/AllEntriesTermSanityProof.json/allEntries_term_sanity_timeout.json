[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["unfold refined_raft_net_invariant_timeout, allEntries_term_sanity, allEntries_term_sanity_invariant."], "tactic": "intros orig_base_params one_node_params raft_params net t e h Hin.", "exn": "orig_base_params is already used.", "type": "used_var", "handled": true}, {"ctx": ["unfold refined_raft_net_invariant_timeout, allEntries_term_sanity, allEntries_term_sanity_invariant."], "tactic": "intros orig_base_params' one_node_params raft_params net t e h Hin.", "exn": "one_node_params is already used.", "type": "used_var", "handled": true}, {"ctx": ["unfold refined_raft_net_invariant_timeout, allEntries_term_sanity, allEntries_term_sanity_invariant."], "tactic": "intros orig_base_params' one_node_params' raft_params net t e h Hin.", "exn": "raft_params is already used.", "type": "used_var", "handled": true}]}, "chat": [], "original": "unfold refined_raft_net_invariant_timeout, allEntries_term_sanity, allEntries_term_sanity_invariant. intros orig_base_params one_node_params raft_params net t e h Hin. apply (H0 orig_base_params one_node_params raft_params net t e h Hin).", "succ": false}]