[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros h st es os st' H.", "induction es as [| e es' IH].", "-", "inversion H."], "tactic": "constructor.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params h : name st : raft_data os : name st' : logIndex H : term es : list entry ci : logIndex st'0 : raft_data ps : msg H0 : handleAppendEntries h st 0 os st' H es ci = (st'0, ps) Unable to unify \"?M1644 <= S ?M1645\" with \"currentTerm st <= currentTerm st'0\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros h st es os st' H.", "induction es as [| e es' IH].", "-", "inversion H."], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros h st es os st' H.", "induction es as [| e es' IH].", "-", "inversion H.", "+", "shelve.", "+", "shelve.", "-"], "tactic": "destruct (cacheApplyEntry st e) as [out st''] eqn: Heq.", "exn": "In environment orig_base_params : BaseParams one_node_params : OneNodeParams orig_base_params raft_params : RaftParams orig_base_params h : name st : raft_data e : nat os : name st' : logIndex H : term es' : forall (es : list entry) (ci : logIndex) (st'0 : raft_data) (ps : msg), handleAppendEntries h st e os st' H es ci = (st'0, ps) -> currentTerm st <= currentTerm st'0 The term \"e\" has type \"nat\" while it is expected to have type \"entry\".", "type": "wrong_type", "handled": true}]}, "chat": [], "original": "intros h st es os st' H. induction es as [| e es' IH]. - inversion H. subst. constructor. - simpl in H. destruct (cacheApplyEntry st e) as [out st''] eqn: Heq. destruct (applyEntries h st'' es') as [os' st] eqn: Heq'. inversion H. subst. eapply IH in Heq'. auto.", "succ": false}]