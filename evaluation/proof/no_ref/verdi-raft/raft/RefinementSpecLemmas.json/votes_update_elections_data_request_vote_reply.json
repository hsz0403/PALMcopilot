[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros h st src t r st' t' h' HhandleRequestVoteReply Hin.", "unfold update_elections_data_requestVoteReply, handleRequestVoteReply in Hin.", "destruct (currentTerm (snd st) <? t) eqn:Hterm.", "-", "inversion HhandleRequestVoteReply."], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros h st src t r st' t' h' HhandleRequestVoteReply Hin.", "unfold update_elections_data_requestVoteReply, handleRequestVoteReply in Hin.", "destruct (currentTerm (snd st) <? t) eqn:Hterm.", "-", "inversion HhandleRequestVoteReply.", "shelve.", "-", "destruct (t <? currentTerm (snd st)) eqn:Hterm'.", "+", "inversion HhandleRequestVoteReply."], "tactic": "+", "exn": "Wrong bullet +: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}]}, "chat": [], "original": "intros h st src t r st' t' h' HhandleRequestVoteReply Hin. unfold update_elections_data_requestVoteReply, handleRequestVoteReply in Hin. destruct (currentTerm (snd st) <? t) eqn:Hterm. - inversion HhandleRequestVoteReply. - destruct (t <? currentTerm (snd st)) eqn:Hterm'. + inversion HhandleRequestVoteReply. + destruct (voteGranted && wonElection (dedup name_eq_dec (src :: votesReceived (snd st)))) eqn:Hvote. * inversion HhandleRequestVoteReply; subst. intros Hin_vote. apply Hin. * inversion HhandleRequestVoteReply.", "succ": false}]