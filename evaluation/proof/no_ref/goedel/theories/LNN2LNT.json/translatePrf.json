[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros f axm Hprf Hmem."], "tactic": "pose proof (AxiomsOK f axm Hprf Hmem) as H.", "exn": "In environment U : fol.System LNN V : System AxiomsOK : forall f : fol.Formula LNN, mem (fol.Formula LNN) U f -> exists Axm : Formulas, (exists _ : Prf LNT Axm (LNN2LNT_formula f), forall g : Formula, In g Axm -> mem (fol.Formula LNT) V g) /\\\\ (forall v : nat, In v (freeVarListFormula LNT Axm) -> In v (freeVarFormula LNN f)) f : fol.Formula LNN axm : fol.Formulas LNN Hprf : Prf LNN axm f Hmem : forall g : fol.Formula LNN, In g axm -> mem (fol.Formula LNN) U g The term \"axm\" has type \"fol.Formulas LNN\" while it is expected to have type \"mem (fol.Formula LNN) U f\".", "type": "wrong_type", "handled": true}]}, "chat": [], "original": "intros f axm Hprf Hmem. pose proof (AxiomsOK f axm Hprf Hmem) as H. destruct H as [Axm [Hprf' HmemAxm]]. exists Axm. split. - exists. apply Hprf'. - split. + apply HmemAxm. + intros v Hv. apply HmemAxm. apply Hv.", "succ": false}]