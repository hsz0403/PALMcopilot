[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros t m v n Hin1 Hin2."], "tactic": "apply freeVarSubAllTerm1 in Hin2 as [x [Hin3 Hin4]].", "exn": "Unable to apply lemma of type \"forall (t : fol.Term L) (m : nat -> fol.Term L) (v : nat), In v (freeVarTerm L (subAllTerm t m)) -> exists n : nat, In n (freeVarTerm L t) /\\\\ In v (freeVarTerm L (m n))\" on hypothesis of type \"In v (freeVarTerm L (m n))\".", "type": "cannot_apply_in", "handled": true}, {"ctx": ["intros t m v n Hin1 Hin2."], "tactic": "apply (freeVarSubTerm2 L) in Hin4; auto.", "exn": "No such hypothesis: Hin4", "type": "no_hypos", "handled": true}, {"ctx": ["intros t m v n Hin1 Hin2."], "tactic": "apply (freeVarMap1) with (l := (freeVarTerm L t)) in Hin1; auto.", "exn": "Unable to find an instance for the variables m, v.", "type": "no_instance_var", "handled": true}, {"ctx": ["intros t m v n Hin1 Hin2."], "tactic": "apply (freeVarSubTerm1 L) in Hin3; auto.", "exn": "No such hypothesis: Hin3", "type": "no_hypos", "handled": true}, {"ctx": ["intros t m v n Hin1 Hin2."], "tactic": "apply (freeVarSubFormula4 L) in Hin1; auto.", "exn": "Unable to apply lemma of type \"forall (f : fol.Formula L) (v : nat) (s : fol.Term L) (x : nat), In x (freeVarFormula L (substituteFormula L f v s)) -> ~ In v (freeVarFormula L f) -> In x (freeVarFormula L f)\" on hypothesis of type \"In n (freeVarTerm L t)\".", "type": "cannot_apply_in", "handled": true}]}, "chat": [], "original": "intros t m v n Hin1 Hin2. apply freeVarSubAllTerm1 in Hin2 as [x [Hin3 Hin4]]. apply (freeVarSubTerm2 L) in Hin4; auto. apply (freeVarMap1) with (l := (freeVarTerm L t)) in Hin1; auto. apply (freeVarSubTerm1 L) in Hin3; auto. apply (freeVarSubFormula4 L) in Hin1; auto.", "succ": false}]