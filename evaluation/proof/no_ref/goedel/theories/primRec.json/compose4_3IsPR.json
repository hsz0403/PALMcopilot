[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros f1 Hf1 f2 Hf2 f3 Hf3 g Hg.", "unfold isPR in *."], "tactic": "apply compose4_2IsPR with (f1 := f1) (f2 := f2) (g := fun w x y : nat => g (f1 w x y) (f2 w x y)).", "exn": "In environment f1 : nat -> nat -> nat -> nat -> nat Hf1 : {p : PrimRec 4 | extEqual 4 (evalPrimRec 4 p) f1} f2 : nat -> nat -> nat -> nat -> nat Hf2 : {p : PrimRec 4 | extEqual 4 (evalPrimRec 4 p) f2} f3 : nat -> nat -> nat -> nat -> nat Hf3 : {p : PrimRec 4 | extEqual 4 (evalPrimRec 4 p) f3} g : nat -> nat -> nat -> nat Hg : {p : PrimRec 3 | extEqual 3 (evalPrimRec 3 p) g} w : nat x : nat y : nat The term \"f1 w x y\" has type \"nat -> nat\" while it is expected to have type \"nat\".", "type": "wrong_type", "handled": true}, {"ctx": ["intros f1 Hf1 f2 Hf2 f3 Hf3 g Hg.", "unfold isPR in *."], "tactic": "apply compose2_2IsPR with (f := f3) (g := g).", "exn": "In environment f1 : nat -> nat -> nat -> nat -> nat Hf1 : {p : PrimRec 4 | extEqual 4 (evalPrimRec 4 p) f1} f2 : nat -> nat -> nat -> nat -> nat Hf2 : {p : PrimRec 4 | extEqual 4 (evalPrimRec 4 p) f2} f3 : nat -> nat -> nat -> nat -> nat Hf3 : {p : PrimRec 4 | extEqual 4 (evalPrimRec 4 p) f3} g : nat -> nat -> nat -> nat Hg : {p : PrimRec 3 | extEqual 3 (evalPrimRec 3 p) g} The term \"f3\" has type \"nat -> nat -> nat -> nat -> nat\" while it is expected to have type \"nat -> nat -> nat\" (cannot unify \"nat -> nat -> nat\" and \"nat\").", "type": "wrong_type", "handled": true}, {"ctx": ["intros f1 Hf1 f2 Hf2 f3 Hf3 g Hg.", "unfold isPR in *."], "tactic": "apply compose2_1IsPR; auto.", "exn": "In environment f1 : nat -> nat -> nat -> nat -> nat Hf1 : {p : PrimRec 4 | extEqual 4 (evalPrimRec 4 p) f1} f2 : nat -> nat -> nat -> nat -> nat Hf2 : {p : PrimRec 4 | extEqual 4 (evalPrimRec 4 p) f2} f3 : nat -> nat -> nat -> nat -> nat Hf3 : {p : PrimRec 4 | extEqual 4 (evalPrimRec 4 p) f3} g : nat -> nat -> nat -> nat Hg : {p : PrimRec 3 | extEqual 3 (evalPrimRec 3 p) g} Unable to unify \"{p : PrimRec 2 | extEqual 2 (evalPrimRec 2 p) (fun x y : nat => ?M1414 (?M1412 x y))}\" with \"{p : PrimRec 4 | extEqual 4 (evalPrimRec 4 p) (fun w x y z : nat => g (f1 w x y z) (f2 w x y z) (f3 w x y z))}\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros f1 Hf1 f2 Hf2 f3 Hf3 g Hg. unfold isPR in *. apply compose4_2IsPR with (f1 := f1) (f2 := f2) (g := fun w x y : nat => g (f1 w x y) (f2 w x y)). - auto. - apply compose2_2IsPR with (f := f3) (g := g). + auto. + apply compose2_1IsPR; auto.", "succ": false}]