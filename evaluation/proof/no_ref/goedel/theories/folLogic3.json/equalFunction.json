[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros T f ts ss H.", "unfold PairwiseEqual in H.", "unfold SysPrf.", "unfold equal.", "unfold apply."], "tactic": "rewrite (H (apply f ts) (apply f ss)).", "exn": "Illegal application (Non-functional construction): The expression \"H\" of type \"(fix PairwiseEqual (T : fol.System L) (n : nat) {struct n} : fol.Terms L n -> fol.Terms L n -> Prop := match n as n0 return (fol.Terms L n0 -> fol.Terms L n0 -> Prop) with | 0 => fun _ _ : fol.Terms L 0 => True | S x => fun ts ss : fol.Terms L (S x) => let (a, b) := proj1_sig (consTerms L x ts) in let (c, d) := proj1_sig (consTerms L x ss) in SysPrf T (equal a c) /\\\\ PairwiseEqual T x b d end) T (arity L (inr f)) ts ss\" cannot be applied to the term \"apply f ts\" : \"fol.Term L\"", "type": "exp_cannot_apply", "handled": true}]}, "chat": [], "original": "intros T f ts ss H. unfold PairwiseEqual in H. unfold SysPrf. unfold equal. unfold apply. rewrite (H (apply f ts) (apply f ss)). reflexivity.", "succ": false}]