[{"history": {"proof": "", "repairs": [], "exceptions": []}, "chat": [], "original": "intros n t. induction t using btree_ind. - simpl. constructor. - simpl. pose proof (frequency_length A eqA_dec (map (fun x : A * list bool => fst x) (compute_code t)) (encode eqA_dec (compute_code t) (all_leaves t))). unfold encode in H. rewrite <- H. clear H. apply cover_node with (node t1 t2) (all_leaves t). + unfold compute_code. rewrite map_map. simpl. rewrite map_ext with (g := fst). * rewrite ulist_ordered_cover with (l2 := all_leaves t1). ++ apply permutation_map. apply H0. ++ apply frequency_length. apply H. ++ apply ulist_elements. * intros []. simpl. reflexivity. + apply IHt1. apply H0. + apply IHt2. apply H1.", "succ": false}]