[{"history": {"proof": "", "repairs": [], "exceptions": []}, "chat": [], "original": "intros m a. Exists (id_list a (number_of_occurrences a m)). - split. + unfold id_list. induction (number_of_occurrences a m). * simpl. apply permutation_refl. * simpl. apply permutation_cons. apply permutation_app. ++ apply permutation_cons. apply permutation_app. ** apply permutation_refl. ** apply IHn. ++ apply permutation_cons_ex with a nil. exists (id_list a n), nil. split. ** reflexivity. ** apply permutation_refl. + intro H. apply in_app_or in H. destruct H. * apply number_of_occurrences_O in H. inversion H. * contradiction.", "succ": false}]