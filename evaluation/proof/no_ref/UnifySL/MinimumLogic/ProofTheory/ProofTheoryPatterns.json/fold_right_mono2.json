[{"history": {"proof": "intros x1 x2 xs H. induction xs. - simpl. apply H. - srun best use: @prodp_mono, @provable_impp_refl unfold: expr, fold_right.", "repairs": ["", "", "", "", "", "", "hammer"], "exceptions": [{"ctx": ["intros x1 x2 xs H.", "induction xs.", "-", "simpl.", "apply H.", "-", "simpl."], "tactic": "apply fold_left_mono.", "exn": "In environment L : Language minL : MinimumLanguage L Gamma : Provable L minAX : MinimumAxiomatization L Gamma prodp : expr -> expr -> expr Mono : Monotonicity L Gamma prodp x1, x2, a : expr xs : list expr H : |-- x1 --> x2 IHxs : |-- fold_right prodp x1 xs --> fold_right prodp x2 xs Unable to unify \"(let (provable) := Gamma in provable) (fold_left prodp ?M1992 ?M1990 --> fold_left prodp ?M1993 ?M1991)\" with \"(let (provable) := Gamma in provable) (prodp a (fold_right prodp x1 xs) --> prodp a (fold_right prodp x2 xs))\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros x1 x2 xs H.", "induction xs.", "-", "simpl.", "apply H.", "-", "simpl."], "tactic": "apply H.", "exn": "In environment L : Language minL : MinimumLanguage L Gamma : Provable L minAX : MinimumAxiomatization L Gamma prodp : expr -> expr -> expr Mono : Monotonicity L Gamma prodp x1, x2, a : expr xs : list expr H : |-- x1 --> x2 IHxs : |-- fold_right prodp x1 xs --> fold_right prodp x2 xs Unable to unify \"|-- x1 --> x2\" with \"|-- prodp a (fold_right prodp x1 xs) --> prodp a (fold_right prodp x2 xs)\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros x1 x2 xs H.", "induction xs.", "-", "simpl.", "apply H.", "-", "simpl."], "tactic": "apply IHxs.", "exn": "In environment L : Language minL : MinimumLanguage L Gamma : Provable L minAX : MinimumAxiomatization L Gamma prodp : expr -> expr -> expr Mono : Monotonicity L Gamma prodp x1, x2, a : expr xs : list expr H : |-- x1 --> x2 IHxs : |-- fold_right prodp x1 xs --> fold_right prodp x2 xs Unable to unify \"|-- fold_right prodp x1 xs --> fold_right prodp x2 xs\" with \"|-- prodp a (fold_right prodp x1 xs) --> prodp a (fold_right prodp x2 xs)\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "intros x1 x2 xs H. induction xs. - simpl. apply H. - simpl. apply fold_left_mono. + apply H. + apply IHxs.", "succ": true}]