[{"history": {"proof": "apply Build_ResidualSeparationAlgebra. hauto use: discHeap_ikiM'_obligation_1, discHeap_unital', monHeap_increasing' unfold: residue, increasing inv: UnitalSeparationAlgebra, IncreasingSeparationAlgebra.", "repairs": ["", "hammer"], "exceptions": [{"ctx": ["apply Build_ResidualSeparationAlgebra."], "tactic": "exists (fun p => match p with (n, m) => prod_residualSA discHeap_residual' discHeap_residual addr val n m end).", "exn": "In environment addr : Type val : Type p : ?T * ?T0 n : ?T m : ?T0 The term \"discHeap_residual'\" has type \"ResidualSeparationAlgebra Heap'\" while it is expected to have type \"Type\".", "type": "wrong_type", "handled": true}]}, "chat": [], "original": "apply Build_ResidualSeparationAlgebra. exists (fun p => match p with (n, m) => prod_residualSA discHeap_residual' discHeap_residual addr val n m end).", "succ": true}]