[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["apply Build_UnitalSeparationAlgebra.", "intros n."], "tactic": "unfold unital_is_residual.", "exn": "Cannot coerce unital_is_residual to an evaluable reference.", "type": "not_evaluable", "handled": true}, {"ctx": ["apply Build_UnitalSeparationAlgebra.", "intros n."], "tactic": "destruct (incr_unital_iff_residual n).", "exn": "In environment worlds : Type R : Relation worlds po_R : PreOrder Krelation J : Join worlds SA : SeparationAlgebra worlds dSA : DownwardsClosedSeparationAlgebra worlds USA : UnitalSeparationAlgebra worlds n : worlds The term \"n\" has type \"worlds\" while it is expected to have type \"IncreasingSeparationAlgebra ?worlds\".", "type": "wrong_type", "handled": true}, {"ctx": ["apply Build_UnitalSeparationAlgebra.", "intros n."], "tactic": "split.", "exn": "Unable to find an instance for the variable x.", "type": "no_instance_var", "handled": true}]}, "chat": [], "original": "apply Build_UnitalSeparationAlgebra. intros n. unfold unital_is_residual. destruct (incr_unital_iff_residual n). split. - destruct (H n) as [m [residue_inc]]. exists m. apply residue_inc. - intros m [residue_m increasing_m]. split. + unfold residue_exists. exists m. apply residue_m. + apply all_increasing.", "succ": false}]