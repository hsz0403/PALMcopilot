[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["unfold UpwardsClosedSeparationAlgebra in *."], "tactic": "unfold SeparationAlgebra in *.", "exn": "Cannot coerce SeparationAlgebra to an evaluable reference.", "type": "not_evaluable", "handled": true}, {"ctx": ["unfold UpwardsClosedSeparationAlgebra in *."], "tactic": "intros worlds R J SA dSA.", "exn": "worlds is already used.", "type": "used_var", "handled": true}, {"ctx": ["unfold UpwardsClosedSeparationAlgebra in *."], "tactic": "intros worlds' R J SA dSA.", "exn": "R is already used.", "type": "used_var", "handled": true}, {"ctx": ["unfold UpwardsClosedSeparationAlgebra in *."], "tactic": "intros worlds' R' J SA dSA.", "exn": "J is already used.", "type": "used_var", "handled": true}, {"ctx": ["unfold UpwardsClosedSeparationAlgebra in *."], "tactic": "intros worlds' R' J' SA dSA.", "exn": "SA is already used.", "type": "used_var", "handled": true}, {"ctx": ["unfold UpwardsClosedSeparationAlgebra in *."], "tactic": "intros worlds' R' J' SA' dSA.", "exn": "dSA is already used.", "type": "used_var", "handled": true}, {"ctx": ["unfold UpwardsClosedSeparationAlgebra in *.", "intros worlds' R' J' SA' dSA'."], "tactic": "unfold ResidualSeparationAlgebra in unital_is_residual.", "exn": "Cannot coerce ResidualSeparationAlgebra to an evaluable reference.", "type": "not_evaluable", "handled": true}, {"ctx": ["unfold UpwardsClosedSeparationAlgebra in *.", "intros worlds' R' J' SA' dSA'."], "tactic": "unfold IncreasingSeparationAlgebra in *.", "exn": "Cannot coerce IncreasingSeparationAlgebra to an evaluable reference.", "type": "not_evaluable", "handled": true}, {"ctx": ["unfold UpwardsClosedSeparationAlgebra in *.", "intros worlds' R' J' SA' dSA'."], "tactic": "apply Build_ResidualSeparationAlgebra.", "exn": "In environment worlds : Type R : Relation worlds po_R : PreOrder Krelation J : Join worlds SA : SeparationAlgebra worlds dSA : DownwardsClosedSeparationAlgebra worlds worlds', R', J', SA' : worlds dSA' : join J' SA' worlds' Unable to unify \"forall n : ?M2113, exists m : ?M2113, residue n m\" with \"R worlds' R'\".", "type": "cannot_unify", "handled": true}]}, "chat": [], "original": "unfold UpwardsClosedSeparationAlgebra in *. unfold SeparationAlgebra in *. intros worlds R J SA dSA. unfold ResidualSeparationAlgebra in unital_is_residual. unfold IncreasingSeparationAlgebra in *. apply Build_ResidualSeparationAlgebra. intros n. destruct (incr_exists n) as [m [RES INC]]. exists m. split; auto. apply Build_IncreasingSeparationAlgebra. intros x. apply all_increasing.", "succ": false}]