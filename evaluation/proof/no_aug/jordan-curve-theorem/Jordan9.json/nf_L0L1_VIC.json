[{"history": {"proof": "", "repairs": [], "exceptions": []}, "chat": [], "original": "intros m x y x' y' m1 m2 hmap_m1 h_x1y not_expf_x1y expf_x'y0 expf_L_m1_x'y0b expf_L_m2_x1y neq_x'y neq_y0y. unfold m1, m2 in hmap_m1. destruct hmap_m1 as [hmap_m1 _]. unfold m1, m2 in expf_L_m1_x'y0b, expf_L_m2_x1y. unfold expf in not_expf_x1y, expf_x'y0, expf_L_m1_x'y0b, expf_L_m2_x1y. split. - apply (inv_hmap_L0L1 m x y x' y' hmap_m1). - destruct (eq_dart_dec x y). + destruct neq_x'y. rewrite <- a. apply sym_eq. apply cA_m_zero_y_y_0. + destruct (eq_dart_dec (cA m zero y') y). * rewrite <- a in expf_x'y0. apply False_ind. apply (not_expf_x1y expf_x'y0). * destruct (eq_dart_dec (cA m one x) x'). ++ contradiction. ++ destruct (eq_dart_dec (cA_1 m zero y) y'). ** apply expf_trans with x. -- apply expf_sym. apply expf_L_m2_x1y. -- apply expf_L_m1_x'y0b. ** destruct (eq_dart_dec (cA m one x') x). -- intros _. apply (not_expf_x1y expf_x'y0). -- destruct (eq_dim_dec zero zero). ++ apply False_ind. apply n. apply eq_refl. ++ apply (nf_L0L1_I m x y x' y' hmap_m1 x_1 y_0 y'0 x'1 y'0b x_1b not_expf_x1y expf_x'y0 expf_L_m1_x'y0b expf_L_m2_x1y neq_x'y neq_y0y).", "succ": false}]