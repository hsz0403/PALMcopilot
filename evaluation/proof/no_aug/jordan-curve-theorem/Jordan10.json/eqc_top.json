[{"history": {"proof": "intros m k x Hmap Hexd_x. strivial use: eqc_bottom_top.", "repairs": ["", "hammer"], "exceptions": [{"ctx": ["intros m k x Hmap Hexd_x.", "unfold eqc, top.", "case m.", "-"], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros m k x Hmap Hexd_x.", "unfold eqc, top.", "case m.", "-", "shelve.", "-", "intros m' x' T' P'.", "destruct (eq_dart_dec x x') as [Hx_x' | Hx_x'].", "+", "subst x'.", "right."], "tactic": "+", "exn": "Wrong bullet +: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros m k x Hmap Hexd_x.", "unfold eqc, top.", "case m.", "-", "shelve.", "-", "intros m' x' T' P'.", "destruct (eq_dart_dec x x') as [Hx_x' | Hx_x'].", "+", "subst x'.", "right.", "shelve.", "+", "destruct (eq_dim_dec zero k) as [Hk0 | Hk1].", "*", "subst k.", "destruct (eq_dart_dec x (top m' zero x)) as [Hx_top | Hx_top].", "++"], "tactic": "++", "exn": "Wrong bullet ++: Current bullet ++ is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros m k x Hmap Hexd_x.", "unfold eqc, top.", "case m.", "-", "shelve.", "-", "intros m' x' T' P'.", "destruct (eq_dart_dec x x') as [Hx_x' | Hx_x'].", "+", "subst x'.", "right.", "shelve.", "+", "destruct (eq_dim_dec zero k) as [Hk0 | Hk1].", "*", "subst k.", "destruct (eq_dart_dec x (top m' zero x)) as [Hx_top | Hx_top].", "++", "shelve.", "++", "destruct (eq_dart_dec x' (top m' zero x')) as [Hx'_top | Hx'_top].", "**"], "tactic": "**", "exn": "Wrong bullet **: Current bullet ** is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros m k x Hmap Hexd_x.", "unfold eqc, top.", "case m.", "-", "shelve.", "-", "intros m' x' T' P'.", "destruct (eq_dart_dec x x') as [Hx_x' | Hx_x'].", "+", "subst x'.", "right.", "shelve.", "+", "destruct (eq_dim_dec zero k) as [Hk0 | Hk1].", "*", "subst k.", "destruct (eq_dart_dec x (top m' zero x)) as [Hx_top | Hx_top].", "++", "shelve.", "++", "destruct (eq_dart_dec x' (top m' zero x')) as [Hx'_top | Hx'_top].", "**", "shelve.", "**", "right."], "tactic": "*", "exn": "Wrong bullet *: Current bullet ** is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros m k x Hmap Hexd_x.", "unfold eqc, top.", "case m.", "-", "shelve.", "-", "intros m' x' T' P'.", "destruct (eq_dart_dec x x') as [Hx_x' | Hx_x'].", "+", "subst x'.", "right.", "shelve.", "+", "destruct (eq_dim_dec zero k) as [Hk0 | Hk1].", "*", "subst k.", "destruct (eq_dart_dec x (top m' zero x)) as [Hx_top | Hx_top].", "++", "shelve.", "++", "destruct (eq_dart_dec x' (top m' zero x')) as [Hx'_top | Hx'_top].", "**", "shelve.", "**", "right.", "shelve.", "*", "destruct (eq_dart_dec x (top m' k x)) as [Hx_top | Hx_top].", "++"], "tactic": "++", "exn": "Wrong bullet ++: Current bullet ++ is not finished.", "type": "unfinished_bullet", "handled": true}]}, "chat": [], "original": "intros m k x Hmap Hexd_x. unfold eqc, top. case m. - intros. contradiction. - intros m' x' T' P'. simpl. destruct (eq_dart_dec x x') as [Hx_x' | Hx_x']. + subst x'. right. apply eq_refl. + destruct (eq_dim_dec zero k) as [Hk0 | Hk1]. * subst k. destruct (eq_dart_dec x (top m' zero x)) as [Hx_top | Hx_top]. ++ subst x. apply eq_refl. ++ destruct (eq_dart_dec x' (top m' zero x')) as [Hx'_top | Hx'_top]. ** subst x'. contradiction. ** right. left. apply P'. * destruct (eq_dart_dec x (top m' k x)) as [Hx_top | Hx_top]. ++ subst x. left. split. apply eq_refl. apply P'. ++ right. left. apply P'.", "succ": true}]