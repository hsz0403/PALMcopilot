[{"history": {"proof": "", "repairs": [], "exceptions": []}, "chat": [], "original": "intros P HP m. induction m using lt_wf_ind. pose (X := fun y => if lt_dec y m then X y else if HP y then inl _ (exist _ y (conj (lt_n_S y m (proj1 H)) (proj2 H))) else inr _). destruct (HP m), (le_lt_dec m n); eauto. - left. exists n. split; eauto with arith. - destruct (X n) as [(x, H1) | H1]. + left. exists x. split; eauto with arith. + right. intros x [H2 H3]. specialize (H n). apply H with x; eauto with arith. + destruct (Decidable.dec_not_not (X n m0) (ssrbool.classic_pick _ _) (fun H2 => H1 (proj1 H2))); eauto. - right. intros x [H1 H2]. apply n0. apply (Nat.le_trans _ _ _ H2). apply (proj1 H1). - specialize (X (S m)). destruct X as [(x, H1) | H1]. + left. exists x. split; eauto with arith. + right. intros x [H2 H3]. apply H1. split; eauto with arith.", "succ": false}]