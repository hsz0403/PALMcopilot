[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["unfold all_hooks_fire, send_step."], "tactic": "intros H1 H2.", "exn": "H1 is already used.", "type": "used_var", "handled": true}, {"ctx": ["unfold all_hooks_fire, send_step."], "tactic": "intros H1' H2.", "exn": "H2 is already used.", "type": "used_var", "handled": true}]}, "chat": [], "original": "unfold all_hooks_fire, send_step. intros H1 H2. destruct H1 as [H1U [H1V H1C]]. destruct H2 as [H2F H2M]. destruct H2M as [H2M1 | H2M2]. - left. unfold msg_just_sent. split. + rewrite upd_upd. reflexivity. + eapply no_msg_from_to'; eauto. + eapply Mem; eauto. + eapply send_lq_case1; eauto. + eapply holds_res_perms_ss. - right. destruct H2M2 as [H2M2F H2M2R]. destruct H2M2R as [H2M2R1 H2M2R2]. unfold msg_received. split. + rewrite upd_upd. reflexivity. + eapply no_msg_from_to'; eauto. + eapply no_msg_from_to'; eauto. + eapply msg_spec'; eauto. + eapply holds_res_perms_ss.", "succ": false}]