[{"history": {"proof": "induction xs as [|x xs IHxs]. - simpl. auto. - unfold all. simpl. intros H. destruct x as [[x1 x2] x3]. simpl in e. hauto lb: on depth: 3.", "repairs": ["", "", "", "", "", "", "", "", "", "", "hammer"], "exceptions": []}, "chat": [], "original": "induction xs as [|x xs IHxs]. - simpl. auto. - unfold all. simpl. intros H. simpl in H. destruct x as [[x1 x2] x3]. simpl in e. destruct (x1 == e) eqn:Eq. + inversion H. apply IHxs. apply H2. + unfold remove_elem. simpl. destruct (x == e) eqn:Eqx. * apply IHxs. apply H. * inversion H. split. { rewrite (mem_seq1 x xs). apply /eqP. rewrite Eqx. done. } { apply IHxs. apply H1. }", "succ": true}]