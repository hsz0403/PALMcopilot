[{"history": {"proof": "", "repairs": [], "exceptions": []}, "chat": [], "original": "intros p q a H1 H2 H3. unfold canonical, eqP, zeroP, mults, multpf, eqTerm, eqT, zeroP in *. intros H4 H5 H6. induction p. - simpl. destruct q. + simpl. intros _. apply H4. + simpl. intros contra. inversion contra. - simpl. destruct q. + simpl. intros contra. inversion contra. + simpl. intros H7. apply plusP_inv3a with (A:=A) (n:=n) (ltM:=ltM) (a:=a) in H7 as H8. apply plusP_inv1 with (A:=A) (n:=n) (ltM:=ltM) in H3 as H9. apply plusP_inv2 with (A:=A) (n:=n) (ltM:=ltM) in H3 as H10. apply plusP_com with (A:=A) (ltM:=ltM) in H3 as H11. destruct H2 as [H2l H2r]. apply mults_comp with (A:=A) in H8 as H12. apply H12 in H6 as H13. apply IHp in H11. apply H13, H9, H11. + simpl. intros H7. apply plusP_inv3b with (A:=A) (n:=n) (ltM:=ltM) (a:=a) in H7 as H8. apply plusP_inv1 with (A:=A) (n:=n) (ltM:=ltM) in H3 as H9. apply plusP_inv2 with (A:=A) (n:=n) (ltM:=ltM) in H3 as H10. apply plusP_com with (A:=A) (ltM:=ltM) in H3 as H11. destruct H2 as [H2l H2r]. apply mults_comp with (A:=A) in H8 as H12. apply H12 in H6 as H13. apply IHp in H11. apply H13, H9, H11.", "succ": false}]