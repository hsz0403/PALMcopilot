[{"history": {"proof": "", "repairs": [], "exceptions": []}, "chat": [], "original": "intros a nZa p q CanP CanQ. unfold Dmult. unfold multpf. unfold reduceplus. unfold reduce. unfold reduceplus in CanP. unfold canonical in CanP. unfold reduceplus in CanQ. unfold reduce in CanQ. unfold canonical in CanQ. apply reduce_inv2 in CanP as [x [a' [nZa' [InPoly [CanX EqPR]]]]]. apply reduce_inv2 in CanQ as [y [b [nZb [InPoly' [CanY EqQR]]]]]. apply (eqptail_spminusf_com _ _ _ eqA plusA invA minusA divA cs eqA_dec n ltM ltM_dec a' b) in EqPR. apply (eqp_spminusf_com _ _ _ eqA plusA invA minusA divA cs eqA_dec n ltM ltM_dec a' b) in EqQR. rewrite <- EqPR. rewrite <- EqQR. apply eqP_refl.", "succ": false}]