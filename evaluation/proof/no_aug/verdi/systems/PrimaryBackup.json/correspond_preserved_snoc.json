[{"history": {"proof": "", "repairs": [], "exceptions": []}, "chat": [], "original": "intros sigma tr_1 tr_m st sigma' st' i l H_corr H_hand H_state H_queue. unfold correspond in H_corr; simpl in H_corr. destruct H_corr as [H_corr_outputs_m H_corr_d]. assert (H_proc := H_corr_d). apply processInputs_split in H_proc. destruct H_proc as [H_out_m H_d_st]. rewrite H_out_m. rewrite app_assoc. apply correspond_preserved_primary_apply_entry with (h := Primary) (d := Build_PB_data (i :: queue (sigma Primary)) (state st')); auto. - auto. - rewrite H_state. reflexivity. - unfold queue. rewrite <- H_hand. simpl. reflexivity. - unfold queue. simpl. reflexivity. - reflexivity.", "succ": false, "time": 6.818803197000307}]