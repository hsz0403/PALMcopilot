[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["unfold norm, prod_norm.", "split.", "-"], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["unfold norm, prod_norm.", "split.", "-", "shelve.", "-", "apply Rle_trans with (r2:= sqrt (norm x ^ 2 + norm y ^ 2)).", "+", "apply sqrt_le_1_alt, Rle_trans with (r2:= norm x ^ 2 + norm y ^ 2).", "*"], "tactic": "apply Rplus_le_r.", "exn": "The reference Rplus_le_r was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["unfold norm, prod_norm.", "split.", "-", "shelve.", "-", "apply Rle_trans with (r2:= sqrt (norm x ^ 2 + norm y ^ 2)).", "+", "apply sqrt_le_1_alt, Rle_trans with (r2:= norm x ^ 2 + norm y ^ 2).", "*", "apply Rplus_le_compat."], "tactic": "*", "exn": "Wrong bullet *: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["unfold norm, prod_norm.", "split.", "-", "shelve.", "-", "apply Rle_trans with (r2:= sqrt (norm x ^ 2 + norm y ^ 2)).", "+", "apply sqrt_le_1_alt, Rle_trans with (r2:= norm x ^ 2 + norm y ^ 2).", "*", "apply Rplus_le_compat.", "--", "shelve.", "--", "shelve.", "*"], "tactic": "+", "exn": "Wrong bullet +: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["unfold norm, prod_norm.", "split.", "-", "shelve.", "-", "apply Rle_trans with (r2:= sqrt (norm x ^ 2 + norm y ^ 2)).", "+", "apply sqrt_le_1_alt, Rle_trans with (r2:= norm x ^ 2 + norm y ^ 2).", "*", "apply Rplus_le_compat.", "--", "shelve.", "--", "shelve.", "*", "shelve.", "+", "apply Rle_trans with (r2:= sqrt 2 * Rmax (norm x) (norm y)).", "*"], "tactic": "*", "exn": "Wrong bullet *: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}]}, "chat": [], "original": "unfold norm, prod_norm. split. - apply Rmax_l. - apply Rle_trans with (r2:= sqrt (norm x ^ 2 + norm y ^ 2)). + apply sqrt_le_1_alt, Rle_trans with (r2:= norm x ^ 2 + norm y ^ 2). * apply Rplus_le_r. apply pow2_ge_0. * apply sqrt_cauchy. + apply Rle_trans with (r2:= sqrt 2 * Rmax (norm x) (norm y)). * apply sqrt_mult. * apply prod_norm_factor.", "succ": false}]