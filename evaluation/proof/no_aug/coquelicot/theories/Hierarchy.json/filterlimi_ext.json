[{"history": {"proof": "", "repairs": [], "exceptions": []}, "chat": [], "original": "intros T U F G H F_Filter f g H_equiv filt_fg. unfold filterlimi in filt_fg. unfold filter_le in filt_fg. apply (filterlimi_comp T U U f (fun x y => g x y) F G H). - apply filt_fg. - intros P Q f_Q_Q G_P. apply (filter_imp T (fun x => exists y : U, g x y /\\ Q y) P Q). + intros x P_ex. destruct P_ex as [y [gxy Qy]]. exists y. split. * apply (proj1 (H_equiv x y)). apply gxy. * apply Qy. + apply G_P.", "succ": false}]