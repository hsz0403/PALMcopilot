[{"history": {"proof": "intros a b c. unfold Rmin. destruct (Rle_dec b c); destruct (Rle_dec (b + a) (c + a)); simpl. - reflexivity. - qauto use: Rplus_le_compat unfold: Rle. - sfirstorder use: Rplus_le_reg_r. - sfirstorder depth: 3.", "repairs": ["", "", "", "", "", "", "hammer", "", "hammer", "", "hammer"], "exceptions": [{"ctx": ["intros a b c.", "unfold Rmin.", "destruct (Rle_dec b c); destruct (Rle_dec (b + a) (c + a)); simpl.", "-", "reflexivity.", "-"], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros a b c.", "unfold Rmin.", "destruct (Rle_dec b c); destruct (Rle_dec (b + a) (c + a)); simpl.", "-", "reflexivity.", "-", "shelve.", "-"], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}]}, "chat": [], "original": "intros a b c. unfold Rmin. destruct (Rle_dec b c); destruct (Rle_dec (b + a) (c + a)); simpl. - reflexivity. - apply Rplus_le_compat_r in n. contradiction. - apply Rplus_le_compat_r in n. contradiction. - apply Rplus_le_compat_r in n. contradiction.", "succ": true}]