[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": [], "tactic": "intros u l H.", "exn": "u is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros u' l H.", "exn": "l is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros u' l' H.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}]}, "chat": [], "original": "intros u l H. unfold Sup_seq. destruct (ex_sup_seq u) as [l' Hl']. apply is_sup_seq_lub in H. apply is_sup_opp_inf_seq in H. rewrite Rbar_opp_involutive in H. apply is_inf_opp_sup_seq in H. apply is_inf_seq_ext with (fun n => Rbar_opp (u n)) (Rbar_opp l) in H. apply Rbar_is_glb_inf_seq in H. apply is_inf_opp_sup_seq in H. rewrite Rbar_opp_involutive in H. apply is_sup_opp_inf_seq in H. rewrite Rbar_opp_involutive in H. apply is_sup_opp_inf_seq in H. apply is_sup_seq_ext with u l' in H. apply Rbar_is_lub_sup_seq in H. apply Rbar_is_lub_unique in H. apply H.", "succ": false}]