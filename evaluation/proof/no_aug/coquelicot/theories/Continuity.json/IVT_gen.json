[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": [], "tactic": "intros f y b a cont_f y_bound.", "exn": "f is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros f' y b a cont_f y_bound.", "exn": "y is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros f' y' b a cont_f y_bound.", "exn": "b is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros f' y' b' a cont_f y_bound.", "exn": "a is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros f' y' b' a' cont_f y_bound.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}]}, "chat": [], "original": "intros f y b a cont_f y_bound. assert (Hbound: Rmin (f a) (f b) <= y <= Rmax (f a) (f b)) by auto. pose proof (MVT_abs f (fun x => derivable_continuous_pt f x) a b) as Hmvt. specialize (Hmvt (fun c => Rmin a b <= c <= Rmax a b -> derivable_pt_lim f c (fun x => f x))). specialize (Hmvt (fun c => Rmin a b <= c <= Rmax a b)). assert (Hexists: exists c : R, Rabs (f b - f a) = Rabs (f c) * Rabs (b - a) /\\ Rmin a b <= c <= Rmax a b) by apply Hmvt. destruct Hexists as [c [Hc1 Hc2]]. exists c. split; auto.", "succ": false}]