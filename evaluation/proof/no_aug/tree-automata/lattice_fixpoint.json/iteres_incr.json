[{"history": {"proof": "", "repairs": [], "exceptions": []}, "chat": [], "original": "intros A r f x n H1 H2. unfold prechain_incr. induction n. - unfold iteres. simpl. intros. apply incr_single. - unfold iteres. simpl. intros. apply prechain_incr_ind with (m:=r) (p:=iteres A f x n). + apply IHn. + apply incr_concat with (x:=x). * apply iteres_last with (n:=n) (f:=f) (y:=iteres A f x n). reflexivity. * apply IHn. + apply chain_incr with (T:=mLattice A r) (r:=r) (p:=iteres A f x n). apply IHn.", "succ": false}]