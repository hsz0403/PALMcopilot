[{"history": {"proof": "intros s0 s1 d t H. split. - intros H1. hauto use: union_str inv: term. - intros [H1 | H2]. + hauto use: union_sd inv: term. + hauto use: mpl_compat_sym, union_sd inv: term.", "repairs": ["", "", "", "", "hammer", "", "", "", "hammer", "", "hammer"], "exceptions": [{"ctx": ["intros s0 s1 d t H.", "split.", "-", "intros H1."], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros s0 s1 d t H.", "split.", "-", "intros H1.", "shelve.", "-", "intros [H1 | H2].", "+"], "tactic": "+", "exn": "Wrong bullet +: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}]}, "chat": [], "original": "intros s0 s1 d t H. split. - intros H1. apply union_sd with (c:=t) (tl:=nil) in H; auto. destruct H; auto. - intros [H1 | H2]. + left. apply union_str with (c:=t) (tl:=nil) in H; auto. + right. apply union_str with (s0:=s1) (s1:=s0) (c:=t) (tl:=nil) in H; auto.", "succ": true}]