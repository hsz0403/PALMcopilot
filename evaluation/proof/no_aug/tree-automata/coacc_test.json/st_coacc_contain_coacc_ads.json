[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros d s c p a H1 H2 H3.", "unfold state_ref_ok in H1.", "unfold MapGet in H2.", "unfold MapGet.", "destruct s.", "-", "destruct H2."], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros d s c p a H1 H2 H3.", "unfold state_ref_ok in H1.", "unfold MapGet in H2.", "unfold MapGet.", "destruct s.", "-", "destruct H2.", "shelve.", "-", "unfold st_coacc.", "destruct H2 as [x [y [H2 [Hx Hy]]]]."], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}]}, "chat": [], "original": "intros d s c p a H1 H2 H3. unfold state_ref_ok in H1. unfold MapGet in H2. unfold MapGet. destruct s. - destruct H2. discriminate. - unfold st_coacc. destruct H2 as [x [y [H2 [Hx Hy]]]]. apply pl_coacc_contain_coacc_ads with (a:=a) in H3. rewrite H2 in H3. apply H3. - unfold st_coacc. destruct H2 as [x [y [H2 [Hx Hy]]]]. apply pl_coacc_contain_coacc_ads with (a:=a) in H3. rewrite H2 in H3. apply H3.", "succ": false}]