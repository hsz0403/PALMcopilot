[{"history": {"proof": "", "repairs": [], "exceptions": []}, "chat": [], "original": "intros d d' m0 m1 H. destruct H as [Hbase0 [Hbase1 Hlem]]. unfold lemd in Hlem. destruct Hlem as [Hbase0' [Hbase1' Hlem]]. unfold predta_coacc_0. destruct d'; simpl. - unfold predta_coacc_0_def_ok in Hbase0. unfold map_mini. rewrite Hbase0. auto. - destruct m0, m1; simpl. + apply map_or_inc_d; auto. + apply map_or_inc_rd; [apply map_mini_base | assumption]. + apply map_or_inc_ld; [apply map_mini_base | assumption]. + apply map_or_inc_rd; [apply map_mini_base | assumption]. - destruct m0, m1; simpl. + apply map_or_inc_d; auto. + apply map_or_inc_rd; [apply lem_get_leb in Hlem as [_ Heq]; rewrite Heq; auto | assumption]. + apply map_or_inc_ld; [assumption | apply map_mini_base]. + apply map_or_inc_rd; [apply lem_get_leb in Hlem as [_ Heq]; rewrite Heq; auto | assumption]. - destruct m0, m1; simpl. + apply map_or_inc_d; auto. + apply map_or_inc_rd; [apply lem_get_leb in Hlem as [_ Heq]; rewrite Heq; auto | assumption]. + apply map_or_inc_ld; [assumption | apply map_mini_base]. + apply map_or_inc_rd; [apply lem_get_leb in Hlem as [_ Heq]; rewrite Heq; auto | assumption].", "succ": false}]