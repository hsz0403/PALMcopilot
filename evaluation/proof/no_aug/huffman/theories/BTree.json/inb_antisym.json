[{"history": {"proof": "intros t1 t2 Hinb12 Hinb21. hauto depth: 2 lq: on exh: on use: number_of_nodes_inb_le, Nat.le_antisymm, Nat.le_trans, le_plus_r, le_plus_l, Nat.nlt_ge unfold: number_of_nodes, lt inv: inb.", "repairs": ["", "hammer"], "exceptions": []}, "chat": [], "original": "intros t1 t2 Hinb12 Hinb21. apply inb_ind with (P := fun t1 t2 => inb t2 t1 -> t1 = t2). - intros t. intros Hinb. induction Hinb. + reflexivity. + intros. inversion H. + intros. inversion H. - intros t t1' t2' Hinb1 IH1 H1 Hinb2 IH2. destruct t1' as [| t11 t12]. + inversion Hinb1. + simpl. f_equal. apply IH1. apply inb_trans with (t2 := t1). * apply Hinb1. * apply Hinb12. - intros t t1' t2' Hinb2 IH H1 Hinb1 IH1. destruct t1' as [| t11 t12]. + inversion Hinb2. + simpl. f_equal. apply IH. apply inb_trans with (t2 := t2). * apply Hinb12. * apply Hinb2. - apply Hinb21.", "succ": true}]