[{"history": {"proof": "intros a l H. induction l as [| b n l' IHl']. - simpl. apply unique_key_cons. + intros b0 H'. inversion H'. + sfirstorder depth: 3use: unique_key_inv, in_inv, unique_key_cons, unique_key_in_inv. - simpl. qauto use: unique_key_cons, add_frequency_list_in_inv, unique_key_inv, unique_key_in unfold: fst, snd inv: unique_key, prod.", "repairs": ["", "", "", "", "", "", "", "", "", "hammer", "", "", "hammer"], "exceptions": [{"ctx": ["intros a l H.", "induction l as [| b n l' IHl'].", "-", "simpl.", "apply unique_key_cons.", "+", "intros b0 H'.", "inversion H'.", "+"], "tactic": "-", "exn": "Wrong bullet -: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}]}, "chat": [], "original": "intros a l H. induction l as [| b n l' IHl']. - simpl. apply unique_key_cons. + intros b0 H'. inversion H'. + apply unique_key_inv in H. apply H. - simpl. destruct (eqA_dec a b) as [Heq | Hneq]. + rewrite Heq. apply unique_key_inv in H. apply H. + apply IHl' in H. apply unique_key_inv in H. apply unique_key_cons. * intros b0 H'. apply H. apply in_inv in H'. destruct H' as [H' | H']. ++ apply unique_key_in_inv with (l1 := n) in H. ** subst. apply Hneq. ** apply H. ++ apply H. * apply H.", "succ": true}]