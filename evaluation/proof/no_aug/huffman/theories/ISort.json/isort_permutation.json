[{"history": {"proof": "intros l. induction l. - unfold isort. apply permutation_refl. - simpl. apply permutation_ind. + sfirstorder depth: 3use: isort_ordered, ordered_nil, insert_ordered, ordered_cons. + sfirstorder depth: 3use: isort_ordered, ordered_nil, insert_ordered, ordered_cons. + sfirstorder depth: 3use: isort_ordered, ordered_nil, insert_ordered, ordered_cons. + sfirstorder depth: 3use: isort_ordered, ordered_nil, insert_ordered, ordered_cons. + sauto lq: on depth: 3use: isort_ordered, ordered_nil, insert_ordered, ordered_cons.", "repairs": ["", "", "", "", "", "", "", "ref_not_found", "", "hammer", "", "hammer", "", "hammer", "", "hammer", "", "hammer"], "exceptions": [{"ctx": ["intros l.", "induction l.", "-", "unfold isort.", "apply permutation_refl.", "-", "simpl."], "tactic": "apply permutation_insert.", "exn": "The reference permutation_insert was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros l.", "induction l.", "-", "unfold isort.", "apply permutation_refl.", "-", "simpl.", "apply permutation_ind.", "+"], "tactic": "+", "exn": "Wrong bullet +: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros l.", "induction l.", "-", "unfold isort.", "apply permutation_refl.", "-", "simpl.", "apply permutation_ind.", "+", "shelve.", "+"], "tactic": ["apply isort_ordered.", ""], "exn": "Applied theorem does not have enough premises.", "type": "no_enough_premises", "handled": false}, {"ctx": ["intros l.", "induction l.", "-", "unfold isort.", "apply permutation_refl.", "-", "simpl.", "apply permutation_ind.", "+", "shelve.", "+"], "tactic": "+", "exn": "Wrong bullet +: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}]}, "chat": [], "original": "intros l. induction l. - unfold isort. simpl. apply permutation_refl. - simpl. apply permutation_insert. + apply IHl. + apply isort_ordered. + apply insert_ordered. * apply isort_ordered. * apply ordered_cons. ++ apply order_fun_true. reflexivity. ++ apply ordered_nil.", "succ": true}]