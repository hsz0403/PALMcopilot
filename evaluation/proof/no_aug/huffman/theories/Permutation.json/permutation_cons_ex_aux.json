[{"history": {"proof": "", "repairs": [], "exceptions": []}, "chat": [], "original": "intros a l1 l2 Hperm l11 l12 Heq. apply Forall2_app_inv_r with (l1' := l11) (l2' := a :: l12) in Hperm. destruct Hperm as [l3 [l4 [H1 [H2 H3]]]]. apply app_inv_app in Heq. destruct Heq as [Heq1 | [Heq2 | [Heq3 Heq4]]]. - exists l3, l4. split. + rewrite Heq1. rewrite H1. reflexivity. + rewrite Heq1. rewrite H2. apply H3. - exists l3, (l4 ++ a :: nil). split. + rewrite Heq2. rewrite H1. reflexivity. + rewrite Heq2. rewrite H2. simpl. rewrite app_nil_r. apply H3. - destruct Heq3. destruct l3. + discriminate H. + simpl in H. discriminate H. apply Forall2_app_inv_r with (l1' := l11) (l2' := l12) in Hperm. destruct Hperm as [l3 [l4 [H1 [H2 H3]]]]. apply app_inv_head in H1. subst l4. apply app_inv_tail in H2. subst l3. exists l11, l12. split. - reflexivity. - apply Hperm.", "succ": false}]