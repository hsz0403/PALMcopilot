[{"history": {"proof": "intros l t. induction l as [|hd tl IHl]. - intros H. inversion H. - intros Hin. srun best use: all_cover_aux_cover unfold: all_cover.", "repairs": ["", "", "", "", "", "", "", "hammer"], "exceptions": []}, "chat": [], "original": "intros l t. induction l as [|hd tl IHl]. - intros H. inversion H. - intros Hin. destruct Hin as [Hin | Hin]. + subst. apply cover_one. + apply (cover_sind _ _ cover_one). intros l1 l2 t1 t2 t3 Hperm Hcov IH. apply (IHl Hin). apply (cover_permutation _ (node t1 t2) _ Hcov) in Hperm. apply (cover_inv_app_aux _ _ _ _ _ Hcov eq_refl) in Hperm. destruct Hperm as [H | [l1 [l2 [[Hcov1 Hcov2] Hperm]]]]. * subst. left. reflexivity. * right. exists l1, l2. split. auto. split. auto. auto.", "succ": true}]