[{"history": {"proof": "reflexivity.", "repairs": [""], "exceptions": [{"ctx": ["assert (H : n = n).", "reflexivity."], "tactic": ["rewrite <- H.", ""], "exn": "Abstracting over the term \"n\" leads to a term fun n0 : nat => pos_both n0 m (pos_left m p) = inl p which is ill-typed. Reason is: Illegal application: The term \"pos_left\" of type \"forall n m : nat, pos n -> pos (n + m)\" cannot be applied to the terms \"n0\" : \"nat\" \"m\" : \"nat\" \"p\" : \"pos n\" The 3rd term has type \"pos n\" which should be coercible to \"pos n0\".", "type": "term_cannot_apply", "handled": false}]}, "chat": [], "original": "assert (H : n = n). { reflexivity. } rewrite <- H. apply pos_both.", "succ": false}]