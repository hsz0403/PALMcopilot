[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["split.", "-", "intros [H1 H2]."], "tactic": "destruct (dio_single_eq_proj _ _ _ _ _ _ _ H1) as [A1 [A2 A3]].", "exn": "The reference dio_single_eq_proj was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["split.", "-", "intros [H1 H2]."], "tactic": "exists (vec_map_list x pos0).", "exn": "The reference x was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["split.", "-", "intros [H1 H2]."], "tactic": "rewrite (dp_eval_fix _ _ _ _ _ _ _ _ A2).", "exn": "The reference dp_eval_fix was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["split.", "-", "intros [H1 H2]."], "tactic": "rewrite (dp_eval_fix _ _ _ _ _ _ _ _ A3).", "exn": "The reference dp_eval_fix was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["split.", "-", "intros [H1 H2]."], "tactic": "-", "exn": "[Focus] Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}]}, "chat": [], "original": "intros. split. - intros [H1 H2]. destruct (dio_single_eq_proj _ _ _ _ _ _ _ H1) as [A1 [A2 A3]]. exists (vec_map_list x pos0). rewrite (dp_eval_fix _ _ _ _ _ _ _ _ A2). rewrite (dp_eval_fix _ _ _ _ _ _ _ _ A3). reflexivity. - intros [w H]. split. + apply (dio_single_pred_proj _ _ _ _ _ _ _) with w. * apply (dio_element_single _). exists 0. intros \u03c6 \u03bd. unfold dio_single_pred. split; intros; subst. -- exists \u03c6. intros. apply H. apply pos_not_diag_spec in H0. right. apply pos_S_invert. apply pos_not_diag_spec in H. auto. -- destruct H as [\u03c6' H]. apply Existential_intro with \u03c6'. intros. apply H. apply pos_not_diag_spec. right. apply pos_not_diag_spec. auto. * intros. apply (dio_element_single _). exists 0. intros \u03c6 \u03bd. unfold dio_single_pred. split; intros; subst. -- exists \u03c6. intros. apply H. apply pos_not_diag_spec in H0. right. apply pos_S_invert. apply pos_not_diag_spec in H. auto. -- destruct H as [\u03c6' H]. apply Existential_intro with \u03c6'. intros. apply H. apply pos_not_diag_spec. right. apply pos_not_diag_spec. auto. + auto.", "succ": false}]