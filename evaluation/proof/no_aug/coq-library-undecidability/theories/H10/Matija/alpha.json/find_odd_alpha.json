[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": [], "tactic": ["destruct b as [|b'].", ""], "exn": "Expects a disjunctive pattern with 3 branches.", "type": "num_branch", "handled": false}]}, "chat": [], "original": "destruct b as [|b']. - inversion Hb. - exists (alpha_nat (S (S u))). split. + apply le_trans with (m:= alpha_nat (S u)). * apply alpha_nat_le. * apply le_n_S, alpha_nat_mono, Nat.le_succ_l. + rewrite alpha_nat_fix_2. simpl. apply rem_2_fix_1.", "succ": false}]