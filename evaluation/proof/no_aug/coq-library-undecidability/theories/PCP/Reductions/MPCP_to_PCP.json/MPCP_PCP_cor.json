[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["split.", "-", "intros H.", "unfold MPCP, PCP in *.", "destruct H as [A HA].", "exists A.", "split.", "+", "destruct HA as [HA1 HA2]."], "tactic": "+", "exn": "[Focus] Wrong bullet +: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["split.", "-", "intros H.", "unfold MPCP, PCP in *.", "destruct H as [A HA].", "exists A.", "split.", "+", "destruct HA as [HA1 HA2].", "shelve.", "+"], "tactic": "-", "exn": "[Focus] Wrong bullet -: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["split.", "-", "intros H.", "unfold MPCP, PCP in *.", "destruct H as [A HA].", "exists A.", "split.", "+", "destruct HA as [HA1 HA2].", "shelve.", "+", "shelve.", "-", "intros H.", "unfold MPCP, PCP in *.", "destruct H as [B HB].", "exists B.", "split.", "+", "destruct HB as [HB1 HB2]."], "tactic": "+", "exn": "[Focus] Wrong bullet +: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}]}, "chat": [], "original": "intros. split. - intros H. unfold MPCP, PCP in *. destruct H as [A HA]. exists A. split. + destruct HA as [HA1 HA2]. split. * unfold incl_appr in R_Sigma. unfold incl_refl in R_Sigma. unfold incl_appr in R_Sigma. destruct HA1 as [A1 HA1]. destruct HA1 as [HA1A HA1B]. exists A1. split. ++ destruct HA1B. +++ unfold incl_appr in R_Sigma. unfold incl_refl in R_Sigma. apply H. +++ destruct H0 as [x H0]. destruct H0 as [y H0]. destruct H0. -- left. apply H0. -- right. unfold is_cons in H0. unfold is_cons_true_iff in H0. destruct H0. ++ apply HA2. * apply HA2. + apply HA. - intros H. unfold MPCP, PCP in *. destruct H as [B HB]. exists B. split. + destruct HB as [HB1 HB2]. split. * apply HB1. * apply HB2. + apply HB.", "succ": false}]