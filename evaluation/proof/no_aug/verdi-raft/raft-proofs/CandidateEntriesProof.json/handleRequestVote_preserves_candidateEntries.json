[{"history": {"proof": "", "repairs": [], "exceptions": []}, "chat": [], "original": "intros net h h' t lli llt d e m HhandleRequestVote HcandidateEntries. unfold handleRequestVote in HhandleRequestVote. destruct (t <? currentTerm (nwState net h)) eqn:Hlt. - inversion HhandleRequestVote. - destruct (advanceCurrentTerm (nwState net h) t) as [newState m'] eqn:Hadvance. destruct (leaderId newState) eqn:HleaderId. + inversion HhandleRequestVote. + destruct ((leaderId newState) && moreUpToDate llt lli (maxTerm (log newState)) (maxIndex (log newState))) eqn:HupdT. * destruct (votedFor newState) as [candidateId'|] eqn:HvotedFor. ++ inversion HhandleRequestVote; subst. apply (candidateEntries_wonElection net e h) in HcandidateEntries. rewrite Hadvance in HcandidateEntries. apply HcandidateEntries. ++ inversion HhandleRequestVote. * inversion HhandleRequestVote.", "succ": false}]