[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["unfold msg_refined_raft_net_invariant_client_request', msg_refined_raft_net_invariant_client_request in *."], "tactic": "intros orig_base_params one_node_params raft_params P h net st' ps' gd out d l client id c HhandleClient Hgd HP Hreachable.", "exn": "orig_base_params is already used.", "type": "used_var", "handled": true}, {"ctx": ["unfold msg_refined_raft_net_invariant_client_request', msg_refined_raft_net_invariant_client_request in *."], "tactic": "intros orig_base_params' one_node_params raft_params P h net st' ps' gd out d l client id c HhandleClient Hgd HP Hreachable.", "exn": "one_node_params is already used.", "type": "used_var", "handled": true}, {"ctx": ["unfold msg_refined_raft_net_invariant_client_request', msg_refined_raft_net_invariant_client_request in *."], "tactic": "intros orig_base_params' one_node_params' raft_params P h net st' ps' gd out d l client id c HhandleClient Hgd HP Hreachable.", "exn": "raft_params is already used.", "type": "used_var", "handled": true}]}, "chat": [], "original": "unfold msg_refined_raft_net_invariant_client_request', msg_refined_raft_net_invariant_client_request in *. intros orig_base_params one_node_params raft_params P h net st' ps' gd out d l client id c HhandleClient Hgd HP Hreachable. apply (msg_refined_raft_net_invariant orig_base_params one_node_params raft_params P net); auto.", "succ": false}]