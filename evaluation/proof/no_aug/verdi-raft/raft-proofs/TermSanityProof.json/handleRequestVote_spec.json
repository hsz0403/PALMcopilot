[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros."], "tactic": "intros HhandleRequestVote.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros.", "split.", "-"], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}]}, "chat": [], "original": "intros. intros. intros. intros. intros. intros. intros. intros. intros. intros. intros. intros. intros HhandleRequestVote. split. - unfold handleRequestVote, advanceCurrentTerm in HhandleRequestVote. destruct (t <? currentTerm st) eqn:Heq1. + inversion HhandleRequestVote. + destruct (leaderId (advanceCurrentTerm st t)) eqn:Heq2. * inversion HhandleRequestVote. * destruct (decide ((leaderId (advanceCurrentTerm st t)) && moreUpToDate pli plt (maxTerm (log (advanceCurrentTerm st t))) (maxIndex (log (advanceCurrentTerm st t))))); inversion HhandleRequestVote. * split. ++ rewrite <- Heq1. apply leb_complete. reflexivity. ++ split. ** reflexivity. ** intros contra. inversion contra. - split; [reflexivity | split; [reflexivity | intros contra; inversion contra]].", "succ": false}]