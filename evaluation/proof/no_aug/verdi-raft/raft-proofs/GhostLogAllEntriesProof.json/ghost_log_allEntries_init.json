[{"history": {"proof": "intros orig_base_params' one_node_params' raft_params'. intros. hauto lq: on depth: 3.", "repairs": ["used_var", "", "hammer"], "exceptions": [{"ctx": [], "tactic": "intros orig_base_params one_node_params raft_params.", "exn": "orig_base_params is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params raft_params.", "exn": "one_node_params is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params.", "exn": "raft_params is already used.", "type": "used_var", "handled": true}]}, "chat": [], "original": "intros orig_base_params one_node_params raft_params. unfold msg_refined_raft_net_invariant_init, msg_refined_raft_net_invariant_client_request, msg_refined_raft_net_invariant_timeout, msg_refined_raft_net_invariant_append_entries, msg_refined_raft_net_invariant_append_entries_reply, msg_refined_raft_net_invariant_request_vote, msg_refined_raft_net_invariant_request_vote_reply, msg_refined_raft_net_invariant_do_leader, msg_refined_raft_net_invariant_do_generic_server, msg_refined_raft_net_invariant_state_same_packet_subset, msg_refined_raft_net_invariant_reboot, ghost_log_allEntries in *. intros. apply H.", "succ": true}]