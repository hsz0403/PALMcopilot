[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": [], "tactic": "intros orig_base_params one_node_params raft_params rri.", "exn": "orig_base_params is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params raft_params rri.", "exn": "one_node_params is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params rri.", "exn": "raft_params is already used.", "type": "used_var", "handled": true}, {"ctx": [], "tactic": "intros orig_base_params' one_node_params' raft_params' rri.", "exn": "rri is already used.", "type": "used_var", "handled": true}, {"ctx": ["intros orig_base_params' one_node_params' raft_params' rri'."], "tactic": ["apply refined_raft_net_invariant_client_request.", ""], "exn": "Applied theorem does not have enough premises.", "type": "no_enough_premises", "handled": false}]}, "chat": [], "original": "intros orig_base_params one_node_params raft_params rri. apply refined_raft_net_invariant_client_request. - apply refined_raft_net_invariant_init. - apply refined_raft_net_invariant_client_request'. - apply refined_raft_net_invariant_timeout. - apply refined_raft_net_invariant_append_entries. - apply refined_raft_net_invariant_append_entries_reply. - apply refined_raft_net_invariant_request_vote. - apply refined_raft_net_invariant_request_vote_reply. - apply refined_raft_net_invariant_do_leader. - apply refined_raft_net_invariant_do_generic_server. - apply refined_raft_net_invariant_state_same_packet_subset. - apply refined_raft_net_invariant_reboot. - apply raft_refined_multi_params.", "succ": false}]