[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros net p t n pli plt es ci st' m H_reachable H_logs_sorted H_handle H_pBody H_In_p.", "unfold handleAppendEntries in H_handle.", "destruct (currentTerm (nwState net (pDst p)) <? t) eqn:term_cond.", "-", "inversion H_handle."], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros net p t n pli plt es ci st' m H_reachable H_logs_sorted H_handle H_pBody H_In_p.", "unfold handleAppendEntries in H_handle.", "destruct (currentTerm (nwState net (pDst p)) <? t) eqn:term_cond.", "-", "inversion H_handle.", "shelve.", "-", "destruct (pli =? 0) eqn:pli_cond.", "+", "destruct (haveNewEntries (nwState net (pDst p)) es) eqn:new_entries_cond.", "*", "inversion H_handle; subst; clear H_handle.", "unfold pBody in H_pBody.", "inversion H_pBody; subst; clear H_pBody."], "tactic": "*", "exn": "Wrong bullet *: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros net p t n pli plt es ci st' m H_reachable H_logs_sorted H_handle H_pBody H_In_p.", "unfold handleAppendEntries in H_handle.", "destruct (currentTerm (nwState net (pDst p)) <? t) eqn:term_cond.", "-", "inversion H_handle.", "shelve.", "-", "destruct (pli =? 0) eqn:pli_cond.", "+", "destruct (haveNewEntries (nwState net (pDst p)) es) eqn:new_entries_cond.", "*", "inversion H_handle; subst; clear H_handle.", "unfold pBody in H_pBody.", "inversion H_pBody; subst; clear H_pBody.", "shelve.", "*"], "tactic": "+", "exn": "Wrong bullet +: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}]}, "chat": [], "original": "intros net p t n pli plt es ci st' m H_reachable H_logs_sorted H_handle H_pBody H_In_p. unfold handleAppendEntries in H_handle. destruct (currentTerm (nwState net (pDst p)) <? t) eqn:term_cond. - inversion H_handle. - destruct (pli =? 0) eqn:pli_cond. + destruct (haveNewEntries (nwState net (pDst p)) es) eqn:new_entries_cond. * inversion H_handle; subst; clear H_handle. subst. unfold pBody in H_pBody. inversion H_pBody; subst; clear H_pBody. pose proof handleAppendEntries_logs_sorted as H_sorted. specialize (H_sorted net p t n pli plt es ci st' m H_reachable H_logs_sorted H_handle eq_refl H_pBody H_In_p). apply H_sorted. * discriminate. + discriminate.", "succ": false}]