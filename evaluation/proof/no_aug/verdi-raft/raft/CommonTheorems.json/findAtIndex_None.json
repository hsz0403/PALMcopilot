[{"history": {"proof": "intros xs i x H_sorted H_find H_in. unfold findAtIndex, findAtIndex in H_find. induction xs as [| x' xs' IHxs]. - inversion H_in. - destruct (Nat.eqb (eIndex x') i) eqn:Heq_index. + congruence. + hauto lq: on use: findAtIndex_not_in, beq_nat_refl unfold: findAtIndex, eIndex, sorted, logIndex, In inv: bool.", "repairs": ["", "", "", "", "", "", "", "", "", "", "hammer"], "exceptions": [{"ctx": ["intros xs i x H_sorted H_find H_in.", "unfold findAtIndex, findAtIndex in H_find.", "induction xs as [| x' xs' IHxs].", "-", "inversion H_in.", "-", "destruct (Nat.eqb (eIndex x') i) eqn:Heq_index.", "+", "congruence.", "+", "apply IHxs.", "*", "simpl in H_sorted.", "destruct H_sorted as [H_index_gt H_term_ge]."], "tactic": "*", "exn": "Wrong bullet *: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros xs i x H_sorted H_find H_in.", "unfold findAtIndex, findAtIndex in H_find.", "induction xs as [| x' xs' IHxs].", "-", "inversion H_in.", "-", "destruct (Nat.eqb (eIndex x') i) eqn:Heq_index.", "+", "congruence.", "+", "apply IHxs.", "*", "simpl in H_sorted.", "destruct H_sorted as [H_index_gt H_term_ge].", "shelve.", "*"], "tactic": "*", "exn": "Wrong bullet *: Current bullet * is not finished.", "type": "unfinished_bullet", "handled": true}]}, "chat": [], "original": "intros xs i x H_sorted H_find H_in. unfold findAtIndex, findAtIndex in H_find. induction xs as [| x' xs' IHxs]. - intros. inversion H_in. - destruct (Nat.eqb (eIndex x') i) eqn:Heq_index. + intros. congruence. + apply IHxs. * simpl in H_sorted. destruct H_sorted as [H_index_gt H_term_ge]. apply H_term_ge in H_in. lia. * intros. apply H_in. now constructor 2. * congruence.", "succ": true}]