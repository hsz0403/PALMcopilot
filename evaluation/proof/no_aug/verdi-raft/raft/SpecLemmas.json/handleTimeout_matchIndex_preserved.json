[{"history": {"proof": "intros h st out st' ps H. unfold handleTimeout in H. destruct (type st) eqn:H_type. - inversion H. sfirstorder depth: 3. - remember (tryToBecomeLeader h st) as res eqn:H_res. symmetry in H_res. destruct res as [[out' st''] ps'] eqn:Heq. fcrush depth: 3. - hauto lq: on depth: 3.", "repairs": ["", "", "", "", "", "hammer", "", "", "", "", "hammer", "", "hammer"], "exceptions": [{"ctx": ["intros h st out st' ps H.", "unfold handleTimeout in H.", "destruct (type st) eqn:H_type.", "-", "inversion H."], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}]}, "chat": [], "original": "intros h st out st' ps H. unfold handleTimeout in H. destruct (type st) eqn:H_type. - inversion H. apply handleTimeout_lastApplied in H. rewrite H. apply matchIndex_preserved; auto. - remember (tryToBecomeLeader h st) as res eqn:H_res. symmetry in H_res. destruct res as [[out' st''] ps'] eqn:Heq. + apply tryToBecomeLeader_currentTerm in Heq. apply tryToBecomeLeader_stateMachine in Heq. apply tryToBecomeLeader_same_log in Heq. inversion H. subst. apply handleTimeout_lastApplied in H. rewrite H. apply matchIndex_preserved; auto. + inversion H.", "succ": true}]