[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros."], "tactic": "handleAppendEntries_log_ind H P H0 H1 H2.", "exn": "The reference handleAppendEntries_log_ind was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros.", "unfold handleAppendEntries in H.", "simpl in H.", "destruct (t <? currentTerm st) eqn:Ht.", "-", "inversion H."], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros.", "unfold handleAppendEntries in H.", "simpl in H.", "destruct (t <? currentTerm st) eqn:Ht.", "-", "inversion H.", "shelve.", "-", "destruct (pli =? 0) eqn:Hp.", "+"], "tactic": "apply H0.", "exn": "The reference H0 was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros.", "unfold handleAppendEntries in H.", "simpl in H.", "destruct (t <? currentTerm st) eqn:Ht.", "-", "inversion H.", "shelve.", "-", "destruct (pli =? 0) eqn:Hp.", "+", "apply Decidable.dec_not_not."], "tactic": "+", "exn": "Wrong bullet +: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros.", "unfold handleAppendEntries in H.", "simpl in H.", "destruct (t <? currentTerm st) eqn:Ht.", "-", "inversion H.", "shelve.", "-", "destruct (pli =? 0) eqn:Hp.", "+", "apply Decidable.dec_not_not.", "*", "shelve.", "*", "shelve.", "+"], "tactic": "apply H1.", "exn": "The reference H1 was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros.", "unfold handleAppendEntries in H.", "simpl in H.", "destruct (t <? currentTerm st) eqn:Ht.", "-", "inversion H.", "shelve.", "-", "destruct (pli =? 0) eqn:Hp.", "+", "apply Decidable.dec_not_not.", "*", "shelve.", "*", "shelve.", "+", "apply Decidable.dec_not_not.", "*"], "tactic": "apply H2.", "exn": "The reference H2 was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros.", "unfold handleAppendEntries in H.", "simpl in H.", "destruct (t <? currentTerm st) eqn:Ht.", "-", "inversion H.", "shelve.", "-", "destruct (pli =? 0) eqn:Hp.", "+", "apply Decidable.dec_not_not.", "*", "shelve.", "*", "shelve.", "+", "apply Decidable.dec_not_not.", "*", "apply Decidable.dec_not_not.", "++"], "tactic": "++", "exn": "Wrong bullet ++: Current bullet ++ is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros.", "unfold handleAppendEntries in H.", "simpl in H.", "destruct (t <? currentTerm st) eqn:Ht.", "-", "inversion H.", "shelve.", "-", "destruct (pli =? 0) eqn:Hp.", "+", "apply Decidable.dec_not_not.", "*", "shelve.", "*", "shelve.", "+", "apply Decidable.dec_not_not.", "*", "apply Decidable.dec_not_not.", "++", "shelve.", "++"], "tactic": "++", "exn": "Wrong bullet ++: Current bullet ++ is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros.", "unfold handleAppendEntries in H.", "simpl in H.", "destruct (t <? currentTerm st) eqn:Ht.", "-", "inversion H.", "shelve.", "-", "destruct (pli =? 0) eqn:Hp.", "+", "apply Decidable.dec_not_not.", "*", "shelve.", "*", "shelve.", "+", "apply Decidable.dec_not_not.", "*", "apply Decidable.dec_not_not.", "++", "shelve.", "++", "shelve."], "tactic": "++", "exn": "Wrong bullet ++: Expecting *.", "type": "wrong_bullet", "handled": true}, {"ctx": ["intros.", "unfold handleAppendEntries in H.", "simpl in H.", "destruct (t <? currentTerm st) eqn:Ht.", "-", "inversion H.", "shelve.", "-", "destruct (pli =? 0) eqn:Hp.", "+", "apply Decidable.dec_not_not.", "*", "shelve.", "*", "shelve.", "+", "apply Decidable.dec_not_not.", "*", "apply Decidable.dec_not_not.", "++", "shelve.", "++", "shelve.", "*", "intros."], "tactic": "apply H2.", "exn": "The reference H2 was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros.", "unfold handleAppendEntries in H.", "simpl in H.", "destruct (t <? currentTerm st) eqn:Ht.", "-", "inversion H.", "shelve.", "-", "destruct (pli =? 0) eqn:Hp.", "+", "apply Decidable.dec_not_not.", "*", "shelve.", "*", "shelve.", "+", "apply Decidable.dec_not_not.", "*", "apply Decidable.dec_not_not.", "++", "shelve.", "++", "shelve.", "*", "intros.", "apply Decidable.dec_not_not.", "**"], "tactic": "**", "exn": "Wrong bullet **: Current bullet ** is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros.", "unfold handleAppendEntries in H.", "simpl in H.", "destruct (t <? currentTerm st) eqn:Ht.", "-", "inversion H.", "shelve.", "-", "destruct (pli =? 0) eqn:Hp.", "+", "apply Decidable.dec_not_not.", "*", "shelve.", "*", "shelve.", "+", "apply Decidable.dec_not_not.", "*", "apply Decidable.dec_not_not.", "++", "shelve.", "++", "shelve.", "*", "intros.", "apply Decidable.dec_not_not.", "**", "shelve.", "**"], "tactic": "**", "exn": "Wrong bullet **: Current bullet ** is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros.", "unfold handleAppendEntries in H.", "simpl in H.", "destruct (t <? currentTerm st) eqn:Ht.", "-", "inversion H.", "shelve.", "-", "destruct (pli =? 0) eqn:Hp.", "+", "apply Decidable.dec_not_not.", "*", "shelve.", "*", "shelve.", "+", "apply Decidable.dec_not_not.", "*", "apply Decidable.dec_not_not.", "++", "shelve.", "++", "shelve.", "*", "intros.", "apply Decidable.dec_not_not.", "**", "shelve.", "**", "shelve."], "tactic": "**", "exn": "Wrong bullet **: No more subgoals.", "type": "no_more_subgoals", "handled": true}]}, "chat": [], "original": "intros. intros. intros. intros. intros. intros. intros. intros. intros. handleAppendEntries_log_ind H P H0 H1 H2. unfold handleAppendEntries in H. simpl in H. destruct (t <? currentTerm st) eqn:Ht. - inversion H. - destruct (pli =? 0) eqn:Hp. + apply H0. rewrite Hp in H. simpl in H. injection H as H3 H4. subst. auto. + apply H1. * intros. apply H2. ++ auto. ++ auto. ++ intros. apply H2. ** auto. ** auto. ** auto. ** auto. * right. constructor. split. ++ split; try auto. ++ split; try auto. ** split; try auto. ++ split; try auto. ++ right. split; try auto.", "succ": false}]