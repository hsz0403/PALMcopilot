[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros X H.", "induction H.", "-", "exists 0.", "split.", "+"], "tactic": "intros n H'.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}, {"ctx": ["intros X H.", "induction H.", "-", "exists 0.", "split.", "+"], "tactic": "+", "exn": "Wrong bullet +: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros X H.", "induction H.", "-", "exists 0.", "split.", "+", "shelve.", "+"], "tactic": ["intros n' [_ H'].", ""], "exn": "Expects a disjunctive pattern with 2 branches.", "type": "num_branch", "handled": false}, {"ctx": ["intros X H.", "induction H.", "-", "exists 0.", "split.", "+", "shelve.", "+"], "tactic": "-", "exn": "Wrong bullet -: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}]}, "chat": [], "original": "intros X H. induction H. - exists 0. split. + intros n H'. inversion H'. + intros n' [_ H']. inversion H'. - destruct IHFiniteT as [n [HN1 HN2]]. destruct HN2 as [HN3 HN4]. exists (S n). split. + intros n' H'. inversion H'; subst. * apply HN3 in H0. rewrite H0. reflexivity. * apply HN1 in H0. inversion H0. + intros n' [H1 H2]. inversion H2; subst. * apply HN4. split. ++ apply HN1. reflexivity. ++ intros contra. destruct contra. +++ subst. apply H1. apply Full_intro. +++ apply H1 in H. contradiction. * apply HN3 in H. rewrite H. reflexivity.", "succ": false}]