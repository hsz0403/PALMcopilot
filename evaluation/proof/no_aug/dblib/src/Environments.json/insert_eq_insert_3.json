[{"history": {"proof": "", "repairs": [], "exceptions": []}, "chat": [], "original": "intros A x1 x2 a1 a2 e1 e2 H Hneq. exists (shift x2 x1), x1, x2. split. - apply insert_eq_insert_2 with (A:=A) in H. auto. - split. + apply insert_eq_insert_2 in H. apply insert_eq_insert_1 in H. auto. + split. * apply insert_eq_insert_2 in H. apply insert_eq_insert_1 in H. auto. * destruct (le_gt_dec x1 (shift x2 x1)) as [Hle | Hgt]. ++ reflexivity. ++ unfold shift. destruct (le_gt_dec x1 x2) as [Hle' | Hgt']. now contradict Hgt. reflexivity.", "succ": false}]