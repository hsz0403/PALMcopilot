[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros a l.", "induction l as [|x xs IH].", "-", "simpl.", "destruct (in_dec Nat.eq_dec a nil).", "+", "reflexivity.", "+"], "tactic": "-", "exn": "Wrong bullet -: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros a l.", "induction l as [|x xs IH].", "-", "simpl.", "destruct (in_dec Nat.eq_dec a nil).", "+", "reflexivity.", "+", "shelve.", "-", "simpl.", "destruct (in_dec Nat.eq_dec a (x :: xs)) as [Hin | Hnin].", "+"], "tactic": "+", "exn": "Wrong bullet +: Current bullet + is not finished.", "type": "unfinished_bullet", "handled": true}]}, "chat": [], "original": "intros a l. induction l as [|x xs IH]. - simpl. destruct (in_dec Nat.eq_dec a nil). + reflexivity. + congruence. - simpl. destruct (in_dec Nat.eq_dec a (x :: xs)) as [Hin | Hnin]. + reflexivity. + apply IH.", "succ": false}]