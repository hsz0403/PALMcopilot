[{"history": {"proof": "", "repairs": [], "exceptions": []}, "chat": [], "original": "apply RepresentableAlternate with (A := equal (natToTerm 1) (Succ (var 0))). - eapply iffSym. apply iffI. + apply RepresentableHalfHelp with (A := equal (natToTerm 1) (Succ (var 0))). * apply RepresentableHelp. * apply RepresentableAlternate. + apply RepresentableHalfHelp with (A := Succ (var 0)). * apply RepresentableHelp. * apply RepresentableAlternate with (A := equal (natToTerm 0) (Succ (Succ (var 0)))). - apply Representable_ext. apply extEqual_trans with (g := (fun x : nat => var (0))). + intros x. auto. + apply RepresentableHelp.", "succ": false}]