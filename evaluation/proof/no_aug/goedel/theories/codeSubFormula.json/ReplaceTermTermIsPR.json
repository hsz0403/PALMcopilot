[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["unfold ReplaceTermTerm, isPR."], "tactic": "intros n f g.", "exn": "No product even after head-reduction.", "type": "no_product", "handled": true}]}, "chat": [], "original": "unfold ReplaceTermTerm, isPR. intros n f g. instantiate (1 := fun k : nat * fol.Term L => match k with | (j, t) => if Nat.eq_dec j 0 then f t else if Nat.eq_dec j 1 then g t else n end). intros [j t]. destruct j. - simpl. reflexivity. - destruct (Nat.eq_dec 0 1). + contradict n0. apply Nat.eq_dec_neq. reflexivity. + reflexivity.", "succ": false}]