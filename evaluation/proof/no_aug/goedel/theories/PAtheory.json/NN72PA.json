[{"history": {"proof": "", "repairs": [], "exceptions": []}, "chat": [], "original": "apply (translateProof PA LNT). intros f Hf. induction f. - apply (pa1 t). - apply (sysWeaken _ _ (LNN2LNT_formula A)). + apply IHf1. + apply IHf2. - apply (sysWeaken _ _ (LNN2LNT_formula A)). + apply IHf. + apply IHf. - apply (sysWeaken _ _ (existH v (LNN2LNT_formula f))). + apply IHf. + apply (sysWeaken _ _ (LNN2LNT_term t)). * apply (translateProof PA LNT). intros n Hn. induction n. + apply (paZeroOrSucc t). + apply (sysWeaken _ _ (LNN2LNT_formula (equal (Succ (var n)) t))). -- apply IHn. -- apply (eqTrans LNT _ _ (Succ (var n))). ++ apply (pa2 (var n) t). ++ apply (eqSym _ _ (Succ (var n))). apply (eqSucc _ _ (var n)). apply eqTrans with (a := var n) (b := t). ** apply eqSym. apply (LNN2LNT_term_subTermInverse t). ** apply eqSym. apply (LNN2LNT_term_subTermInverse (Succ (var n))).", "succ": false}]