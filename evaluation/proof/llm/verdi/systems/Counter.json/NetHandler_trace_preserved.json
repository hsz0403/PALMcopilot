[{"history": {"proof": "unfold NetHandler. intros. sauto qb: on drew: off depth: 3use: minus_diag.", "repairs": ["", "", "hammer"], "exceptions": [{"ctx": ["unfold NetHandler.", "intros."], "tactic": "destruct (pSrc p) as [id|]; destruct (pBody p) as [d'|]; monad_unfold; rewrite outputs_handlers_comm; simpl; auto.", "exn": "d' is already used.", "type": "used_var", "handled": true}, {"ctx": ["unfold NetHandler.", "intros."], "tactic": "destruct (pSrc p) as [id|]; destruct (pBody p) as [d''|]; monad_unfold; rewrite outputs_handlers_comm; simpl; auto.", "exn": "The reference outputs_handlers_comm was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["unfold NetHandler.", "intros.", "destruct (pSrc p) as [id|]; destruct (pBody p) as [d''|]; monad_unfold; rewrite Nat.add_comm; simpl; auto.", "-"], "tactic": "do 2 rewrite add_outputs_nil.", "exn": "The reference add_outputs_nil was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["unfold NetHandler.", "intros.", "destruct (pSrc p) as [id|]; destruct (pBody p) as [d''|]; monad_unfold; rewrite Nat.add_comm; simpl; auto.", "-", "do 2 rewrite cons_is_app."], "tactic": "rewrite getQueues_def; simpl.", "exn": "The reference getQueues_def was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["unfold NetHandler.", "intros.", "destruct (pSrc p) as [id|]; destruct (pBody p) as [d''|]; monad_unfold; rewrite Nat.add_comm; simpl; auto.", "-", "do 2 rewrite cons_is_app.", "rewrite ack_in_flight_to_primary_app; simpl."], "tactic": "rewrite add_outputs_inc_in_flight.", "exn": "The reference add_outputs_inc_in_flight was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["unfold NetHandler.", "intros.", "destruct (pSrc p) as [id|]; destruct (pBody p) as [d''|]; monad_unfold; rewrite Nat.add_comm; simpl; auto.", "-", "do 2 rewrite cons_is_app.", "rewrite ack_in_flight_to_primary_app; simpl.", "rewrite inc_in_flight_to_backup_cons_primary_dst."], "tactic": "rewrite minus_diag.", "exn": "Found no subterm matching \"?M1713 - ?M1713\" in the current goal.", "type": "no_subterm", "handled": true}, {"ctx": ["unfold NetHandler.", "intros.", "destruct (pSrc p) as [id|]; destruct (pBody p) as [d''|]; monad_unfold; rewrite Nat.add_comm; simpl; auto.", "-", "do 2 rewrite cons_is_app.", "rewrite ack_in_flight_to_primary_app; simpl.", "rewrite inc_in_flight_to_backup_cons_primary_dst.", "qsimpl time: 1 use: minus_diag."], "tactic": "rewrite add_0_l.", "exn": "The reference add_0_l was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["unfold NetHandler.", "intros.", "destruct (pSrc p) as [id|]; destruct (pBody p) as [d''|]; monad_unfold; rewrite Nat.add_comm; simpl; auto.", "-", "do 2 rewrite cons_is_app.", "rewrite ack_in_flight_to_primary_app; simpl.", "rewrite inc_in_flight_to_backup_cons_primary_dst.", "qsimpl time: 1 use: minus_diag.", "rewrite Nat.add_0_r."], "tactic": "do 2 rewrite add_trace_outputs_add_in_flight.", "exn": "The reference add_trace_outputs_add_in_flight was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["unfold NetHandler.", "intros.", "destruct (pSrc p) as [id|]; destruct (pBody p) as [d''|]; monad_unfold; rewrite Nat.add_comm; simpl; auto.", "-", "do 2 rewrite cons_is_app.", "rewrite ack_in_flight_to_primary_app; simpl.", "rewrite inc_in_flight_to_backup_cons_primary_dst.", "qsimpl time: 1 use: minus_diag.", "rewrite Nat.add_0_r.", "do 2 rewrite cons_is_app."], "tactic": "do 2 rewrite add_trace_outputs_ack_in_flight.", "exn": "The reference add_trace_outputs_ack_in_flight was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["unfold NetHandler.", "intros.", "destruct (pSrc p) as [id|]; destruct (pBody p) as [d''|]; monad_unfold; rewrite Nat.add_comm; simpl; auto.", "-", "do 2 rewrite cons_is_app.", "rewrite ack_in_flight_to_primary_app; simpl.", "rewrite inc_in_flight_to_backup_cons_primary_dst.", "qsimpl time: 1 use: minus_diag.", "rewrite Nat.add_0_r.", "do 2 rewrite cons_is_app.", "do 2 rewrite ack_in_flight_to_primary_app."], "tactic": "rewrite add_trace_outputs_inc_in_flight.", "exn": "The reference add_trace_outputs_inc_in_flight was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["unfold NetHandler.", "intros.", "destruct (pSrc p) as [id|]; destruct (pBody p) as [d''|]; monad_unfold; rewrite Nat.add_comm; simpl; auto.", "-", "do 2 rewrite cons_is_app.", "rewrite ack_in_flight_to_primary_app; simpl.", "rewrite inc_in_flight_to_backup_cons_primary_dst.", "qsimpl time: 1 use: minus_diag.", "rewrite Nat.add_0_r.", "do 2 rewrite cons_is_app.", "do 2 rewrite ack_in_flight_to_primary_app.", "rewrite ack_in_flight_to_primary_backup."], "tactic": "do 2 rewrite add_trace_outputs_ack_in_flight.", "exn": "The reference add_trace_outputs_ack_in_flight was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["unfold NetHandler.", "intros.", "destruct (pSrc p) as [id|]; destruct (pBody p) as [d''|]; monad_unfold; rewrite Nat.add_comm; simpl; auto.", "-", "do 2 rewrite cons_is_app.", "rewrite ack_in_flight_to_primary_app; simpl.", "rewrite inc_in_flight_to_backup_cons_primary_dst.", "qsimpl time: 1 use: minus_diag.", "rewrite Nat.add_0_r.", "do 2 rewrite cons_is_app.", "do 2 rewrite ack_in_flight_to_primary_app.", "rewrite ack_in_flight_to_primary_backup."], "tactic": "do 2 rewrite add_trace_outputs_inc_in_flight.", "exn": "The reference add_trace_outputs_inc_in_flight was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["unfold NetHandler.", "intros.", "destruct (pSrc p) as [id|]; destruct (pBody p) as [d''|]; monad_unfold; rewrite Nat.add_comm; simpl; auto.", "-", "do 2 rewrite cons_is_app.", "rewrite ack_in_flight_to_primary_app; simpl.", "rewrite inc_in_flight_to_backup_cons_primary_dst.", "qsimpl time: 1 use: minus_diag.", "rewrite Nat.add_0_r.", "do 2 rewrite cons_is_app.", "do 2 rewrite ack_in_flight_to_primary_app.", "rewrite ack_in_flight_to_primary_backup."], "tactic": "apply filter_fun_ext; auto.", "exn": "The reference filter_fun_ext was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["unfold NetHandler.", "intros.", "destruct (pSrc p) as [id|]; destruct (pBody p) as [d''|]; monad_unfold; rewrite Nat.add_comm; simpl; auto.", "-", "do 2 rewrite cons_is_app.", "rewrite ack_in_flight_to_primary_app; simpl.", "rewrite inc_in_flight_to_backup_cons_primary_dst.", "qsimpl time: 1 use: minus_diag.", "rewrite Nat.add_0_r.", "do 2 rewrite cons_is_app.", "do 2 rewrite ack_in_flight_to_primary_app.", "rewrite ack_in_flight_to_primary_backup.", "apply Nat.add_sub_eq_nz; auto."], "tactic": "rewrite get_set_eq; auto.", "exn": "The reference get_set_eq was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["unfold NetHandler.", "intros.", "destruct (pSrc p) as [id|]; destruct (pBody p) as [d''|]; monad_unfold; rewrite Nat.add_comm; simpl; auto.", "-", "do 2 rewrite cons_is_app.", "rewrite ack_in_flight_to_primary_app; simpl.", "rewrite inc_in_flight_to_backup_cons_primary_dst.", "qsimpl time: 1 use: minus_diag.", "rewrite Nat.add_0_r.", "do 2 rewrite cons_is_app.", "do 2 rewrite ack_in_flight_to_primary_app.", "rewrite ack_in_flight_to_primary_backup.", "apply Nat.add_sub_eq_nz; auto.", "rewrite Nat.double_induction; auto."], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["unfold NetHandler.", "intros.", "destruct (pSrc p) as [id|]; destruct (pBody p) as [d''|]; monad_unfold; rewrite Nat.add_comm; simpl; auto.", "-", "do 2 rewrite cons_is_app.", "rewrite ack_in_flight_to_primary_app; simpl.", "rewrite inc_in_flight_to_backup_cons_primary_dst.", "qsimpl time: 1 use: minus_diag.", "rewrite Nat.add_0_r.", "do 2 rewrite cons_is_app.", "do 2 rewrite ack_in_flight_to_primary_app.", "rewrite ack_in_flight_to_primary_backup.", "apply Nat.add_sub_eq_nz; auto.", "rewrite Nat.double_induction; auto.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "-"], "tactic": "do 2 rewrite add_outputs_nil.", "exn": "The reference add_outputs_nil was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["unfold NetHandler.", "intros.", "destruct (pSrc p) as [id|]; destruct (pBody p) as [d''|]; monad_unfold; rewrite Nat.add_comm; simpl; auto.", "-", "do 2 rewrite cons_is_app.", "rewrite ack_in_flight_to_primary_app; simpl.", "rewrite inc_in_flight_to_backup_cons_primary_dst.", "qsimpl time: 1 use: minus_diag.", "rewrite Nat.add_0_r.", "do 2 rewrite cons_is_app.", "do 2 rewrite ack_in_flight_to_primary_app.", "rewrite ack_in_flight_to_primary_backup.", "apply Nat.add_sub_eq_nz; auto.", "rewrite Nat.double_induction; auto.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "-", "do 2 rewrite cons_is_app."], "tactic": "rewrite getQueues_def; simpl.", "exn": "The reference getQueues_def was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["unfold NetHandler.", "intros.", "destruct (pSrc p) as [id|]; destruct (pBody p) as [d''|]; monad_unfold; rewrite Nat.add_comm; simpl; auto.", "-", "do 2 rewrite cons_is_app.", "rewrite ack_in_flight_to_primary_app; simpl.", "rewrite inc_in_flight_to_backup_cons_primary_dst.", "qsimpl time: 1 use: minus_diag.", "rewrite Nat.add_0_r.", "do 2 rewrite cons_is_app.", "do 2 rewrite ack_in_flight_to_primary_app.", "rewrite ack_in_flight_to_primary_backup.", "apply Nat.add_sub_eq_nz; auto.", "rewrite Nat.double_induction; auto.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "-", "do 2 rewrite cons_is_app.", "rewrite ack_in_flight_to_primary_app; simpl."], "tactic": "rewrite add_outputs_inc_in_flight.", "exn": "The reference add_outputs_inc_in_flight was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["unfold NetHandler.", "intros.", "destruct (pSrc p) as [id|]; destruct (pBody p) as [d''|]; monad_unfold; rewrite Nat.add_comm; simpl; auto.", "-", "do 2 rewrite cons_is_app.", "rewrite ack_in_flight_to_primary_app; simpl.", "rewrite inc_in_flight_to_backup_cons_primary_dst.", "qsimpl time: 1 use: minus_diag.", "rewrite Nat.add_0_r.", "do 2 rewrite cons_is_app.", "do 2 rewrite ack_in_flight_to_primary_app.", "rewrite ack_in_flight_to_primary_backup.", "apply Nat.add_sub_eq_nz; auto.", "rewrite Nat.double_induction; auto.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "-", "do 2 rewrite cons_is_app.", "rewrite ack_in_flight_to_primary_app; simpl.", "rewrite inc_in_flight_to_backup_cons_primary_dst."], "tactic": "rewrite minus_diag.", "exn": "Found no subterm matching \"?M2737 - ?M2737\" in the current goal.", "type": "no_subterm", "handled": true}, {"ctx": ["unfold NetHandler.", "intros.", "destruct (pSrc p) as [id|]; destruct (pBody p) as [d''|]; monad_unfold; rewrite Nat.add_comm; simpl; auto.", "-", "do 2 rewrite cons_is_app.", "rewrite ack_in_flight_to_primary_app; simpl.", "rewrite inc_in_flight_to_backup_cons_primary_dst.", "qsimpl time: 1 use: minus_diag.", "rewrite Nat.add_0_r.", "do 2 rewrite cons_is_app.", "do 2 rewrite ack_in_flight_to_primary_app.", "rewrite ack_in_flight_to_primary_backup.", "apply Nat.add_sub_eq_nz; auto.", "rewrite Nat.double_induction; auto.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "-", "do 2 rewrite cons_is_app.", "rewrite ack_in_flight_to_primary_app; simpl.", "rewrite inc_in_flight_to_backup_cons_primary_dst.", "qsimpl time: 1 use: minus_diag."], "tactic": "rewrite add_0_l.", "exn": "The reference add_0_l was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["unfold NetHandler.", "intros.", "destruct (pSrc p) as [id|]; destruct (pBody p) as [d''|]; monad_unfold; rewrite Nat.add_comm; simpl; auto.", "-", "do 2 rewrite cons_is_app.", "rewrite ack_in_flight_to_primary_app; simpl.", "rewrite inc_in_flight_to_backup_cons_primary_dst.", "qsimpl time: 1 use: minus_diag.", "rewrite Nat.add_0_r.", "do 2 rewrite cons_is_app.", "do 2 rewrite ack_in_flight_to_primary_app.", "rewrite ack_in_flight_to_primary_backup.", "apply Nat.add_sub_eq_nz; auto.", "rewrite Nat.double_induction; auto.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "-", "do 2 rewrite cons_is_app.", "rewrite ack_in_flight_to_primary_app; simpl.", "rewrite inc_in_flight_to_backup_cons_primary_dst.", "qsimpl time: 1 use: minus_diag.", "rewrite Nat.add_0_r."], "tactic": "do 2 rewrite add_trace_outputs_add_in_flight.", "exn": "The reference add_trace_outputs_add_in_flight was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["unfold NetHandler.", "intros.", "destruct (pSrc p) as [id|]; destruct (pBody p) as [d''|]; monad_unfold; rewrite Nat.add_comm; simpl; auto.", "-", "do 2 rewrite cons_is_app.", "rewrite ack_in_flight_to_primary_app; simpl.", "rewrite inc_in_flight_to_backup_cons_primary_dst.", "qsimpl time: 1 use: minus_diag.", "rewrite Nat.add_0_r.", "do 2 rewrite cons_is_app.", "do 2 rewrite ack_in_flight_to_primary_app.", "rewrite ack_in_flight_to_primary_backup.", "apply Nat.add_sub_eq_nz; auto.", "rewrite Nat.double_induction; auto.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "-", "do 2 rewrite cons_is_app.", "rewrite ack_in_flight_to_primary_app; simpl.", "rewrite inc_in_flight_to_backup_cons_primary_dst.", "qsimpl time: 1 use: minus_diag.", "rewrite Nat.add_0_r.", "do 2 rewrite cons_is_app."], "tactic": "do 2 rewrite add_trace_outputs_ack_in_flight.", "exn": "The reference add_trace_outputs_ack_in_flight was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["unfold NetHandler.", "intros.", "destruct (pSrc p) as [id|]; destruct (pBody p) as [d''|]; monad_unfold; rewrite Nat.add_comm; simpl; auto.", "-", "do 2 rewrite cons_is_app.", "rewrite ack_in_flight_to_primary_app; simpl.", "rewrite inc_in_flight_to_backup_cons_primary_dst.", "qsimpl time: 1 use: minus_diag.", "rewrite Nat.add_0_r.", "do 2 rewrite cons_is_app.", "do 2 rewrite ack_in_flight_to_primary_app.", "rewrite ack_in_flight_to_primary_backup.", "apply Nat.add_sub_eq_nz; auto.", "rewrite Nat.double_induction; auto.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "-", "do 2 rewrite cons_is_app.", "rewrite ack_in_flight_to_primary_app; simpl.", "rewrite inc_in_flight_to_backup_cons_primary_dst.", "qsimpl time: 1 use: minus_diag.", "rewrite Nat.add_0_r.", "do 2 rewrite cons_is_app.", "do 2 rewrite ack_in_flight_to_primary_app."], "tactic": "rewrite add_trace_outputs_inc_in_flight.", "exn": "The reference add_trace_outputs_inc_in_flight was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["unfold NetHandler.", "intros.", "destruct (pSrc p) as [id|]; destruct (pBody p) as [d''|]; monad_unfold; rewrite Nat.add_comm; simpl; auto.", "-", "do 2 rewrite cons_is_app.", "rewrite ack_in_flight_to_primary_app; simpl.", "rewrite inc_in_flight_to_backup_cons_primary_dst.", "qsimpl time: 1 use: minus_diag.", "rewrite Nat.add_0_r.", "do 2 rewrite cons_is_app.", "do 2 rewrite ack_in_flight_to_primary_app.", "rewrite ack_in_flight_to_primary_backup.", "apply Nat.add_sub_eq_nz; auto.", "rewrite Nat.double_induction; auto.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "-", "do 2 rewrite cons_is_app.", "rewrite ack_in_flight_to_primary_app; simpl.", "rewrite inc_in_flight_to_backup_cons_primary_dst.", "qsimpl time: 1 use: minus_diag.", "rewrite Nat.add_0_r.", "do 2 rewrite cons_is_app.", "do 2 rewrite ack_in_flight_to_primary_app.", "rewrite ack_in_flight_to_primary_backup."], "tactic": "do 2 rewrite add_trace_outputs_ack_in_flight.", "exn": "The reference add_trace_outputs_ack_in_flight was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["unfold NetHandler.", "intros.", "destruct (pSrc p) as [id|]; destruct (pBody p) as [d''|]; monad_unfold; rewrite Nat.add_comm; simpl; auto.", "-", "do 2 rewrite cons_is_app.", "rewrite ack_in_flight_to_primary_app; simpl.", "rewrite inc_in_flight_to_backup_cons_primary_dst.", "qsimpl time: 1 use: minus_diag.", "rewrite Nat.add_0_r.", "do 2 rewrite cons_is_app.", "do 2 rewrite ack_in_flight_to_primary_app.", "rewrite ack_in_flight_to_primary_backup.", "apply Nat.add_sub_eq_nz; auto.", "rewrite Nat.double_induction; auto.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "-", "do 2 rewrite cons_is_app.", "rewrite ack_in_flight_to_primary_app; simpl.", "rewrite inc_in_flight_to_backup_cons_primary_dst.", "qsimpl time: 1 use: minus_diag.", "rewrite Nat.add_0_r.", "do 2 rewrite cons_is_app.", "do 2 rewrite ack_in_flight_to_primary_app.", "rewrite ack_in_flight_to_primary_backup."], "tactic": "do 2 rewrite add_trace_outputs_inc_in_flight.", "exn": "The reference add_trace_outputs_inc_in_flight was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["unfold NetHandler.", "intros.", "destruct (pSrc p) as [id|]; destruct (pBody p) as [d''|]; monad_unfold; rewrite Nat.add_comm; simpl; auto.", "-", "do 2 rewrite cons_is_app.", "rewrite ack_in_flight_to_primary_app; simpl.", "rewrite inc_in_flight_to_backup_cons_primary_dst.", "qsimpl time: 1 use: minus_diag.", "rewrite Nat.add_0_r.", "do 2 rewrite cons_is_app.", "do 2 rewrite ack_in_flight_to_primary_app.", "rewrite ack_in_flight_to_primary_backup.", "apply Nat.add_sub_eq_nz; auto.", "rewrite Nat.double_induction; auto.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "-", "do 2 rewrite cons_is_app.", "rewrite ack_in_flight_to_primary_app; simpl.", "rewrite inc_in_flight_to_backup_cons_primary_dst.", "qsimpl time: 1 use: minus_diag.", "rewrite Nat.add_0_r.", "do 2 rewrite cons_is_app.", "do 2 rewrite ack_in_flight_to_primary_app.", "rewrite ack_in_flight_to_primary_backup."], "tactic": "apply filter_fun_ext; auto.", "exn": "The reference filter_fun_ext was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["unfold NetHandler.", "intros.", "destruct (pSrc p) as [id|]; destruct (pBody p) as [d''|]; monad_unfold; rewrite Nat.add_comm; simpl; auto.", "-", "do 2 rewrite cons_is_app.", "rewrite ack_in_flight_to_primary_app; simpl.", "rewrite inc_in_flight_to_backup_cons_primary_dst.", "qsimpl time: 1 use: minus_diag.", "rewrite Nat.add_0_r.", "do 2 rewrite cons_is_app.", "do 2 rewrite ack_in_flight_to_primary_app.", "rewrite ack_in_flight_to_primary_backup.", "apply Nat.add_sub_eq_nz; auto.", "rewrite Nat.double_induction; auto.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "+", "shelve.", "-", "do 2 rewrite cons_is_app.", "rewrite ack_in_flight_to_primary_app; simpl.", "rewrite inc_in_flight_to_backup_cons_primary_dst.", "qsimpl time: 1 use: minus_diag.", "rewrite Nat.add_0_r.", "do 2 rewrite cons_is_app.", "do 2 rewrite ack_in_flight_to_primary_app.", "rewrite ack_in_flight_to_primary_backup.", "apply Nat.add_sub_eq_nz; auto."], "tactic": "rewrite get_set_eq; auto.", "exn": "The reference get_set_eq was not found in the current environment.", "type": "ref_not_found", "handled": true}]}, "chat": [], "original": "unfold NetHandler. intros. destruct (pSrc p) as [id|]; destruct (pBody p) as [d'|]; monad_unfold; rewrite outputs_handlers_comm; simpl; auto. - do 2 rewrite add_outputs_nil. rewrite getQueues_def; simpl. repeat rewrite add_outputs_add_in_flight. repeat rewrite add_outputs_ack_in_flight. rewrite add_outputs_inc_in_flight. repeat rewrite add_outputs_ack_in_flight. repeat rewrite add_outputs_inc_in_flight. repeat rewrite add_outputs_nil. rewrite minus_diag. rewrite add_0_l. do 2 rewrite add_trace_outputs_add_in_flight. do 2 rewrite add_trace_outputs_ack_in_flight. rewrite add_trace_outputs_inc_in_flight. do 2 rewrite add_trace_outputs_ack_in_flight. do 2 rewrite add_trace_outputs_inc_in_flight. do 3 f_equal. apply filter_fun_ext; auto. intros. rewrite get_set_eq; auto. - do 2 rewrite add_outputs_nil. rewrite getQueues_def; simpl. repeat rewrite add_outputs_add_in_flight. repeat rewrite add_outputs_ack_in_flight. rewrite add_outputs_inc_in_flight. repeat rewrite add_outputs_ack_in_flight. repeat rewrite add_outputs_inc_in_flight. repeat rewrite add_outputs_nil. rewrite minus_diag. rewrite add_0_l. do 2 rewrite add_trace_outputs_add_in_flight. do 2 rewrite add_trace_outputs_ack_in_flight. rewrite add_trace_outputs_inc_in_flight. do 2 rewrite add_trace_outputs_ack_in_flight. do 2 rewrite add_trace_outputs_inc_in_flight. do 3 f_equal. apply filter_fun_ext; auto. intros. rewrite get_set_eq; auto.", "hammer_times": 2, "succ": true}]