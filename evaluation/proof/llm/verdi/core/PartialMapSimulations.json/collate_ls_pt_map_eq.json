[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["elim => //=.", "move => n ns IH f h m m'."], "tactic": "rewrite /tot_map_name_inv !update_in2.", "exn": "The reference update_in2 was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["elim => //=.", "move => n ns IH f h m m'."], "tactic": "case name_eq_dec => H.", "exn": "Unable to find an instance for the variables x, y.", "type": "no_instance_var", "handled": true}, {"ctx": ["elim => //=.", "move => n ns IH f h m m'.", "qsimpl time: 1 use: name_eq_dec."], "tactic": "rewrite /tot_map_name_inv /= /update /= ; case name_eq_dec.", "exn": "Unable to find an instance for the variables x, y.", "type": "no_instance_var", "handled": true}]}, "chat": [], "original": "elim => //=. move => n ns IH f h m m'. rewrite /tot_map_name_inv !update_in2. case name_eq_dec => H. rewrite /tot_map_name_inv /= /update /= ; case name_eq_dec. move => _ ; case => ->. case => ->. rewrite !H /=. elim : ns f => //=. move => n' ns IH1 f m1 m2. by rewrite -IH1. move => H' Hf. case => D. rewrite /tot_map_name_inv /= /update /= ; case name_eq_dec => //=. move => D' ; subst. case => ->. rewrite D' in H. inv H. elim : ns f => //=. move => n' ns IH1 f m1 m2. rewrite -IH1. move : (IH1 (f n' n) m1 m2 Hf) => <-. rewrite IH. rewrite IH1. by []. move => H' Hf. case => D. rewrite /tot_map_name_inv /= /update /= ; case name_eq_dec => //=. move => D' ; subst. rewrite D' in H. inv H. rewrite -IH. move : (IH _ _ _ Hf) => <-. by rewrite IH. move => _ ; case => ->. elim : ns f => //=. move => n' ns IH1 f m1 m2. rewrite -IH1. move : (IH1 (f n' n) m1 m2 Hf) => <-. rewrite IH. rewrite IH1. by []. move => H' Hf. case => D. rewrite /tot_map_name_inv /= /update /= ; case name_eq_dec => //=. move => D' ; subst. rewrite D' in H. inv H. rewrite -IH. move : (IH _ _ _ Hf) => <-. by rewrite IH. move => _ ; case => ->. elim : ns f => //=. move => n' ns IH1 f m1 m2. rewrite -IH1. move : (IH1 (f n' n) m1 m2 Hf) => <-. rewrite IH. rewrite IH1. by []. move => H' Hf. case => D. rewrite /tot_map_name_inv /= /update /= ; case name_eq_dec => //=. move => D' ; subst. rewrite D' in H. inv H. rewrite -IH. move : (IH _ _ _ Hf) => <-. by rewrite IH. move => _ ; case => ->.", "hammer_times": 3, "succ": false}]