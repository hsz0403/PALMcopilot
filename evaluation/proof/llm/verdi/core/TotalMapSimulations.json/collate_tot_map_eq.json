[{"history": {"proof": "", "repairs": [], "exceptions": [{"ctx": ["intros.", "apply functional_extensionality; intro src.", "apply functional_extensionality; intro dst."], "tactic": "unfold map_f.", "exn": "The reference map_f was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros.", "apply functional_extensionality; intro src.", "apply functional_extensionality; intro dst.", "unfold map.", "elim (name_eq_dec h (tot_map_name_inv dst)); intro H_name_eq.", "-"], "tactic": "rewrite tot_map_name_inv_inverse.", "exn": "The LHS of tot_map_name_inv_inverse (tot_map_name_inv (tot_map_name _)) does not match any subterm of the goal", "type": "no_match_term", "handled": true}, {"ctx": ["intros.", "apply functional_extensionality; intro src.", "apply functional_extensionality; intro dst.", "unfold map.", "elim (name_eq_dec h (tot_map_name_inv dst)); intro H_name_eq.", "-", "qsimpl time: 1 use: tot_map_name_inv_inverse."], "tactic": "rewrite H_name_eq.", "exn": "The reference H_name_eq was not found in the current environment.", "type": "ref_not_found", "handled": true}, {"ctx": ["intros.", "apply functional_extensionality; intro src.", "apply functional_extensionality; intro dst.", "unfold map.", "elim (name_eq_dec h (tot_map_name_inv dst)); intro H_name_eq.", "-", "qsimpl time: 1 use: tot_map_name_inv_inverse.", "rewrite tot_map_name_inverse_inv0."], "tactic": "reflexivity.", "exn": "In environment base_fst, base_snd : BaseParams multi_fst : MultiParams base_fst multi_snd : MultiParams base_snd name_map : MultiParamsNameTotalMap multi_fst multi_snd H : forall n : name, tot_map_name_inv (tot_map_name n) = n base_map : BaseParamsTotalMap base_fst base_snd msg_map : MultiParamsMsgTotalMap multi_fst multi_snd tot_map_output_injective : forall o o' : output, tot_map_output o = tot_map_output o' -> o = o' fail_fst : FailureParams multi_fst fail_snd : FailureParams multi_snd overlay_fst : NameOverlayParams multi_fst overlay_snd : NameOverlayParams multi_snd fail_msg_fst : FailMsgParams multi_fst fail_msg_snd : FailMsgParams multi_snd f : name -> name -> list msg l : list (name * msg) src, dst : name tot_fail_msg_fst_snd0 : msg_fail = tot_map_msg msg_fail tot_reboot_eq0 : forall d : data, tot_map_data (reboot d) = reboot (tot_map_data d) tot_init_handlers_eq0 : forall n : name, tot_map_data (init_handlers n) = init_handlers (tot_map_name n) tot_net_handlers_eq0 : forall (me src : name) (m : msg) (st : data), tot_mapped_net_handlers me src m st = net_handlers (tot_map_name me) (tot_map_name src) (tot_map_msg m) (tot_map_data st) tot_input_handlers_eq0 : forall (me : name) (inp : input) (st : data), tot_mapped_input_handlers me inp st = input_handlers (tot_map_name me) (tot_map_input inp) (tot_map_data st) tot_map_name_inverse_inv0 : forall n : name, tot_map_name (tot_map_name_inv n) = n H0 : forall n n' : name, adjacent_to (tot_map_name n) (tot_map_name n') -> adjacent_to n n' H1 : forall n n' : name, adjacent_to n n' -> adjacent_to (tot_map_name n) (tot_map_name n') Unable to unify \"collate name_eq_dec dst (fun src dst : name => (fix map (l : list msg) : list msg := match l with | [] => [] | a :: t => tot_map_msg a :: map t end) (f (tot_map_name_inv src) (tot_map_name_inv dst))) (tot_map_name_msgs l) src dst\" with \"(fix map (l : list msg) : list msg := match l with | [] => [] | a :: t => tot_map_msg a :: map t end) (collate name_eq_dec (tot_map_name_inv dst) f l (tot_map_name_inv src) (tot_map_name_inv dst))\".", "type": "cannot_unify", "handled": true}, {"ctx": ["intros.", "apply functional_extensionality; intro src.", "apply functional_extensionality; intro dst.", "unfold map.", "elim (name_eq_dec h (tot_map_name_inv dst)); intro H_name_eq.", "-", "qsimpl time: 1 use: tot_map_name_inv_inverse.", "rewrite tot_map_name_inverse_inv0."], "tactic": "-", "exn": "Wrong bullet -: Current bullet - is not finished.", "type": "unfinished_bullet", "handled": true}, {"ctx": ["intros.", "apply functional_extensionality; intro src.", "apply functional_extensionality; intro dst.", "unfold map.", "elim (name_eq_dec h (tot_map_name_inv dst)); intro H_name_eq.", "-", "qsimpl time: 1 use: tot_map_name_inv_inverse.", "rewrite tot_map_name_inverse_inv0.", "shelve.", "-"], "tactic": "destruct (tot_map_name_inv src) eqn:?.", "exn": "Not an inductive product.", "type": "not_inductive_product", "handled": true}, {"ctx": ["intros.", "apply functional_extensionality; intro src.", "apply functional_extensionality; intro dst.", "unfold map.", "elim (name_eq_dec h (tot_map_name_inv dst)); intro H_name_eq.", "-", "qsimpl time: 1 use: tot_map_name_inv_inverse.", "rewrite tot_map_name_inverse_inv0.", "shelve.", "-", "qsimpl time: 1 use: tot_map_name_inv,tot_map_name_inv_inverse."], "tactic": "rewrite tot_map_name_inv_inverse in H_name_eq.", "exn": "The LHS of tot_map_name_inv_inverse (tot_map_name_inv (tot_map_name _)) does not match any subterm of the goal", "type": "no_match_term", "handled": true}, {"ctx": ["intros.", "apply functional_extensionality; intro src.", "apply functional_extensionality; intro dst.", "unfold map.", "elim (name_eq_dec h (tot_map_name_inv dst)); intro H_name_eq.", "-", "qsimpl time: 1 use: tot_map_name_inv_inverse.", "rewrite tot_map_name_inverse_inv0.", "shelve.", "-", "qsimpl time: 1 use: tot_map_name_inv,tot_map_name_inv_inverse.", "qsimpl time: 1 use: tot_map_name_inv,tot_map_name_inv_inverse."], "tactic": "rewrite H_name_eq in Heqn0.", "exn": "No such hypothesis: Heqn0", "type": "no_hypos", "handled": true}]}, "chat": [], "original": "intros. apply functional_extensionality; intro src. apply functional_extensionality; intro dst. simpl. unfold map_f. elim (name_eq_dec h (tot_map_name_inv dst)); intro H_name_eq. - rewrite tot_map_name_inv_inverse. rewrite H_name_eq. reflexivity. - simpl in *. destruct (tot_map_name_inv src) eqn:?. + rewrite tot_map_name_inv_inverse in H_name_eq. rewrite H_name_eq in Heqn0. discriminate. + reflexivity.", "hammer_times": 6, "succ": false}]