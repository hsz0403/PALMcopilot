{"code": ["Require Import List Permutation.", "Set Implicit Arguments.", "Local Infix \"~p\" := (@Permutation _) (at level 70).", "Notation ill_vars := nat.", "Inductive ill_connective := ill_with | ill_limp | ill_times | ill_plus.", "Inductive ill_constant := ill_1 | ill_bot | ill_top.", "Inductive ill_form : Set := | ill_var : ill_vars -> ill_form | ill_cst : ill_constant -> ill_form | ill_ban : ill_form -> ill_form | ill_bin : ill_connective -> ill_form -> ill_form -> ill_form.", "Notation \"\u27d9\" := (ill_cst ill_top).", "Notation \"\u27d8\" := (ill_cst ill_bot).", "Notation \"\ud835\udfd9\" := (ill_cst ill_1).", "Infix \"&\" := (ill_bin ill_with) (at level 50).", "Infix \"\u2297\" := (ill_bin ill_times) (at level 50).", "Infix \"\u2295\" := (ill_bin ill_plus) (at level 50).", "Infix \"\u22b8\" := (ill_bin ill_limp) (at level 51, right associativity).", "Notation \"'!' x\" := (ill_ban x) (at level 52).", "Notation \"\u00a3\" := ill_var.", "Notation \"\u203c x\" := (map ill_ban x) (at level 60).", "Notation \"\u2205\" := nil (only parsing).", "Reserved Notation \"l '\u22a2' x\" (at level 70, no associativity).", "Section S_ill_restr_without_cut.", "Inductive S_ill_restr : list ill_form -> ill_form -> Prop := | in_ill1_ax : forall A, A::\u2205 \u22a2 A | in_ill1_perm : forall \u0393 \u0394 A, \u0393 ~p \u0394 -> \u0393 \u22a2 A (*-----------------------------*) -> \u0394 \u22a2 A | in_ill1_limp_l : forall \u0393 \u0394 A B C, \u0393 \u22a2 A -> B::\u0394 \u22a2 C (*-----------------------------*) -> A \u22b8 B::\u0393++\u0394 \u22a2 C | in_ill1_limp_r : forall \u0393 A B, A::\u0393 \u22a2 B (*-----------------------------*) -> \u0393 \u22a2 A \u22b8 B | in_ill1_with_l1 : forall \u0393 A B C, A::\u0393 \u22a2 C (*-----------------------------*) -> A&B::\u0393 \u22a2 C | in_ill1_with_l2 : forall \u0393 A B C, B::\u0393 \u22a2 C (*-----------------------------*) -> A&B::\u0393 \u22a2 C | in_ill1_with_r : forall \u0393 A B, \u0393 \u22a2 A -> \u0393 \u22a2 B (*-----------------------------*) -> \u0393 \u22a2 A&B | in_ill1_bang_l : forall \u0393 A B, A::\u0393 \u22a2 B (*-----------------------------*) -> !A::\u0393 \u22a2 B | in_ill1_bang_r : forall \u0393 A, \u203c\u0393 \u22a2 A (*-----------------------------*) -> \u203c\u0393 \u22a2 !A | in_ill1_weak : forall \u0393 A B, \u0393 \u22a2 B (*-----------------------------*) -> !A::\u0393 \u22a2 B | in_ill1_cntr : forall \u0393 A B, !A::!A::\u0393 \u22a2 B (*-----------------------------*) -> !A::\u0393 \u22a2 B where \"l \u22a2 x\" := (S_ill_restr l x).", "End S_ill_restr_without_cut.", "Section S_ill_restr_with_cut.", "Inductive S_ill_restr_wc : list ill_form -> ill_form -> Prop := | in_ill2_ax : forall A, A::\u2205 \u22a2 A | in_ill2_cut : forall \u0393 \u0394 A B, \u0393 \u22a2 A -> A::\u0394 \u22a2 B (*-----------------------------*) -> \u0393++\u0394 \u22a2 B | in_ill2_perm : forall \u0393 \u0394 A, \u0393 ~p \u0394 -> \u0393 \u22a2 A (*-----------------------------*) -> \u0394 \u22a2 A | in_ill2_limp_l : forall \u0393 \u0394 A B C, \u0393 \u22a2 A -> B::\u0394 \u22a2 C (*-----------------------------*) -> A \u22b8 B::\u0393++\u0394 \u22a2 C | in_ill2_limp_r : forall \u0393 A B, A::\u0393 \u22a2 B (*-----------------------------*) -> \u0393 \u22a2 A \u22b8 B | in_ill2_with_l1 : forall \u0393 A B C, A::\u0393 \u22a2 C (*-----------------------------*) -> A&B::\u0393 \u22a2 C | in_ill2_with_l2 : forall \u0393 A B C, B::\u0393 \u22a2 C (*-----------------------------*) -> A&B::\u0393 \u22a2 C | in_ill2_with_r : forall \u0393 A B, \u0393 \u22a2 A -> \u0393 \u22a2 B (*-----------------------------*) -> \u0393 \u22a2 A&B | in_ill2_bang_l : forall \u0393 A B, A::\u0393 \u22a2 B (*-----------------------------*) -> !A::\u0393 \u22a2 B | in_ill2_bang_r : forall \u0393 A, \u203c\u0393 \u22a2 A (*-----------------------------*) -> \u203c\u0393 \u22a2 !A | in_ill2_weak : forall \u0393 A B, \u0393 \u22a2 B (*-----------------------------*) -> !A::\u0393 \u22a2 B | in_ill2_cntr : forall \u0393 A B, !A::!A::\u0393 \u22a2 B (*-----------------------------*) -> !A::\u0393 \u22a2 B where \"l \u22a2 x\" := (S_ill_restr_wc l x).", "End S_ill_restr_with_cut.", "Section S_ill_without_cut.", "Inductive S_ill : list ill_form -> ill_form -> Prop := | in_ill3_ax : forall A, A::\u2205 \u22a2 A | in_ill3_perm : forall \u0393 \u0394 A, \u0393 ~p \u0394 -> \u0393 \u22a2 A (*-----------------------------*) -> \u0394 \u22a2 A | in_ill3_limp_l : forall \u0393 \u0394 A B C, \u0393 \u22a2 A -> B::\u0394 \u22a2 C (*-----------------------------*) -> A \u22b8 B::\u0393++\u0394 \u22a2 C | in_ill3_limp_r : forall \u0393 A B, A::\u0393 \u22a2 B (*-----------------------------*) -> \u0393 \u22a2 A \u22b8 B | in_ill3_with_l1 : forall \u0393 A B C, A::\u0393 \u22a2 C (*-----------------------------*) -> A&B::\u0393 \u22a2 C | in_ill3_with_l2 : forall \u0393 A B C, B::\u0393 \u22a2 C (*-----------------------------*) -> A&B::\u0393 \u22a2 C | in_ill3_with_r : forall \u0393 A B, \u0393 \u22a2 A -> \u0393 \u22a2 B (*-----------------------------*) -> \u0393 \u22a2 A&B | in_ill3_bang_l : forall \u0393 A B, A::\u0393 \u22a2 B (*-----------------------------*) -> !A::\u0393 \u22a2 B | in_ill3_bang_r : forall \u0393 A, \u203c\u0393 \u22a2 A (*-----------------------------*) -> \u203c\u0393 \u22a2 !A | in_ill3_weak : forall \u0393 A B, \u0393 \u22a2 B (*-----------------------------*) -> !A::\u0393 \u22a2 B | in_ill3_cntr : forall \u0393 A B, !A::!A::\u0393 \u22a2 B (*-----------------------------*) -> !A::\u0393 \u22a2 B | in_ill3_times_l : forall \u0393 A B C, A::B::\u0393 \u22a2 C (*-----------------------------*) -> A\u2297B::\u0393 \u22a2 C | in_ill3_times_r : forall \u0393 \u0394 A B, \u0393 \u22a2 A -> \u0394 \u22a2 B (*-----------------------------*) -> \u0393++\u0394 \u22a2 A\u2297B | in_ill3_plus_l : forall \u0393 A B C, A::\u0393 \u22a2 C -> B::\u0393 \u22a2 C (*-----------------------------*) -> A\u2295B::\u0393 \u22a2 C | in_ill3_plus_r1 : forall \u0393 A B, \u0393 \u22a2 A (*-----------------------------*) -> \u0393 \u22a2 A\u2295B | in_ill3_plus_r2 : forall \u0393 A B, \u0393 \u22a2 B (*-----------------------------*) -> \u0393 \u22a2 A\u2295B | in_ill3_bot_l : forall \u0393 A, \u27d8::\u0393 \u22a2 A | in_ill3_top_r : forall \u0393, \u0393 \u22a2 \u27d9 | in_ill3_unit_l : forall \u0393 A, \u0393 \u22a2 A (*-----------------------------*) -> \ud835\udfd9::\u0393 \u22a2 A | in_ill3_unit_r : \u2205 \u22a2 \ud835\udfd9 where \"l \u22a2 x\" := (S_ill l x).", "End S_ill_without_cut.", "Section S_ill_with_cut.", "Inductive S_ill_wc : list ill_form -> ill_form -> Prop := | in_ill4_ax : forall A, A::\u2205 \u22a2 A | in_ill4_cut : forall \u0393 \u0394 A B, \u0393 \u22a2 A -> A::\u0394 \u22a2 B (*-----------------------------*) -> \u0393++\u0394 \u22a2 B | in_ill4_perm : forall \u0393 \u0394 A, \u0393 ~p \u0394 -> \u0393 \u22a2 A (*-----------------------------*) -> \u0394 \u22a2 A | in_ill4_limp_l : forall \u0393 \u0394 A B C, \u0393 \u22a2 A -> B::\u0394 \u22a2 C (*-----------------------------*) -> A \u22b8 B::\u0393++\u0394 \u22a2 C | in_ill4_limp_r : forall \u0393 A B, A::\u0393 \u22a2 B (*-----------------------------*) -> \u0393 \u22a2 A \u22b8 B | in_ill4_with_l1 : forall \u0393 A B C, A::\u0393 \u22a2 C (*-----------------------------*) -> A&B::\u0393 \u22a2 C | in_ill4_with_l2 : forall \u0393 A B C, B::\u0393 \u22a2 C (*-----------------------------*) -> A&B::\u0393 \u22a2 C | in_ill4_with_r : forall \u0393 A B, \u0393 \u22a2 A -> \u0393 \u22a2 B (*-----------------------------*) -> \u0393 \u22a2 A&B | in_ill4_bang_l : forall \u0393 A B, A::\u0393 \u22a2 B (*-----------------------------*) -> !A::\u0393 \u22a2 B | in_ill4_bang_r : forall \u0393 A, \u203c\u0393 \u22a2 A (*-----------------------------*) -> \u203c\u0393 \u22a2 !A | in_ill4_weak : forall \u0393 A B, \u0393 \u22a2 B (*-----------------------------*) -> !A::\u0393 \u22a2 B | in_ill4_cntr : forall \u0393 A B, !A::!A::\u0393 \u22a2 B (*-----------------------------*) -> !A::\u0393 \u22a2 B | in_ill4_times_l : forall \u0393 A B C, A::B::\u0393 \u22a2 C (*-----------------------------*) -> A\u2297B::\u0393 \u22a2 C | in_ill4_times_r : forall \u0393 \u0394 A B, \u0393 \u22a2 A -> \u0394 \u22a2 B (*-----------------------------*) -> \u0393++\u0394 \u22a2 A\u2297B | in_ill4_plus_l : forall \u0393 A B C, A::\u0393 \u22a2 C -> B::\u0393 \u22a2 C (*-----------------------------*) -> A\u2295B::\u0393 \u22a2 C | in_ill4_plus_r1 : forall \u0393 A B, \u0393 \u22a2 A (*-----------------------------*) -> \u0393 \u22a2 A\u2295B | in_ill4_plus_r2 : forall \u0393 A B, \u0393 \u22a2 B (*-----------------------------*) -> \u0393 \u22a2 A\u2295B | in_ill4_bot_l : forall \u0393 A, \u27d8::\u0393 \u22a2 A | in_ill4_top_r : forall \u0393, \u0393 \u22a2 \u27d9 | in_ill4_unit_l : forall \u0393 A, \u0393 \u22a2 A (*-----------------------------*) -> \ud835\udfd9::\u0393 \u22a2 A | in_ill4_unit_r : \u2205 \u22a2 \ud835\udfd9 where \"l \u22a2 x\" := (S_ill_wc l x).", "End S_ill_with_cut.", "Definition rILL_cf_PROVABILITY (S : _*_) := let (\u0393,A) := S in S_ill_restr \u0393 A.", "Definition rILL_PROVABILITY (S : _*_) := let (\u0393,A) := S in S_ill_restr_wc \u0393 A.", "Definition ILL_cf_PROVABILITY (S : _*_) := let (\u0393,A) := S in S_ill \u0393 A.", "Definition ILL_PROVABILITY (S : _*_) := let (\u0393,A) := S in S_ill_wc \u0393 A."], "theorems": []}