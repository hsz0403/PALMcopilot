{"code": ["Require Import List.", "Require Import Undecidability.Synthetic.Undecidability.", "From Undecidability.ILL Require Import EILL ILL ill eill.", "Theorem EILL_rILL_cf_PROVABILITY : EILL_PROVABILITY \u2aaf rILL_cf_PROVABILITY.", "Proof.", "exists (fun p => match p with (\u03a3,\u0393,p) => (map (fun c => !\u2991c\u2992) \u03a3 ++ map \u00a3 \u0393,\u00a3 p) end).", "intros ((?&?)&?); apply G_eill_S_ill_restr.", "Qed.", "Theorem EILL_rILL_PROVABILITY : EILL_PROVABILITY \u2aaf rILL_PROVABILITY.", "Proof.", "exists (fun p => match p with (\u03a3,\u0393,p) => (map (fun c => !\u2991c\u2992) \u03a3 ++ map \u00a3 \u0393,\u00a3 p) end).", "intros ((?&?)&?); apply G_eill_S_ill_restr_wc.", "Qed.", "Theorem EILL_ILL_cf_PROVABILITY : EILL_PROVABILITY \u2aaf ILL_cf_PROVABILITY.", "Proof.", "exists (fun p => match p with (\u03a3,\u0393,p) => (map (fun c => !\u2991c\u2992) \u03a3 ++ map \u00a3 \u0393,\u00a3 p) end).", "intros ((?&?)&?); apply G_eill_S_ill.", "Qed.", "Theorem EILL_ILL_PROVABILITY : EILL_PROVABILITY \u2aaf ILL_PROVABILITY.", "Proof.", "exists (fun p => match p with (\u03a3,\u0393,p) => (map (fun c => !\u2991c\u2992) \u03a3 ++ map \u00a3 \u0393,\u00a3 p) end).", "intros ((?&?)&?); apply G_eill_S_ill_wc.", "Qed."], "theorems": [{"name": "EILL_rILL_cf_PROVABILITY", "kind": "Theorem", "begin": 3, "end": 7}, {"name": "EILL_rILL_PROVABILITY", "kind": "Theorem", "begin": 8, "end": 12}, {"name": "EILL_ILL_cf_PROVABILITY", "kind": "Theorem", "begin": 13, "end": 17}, {"name": "EILL_ILL_PROVABILITY", "kind": "Theorem", "begin": 18, "end": 22}]}