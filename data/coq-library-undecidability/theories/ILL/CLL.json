{"code": ["Require Import List Permutation Arith.", "From Undecidability.ILL Require Import ILL.", "Set Implicit Arguments.", "Local Infix \"~p\" := (@Permutation _) (at level 70).", "Inductive cll_connective := cll_with | cll_plus | cll_limp | cll_times | cll_par.", "Inductive cll_constant := cll_1 | cll_0 | cll_bot | cll_top.", "Inductive cll_modality := cll_bang | cll_qmrk | cll_neg.", "Notation cll_vars := nat.", "Inductive cll_form : Set := | cll_var : cll_vars -> cll_form | cll_cst : cll_constant -> cll_form | cll_una : cll_modality -> cll_form -> cll_form | cll_bin : cll_connective -> cll_form -> cll_form -> cll_form.", "Notation \"'\u00a3' x\" := (cll_var x) (at level 1).", "Notation \"\u27d9\" := (cll_cst cll_top).", "Notation \"\u27d8\" := (cll_cst cll_bot).", "Notation \"\ud835\udfd9\" := (cll_cst cll_1).", "Notation \"\ud835\udfd8\" := (cll_cst cll_0).", "Notation \"'\u2296' x\" := (cll_una cll_neg x) (at level 50, format \"\u2296 x\").", "Notation \"'!' x\" := (cll_una cll_bang x) (at level 52).", "Notation \"'\u203d' x\" := (cll_una cll_qmrk x) (at level 52).", "Infix \"&\" := (cll_bin cll_with) (at level 50).", "Infix \"\u214b\" := (cll_bin cll_par) (at level 50).", "Infix \"\u2297\" := (cll_bin cll_times) (at level 50).", "Infix \"\u2295\" := (cll_bin cll_plus) (at level 50).", "Infix \"\u22b8\" := (cll_bin cll_limp) (at level 51, right associativity).", "Notation \"\u203c x\" := (map (cll_una cll_bang) x) (at level 60).", "Notation \"\u2047 x\" := (map (cll_una cll_qmrk) x) (at level 60).", "Notation \"\u2205\" := nil.", "Local Reserved Notation \"\u0393 \u22a2 \u0394\" (at level 70, no associativity).", "Section S_cll_restr_without_cut.", "Inductive S_cll_restr : list cll_form -> list cll_form -> Prop := | in_cll1_ax : forall A, A::\u2205 \u22a2 A::\u2205 | in_cll1_perm : forall \u0393 \u0394 \u0393' \u0394', \u0393 ~p \u0393' -> \u0394 ~p \u0394' -> \u0393 \u22a2 \u0394 (*-----------------------------*) -> \u0393' \u22a2 \u0394' | in_cll1_limp_l : forall \u0393 \u0394 \u0393' \u0394' A B, \u0393 \u22a2 A::\u0394 -> B::\u0393' \u22a2 \u0394' (*-----------------------------*) -> A \u22b8 B::\u0393++\u0393' \u22a2 \u0394++\u0394' | in_cll1_limp_r : forall \u0393 \u0394 A B, A::\u0393 \u22a2 B::\u0394 (*-----------------------------*) -> \u0393 \u22a2 A \u22b8 B::\u0394 | in_cll1_with_l1 : forall \u0393 \u0394 A B, A::\u0393 \u22a2 \u0394 (*-----------------------------*) -> A&B::\u0393 \u22a2 \u0394 | in_cll1_with_l2 : forall \u0393 \u0394 A B, B::\u0393 \u22a2 \u0394 (*-----------------------------*) -> A&B::\u0393 \u22a2 \u0394 | in_cll1_with_r : forall \u0393 \u0394 A B, \u0393 \u22a2 A::\u0394 -> \u0393 \u22a2 B::\u0394 (*-----------------------------*) -> \u0393 \u22a2 A&B::\u0394 | in_cll1_bang_l : forall \u0393 A \u0394, A::\u0393 \u22a2 \u0394 (*-----------------------------*) -> !A::\u0393 \u22a2 \u0394 | in_cll1_bang_r : forall \u0393 A, \u203c\u0393 \u22a2 A::nil (* since ? is absent, only ??\u0394 = nil works *) (*-----------------------------*) -> \u203c\u0393 \u22a2 !A::nil | in_cll1_weak_l : forall \u0393 A \u0394, \u0393 \u22a2 \u0394 (*-----------------------------*) -> !A::\u0393 \u22a2 \u0394 | in_cll1_cntr_l : forall \u0393 A \u0394, !A::!A::\u0393 \u22a2 \u0394 (*-----------------------------*) -> !A::\u0393 \u22a2 \u0394 where \"l \u22a2 m\" := (S_cll_restr l m).", "End S_cll_restr_without_cut.", "Section S_cll_without_cut_on_ill_syntax.", "Inductive S_cll_2 : list cll_form -> list cll_form -> Prop := | in_cll2_ax : forall A, A::\u2205 \u22a2 A::\u2205 | in_cll2_perm : forall \u0393 \u0394 \u0393' \u0394', \u0393 ~p \u0393' -> \u0394 ~p \u0394' -> \u0393 \u22a2 \u0394 (*-----------------------------*) -> \u0393' \u22a2 \u0394' | in_cll2_limp_l : forall \u0393 \u0394 \u0393' \u0394' A B, \u0393 \u22a2 A::\u0394 -> B::\u0393' \u22a2 \u0394' (*-----------------------------*) -> A \u22b8 B::\u0393++\u0393' \u22a2 \u0394++\u0394' | in_cll2_limp_r : forall \u0393 \u0394 A B, A::\u0393 \u22a2 B::\u0394 (*-----------------------------*) -> \u0393 \u22a2 A \u22b8 B::\u0394 | in_cll2_with_l1 : forall \u0393 \u0394 A B, A::\u0393 \u22a2 \u0394 (*-----------------------------*) -> A&B::\u0393 \u22a2 \u0394 | in_cll2_with_l2 : forall \u0393 \u0394 A B, B::\u0393 \u22a2 \u0394 (*-----------------------------*) -> A&B::\u0393 \u22a2 \u0394 | in_cll2_with_r : forall \u0393 \u0394 A B, \u0393 \u22a2 A::\u0394 -> \u0393 \u22a2 B::\u0394 (*-----------------------------*) -> \u0393 \u22a2 A&B::\u0394 | in_cll2_times_l : forall \u0393 A B \u0394, A::B::\u0393 \u22a2 \u0394 (*-----------------------------*) -> A\u2297B::\u0393 \u22a2 \u0394 | in_cll2_times_r : forall \u0393 \u0394 \u0393' \u0394' A B, \u0393 \u22a2 A::\u0394 -> \u0393' \u22a2 B::\u0394' (*-----------------------------*) -> \u0393++\u0393' \u22a2 A\u2297B::\u0394++\u0394' | in_cll2_plus_l : forall \u0393 A B \u0394, A::\u0393 \u22a2 \u0394 -> B::\u0393 \u22a2 \u0394 (*-----------------------------*) -> A\u2295B::\u0393 \u22a2 \u0394 | in_cll2_plus_r1 : forall \u0393 A B \u0394, \u0393 \u22a2 A::\u0394 (*-----------------------------*) -> \u0393 \u22a2 A\u2295B::\u0394 | in_cll2_plus_r2 : forall \u0393 A B \u0394, \u0393 \u22a2 B::\u0394 (*-----------------------------*) -> \u0393 \u22a2 A\u2295B::\u0394 | in_cll2_bot_l : forall \u0393 \u0394, \u27d8::\u0393 \u22a2 \u0394 | in_cll2_top_r : forall \u0393 \u0394, \u0393 \u22a2 \u27d9::\u0394 | in_cll2_unit_l : forall \u0393 \u0394, \u0393 \u22a2 \u0394 (*-----------------------------*) -> \ud835\udfd9::\u0393 \u22a2 \u0394 | in_cll2_unit_r : \u2205 \u22a2 \ud835\udfd9::\u2205 | in_cll2_bang_l : forall \u0393 A \u0394, A::\u0393 \u22a2 \u0394 (*-----------------------------*) -> !A::\u0393 \u22a2 \u0394 | in_cll2_bang_r : forall \u0393 A, \u203c\u0393 \u22a2 A::nil (* since ? is absent, only ??\u0394 = nil works *) (*-----------------------------*) -> \u203c\u0393 \u22a2 !A::nil | in_cll2_weak_l : forall \u0393 A \u0394, \u0393 \u22a2 \u0394 (*-----------------------------*) -> !A::\u0393 \u22a2 \u0394 | in_cll2_cntr_l : forall \u0393 A \u0394, !A::!A::\u0393 \u22a2 \u0394 (*-----------------------------*) -> !A::\u0393 \u22a2 \u0394 where \"l \u22a2 m\" := (S_cll_2 l m).", "End S_cll_without_cut_on_ill_syntax.", "Section cut_free_cll.", "Reserved Notation \"\u0393 \u22a2 \u0394\" (at level 70, no associativity).", "Inductive S_cll : list cll_form -> list cll_form -> Prop := | in_cll_ax : forall A, A::\u2205 \u22a2 A::\u2205 (* | in_cll_cut : forall \u0393 \u0394 \u0393' \u0394' A, \u0393 \u22a2 A::\u0394 -> A::\u0393' \u22a2 \u0394' (*-----------------------------*) -> \u0393++\u0393' \u22a2 \u0394++\u0394' *) | in_cll_perm : forall \u0393 \u0394 \u0393' \u0394', \u0393 ~p \u0393' -> \u0394 ~p \u0394' -> \u0393 \u22a2 \u0394 (*-----------------------------*) -> \u0393' \u22a2 \u0394' | in_cll_neg_l : forall \u0393 \u0394 A, \u0393 \u22a2 A::\u0394 (*-----------------------------*) -> \u2296A::\u0393 \u22a2 \u0394 | in_cll_neg_r : forall \u0393 \u0394 A, A::\u0393 \u22a2 \u0394 (*-----------------------------*) -> \u0393 \u22a2 \u2296A::\u0394 | in_cll_limp_l : forall \u0393 \u0394 \u0393' \u0394' A B, \u0393 \u22a2 A::\u0394 -> B::\u0393' \u22a2 \u0394' (*-----------------------------*) -> A \u22b8 B::\u0393++\u0393' \u22a2 \u0394++\u0394' | in_cll_limp_r : forall \u0393 \u0394 A B, A::\u0393 \u22a2 B::\u0394 (*-----------------------------*) -> \u0393 \u22a2 A \u22b8 B::\u0394 | in_cll_with_l1 : forall \u0393 \u0394 A B, A::\u0393 \u22a2 \u0394 (*-----------------------------*) -> A&B::\u0393 \u22a2 \u0394 | in_cll_with_l2 : forall \u0393 \u0394 A B, B::\u0393 \u22a2 \u0394 (*-----------------------------*) -> A&B::\u0393 \u22a2 \u0394 | in_cll_with_r : forall \u0393 \u0394 A B, \u0393 \u22a2 A::\u0394 -> \u0393 \u22a2 B::\u0394 (*-----------------------------*) -> \u0393 \u22a2 A&B::\u0394 | in_cll_times_l : forall \u0393 A B \u0394, A::B::\u0393 \u22a2 \u0394 (*-----------------------------*) -> A\u2297B::\u0393 \u22a2 \u0394 | in_cll_times_r : forall \u0393 \u0394 \u0393' \u0394' A B, \u0393 \u22a2 A::\u0394 -> \u0393' \u22a2 B::\u0394' (*-----------------------------*) -> \u0393++\u0393' \u22a2 A\u2297B::\u0394++\u0394' | in_cll_par_l : forall \u0393 \u0394 \u0393' \u0394' A B, A::\u0393 \u22a2 \u0394 -> B::\u0393' \u22a2 \u0394' (*-----------------------------*) -> A\u214bB::\u0393++\u0393' \u22a2 \u0394++\u0394' | in_cll_par_r : forall \u0393 A B \u0394, \u0393 \u22a2 A::B::\u0394 (*-----------------------------*) -> \u0393 \u22a2 A\u214bB::\u0394 | in_cll_plus_l : forall \u0393 A B \u0394, A::\u0393 \u22a2 \u0394 -> B::\u0393 \u22a2 \u0394 (*-----------------------------*) -> A\u2295B::\u0393 \u22a2 \u0394 | in_cll_plus_r1 : forall \u0393 A B \u0394, \u0393 \u22a2 A::\u0394 (*-----------------------------*) -> \u0393 \u22a2 A\u2295B::\u0394 | in_cll_plus_r2 : forall \u0393 A B \u0394, \u0393 \u22a2 B::\u0394 (*-----------------------------*) -> \u0393 \u22a2 A\u2295B::\u0394 | in_cll_bot_l : forall \u0393 \u0394, \u27d8::\u0393 \u22a2 \u0394 | in_cll_top_r : forall \u0393 \u0394, \u0393 \u22a2 \u27d9::\u0394 | in_cll_unit_l : forall \u0393 \u0394, \u0393 \u22a2 \u0394 (*-----------------------------*) -> \ud835\udfd9::\u0393 \u22a2 \u0394 | in_cll_unit_r : \u2205 \u22a2 \ud835\udfd9::\u2205 | in_cll_zero_l : (*-----------------------------*) (* *) \ud835\udfd8::\u2205 \u22a2 \u2205 | in_cll_zero_r : forall \u0393 \u0394, \u0393 \u22a2 \u0394 (*-----------------------------*) -> \u0393 \u22a2 \ud835\udfd8::\u0394 | in_cll_bang_l : forall \u0393 A \u0394, A::\u0393 \u22a2 \u0394 (*-----------------------------*) -> !A::\u0393 \u22a2 \u0394 | in_cll_bang_r : forall \u0393 A \u0394, \u203c\u0393 \u22a2 A::\u2047\u0394 (*-----------------------------*) -> \u203c\u0393 \u22a2 !A::\u2047\u0394 | in_cll_qmrk_l : forall \u0393 A \u0394, A::\u203c\u0393 \u22a2 \u2047\u0394 (*-----------------------------*) -> \u203dA::\u203c\u0393 \u22a2 \u2047\u0394 | in_cll_qmrk_r : forall \u0393 A \u0394, \u0393 \u22a2 A::\u0394 (*-----------------------------*) -> \u0393 \u22a2 \u203dA::\u0394 | in_cll_weak_l : forall \u0393 A \u0394, \u0393 \u22a2 \u0394 (*-----------------------------*) -> !A::\u0393 \u22a2 \u0394 | in_cll_weak_r : forall \u0393 A \u0394, \u0393 \u22a2 \u0394 (*-----------------------------*) -> \u0393 \u22a2 \u203dA::\u0394 | in_cll_cntr_l : forall \u0393 A \u0394, !A::!A::\u0393 \u22a2 \u0394 (*-----------------------------*) -> !A::\u0393 \u22a2 \u0394 | in_cll_cntr_r : forall \u0393 A \u0394, \u0393 \u22a2 \u203dA::\u203dA::\u0394 (*-----------------------------*) -> \u0393 \u22a2 \u203dA::\u0394 where \"\u0393 \u22a2 \u0394\" := (S_cll \u0393 \u0394).", "End cut_free_cll.", "Definition rCLL_cf_PROVABILITY (S : _*_) := let (\u0393,\u0394) := S in S_cll_restr \u0393 \u0394.", "Definition CLL_cf_PROVABILITY (S : _*_) := let (\u0393,\u0394) := S in S_cll \u0393 \u0394."], "theorems": []}