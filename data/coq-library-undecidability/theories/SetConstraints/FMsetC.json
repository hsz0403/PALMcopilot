{"code": ["Require Import PeanoNat List.", "Import ListNotations.", "Definition mset_eq (A B: list nat) : Prop := forall c, count_occ Nat.eq_dec A c = count_occ Nat.eq_dec B c.", "Local Notation \"A \u2261 B\" := (mset_eq A B) (at level 65).", "Inductive msetc : Set := | msetc_zero : nat -> msetc | msetc_sum : nat -> nat -> nat -> msetc | msetc_h : nat -> nat -> msetc.", "Definition msetc_sem (\u03c6: nat -> list nat) (c: msetc) := match c with | msetc_zero x => \u03c6 x \u2261 [0] | msetc_sum x y z => \u03c6 x \u2261 (\u03c6 y) ++ (\u03c6 z) | msetc_h x y => \u03c6 x \u2261 map S (\u03c6 y) end.", "Definition FMsetC_SAT (l : list msetc) := exists \u03c6, forall c, In c l -> msetc_sem \u03c6 c."], "theorems": []}