{"code": ["Set Implicit Arguments.", "Require Import Morphisms Setoid.", "From Undecidability.HOU Require Import std.std.", "From Undecidability.HOU.calculus Require Import prelim terms syntax semantics confluence typing order normalisation.", "Set Default Proof Using \"Type\".", "Section Evaluator.", "Context {X: Const}.", "Definition xi := evaluator.E (@rho X) _.", "Lemma xi_correct s t: s \u25b7 t <-> exists n, xi n s = Some t.", "Proof.", "split; intros ?; eapply E_correct_tak; try eapply tak_fun_rho.", "all: eauto using sandwich_step, sandwich_steps.", "all: typeclasses eauto.", "Qed.", "Lemma xi_monotone n m s t: n <= m -> xi n s = Some t -> xi m s = Some t.", "Proof.", "intros ??; eapply E_monotone; eauto.", "Qed.", "Lemma compute_evaluation_step (s: exp X): (exists t, s \u25b7 t) -> { t | s \u25b7 t }.", "Proof.", "intros; eapply compute_evaluation with (S := par) (rho := rho); eauto using tak_fun_rho.", "all: typeclasses eauto.", "Qed.", "Definition eta (s: exp X) {Gamma A} (H: Gamma \u22a2 s : A) := proj1_sig (compute_evaluation_step (termination_steps H)).", "Definition eta\u2080 (s: exp X) {Gamma n A} (H: Gamma \u22a2(n) s : A) := proj1_sig (compute_evaluation_step (ordertyping_termination_steps H)).", "Arguments eta _ {_} {_} _.", "Arguments eta\u2080 _ {_} {_} {_} _.", "Section Correctness.", "Variable (Gamma: ctx) (n: nat) (s: exp X) (A: type) (H: Gamma \u22a2 s : A) (H\u2080: Gamma \u22a2(n) s : A).", "Lemma eta_correct: s \u25b7 eta s H.", "Proof.", "unfold eta.", "destruct compute_evaluation_step; cbn; eauto.", "Qed.", "Lemma eta\u2080_correct: s \u25b7 eta\u2080 s H\u2080.", "Proof.", "unfold eta\u2080.", "destruct compute_evaluation_step; cbn; eauto.", "Qed.", "Lemma eta_normal: normal (eta s H).", "Proof.", "destruct eta_correct; eauto.", "Qed.", "Lemma eta\u2080_normal: normal (eta\u2080 s H\u2080).", "Proof.", "destruct eta\u2080_correct; eauto.", "Qed.", "Lemma eta_typing: Gamma \u22a2 eta s H : A.", "Proof.", "eapply preservation_under_steps.", "rewrite <-eta_correct.", "all: eauto.", "Qed.", "Lemma eta\u2080_typing: Gamma \u22a2(n) eta\u2080 s H\u2080 : A.", "Proof.", "eapply ordertyping_preservation_under_steps.", "rewrite <-eta\u2080_correct.", "all: eauto.", "Qed.", "End Correctness.", "End Evaluator.", "Arguments eta {_} _ {_} {_} _.", "Arguments eta\u2080 {_} _ {_} {_} {_} _."], "theorems": [{"name": "xi_correct", "kind": "Lemma", "begin": 8, "end": 13}, {"name": "xi_monotone", "kind": "Lemma", "begin": 14, "end": 17}, {"name": "compute_evaluation_step", "kind": "Lemma", "begin": 18, "end": 22}, {"name": "eta_correct", "kind": "Lemma", "begin": 29, "end": 33}, {"name": "eta\u2080_correct", "kind": "Lemma", "begin": 34, "end": 38}, {"name": "eta_normal", "kind": "Lemma", "begin": 39, "end": 42}, {"name": "eta\u2080_normal", "kind": "Lemma", "begin": 43, "end": 46}, {"name": "eta_typing", "kind": "Lemma", "begin": 47, "end": 52}, {"name": "eta\u2080_typing", "kind": "Lemma", "begin": 53, "end": 58}]}