{"code": ["Set Implicit Arguments.", "Require Import List Lia.", "From Undecidability.HOU Require Import std.std.", "From Undecidability.HOU.calculus Require Import prelim terms syntax semantics.", "Set Default Proof Using \"Type\".", "Section Typing.", "Context {X: Const}.", "Definition ctx := list type.", "Implicit Types (s t: exp X) (n m: nat) (Gamma Delta Sigma: ctx) (x y: fin) (c d: X) (A B: type) (sigma tau: fin -> exp X) (delta xi: fin -> fin).", "Reserved Notation \"Gamma \u22a2 s : A\" (at level 80, s at level 99).", "Inductive typing Gamma : exp X -> type -> Prop := | typingVar i A: nth Gamma i = Some A -> Gamma \u22a2 var i : A | typingConst c: Gamma \u22a2 const c : ctype X c | typingLam s A B: A :: Gamma \u22a2 s : B -> Gamma \u22a2 lambda s : A \u2192 B | typingApp s t A B: Gamma \u22a2 s : A \u2192 B -> Gamma \u22a2 t : A -> Gamma \u22a2 s t : B where \"Gamma \u22a2 s : A\" := (typing Gamma s A).", "Hint Constructors typing : core.", "Definition typingRen Delta delta Gamma := forall x A, nth Gamma x = Some A -> nth Delta (delta x) = Some A.", "Notation \"Delta \u22ab delta : Gamma\" := (typingRen Delta delta Gamma) (at level 80, delta at level 99).", "Definition typingSubst Delta sigma Gamma := forall x A, nth Gamma x = Some A -> Delta \u22a2 sigma x : A.", "Notation \"Delta \u22a9 sigma : Gamma\" := (typingSubst Delta sigma Gamma) (at level 80, sigma at level 99).", "Lemma typingSubst_cons Delta sigma s Gamma A: Delta \u22a9 sigma : Gamma -> Delta \u22a2 s : A -> Delta \u22a9 s .: sigma : A :: Gamma.", "Proof.", "intros ??[|]; cbn; eauto; now intros ? [= ->].", "Qed.", "Section Preservation.", "Lemma preservation_under_renaming delta Gamma Delta s A: Gamma \u22a2 s : A -> Delta \u22ab delta : Gamma -> Delta \u22a2 ren_exp delta s : A.", "Proof.", "induction 1 in delta, Delta |-*; intros H'; cbn [ren_exp]; eauto.", "econstructor; apply IHtyping.", "intros []; cbn; eauto.", "Qed.", "Lemma preservation_under_substitution sigma Gamma Delta s A: Gamma \u22a2 s : A -> Delta \u22a9 sigma: Gamma -> Delta \u22a2 sigma \u2022 s : A.", "Proof.", "induction 1 in sigma, Delta |-*; intros H'; cbn [subst_exp]; subst; eauto.", "econstructor; apply IHtyping; intros []; cbn; eauto.", "intros; eapply preservation_under_renaming; eauto.", "intros ?; eauto.", "Qed.", "Lemma preservation_under_reduction s s' Gamma A: s > s' -> Gamma \u22a2 s : A -> Gamma \u22a2 s' : A.", "Proof.", "induction 1 in Gamma, A |-*; intros H1; invp @typing; eauto.", "inv H3.", "eapply preservation_under_substitution; eauto.", "intros []; cbn; eauto.", "intros ? H; now injection H as ->.", "Qed.", "Lemma preservation_under_steps s s' Gamma A: s >* s' -> Gamma \u22a2 s : A -> Gamma \u22a2 s' : A.", "Proof.", "induction 1 in Gamma, A |-*; eauto using preservation_under_reduction.", "Qed.", "End Preservation.", "Lemma weakening_app Gamma Delta s A: Gamma \u22a2 s : A -> Gamma ++ Delta \u22a2 s : A.", "Proof.", "intros H; replace s with (ren id s) by now asimpl.", "eapply preservation_under_renaming; eauto.", "intros i B H'; unfold id.", "rewrite nth_error_app1; eauto.", "eapply nth_error_Some_lt; eauto.", "Qed.", "Lemma typing_variables Gamma s A: Gamma \u22a2 s : A -> forall x, x \u2208 vars s -> x \u2208 dom Gamma.", "Proof.", "intros ? x H1 % vars_varof.", "induction H in x, H1 |-*; inv H1; eauto.", "-", "now domin H.", "-", "specialize (IHtyping _ H2).", "eapply dom_lt_iff in IHtyping.", "cbn in *; intuition.", "Qed.", "End Typing.", "Notation \"Gamma \u22a2 s : A\" := (typing Gamma s A) (at level 80, s at level 99).", "Notation \"Delta \u22ab delta : Gamma\" := (typingRen Delta delta Gamma) (at level 80, delta at level 99).", "Notation \"Delta \u22a9 sigma : Gamma\" := (typingSubst Delta sigma Gamma) (at level 80, sigma at level 99).", "Hint Constructors typing : core.", "Hint Resolve typing_variables : core.", "Hint Resolve preservation_under_renaming preservation_under_substitution : core."], "theorems": [{"name": "typingSubst_cons", "kind": "Lemma", "begin": 16, "end": 19}, {"name": "preservation_under_renaming", "kind": "Lemma", "begin": 21, "end": 26}, {"name": "preservation_under_substitution", "kind": "Lemma", "begin": 27, "end": 33}, {"name": "preservation_under_reduction", "kind": "Lemma", "begin": 34, "end": 41}, {"name": "preservation_under_steps", "kind": "Lemma", "begin": 42, "end": 45}, {"name": "weakening_app", "kind": "Lemma", "begin": 47, "end": 54}, {"name": "typing_variables", "kind": "Lemma", "begin": 55, "end": 65}]}