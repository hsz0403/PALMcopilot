{"code": ["Inductive dio_op_pfree := do_add_pfree | do_mul_pfree.", "Inductive dio_polynomial_pfree : Set := | dp_nat_pfree : nat -> dio_polynomial_pfree (* natural number constant *) | dp_var_pfree : nat -> dio_polynomial_pfree (* existentially quantified variable *) | dp_comp_pfree : dio_op_pfree -> dio_polynomial_pfree -> dio_polynomial_pfree -> dio_polynomial_pfree.", "Fixpoint dp_eval_pfree \u03c6 p := match p with | dp_nat_pfree n => n | dp_var_pfree v => \u03c6 v | dp_comp_pfree do_add_pfree p q => dp_eval_pfree \u03c6 p + dp_eval_pfree \u03c6 q | dp_comp_pfree do_mul_pfree p q => dp_eval_pfree \u03c6 p * dp_eval_pfree \u03c6 q end.", "Definition H10p_PROBLEM := (dio_polynomial_pfree * dio_polynomial_pfree)%type.", "Definition H10p_sem e \u03c6 := dp_eval_pfree \u03c6 (fst e) = dp_eval_pfree \u03c6 (snd e).", "Definition H10p (e : H10p_PROBLEM) := exists \u03c6, H10p_sem e \u03c6."], "theorems": []}