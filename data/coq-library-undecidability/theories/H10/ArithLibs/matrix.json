{"code": ["Require Import Arith ZArith.", "From Undecidability.Shared.Libs.DLW.Utils Require Import utils_tac gcd prime binomial sums.", "Set Implicit Arguments.", "Set Default Proof Using \"Type\".", "Section rings.", "Variable (R : Type) (Rzero Rone : R) (Rplus Rmult Rminus : R -> R -> R) (Ropp : R -> R) (R_is_ring : ring_theory Rzero Rone Rplus Rmult Rminus Ropp eq).", "Infix \"\u2295\" := Rplus (at level 50, left associativity).", "Infix \"\u2297\" := Rmult (at level 40, left associativity).", "Notation z := Rzero.", "Notation o := Rone.", "Notation \"\u2238\" := Ropp.", "Add Ring Rring : R_is_ring.", "Definition M22 := (R * R * R * R)%type.", "Definition ID_22 : M22 := (o,z,z,o).", "Definition ZE_22 : M22 := (z,z,z,z).", "Definition PL22 : M22 -> M22 -> M22.", "Proof using Rplus.", "intros (((a,b),c),d) (((a',b'),c'),d').", "exact (a\u2295a',b\u2295b', c\u2295c',d\u2295d').", "Defined.", "Local Infix \"\u229e\" := PL22 (at level 50, left associativity).", "Definition MI22 : M22 -> M22.", "Proof using Ropp.", "intros (((a,b),c),d).", "exact (\u2238a,\u2238b, \u2238c,\u2238d).", "Defined.", "Local Notation \"\u229f\" := MI22.", "Fact M22_equal (a b c d a' b' c' d' : R) : a = a' -> b = b' -> c = c' -> d = d' -> (a,b,c,d) = (a',b',c',d').", "Proof.", "intros; subst; trivial.", "Qed.", "Fact M22plus_zero : forall m, ZE_22 \u229e m = m.", "Proof using R_is_ring.", "intros (((a,b),c),d); apply M22_equal; ring.", "Qed.", "Fact M22plus_comm : forall x y, x \u229e y = y \u229e x.", "Proof using R_is_ring.", "intros (((a,b),c),d) (((a',b'),c'),d'); apply M22_equal; ring.", "Qed.", "Fact M22plus_assoc : forall x y u, x \u229e (y \u229e u) = x \u229e y \u229e u.", "Proof using R_is_ring.", "intros (((a,b),c),d) (((a',b'),c'),d') (((a'',b''),c''),d''); simpl; apply M22_equal; ring.", "Qed.", "Fact M22minus : forall x, x \u229e \u229f x = ZE_22.", "Proof using R_is_ring.", "intros (((a,b),c),d); apply M22_equal; ring.", "Qed.", "Fact M22plus_cancel : forall x a b, x \u229e a = x \u229e b -> a = b.", "Proof using R_is_ring.", "intros x a b H.", "rewrite <- (M22plus_zero a), <- (M22minus x), (M22plus_comm x), <- M22plus_assoc, H, M22plus_assoc, (M22plus_comm _ x), M22minus, M22plus_zero.", "trivial.", "Qed.", "Theorem M22plus_monoid : monoid_theory PL22 ZE_22.", "Proof using R_is_ring.", "exists.", "+", "apply M22plus_zero.", "+", "intro; rewrite M22plus_comm; apply M22plus_zero.", "+", "intros; apply M22plus_assoc.", "Qed.", "Definition MU22 : M22 -> M22 -> M22.", "Proof using Rplus Rmult.", "intros (((a,b),c),d) (((a',b'),c'),d').", "exact (a\u2297a' \u2295 b\u2297c' , a\u2297b' \u2295 b\u2297d', c\u2297a' \u2295 d\u2297c' , c\u2297b' \u2295 d\u2297d' ).", "Defined.", "Local Infix \"\u22a0\" := MU22 (at level 40, left associativity).", "Tactic Notation \"myauto\" integer(n) := do n intros (((?&?)&?)&?); apply M22_equal; ring.", "Fact M22mult_one_l : forall x, ID_22 \u22a0 x = x.", "Proof using R_is_ring.", "myauto 1.", "Qed.", "Fact M22mult_one_r : forall x, x \u22a0 ID_22 = x.", "Proof using R_is_ring.", "myauto 1.", "Qed.", "Fact M22mult_assoc : forall x y u, x \u22a0 (y \u22a0 u) = x \u22a0 y \u22a0 u.", "Proof using R_is_ring.", "myauto 3.", "Qed.", "Fact M22_mult_distr_l : forall x y u, x \u22a0 (y\u229eu) = x\u22a0y \u229e x\u22a0u.", "Proof using R_is_ring.", "myauto 3.", "Qed.", "Fact M22_mult_distr_r : forall x y u, (y\u229eu) \u22a0 x = y\u22a0x \u229e u\u22a0x.", "Proof using R_is_ring.", "myauto 3.", "Qed.", "Theorem M22mult_monoid : monoid_theory MU22 ID_22.", "Proof using R_is_ring.", "exists.", "+", "apply M22mult_one_l.", "+", "apply M22mult_one_r.", "+", "apply M22mult_assoc.", "Qed.", "Fact M22_opp_mult_l : forall x y, (\u229f x) \u22a0 y = \u229f (x \u22a0 y).", "Proof using R_is_ring.", "myauto 2.", "Qed.", "Fact M22_opp_mult_r : forall x y, x \u22a0 (\u229fy) = \u229f (x \u22a0 y).", "Proof using R_is_ring.", "myauto 2.", "Qed.", "Definition M22scal (k : R) : M22 -> M22.", "Proof using Rmult.", "intros (((u,v),w),z).", "exact (k\u2297u,k\u2297v,k\u2297w,k\u2297z).", "Defined.", "Fact M22scal_mult k1 k2 : forall x, M22scal k1 (M22scal k2 x) = M22scal (k1\u2297k2) x.", "Proof using R_is_ring.", "myauto 1.", "Qed.", "Fact M22scal_PL22 k : forall x y, M22scal k (x \u229e y) = M22scal k x \u229e M22scal k y.", "Proof using R_is_ring.", "myauto 2.", "Qed.", "Fact M22scal_MI22 : forall x, M22scal (\u2238o) x = \u229fx.", "Proof using R_is_ring.", "myauto 1.", "Qed.", "Fact M22scal_zero : forall x, M22scal z x = ZE_22.", "Proof using R_is_ring.", "myauto 1.", "Qed.", "Fact M22scal_MU22_l k : forall x y, M22scal k (x \u22a0 y) = M22scal k x \u22a0 y.", "Proof using R_is_ring.", "myauto 2.", "Qed.", "Fact M22scal_MU22_r k : forall x y, M22scal k (x \u22a0 y) = x \u22a0 M22scal k y.", "Proof using R_is_ring.", "myauto 2.", "Qed.", "Fact mscal_M22scal n x : mscal PL22 ZE_22 n x = M22scal (mscal Rplus Rzero n Rone) x.", "Proof using R_is_ring.", "induction n as [ | n IHn ].", "+", "do 2 rewrite mscal_0; revert x; myauto 1.", "+", "do 2 rewrite mscal_S.", "rewrite IHn; clear IHn.", "revert x; myauto 1.", "Qed.", "Definition Det22 : M22 -> R.", "Proof using Rplus Rmult Ropp.", "intros (((a,b),c),d).", "exact (a\u2297d \u2295 \u2238(b\u2297c)).", "Defined.", "Fact Det22_scal k : forall x, Det22 (M22scal k x) = (k \u2297 k) \u2297 Det22 x.", "Proof using R_is_ring.", "intros (((?,?),?),?); simpl; ring.", "Qed.", "Fact Det22_mult : forall x y, Det22 (x\u22a0y) = Det22 x \u2297 Det22 y.", "Proof using R_is_ring.", "intros (((?,?),?),?) (((?,?),?),?); simpl; ring.", "Qed.", "Notation expo22 := (mscal MU22 ID_22).", "Notation expoR := (mscal Rmult o).", "Fact expo22_scal k n U : expo22 n (M22scal k U) = M22scal (expoR n k) (expo22 n U).", "Proof using R_is_ring.", "induction n as [ | n IHn ].", "+", "do 3 rewrite mscal_0; apply M22_equal; ring.", "+", "do 3 rewrite mscal_S.", "rewrite IHn.", "rewrite <- M22scal_MU22_l, <- M22scal_MU22_r.", "rewrite M22scal_mult; auto.", "Qed.", "Fact Det22_expo n x : Det22 (expo22 n x) = expoR n (Det22 x).", "Proof using R_is_ring.", "induction n as [ | n IHn ].", "+", "do 2 rewrite mscal_0; simpl; ring.", "+", "do 2 rewrite mscal_S.", "rewrite Det22_mult, IHn; ring.", "Qed.", "Fact Diag22_expo n x y : expo22 n (x,z,z,y) = (expoR n x,Rzero,Rzero,expoR n y).", "Proof using R_is_ring.", "induction n as [ | n IHn ]; try (simpl; auto; fail).", "do 3 rewrite mscal_S; rewrite IHn.", "apply M22_equal; ring.", "Qed.", "Fact MU22_Diag22 a b c d x y : (a,b,c,d) \u22a0 (x,z,z,y) = (a\u2297x,b\u2297y,c\u2297x,d\u2297y).", "Proof using R_is_ring.", "apply M22_equal; ring.", "Qed.", "Fact M22_proj12 a1 b1 c1 d1 a2 b2 c2 d2 : (a1,b1,c1,d1) = (a2,b2,c2,d2) :> M22 -> c1 = c2.", "Proof.", "inversion 1; auto.", "Qed.", "End rings.", "Section ring_morphism.", "Variable (X : Type) (zX oX : X) (pX mX : X -> X -> X) (oppX : X -> X) (Y : Type) (zY oY : Y) (pY mY : Y -> Y -> Y) (oppY : Y -> Y).", "Variable phi : X -> Y.", "Local Notation \"\u301a x \u301b\" := (phi x).", "Record ring_morphism : Prop := mk_ring_morph { morph_z : \u301a zX \u301b= zY; morph_o : \u301a oX \u301b= oY; morph_plus : forall x y, \u301a pX x y \u301b= pY \u301a x \u301b\u301a y \u301b; morph_mult : forall x y, \u301a mX x y \u301b= mY \u301a x \u301b\u301a y \u301b; morph_opp : forall x, \u301a oppX x \u301b= oppY \u301a x \u301b; }.", "Hypothesis Hphi : ring_morphism.", "Definition morph22 : M22 X -> M22 Y.", "Proof using phi.", "intros (((a,b),c),d).", "exact (\u301a a \u301b, \u301a b \u301b, \u301a c \u301b, \u301a d \u301b).", "Defined.", "Tactic Notation \"myauto\" integer(n) := do n intros (((?&?)&?)&?); apply M22_equal; ring.", "Fact PL22_morph : forall x y, morph22 (PL22 pX x y) = PL22 pY (morph22 x) (morph22 y).", "Proof using Hphi.", "destruct Hphi.", "do 2 intros (((?&?)&?)&?); apply M22_equal; auto.", "Qed.", "Fact MU22_morph : forall x y, morph22 (MU22 pX mX x y) = MU22 pY mY (morph22 x) (morph22 y).", "Proof using Hphi.", "destruct Hphi as [ G1 G2 G3 G4 G6 ].", "do 2 intros (((?&?)&?)&?); apply M22_equal; repeat rewrite G3; repeat rewrite G4; auto.", "Qed.", "Fact MI22_morph : forall x, morph22 (MI22 oppX x) = MI22 oppY (morph22 x).", "Proof using Hphi.", "destruct Hphi as [ G1 G2 G3 G4 G6 ].", "do 1 intros (((?&?)&?)&?); apply M22_equal; repeat rewrite G3; repeat rewrite G4; auto.", "Qed.", "Fact M22scal_morph : forall k x, morph22 (M22scal mX k x) = M22scal mY \u301a k \u301b (morph22 x).", "Proof using Hphi.", "destruct Hphi as [ G1 G2 G3 G4 G6 ].", "intros k (((?&?)&?)&?); apply M22_equal; auto.", "Qed.", "Fact Det22_morph : forall x, \u301a Det22 pX mX oppX x \u301b= Det22 pY mY oppY (morph22 x).", "Proof using Hphi.", "destruct Hphi as [ G1 G2 G3 G4 G6 ].", "intros (((?&?)&?)&?); simpl.", "rewrite G3, G6, G4, G4; auto.", "Qed.", "Fact expo22_morph n x : morph22 (mscal (MU22 pX mX) (ID_22 zX oX) n x) = mscal (MU22 pY mY) (ID_22 zY oY) n (morph22 x).", "Proof using Hphi.", "destruct Hphi as [ G1 G2 G3 G4 G6 ].", "induction n as [ | n IHn ].", "+", "do 2 rewrite mscal_0; apply M22_equal; auto.", "+", "do 2 rewrite mscal_S.", "rewrite MU22_morph, IHn; auto.", "Qed.", "End ring_morphism."], "theorems": [{"name": "PL22", "kind": "Definition", "begin": 15, "end": 19}, {"name": "MI22", "kind": "Definition", "begin": 21, "end": 25}, {"name": "M22_equal", "kind": "Fact", "begin": 27, "end": 30}, {"name": "M22plus_zero", "kind": "Fact", "begin": 31, "end": 34}, {"name": "M22plus_comm", "kind": "Fact", "begin": 35, "end": 38}, {"name": "M22plus_assoc", "kind": "Fact", "begin": 39, "end": 42}, {"name": "M22minus", "kind": "Fact", "begin": 43, "end": 46}, {"name": "M22plus_cancel", "kind": "Fact", "begin": 47, "end": 52}, {"name": "M22plus_monoid", "kind": "Theorem", "begin": 53, "end": 62}, {"name": "MU22", "kind": "Definition", "begin": 63, "end": 67}, {"name": "M22mult_one_l", "kind": "Fact", "begin": 70, "end": 73}, {"name": "M22mult_one_r", "kind": "Fact", "begin": 74, "end": 77}, {"name": "M22mult_assoc", "kind": "Fact", "begin": 78, "end": 81}, {"name": "M22_mult_distr_l", "kind": "Fact", "begin": 82, "end": 85}, {"name": "M22_mult_distr_r", "kind": "Fact", "begin": 86, "end": 89}, {"name": "M22mult_monoid", "kind": "Theorem", "begin": 90, "end": 99}, {"name": "M22_opp_mult_l", "kind": "Fact", "begin": 100, "end": 103}, {"name": "M22_opp_mult_r", "kind": "Fact", "begin": 104, "end": 107}, {"name": "M22scal", "kind": "Definition", "begin": 108, "end": 112}, {"name": "M22scal_mult", "kind": "Fact", "begin": 113, "end": 116}, {"name": "M22scal_PL22", "kind": "Fact", "begin": 117, "end": 120}, {"name": "M22scal_MI22", "kind": "Fact", "begin": 121, "end": 124}, {"name": "M22scal_zero", "kind": "Fact", "begin": 125, "end": 128}, {"name": "M22scal_MU22_l", "kind": "Fact", "begin": 129, "end": 132}, {"name": "M22scal_MU22_r", "kind": "Fact", "begin": 133, "end": 136}, {"name": "mscal_M22scal", "kind": "Fact", "begin": 137, "end": 146}, {"name": "Det22", "kind": "Definition", "begin": 147, "end": 151}, {"name": "Det22_scal", "kind": "Fact", "begin": 152, "end": 155}, {"name": "Det22_mult", "kind": "Fact", "begin": 156, "end": 159}, {"name": "expo22_scal", "kind": "Fact", "begin": 162, "end": 172}, {"name": "Det22_expo", "kind": "Fact", "begin": 173, "end": 181}, {"name": "Diag22_expo", "kind": "Fact", "begin": 182, "end": 187}, {"name": "MU22_Diag22", "kind": "Fact", "begin": 188, "end": 191}, {"name": "M22_proj12", "kind": "Fact", "begin": 192, "end": 195}, {"name": "morph22", "kind": "Definition", "begin": 203, "end": 207}, {"name": "PL22_morph", "kind": "Fact", "begin": 209, "end": 213}, {"name": "MU22_morph", "kind": "Fact", "begin": 214, "end": 218}, {"name": "MI22_morph", "kind": "Fact", "begin": 219, "end": 223}, {"name": "M22scal_morph", "kind": "Fact", "begin": 224, "end": 228}, {"name": "Det22_morph", "kind": "Fact", "begin": 229, "end": 234}, {"name": "expo22_morph", "kind": "Fact", "begin": 235, "end": 244}]}