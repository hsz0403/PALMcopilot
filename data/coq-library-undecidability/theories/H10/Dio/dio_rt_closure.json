{"code": ["Require Import Arith List Bool.", "From Undecidability.Shared.Libs.DLW.Utils Require Import utils_tac utils_list rel_iter sums.", "From Undecidability.H10.Dio Require Import dio_logic dio_expo dio_bounded.", "Set Implicit Arguments.", "Set Default Proof Using \"Type\".", "Local Notation power := (mscal mult 1).", "Section df_seq.", "Variable (R : nat -> nat -> Prop) (HR : \ud835\udd3bR (fun \u03bd => R (\u03bd 1) (\u03bd 0))).", "Theorem dio_rel_is_seq c q n : \ud835\udd3bF c -> \ud835\udd3bF q -> \ud835\udd3bF n -> \ud835\udd3bR (fun \u03bd => is_seq R (c \u03bd) (q \u03bd) (n \u03bd)).", "Proof using HR.", "intros H1 H2 H3.", "unfold is_seq.", "apply dio_rel_fall_lt; dio auto.", "Defined.", "End df_seq.", "Hint Resolve dio_rel_is_seq : dio_rel_db.", "Fact dio_rel_power_subst a b (R : nat -> (nat -> nat) -> Prop) : \ud835\udd3bF a -> \ud835\udd3bF b -> \ud835\udd3bR (fun \u03bd => R (\u03bd 0) (fun n => \u03bd (S n))) -> \ud835\udd3bR (fun \u03bd => R (power (a \u03bd) (b \u03bd)) \u03bd).", "Proof.", "intros Ha Hb HR.", "by dio equiv (fun v => exists p, p = power (a v) (b v) /\\ R p v).", "abstract(intros v; split; eauto; intros (? & ? & ?); subst; auto).", "Defined.", "Section df_rel_iter_rt.", "Variable (R : nat -> nat -> Prop) (HR : \ud835\udd3bR (fun \u03bd => R (\u03bd 1) (\u03bd 0))).", "Lemma dio_rel_rel_iter n x y : \ud835\udd3bF n -> \ud835\udd3bF x -> \ud835\udd3bF y -> \ud835\udd3bR (fun \u03bd => rel_iter R (n \u03bd) (x \u03bd) (y \u03bd)).", "Proof using HR.", "dio by lemma (fun v => rel_iter_seq_equiv R (n v) (x v) (y v)).", "Defined.", "Hint Resolve dio_rel_rel_iter : core.", "Corollary dio_rel_rt x y : \ud835\udd3bF x -> \ud835\udd3bF y -> \ud835\udd3bR (fun \u03bd => exists i, rel_iter R i (x \u03bd) (y \u03bd)).", "Proof using HR.", "intros; dio auto.", "Qed.", "End df_rel_iter_rt.", "Hint Resolve dio_rel_rel_iter dio_rel_rt : dio_rel_db."], "theorems": [{"name": "dio_rel_is_seq", "kind": "Theorem", "begin": 8, "end": 13}, {"name": "dio_rel_power_subst", "kind": "Fact", "begin": 16, "end": 21}, {"name": "dio_rel_rel_iter", "kind": "Lemma", "begin": 24, "end": 27}, {"name": "dio_rel_rt", "kind": "Corollary", "begin": 29, "end": 32}]}