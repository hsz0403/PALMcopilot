{"code": ["Require Import List.", "From Undecidability.Synthetic Require Import Undecidability.", "From Undecidability.Shared.Libs.DLW Require Import utils_tac pos vec.", "From Undecidability.FRACTRAN Require Import FRACTRAN MM_FRACTRAN.", "From Undecidability.H10.Fractran Require Import fractran_dio.", "From Undecidability.H10.Dio Require Import dio_elem dio_single dio_logic.", "Set Implicit Arguments.", "Definition DIO_LOGIC_PROBLEM := (dio_formula * (nat -> nat))%type.", "Definition DIO_LOGIC_SAT (p : DIO_LOGIC_PROBLEM) := let (f,\u03bd) := p in df_pred f \u03bd.", "Theorem FRACTRAN_HALTING_DIO_LOGIC_SAT : FRACTRAN_HALTING \u2aaf DIO_LOGIC_SAT.", "Proof.", "apply reduces_dependent; exists.", "intros (l & x).", "destruct FRACTRAN_HALTING_on_diophantine with (ll := l) (x := fun _ : nat -> nat => x) as (f & Hf); simpl.", "+", "dio_rel_auto.", "+", "exists (f, fun _ => x); unfold DIO_LOGIC_SAT; rewrite Hf; tauto.", "Qed.", "Definition DIO_ELEM_PROBLEM := (list dio_constraint * (nat -> nat))%type.", "Definition DIO_ELEM_SAT (p : DIO_ELEM_PROBLEM) := let (l,v) := p in exists \u03c6, Forall (dc_eval \u03c6 v) l.", "Theorem DIO_LOGIC_ELEM_SAT : DIO_LOGIC_SAT \u2aaf DIO_ELEM_SAT.", "Proof.", "apply reduces_dependent; exists.", "intros (A,v).", "destruct (dio_formula_elem A) as (l & _ & _ & Hl).", "exists (l,v); apply Hl.", "Qed.", "Definition DIO_SINGLE_PROBLEM := (dio_single nat nat * (nat -> nat))%type.", "Definition DIO_SINGLE_SAT (p : DIO_SINGLE_PROBLEM) := let (E,\u03c6) := p in dio_single_pred E \u03c6.", "Theorem DIO_ELEM_SINGLE_SAT : DIO_ELEM_SAT \u2aaf DIO_SINGLE_SAT.", "Proof.", "apply reduces_dependent; exists.", "intros (l,v).", "destruct (dio_elem_equation l) as (E & _ & HE).", "exists (E,v).", "unfold DIO_ELEM_SAT, DIO_SINGLE_SAT.", "rewrite <- HE; tauto.", "Qed."], "theorems": [{"name": "FRACTRAN_HALTING_DIO_LOGIC_SAT", "kind": "Theorem", "begin": 9, "end": 18}, {"name": "DIO_LOGIC_ELEM_SAT", "kind": "Theorem", "begin": 21, "end": 27}, {"name": "DIO_ELEM_SINGLE_SAT", "kind": "Theorem", "begin": 30, "end": 38}]}