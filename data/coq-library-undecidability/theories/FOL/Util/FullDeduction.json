{"code": ["From Undecidability Require Import FOL.Util.Syntax.", "Import FullSyntax.", "From Undecidability Require Import Shared.ListAutomation.", "Import ListAutomationNotations.", "Local Set Implicit Arguments.", "Require Import Lia.", "Inductive peirce := class | intu.", "Existing Class peirce.", "Section ND_def.", "Context {\u03a3_funcs : funcs_signature}.", "Context {\u03a3_preds : preds_signature}.", "Reserved Notation \"A \u22a2 phi\" (at level 61).", "Implicit Type p : peirce.", "Implicit Type ff : falsity_flag.", "Inductive prv : forall (ff : falsity_flag) (p : peirce), list form -> form -> Prop := | II {ff} {p} A phi psi : phi::A \u22a2 psi -> A \u22a2 phi ~> psi | IE {ff} {p} A phi psi : A \u22a2 phi ~> psi -> A \u22a2 phi -> A \u22a2 psi | AllI {ff} {p} A phi : map (subst_form \u2191) A \u22a2 phi -> A \u22a2 \u2200 phi | AllE {ff} {p} A t phi : A \u22a2 \u2200 phi -> A \u22a2 phi[t..] | ExI {ff} {p} A t phi : A \u22a2 phi[t..] -> A \u22a2 \u2203 phi | ExE {ff} {p} A phi psi : A \u22a2 \u2203 phi -> phi::(map (subst_form \u2191) A) \u22a2 psi[\u2191] -> A \u22a2 psi | Exp {p} A phi : prv p A falsity -> prv p A phi | Ctx {ff} {p} A phi : phi el A -> A \u22a2 phi | CI {ff} {p} A phi psi : A \u22a2 phi -> A \u22a2 psi -> A \u22a2 phi \u2227 psi | CE1 {ff} {p} A phi psi : A \u22a2 phi \u2227 psi -> A \u22a2 phi | CE2 {ff} {p} A phi psi : A \u22a2 phi \u2227 psi -> A \u22a2 psi | DI1 {ff} {p} A phi psi : A \u22a2 phi -> A \u22a2 phi \u2228 psi | DI2 {ff} {p} A phi psi : A \u22a2 psi -> A \u22a2 phi \u2228 psi | DE {ff} {p} A phi psi theta : A \u22a2 phi \u2228 psi -> phi::A \u22a2 theta -> psi::A \u22a2 theta -> A \u22a2 theta | Pc {ff} A phi psi : prv class A (((phi ~> psi) ~> phi) ~> phi) where \"A \u22a2 phi\" := (prv _ A phi).", "Definition tprv `{falsity_flag} `{peirce} (T : form -> Prop) phi := exists A, (forall psi, psi el A -> T psi) /\\ A \u22a2 phi.", "End ND_def.", "Arguments prv {_ _ _ _} _ _.", "Notation \"A \u22a2 phi\" := (prv A phi) (at level 55).", "Notation \"A \u22a2C phi\" := (@prv _ _ _ class A phi) (at level 55).", "Notation \"A \u22a2I phi\" := (@prv _ _ _ intu A phi) (at level 55).", "Notation \"A \u22a2M phi\" := (@prv _ _ falsity_off intu A phi) (at level 55).", "Notation \"T \u22a2TI phi\" := (@tprv _ _ _ intu T phi) (at level 55)."], "theorems": []}