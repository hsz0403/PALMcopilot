{"code": ["Require Export Reals.", "Open Scope R_scope.", "Theorem Rplus_eq_compat_l a b c : b = c -> a + b = a + c.", "Proof.", "congruence.", "Qed.", "Theorem Rplus_neg_compat_l a b c : b <> c -> a + b <> a + c.", "Proof.", "now intros * H; contradict H; apply Rplus_eq_reg_l with a.", "Qed.", "Theorem Rplus_ge_compat_l n m p : n >= m -> p + n >= p + m.", "Proof.", "now intros; apply Rle_ge; apply Rplus_le_compat_l; apply Rge_le.", "Qed.", "Theorem Rplus_neg_reg_l a b c : a + b <> a + c -> b <> c.", "Proof.", "congruence.", "Qed.", "Theorem Rplus_ge_reg_l n m p : p + n >= p + m -> n >= m.", "Proof.", "now intros; apply Rle_ge; apply Rplus_le_reg_l with p; apply Rge_le.", "Qed.", "Theorem Rle_sign_pos_pos x y : 0 <= x -> 0 <= y -> 0 <= x * y.", "Proof.", "intros; apply Rmult_le_pos; auto with real.", "Qed.", "Theorem Rle_sign_neg_neg x y : x <= 0 -> y <= 0 -> 0 <= x * y.", "Proof.", "intros; replace (x * y) with (-x * -y) by ring.", "now apply Rmult_le_pos; auto with real.", "Qed.", "Theorem Rle_pos_neg x : 0 <= -x -> x <= 0.", "Proof.", "intros; rewrite <- (Ropp_involutive 0), <- (Ropp_involutive x).", "now apply Ropp_le_contravar; rewrite Ropp_0.", "Qed.", "Theorem Rle_sign_pos_neg x y : 0 <= x -> y <= 0 -> x * y <= 0.", "Proof.", "intros; apply Rle_pos_neg.", "replace (- (x * y)) with (x * -y) by ring.", "now apply Rmult_le_pos; auto with real.", "Qed.", "Theorem Rle_sign_neg_pos x y : x <= 0 -> 0 <= y -> x * y <= 0.", "Proof.", "intros; apply Rle_pos_neg.", "replace (- (x * y)) with (-x * y) by ring.", "now apply Rmult_le_pos; auto with real.", "Qed.", "Theorem Rlt_sign_pos_pos x y : 0 < x -> 0 < y -> 0 < x * y.", "Proof.", "intros; apply Rmult_lt_0_compat; auto with real.", "Qed.", "Theorem Rlt_sign_neg_neg x y : x < 0 -> y < 0 -> 0 < x * y.", "Proof.", "intros; replace (x * y) with (-x * -y) by ring.", "now apply Rmult_lt_0_compat; auto with real.", "Qed.", "Theorem Rlt_pos_neg x : 0 < -x -> x < 0.", "Proof.", "intros; rewrite <- (Ropp_involutive 0), <- (Ropp_involutive x).", "now apply Ropp_lt_contravar; rewrite Ropp_0; auto with real.", "Qed.", "Theorem Rlt_sign_pos_neg x y : 0 < x -> y < 0 -> x * y < 0.", "Proof.", "intros; apply Rlt_pos_neg.", "replace (- (x * y)) with (x * -y) by ring.", "apply Rmult_lt_0_compat; trivial.", "replace 0 with (-0); auto with real.", "Qed.", "Theorem Rlt_sign_neg_pos x y : x < 0 -> 0 < y -> x * y < 0.", "Proof.", "intros; apply Rlt_pos_neg.", "replace (- (x * y)) with (-x * y) by ring.", "now apply Rmult_lt_0_compat; auto with real.", "Qed.", "Theorem Rge_sign_neg_neg x y : 0 >= x -> 0 >= y -> x * y >= 0.", "Proof.", "intros; apply Rle_ge; apply Rle_sign_neg_neg; auto with real.", "Qed.", "Theorem Rge_sign_pos_pos x y : x >= 0 -> y >= 0 -> x * y >= 0.", "Proof.", "intros; apply Rle_ge; apply Rle_sign_pos_pos; auto with real.", "Qed.", "Theorem Rge_neg_pos x : 0 >= -x -> x >= 0.", "Proof.", "intros; rewrite <- (Ropp_involutive 0), <- (Ropp_involutive x).", "now apply Rle_ge; apply Ropp_le_contravar; rewrite Ropp_0; auto with real.", "Qed.", "Theorem Rge_sign_neg_pos x y : 0 >= x -> y >= 0 -> 0 >= x * y.", "Proof.", "intros; apply Rle_ge; apply Rle_sign_neg_pos; auto with real.", "Qed.", "Theorem Rge_sign_pos_neg x y : x >= 0 -> 0 >= y -> 0 >= x * y.", "Proof.", "intros; apply Rle_ge; apply Rle_sign_pos_neg; auto with real.", "Qed.", "Theorem Rgt_sign_neg_neg x y : 0 > x -> 0 > y -> x * y > 0.", "Proof.", "intros; apply Rlt_sign_neg_neg; auto with real.", "Qed.", "Theorem Rgt_sign_pos_pos x y : x > 0 -> y > 0 -> x * y > 0.", "Proof.", "apply Rlt_sign_pos_pos; auto with real.", "Qed.", "Theorem Rgt_neg_pos x : 0 > -x -> x > 0.", "Proof.", "intros; rewrite <- (Ropp_involutive 0), <- (Ropp_involutive x).", "now apply Ropp_lt_contravar; rewrite Ropp_0; auto with real.", "Qed.", "Theorem Rgt_sign_neg_pos x y : 0 > x -> y > 0 -> 0 > x * y.", "Proof.", "apply Rlt_sign_neg_pos; auto with real.", "Qed.", "Theorem Rgt_sign_pos_neg x y : x > 0 -> 0 > y -> 0 > x * y.", "Proof.", "apply Rlt_sign_pos_neg; auto with real.", "Qed.", "Theorem Rle_sign_pos_pos_rev x y : 0 < x -> 0 <= x * y -> 0 <= y.", "Proof.", "case (Rle_or_lt 0 y); trivial.", "intros; absurd (0 <= x * y); trivial.", "now apply Rlt_not_le;apply Rlt_sign_pos_neg.", "Qed.", "Theorem Rle_sign_neg_neg_rev x y : x < 0 -> 0 <= x * y -> y <= 0.", "Proof.", "case (Rle_or_lt y 0); trivial.", "intros; absurd (0 <= x * y); trivial.", "now apply Rlt_not_le;apply Rlt_sign_neg_pos.", "Qed.", "Theorem Rle_sign_pos_neg_rev x y : 0 < x -> x * y <= 0 -> y <= 0.", "Proof.", "case (Rle_or_lt y 0); trivial.", "intros; absurd (x * y <= 0); trivial.", "now apply Rlt_not_le;apply Rlt_sign_pos_pos.", "Qed.", "Theorem Rle_sign_neg_pos_rev x y : x < 0 -> x * y <= 0 -> 0 <= y.", "Proof.", "case (Rle_or_lt 0 y); trivial.", "intros; absurd (x * y <= 0); trivial.", "now apply Rlt_not_le;apply Rlt_sign_neg_neg.", "Qed.", "Theorem Rge_sign_pos_pos_rev x y : x > 0 -> x * y >= 0 -> y >= 0.", "Proof.", "intros; apply Rle_ge; apply Rle_sign_pos_pos_rev with x; auto with real.", "Qed.", "Theorem Rge_sign_neg_neg_rev x y : 0 > x -> x * y >= 0 -> 0 >= y.", "Proof.", "intros; apply Rle_ge; apply Rle_sign_neg_neg_rev with x; auto with real.", "Qed.", "Theorem Rge_sign_pos_neg_rev x y : x > 0 -> 0 >= x * y -> 0 >= y.", "Proof.", "intros; apply Rle_ge; apply Rle_sign_pos_neg_rev with x; auto with real.", "Qed.", "Theorem Rge_sign_neg_pos_rev x y : 0 > x -> 0 >= x * y -> y >= 0.", "Proof.", "intros; apply Rle_ge; apply Rle_sign_neg_pos_rev with x; auto with real.", "Qed.", "Theorem Rlt_sign_pos_pos_rev x y : 0 < x -> 0 < x * y -> 0 < y.", "Proof.", "case (Rle_or_lt y 0); trivial.", "intros; absurd (0 < x * y); trivial.", "apply Rle_not_lt;apply Rle_sign_pos_neg; auto with real.", "Qed.", "Theorem Rlt_sign_neg_neg_rev x y : x < 0 -> 0 < x * y -> y < 0.", "Proof.", "case (Rle_or_lt 0 y); trivial.", "intros; absurd (0 < x * y); trivial.", "apply Rle_not_lt;apply Rle_sign_neg_pos; auto with real.", "Qed.", "Theorem Rlt_sign_pos_neg_rev x y : 0 < x -> x * y < 0 -> y < 0.", "Proof.", "case (Rle_or_lt 0 y); trivial.", "intros; absurd (x * y < 0); trivial.", "apply Rle_not_lt;apply Rle_sign_pos_pos; auto with real.", "Qed.", "Theorem Rlt_sign_neg_pos_rev x y : x < 0 -> x * y < 0 -> 0 < y.", "Proof.", "case (Rle_or_lt y 0); trivial.", "intros; absurd (x * y < 0); trivial.", "apply Rle_not_lt;apply Rle_sign_neg_neg; auto with real.", "Qed.", "Theorem Rgt_sign_pos_pos_rev x y : x > 0 -> x * y > 0 -> y > 0.", "Proof.", "intros; apply Rlt_sign_pos_pos_rev with x; auto with real.", "Qed.", "Theorem Rgt_sign_neg_neg_rev x y : 0 > x -> x * y > 0 -> 0 > y.", "Proof.", "intros; apply Rlt_sign_neg_neg_rev with x; auto with real.", "Qed.", "Theorem Rgt_sign_pos_neg_rev x y : x > 0 -> 0 > x * y -> 0 > y.", "Proof.", "intros; apply Rlt_sign_pos_neg_rev with x; auto with real.", "Qed.", "Theorem Rgt_sign_neg_pos_rev x y : 0 > x -> 0 > x * y -> y > 0.", "Proof.", "intros; apply Rlt_sign_neg_pos_rev with x; auto with real.", "Qed.", "Theorem Rmult_le_compat_l n m p : m <= n -> 0 <= p -> p * m <= p * n.", "Proof.", "auto with real.", "Qed.", "Theorem Rmult_le_neg_compat_l n m p : m <= n -> p <= 0 -> p * n <= p * m.", "Proof.", "replace (p * n) with (-(-p * n)) by ring.", "replace (p * m) with (-(-p * m)) by ring.", "auto with real.", "Qed.", "Theorem Ropp_lt n m : m < n -> -n < -m.", "Proof.", "auto with real.", "Qed.", "Theorem Rmult_lt_neg_compat_l n m p : m < n -> p < 0 -> p * n < p * m.", "Proof.", "replace (p * n) with (-(-p * n)) by ring.", "replace (p * m) with (-(-p * m)) by ring.", "auto with real.", "Qed.", "Theorem Ropp_ge n m : m >= n -> -n >= -m.", "Proof.", "auto with real.", "Qed.", "Theorem Rmult_ge_compat_l n m p : m >= n -> p >= 0 -> p * m >= p * n.", "Proof.", "intros; apply Rle_ge; auto with real.", "Qed.", "Theorem Rmult_ge_neg_compat_l n m p : m >= n -> 0 >= p -> p * n >= p * m.", "Proof.", "replace (p * n) with (-(-p * n)) by ring.", "replace (p * m) with (-(-p * m)) by ring.", "auto with real.", "Qed.", "Theorem Ropp_gt n m : m > n -> -n > -m.", "Proof.", "auto with real.", "Qed.", "Theorem Rmult_gt_compat_l n m p : n > m -> p > 0 -> p * n > p * m.", "Proof.", "unfold Rgt; auto with real.", "Qed.", "Theorem Rmult_gt_neg_compat_l n m p : (m > n) -> (0 > p) -> (p * n > p * m).", "Proof.", "replace (p * n) with (-(-p * n)) by ring.", "replace (p * m) with (-(-p * m)) by ring.", "auto with real.", "Qed.", "Theorem Rmult_le_compat_l_rev n m p : 0 < p -> p * n <= p * m -> n <= m.", "Proof.", "case (Rle_or_lt n m); trivial.", "intros; absurd (p * n <= p * m); trivial.", "now apply Rlt_not_le; apply Rmult_lt_compat_l.", "Qed.", "Theorem Rmult_le_neg_compat_l_rev n m p : p < 0 -> p * n <= p * m -> m <= n.", "Proof.", "case (Rle_or_lt m n); trivial.", "intros; absurd (p * n <= p * m); trivial.", "now apply Rlt_not_le; apply Rmult_lt_neg_compat_l.", "Qed.", "Theorem Rmult_lt_compat_l_rev n m p : 0 < p -> p * n < p * m -> n < m.", "Proof.", "case (Rle_or_lt m n); trivial.", "intros; absurd (p * n < p * m); trivial.", "now apply Rle_not_lt; apply Rmult_le_compat_l; auto with real.", "Qed.", "Theorem Rmult_lt_neg_compat_l_rev n m p : p < 0 -> p * n < p * m -> m < n.", "Proof.", "case (Rle_or_lt n m); trivial.", "intros; absurd (p * n < p * m); trivial.", "now apply Rle_not_lt; apply Rmult_le_neg_compat_l; auto with real.", "Qed.", "Theorem Rmult_ge_compat_l_rev n m p : p > 0 -> p * n >= p * m -> n >= m.", "Proof.", "intros; apply Rle_ge; apply Rmult_le_compat_l_rev with p; auto with real.", "Qed.", "Theorem Rmult_ge_neg_compat_l_rev n m p : 0 > p -> p * n >= p * m -> m >= n.", "Proof.", "intros; apply Rle_ge; apply Rmult_le_neg_compat_l_rev with p; auto with real.", "Qed.", "Theorem Rmult_gt_compat_l_rev n m p : p > 0 -> p * n > p * m -> n > m.", "Proof.", "intros; apply Rmult_lt_compat_l_rev with p; auto with real.", "Qed.", "Theorem Rmult_gt_neg_compat_l_rev n m p : 0 > p -> p * n > p * m -> m > n.", "Proof.", "intros; apply Rmult_lt_neg_compat_l_rev with p; auto with real.", "Qed."], "theorems": [{"name": "Rplus_eq_compat_l", "kind": "Theorem", "begin": 2, "end": 5}, {"name": "Rplus_neg_compat_l", "kind": "Theorem", "begin": 6, "end": 9}, {"name": "Rplus_ge_compat_l", "kind": "Theorem", "begin": 10, "end": 13}, {"name": "Rplus_neg_reg_l", "kind": "Theorem", "begin": 14, "end": 17}, {"name": "Rplus_ge_reg_l", "kind": "Theorem", "begin": 18, "end": 21}, {"name": "Rle_sign_pos_pos", "kind": "Theorem", "begin": 22, "end": 25}, {"name": "Rle_sign_neg_neg", "kind": "Theorem", "begin": 26, "end": 30}, {"name": "Rle_pos_neg", "kind": "Theorem", "begin": 31, "end": 35}, {"name": "Rle_sign_pos_neg", "kind": "Theorem", "begin": 36, "end": 41}, {"name": "Rle_sign_neg_pos", "kind": "Theorem", "begin": 42, "end": 47}, {"name": "Rlt_sign_pos_pos", "kind": "Theorem", "begin": 48, "end": 51}, {"name": "Rlt_sign_neg_neg", "kind": "Theorem", "begin": 52, "end": 56}, {"name": "Rlt_pos_neg", "kind": "Theorem", "begin": 57, "end": 61}, {"name": "Rlt_sign_pos_neg", "kind": "Theorem", "begin": 62, "end": 68}, {"name": "Rlt_sign_neg_pos", "kind": "Theorem", "begin": 69, "end": 74}, {"name": "Rge_sign_neg_neg", "kind": "Theorem", "begin": 75, "end": 78}, {"name": "Rge_sign_pos_pos", "kind": "Theorem", "begin": 79, "end": 82}, {"name": "Rge_neg_pos", "kind": "Theorem", "begin": 83, "end": 87}, {"name": "Rge_sign_neg_pos", "kind": "Theorem", "begin": 88, "end": 91}, {"name": "Rge_sign_pos_neg", "kind": "Theorem", "begin": 92, "end": 95}, {"name": "Rgt_sign_neg_neg", "kind": "Theorem", "begin": 96, "end": 99}, {"name": "Rgt_sign_pos_pos", "kind": "Theorem", "begin": 100, "end": 103}, {"name": "Rgt_neg_pos", "kind": "Theorem", "begin": 104, "end": 108}, {"name": "Rgt_sign_neg_pos", "kind": "Theorem", "begin": 109, "end": 112}, {"name": "Rgt_sign_pos_neg", "kind": "Theorem", "begin": 113, "end": 116}, {"name": "Rle_sign_pos_pos_rev", "kind": "Theorem", "begin": 117, "end": 122}, {"name": "Rle_sign_neg_neg_rev", "kind": "Theorem", "begin": 123, "end": 128}, {"name": "Rle_sign_pos_neg_rev", "kind": "Theorem", "begin": 129, "end": 134}, {"name": "Rle_sign_neg_pos_rev", "kind": "Theorem", "begin": 135, "end": 140}, {"name": "Rge_sign_pos_pos_rev", "kind": "Theorem", "begin": 141, "end": 144}, {"name": "Rge_sign_neg_neg_rev", "kind": "Theorem", "begin": 145, "end": 148}, {"name": "Rge_sign_pos_neg_rev", "kind": "Theorem", "begin": 149, "end": 152}, {"name": "Rge_sign_neg_pos_rev", "kind": "Theorem", "begin": 153, "end": 156}, {"name": "Rlt_sign_pos_pos_rev", "kind": "Theorem", "begin": 157, "end": 162}, {"name": "Rlt_sign_neg_neg_rev", "kind": "Theorem", "begin": 163, "end": 168}, {"name": "Rlt_sign_pos_neg_rev", "kind": "Theorem", "begin": 169, "end": 174}, {"name": "Rlt_sign_neg_pos_rev", "kind": "Theorem", "begin": 175, "end": 180}, {"name": "Rgt_sign_pos_pos_rev", "kind": "Theorem", "begin": 181, "end": 184}, {"name": "Rgt_sign_neg_neg_rev", "kind": "Theorem", "begin": 185, "end": 188}, {"name": "Rgt_sign_pos_neg_rev", "kind": "Theorem", "begin": 189, "end": 192}, {"name": "Rgt_sign_neg_pos_rev", "kind": "Theorem", "begin": 193, "end": 196}, {"name": "Rmult_le_compat_l", "kind": "Theorem", "begin": 197, "end": 200}, {"name": "Rmult_le_neg_compat_l", "kind": "Theorem", "begin": 201, "end": 206}, {"name": "Ropp_lt", "kind": "Theorem", "begin": 207, "end": 210}, {"name": "Rmult_lt_neg_compat_l", "kind": "Theorem", "begin": 211, "end": 216}, {"name": "Ropp_ge", "kind": "Theorem", "begin": 217, "end": 220}, {"name": "Rmult_ge_compat_l", "kind": "Theorem", "begin": 221, "end": 224}, {"name": "Rmult_ge_neg_compat_l", "kind": "Theorem", "begin": 225, "end": 230}, {"name": "Ropp_gt", "kind": "Theorem", "begin": 231, "end": 234}, {"name": "Rmult_gt_compat_l", "kind": "Theorem", "begin": 235, "end": 238}, {"name": "Rmult_gt_neg_compat_l", "kind": "Theorem", "begin": 239, "end": 244}, {"name": "Rmult_le_compat_l_rev", "kind": "Theorem", "begin": 245, "end": 250}, {"name": "Rmult_le_neg_compat_l_rev", "kind": "Theorem", "begin": 251, "end": 256}, {"name": "Rmult_lt_compat_l_rev", "kind": "Theorem", "begin": 257, "end": 262}, {"name": "Rmult_lt_neg_compat_l_rev", "kind": "Theorem", "begin": 263, "end": 268}, {"name": "Rmult_ge_compat_l_rev", "kind": "Theorem", "begin": 269, "end": 272}, {"name": "Rmult_ge_neg_compat_l_rev", "kind": "Theorem", "begin": 273, "end": 276}, {"name": "Rmult_gt_compat_l_rev", "kind": "Theorem", "begin": 277, "end": 280}, {"name": "Rmult_gt_neg_compat_l_rev", "kind": "Theorem", "begin": 281, "end": 284}]}