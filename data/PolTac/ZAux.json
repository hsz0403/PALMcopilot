{"code": ["Require Export ZArith.", "Open Scope Z_scope.", "Theorem Zplus_eq_compat_l: forall a b c:Z, (b = c -> a + b = a + c)%Z.", "Proof.", "intros; apply f_equal2 with (f := Zplus); auto.", "Qed.", "Theorem Zplus_neg_compat_l: forall a b c: Z, (b <> c -> a + b <> a + c)%Z.", "Proof.", "intros a b c H H1; case H.", "apply Zplus_reg_l with a; auto.", "Qed.", "Theorem Zplus_ge_compat_l: forall n m p : Z, (n >= m -> p + n >= p + m)%Z.", "Proof.", "intros n m p H; apply Z.le_ge; apply Zplus_le_compat_l; auto; apply Z.ge_le; auto.", "Qed.", "Theorem Zplus_neg_reg_l: forall a b c: Z, (a + b <> a + c -> b <> c)%Z.", "Proof.", "intros a b c H H1; case H; subst; auto.", "Qed.", "Theorem Zplus_ge_reg_l: forall n m p : Z, (p + n >= p + m -> n >= m)%Z.", "Proof.", "intros n m p H; apply Z.le_ge; apply Zplus_le_reg_l with p; auto; apply Z.ge_le; auto.", "Qed.", "Theorem Zle_sign_pos_pos: forall x y: Z, (0 <= x -> 0 <= y -> 0 <= x * y)%Z.", "Proof.", "auto with zarith.", "Qed.", "Theorem Zle_sign_neg_neg: forall x y: Z, (x <= 0 -> y <= 0 -> 0 <= x * y)%Z.", "Proof.", "intros x y H1 H2; replace (x * y)%Z with (-x * -y)%Z; auto with zarith; ring.", "Qed.", "Theorem Zopp_le: forall n m, (m <= n -> -n <= -m)%Z.", "Proof.", "auto with zarith.", "Qed.", "Theorem Zle_pos_neg: forall x, (0 <= -x -> x <= 0)%Z.", "Proof.", "auto with zarith.", "Qed.", "Theorem Zle_sign_pos_neg: forall x y: Z, (0 <= x -> y <= 0 -> x * y <= 0)%Z.", "Proof.", "intros x y H1 H2; apply Zle_pos_neg; replace (- (x * y))%Z with (x * (- y))%Z; auto with zarith; ring.", "Qed.", "Theorem Zle_sign_neg_pos: forall x y: Z, (x <= 0 -> 0 <= y -> x * y <= 0)%Z.", "Proof.", "intros x y H1 H2; apply Zle_pos_neg; replace (- (x * y))%Z with (-x * y)%Z; auto with zarith; ring.", "Qed.", "Theorem Zlt_sign_pos_pos: forall x y: Z, (0 < x -> 0 < y -> 0 < x * y)%Z.", "Proof.", "intros; apply Zmult_lt_O_compat; auto with zarith.", "Qed.", "Theorem Zlt_sign_neg_neg: forall x y: Z, (x < 0 -> y < 0 -> 0 < x * y)%Z.", "Proof.", "intros x y H1 H2; replace (x * y)%Z with (-x * -y)%Z; auto with zarith; try ring.", "apply Zmult_lt_O_compat; auto with zarith.", "Qed.", "Theorem Zlt_pos_neg: forall x, (0 < -x -> x < 0)%Z.", "Proof.", "auto with zarith.", "Qed.", "Theorem Zlt_sign_pos_neg: forall x y: Z, (0 < x -> y < 0 -> x * y < 0)%Z.", "Proof.", "intros x y H1 H2; apply Zlt_pos_neg; replace (- (x * y))%Z with (x * (- y))%Z; auto with zarith; try ring.", "apply Zmult_lt_O_compat; auto with zarith.", "Qed.", "Theorem Zlt_sign_neg_pos: forall x y: Z, (x < 0 -> 0 < y -> x * y < 0)%Z.", "Proof.", "intros x y H1 H2; apply Zlt_pos_neg; replace (- (x * y))%Z with (-x * y)%Z; auto with zarith; try ring.", "apply Zmult_lt_O_compat; auto with zarith.", "Qed.", "Theorem Zge_sign_neg_neg: forall x y: Z, (0 >= x -> 0 >= y -> x * y >= 0)%Z.", "Proof.", "intros; apply Z.le_ge; apply Zle_sign_neg_neg; auto with zarith.", "Qed.", "Theorem Zge_sign_pos_pos: forall x y: Z, (x >= 0 -> y >= 0 -> x * y >= 0)%Z.", "Proof.", "intros; apply Z.le_ge; apply Zle_sign_pos_pos; auto with zarith.", "Qed.", "Theorem Zge_neg_pos: forall x, (0 >= -x -> x >= 0)%Z.", "Proof.", "auto with zarith.", "Qed.", "Theorem Zge_sign_neg_pos: forall x y: Z, (0 >= x -> y >= 0 -> 0 >= x * y)%Z.", "Proof.", "intros; apply Z.le_ge; apply Zle_sign_neg_pos; auto with zarith.", "Qed.", "Theorem Zge_sign_pos_neg: forall x y: Z, (x >= 0 -> 0 >= y -> 0 >= x * y)%Z.", "Proof.", "intros; apply Z.le_ge; apply Zle_sign_pos_neg; auto with zarith.", "Qed.", "Theorem Zgt_sign_neg_neg: forall x y: Z, (0 > x -> 0 > y -> x * y > 0)%Z.", "Proof.", "intros; apply Z.lt_gt; apply Zlt_sign_neg_neg; auto with zarith.", "Qed.", "Theorem Zgt_sign_pos_pos: forall x y: Z, (x > 0 -> y > 0 -> x * y > 0)%Z.", "Proof.", "intros; apply Z.lt_gt; apply Zlt_sign_pos_pos; auto with zarith.", "Qed.", "Theorem Zgt_neg_pos: forall x, (0 > -x -> x > 0)%Z.", "Proof.", "auto with zarith.", "Qed.", "Theorem Zgt_sign_neg_pos: forall x y: Z, (0 > x -> y > 0 -> 0> x * y)%Z.", "Proof.", "intros; apply Z.lt_gt; apply Zlt_sign_neg_pos; auto with zarith.", "Qed.", "Theorem Zgt_sign_pos_neg: forall x y: Z, (x > 0 -> 0 > y -> 0 > x * y)%Z.", "Proof.", "intros; apply Z.lt_gt; apply Zlt_sign_pos_neg; auto with zarith.", "Qed.", "Theorem Zle_sign_pos_pos_rev: forall x y: Z, (0 < x -> 0 <= x * y -> 0 <= y)%Z.", "Proof.", "intros x y H1 H2; case (Zle_or_lt 0 y); auto with zarith.", "intros H3; absurd (0 <= x * y)%Z; auto with zarith.", "apply Zlt_not_le;apply Zlt_sign_pos_neg; auto.", "Qed.", "Theorem Zle_sign_neg_neg_rev: forall x y: Z, (x < 0 -> 0 <= x * y -> y <= 0)%Z.", "Proof.", "intros x y H1 H2; case (Zle_or_lt y 0); auto with zarith.", "intros H3; absurd (0 <= x * y)%Z; auto with zarith.", "apply Zlt_not_le;apply Zlt_sign_neg_pos; auto.", "Qed.", "Theorem Zle_sign_pos_neg_rev: forall x y: Z, (0 < x -> x * y <= 0 -> y <= 0)%Z.", "Proof.", "intros x y H1 H2; case (Zle_or_lt y 0); auto with zarith.", "intros H3; absurd (x * y <= 0)%Z; auto with zarith.", "apply Zlt_not_le;apply Zlt_sign_pos_pos; auto.", "Qed.", "Theorem Zle_sign_neg_pos_rev: forall x y: Z, (x < 0 -> x * y <= 0 -> 0 <= y)%Z.", "Proof.", "intros x y H1 H2; case (Zle_or_lt 0 y); auto with zarith.", "intros H3; absurd (x * y <= 0)%Z; auto with zarith.", "apply Zlt_not_le;apply Zlt_sign_neg_neg; auto.", "Qed.", "Theorem Zge_sign_pos_pos_rev: forall x y: Z, (x > 0 -> x * y >= 0 -> y >= 0)%Z.", "Proof.", "intros x y H1 H2; apply Z.le_ge; apply Zle_sign_pos_pos_rev with x; auto with zarith.", "Qed.", "Theorem Zge_sign_neg_neg_rev: forall x y: Z, (0 > x -> x * y >= 0 -> 0 >= y)%Z.", "Proof.", "intros x y H1 H2; apply Z.le_ge; apply Zle_sign_neg_neg_rev with x; auto with zarith.", "Qed.", "Theorem Zge_sign_pos_neg_rev: forall x y: Z, (x > 0 -> 0 >= x * y -> 0 >= y)%Z.", "Proof.", "intros x y H1 H2; apply Z.le_ge; apply Zle_sign_pos_neg_rev with x; auto with zarith.", "Qed.", "Theorem Zge_sign_neg_pos_rev: forall x y: Z, (0 > x -> 0 >= x * y -> y >= 0)%Z.", "Proof.", "intros x y H1 H2; apply Z.le_ge; apply Zle_sign_neg_pos_rev with x; auto with zarith.", "Qed.", "Theorem Zlt_sign_pos_pos_rev: forall x y: Z, (0 < x -> 0 < x * y -> 0 < y)%Z.", "Proof.", "intros x y H1 H2; case (Zle_or_lt y 0); auto with zarith.", "intros H3; absurd (0 < x * y)%Z; auto with zarith.", "apply Zle_not_lt;apply Zle_sign_pos_neg; auto with zarith.", "Qed.", "Theorem Zlt_sign_neg_neg_rev: forall x y: Z, (x < 0 -> 0 < x * y -> y < 0)%Z.", "Proof.", "intros x y H1 H2; case (Zle_or_lt 0 y); auto with zarith.", "intros H3; absurd (0 < x * y)%Z; auto with zarith.", "apply Zle_not_lt;apply Zle_sign_neg_pos; auto with zarith.", "Qed.", "Theorem Zlt_sign_pos_neg_rev: forall x y: Z, (0 < x -> x * y < 0 -> y < 0)%Z.", "Proof.", "intros x y H1 H2; case (Zle_or_lt 0 y); auto with zarith.", "intros H3; absurd (x * y < 0)%Z; auto with zarith.", "apply Zle_not_lt;apply Zle_sign_pos_pos; auto with zarith.", "Qed.", "Theorem Zlt_sign_neg_pos_rev: forall x y: Z, (x < 0 -> x * y < 0 -> 0 < y)%Z.", "Proof.", "intros x y H1 H2; case (Zle_or_lt y 0); auto with zarith.", "intros H3; absurd (x * y < 0)%Z; auto with zarith.", "apply Zle_not_lt;apply Zle_sign_neg_neg; auto with zarith.", "Qed.", "Theorem Zgt_sign_pos_pos_rev: forall x y: Z, (x > 0 -> x * y > 0 -> y > 0)%Z.", "Proof.", "intros x y H1 H2; apply Z.lt_gt; apply Zlt_sign_pos_pos_rev with x; auto with zarith.", "Qed.", "Theorem Zgt_sign_neg_neg_rev: forall x y: Z, (0 > x -> x * y > 0 -> 0 > y)%Z.", "Proof.", "intros x y H1 H2; apply Z.lt_gt; apply Zlt_sign_neg_neg_rev with x; auto with zarith.", "Qed.", "Theorem Zgt_sign_pos_neg_rev: forall x y: Z, (x > 0 -> 0 > x * y -> 0 > y)%Z.", "Proof.", "intros x y H1 H2; apply Z.lt_gt; apply Zlt_sign_pos_neg_rev with x; auto with zarith.", "Qed.", "Theorem Zgt_sign_neg_pos_rev: forall x y: Z, (0 > x -> 0 > x * y -> y > 0)%Z.", "Proof.", "intros x y H1 H2; apply Z.lt_gt; apply Zlt_sign_neg_pos_rev with x; auto with zarith.", "Qed.", "Theorem Zmult_le_neg_compat_l: forall n m p : Z, (m <= n)%Z -> (p <= 0)%Z -> (p * n <= p * m)%Z.", "Proof.", "intros n m p H1 H2; replace (p * n)%Z with (-(-p * n))%Z; auto with zarith; try ring.", "replace (p * m)%Z with (-(-p * m))%Z; auto with zarith; try ring.", "apply Zopp_le; apply Zmult_le_compat_l; auto with zarith.", "Qed.", "Theorem Zopp_lt: forall n m, (m < n -> -n < -m)%Z.", "Proof.", "auto with zarith.", "Qed.", "Theorem Zmult_lt_neg_compat_l: forall n m p : Z, (m < n)%Z -> (p < 0)%Z -> (p * n < p * m)%Z.", "Proof.", "intros n m p H1 H2; replace (p * n)%Z with (-(-p * n))%Z; auto with zarith; try ring.", "replace (p * m)%Z with (-(-p * m))%Z; auto with zarith; try ring.", "apply Zopp_lt; apply Zmult_lt_compat_l; auto with zarith.", "Qed.", "Theorem Zopp_ge: forall n m, (m >= n -> -n >= -m)%Z.", "Proof.", "auto with zarith.", "Qed.", "Theorem Zmult_ge_neg_compat_l: forall n m p : Z, (m >= n)%Z -> (0 >= p)%Z -> (p * n >= p * m)%Z.", "Proof.", "intros n m p H1 H2; replace (p * n)%Z with (-(-p * n))%Z; auto with zarith; try ring.", "replace (p * m)%Z with (-(-p * m))%Z; auto with zarith; try ring.", "apply Zopp_ge; apply Zmult_ge_compat_l; auto with zarith.", "Qed.", "Theorem Zopp_gt: forall n m, (m > n -> -n > -m)%Z.", "Proof.", "auto with zarith.", "Qed.", "Theorem Zmult_gt_neg_compat_l: forall n m p : Z, (m > n)%Z -> (0 > p)%Z -> (p * n > p * m)%Z.", "Proof.", "intros n m p H1 H2; replace (p * n)%Z with (-(-p * n))%Z; auto with zarith; try ring.", "replace (p * m)%Z with (-(-p * m))%Z; auto with zarith; try ring.", "apply Zopp_gt; apply Zmult_gt_compat_l; auto with zarith.", "Qed.", "Theorem Zmult_le_compat_l_rev: forall n m p : Z, (0 < p)%Z -> (p * n <= p * m)%Z -> (n <= m)%Z.", "Proof.", "intros n m p H H1; case (Zle_or_lt n m); auto; intros H2.", "absurd (p * n <= p * m)%Z; auto with zarith.", "apply Zlt_not_le; apply Zmult_lt_compat_l; auto.", "Qed.", "Theorem Zmult_le_neg_compat_l_rev: forall n m p : Z, (p < 0)%Z -> (p * n <= p * m)%Z -> (m <= n)%Z.", "Proof.", "intros n m p H H1; case (Zle_or_lt m n); auto; intros H2.", "absurd (p * n <= p * m)%Z; auto with zarith.", "apply Zlt_not_le; apply Zmult_lt_neg_compat_l; auto.", "Qed.", "Theorem Zmult_lt_compat_l_rev: forall n m p : Z, (0 < p)%Z -> (p * n < p * m)%Z -> (n < m)%Z.", "Proof.", "intros n m p H H1; case (Zle_or_lt m n); auto; intros H2.", "absurd (p * n < p * m)%Z; auto with zarith.", "apply Zle_not_lt; apply Zmult_le_compat_l; auto with zarith.", "Qed.", "Theorem Zmult_lt_neg_compat_l_rev: forall n m p : Z, (p < 0)%Z -> (p * n < p * m)%Z -> (m < n)%Z.", "Proof.", "intros n m p H H1; case (Zle_or_lt n m); auto; intros H2.", "absurd (p * n < p * m)%Z; auto with zarith.", "apply Zle_not_lt; apply Zmult_le_neg_compat_l; auto with zarith.", "Qed.", "Theorem Zmult_ge_compat_l_rev: forall n m p : Z, (p > 0)%Z -> (p * n >= p * m)%Z -> (n >= m)%Z.", "Proof.", "intros n m p H H1; apply Z.le_ge; apply Zmult_le_compat_l_rev with p; auto with zarith.", "Qed.", "Theorem Zmult_ge_neg_compat_l_rev: forall n m p : Z, (0 > p)%Z -> (p * n >= p * m)%Z -> (m >= n)%Z.", "Proof.", "intros n m p H H1; apply Z.le_ge; apply Zmult_le_neg_compat_l_rev with p; auto with zarith.", "Qed.", "Theorem Zmult_gt_compat_l_rev: forall n m p : Z, (p > 0)%Z -> (p * n > p * m)%Z -> (n > m)%Z.", "Proof.", "intros n m p H H1; apply Z.lt_gt; apply Zmult_lt_compat_l_rev with p; auto with zarith.", "Qed.", "Theorem Zmult_gt_neg_compat_l_rev: forall n m p : Z, (0 > p)%Z -> (p * n > p * m)%Z -> (m > n)%Z.", "Proof.", "intros n m p H H1; apply Z.lt_gt; apply Zmult_lt_neg_compat_l_rev with p; auto with zarith.", "Qed."], "theorems": [{"name": "Zplus_eq_compat_l", "kind": "Theorem", "begin": 2, "end": 5}, {"name": "Zplus_neg_compat_l", "kind": "Theorem", "begin": 6, "end": 10}, {"name": "Zplus_ge_compat_l", "kind": "Theorem", "begin": 11, "end": 14}, {"name": "Zplus_neg_reg_l", "kind": "Theorem", "begin": 15, "end": 18}, {"name": "Zplus_ge_reg_l", "kind": "Theorem", "begin": 19, "end": 22}, {"name": "Zle_sign_pos_pos", "kind": "Theorem", "begin": 23, "end": 26}, {"name": "Zle_sign_neg_neg", "kind": "Theorem", "begin": 27, "end": 30}, {"name": "Zopp_le", "kind": "Theorem", "begin": 31, "end": 34}, {"name": "Zle_pos_neg", "kind": "Theorem", "begin": 35, "end": 38}, {"name": "Zle_sign_pos_neg", "kind": "Theorem", "begin": 39, "end": 42}, {"name": "Zle_sign_neg_pos", "kind": "Theorem", "begin": 43, "end": 46}, {"name": "Zlt_sign_pos_pos", "kind": "Theorem", "begin": 47, "end": 50}, {"name": "Zlt_sign_neg_neg", "kind": "Theorem", "begin": 51, "end": 55}, {"name": "Zlt_pos_neg", "kind": "Theorem", "begin": 56, "end": 59}, {"name": "Zlt_sign_pos_neg", "kind": "Theorem", "begin": 60, "end": 64}, {"name": "Zlt_sign_neg_pos", "kind": "Theorem", "begin": 65, "end": 69}, {"name": "Zge_sign_neg_neg", "kind": "Theorem", "begin": 70, "end": 73}, {"name": "Zge_sign_pos_pos", "kind": "Theorem", "begin": 74, "end": 77}, {"name": "Zge_neg_pos", "kind": "Theorem", "begin": 78, "end": 81}, {"name": "Zge_sign_neg_pos", "kind": "Theorem", "begin": 82, "end": 85}, {"name": "Zge_sign_pos_neg", "kind": "Theorem", "begin": 86, "end": 89}, {"name": "Zgt_sign_neg_neg", "kind": "Theorem", "begin": 90, "end": 93}, {"name": "Zgt_sign_pos_pos", "kind": "Theorem", "begin": 94, "end": 97}, {"name": "Zgt_neg_pos", "kind": "Theorem", "begin": 98, "end": 101}, {"name": "Zgt_sign_neg_pos", "kind": "Theorem", "begin": 102, "end": 105}, {"name": "Zgt_sign_pos_neg", "kind": "Theorem", "begin": 106, "end": 109}, {"name": "Zle_sign_pos_pos_rev", "kind": "Theorem", "begin": 110, "end": 115}, {"name": "Zle_sign_neg_neg_rev", "kind": "Theorem", "begin": 116, "end": 121}, {"name": "Zle_sign_pos_neg_rev", "kind": "Theorem", "begin": 122, "end": 127}, {"name": "Zle_sign_neg_pos_rev", "kind": "Theorem", "begin": 128, "end": 133}, {"name": "Zge_sign_pos_pos_rev", "kind": "Theorem", "begin": 134, "end": 137}, {"name": "Zge_sign_neg_neg_rev", "kind": "Theorem", "begin": 138, "end": 141}, {"name": "Zge_sign_pos_neg_rev", "kind": "Theorem", "begin": 142, "end": 145}, {"name": "Zge_sign_neg_pos_rev", "kind": "Theorem", "begin": 146, "end": 149}, {"name": "Zlt_sign_pos_pos_rev", "kind": "Theorem", "begin": 150, "end": 155}, {"name": "Zlt_sign_neg_neg_rev", "kind": "Theorem", "begin": 156, "end": 161}, {"name": "Zlt_sign_pos_neg_rev", "kind": "Theorem", "begin": 162, "end": 167}, {"name": "Zlt_sign_neg_pos_rev", "kind": "Theorem", "begin": 168, "end": 173}, {"name": "Zgt_sign_pos_pos_rev", "kind": "Theorem", "begin": 174, "end": 177}, {"name": "Zgt_sign_neg_neg_rev", "kind": "Theorem", "begin": 178, "end": 181}, {"name": "Zgt_sign_pos_neg_rev", "kind": "Theorem", "begin": 182, "end": 185}, {"name": "Zgt_sign_neg_pos_rev", "kind": "Theorem", "begin": 186, "end": 189}, {"name": "Zmult_le_neg_compat_l", "kind": "Theorem", "begin": 190, "end": 195}, {"name": "Zopp_lt", "kind": "Theorem", "begin": 196, "end": 199}, {"name": "Zmult_lt_neg_compat_l", "kind": "Theorem", "begin": 200, "end": 205}, {"name": "Zopp_ge", "kind": "Theorem", "begin": 206, "end": 209}, {"name": "Zmult_ge_neg_compat_l", "kind": "Theorem", "begin": 210, "end": 215}, {"name": "Zopp_gt", "kind": "Theorem", "begin": 216, "end": 219}, {"name": "Zmult_gt_neg_compat_l", "kind": "Theorem", "begin": 220, "end": 225}, {"name": "Zmult_le_compat_l_rev", "kind": "Theorem", "begin": 226, "end": 231}, {"name": "Zmult_le_neg_compat_l_rev", "kind": "Theorem", "begin": 232, "end": 237}, {"name": "Zmult_lt_compat_l_rev", "kind": "Theorem", "begin": 238, "end": 243}, {"name": "Zmult_lt_neg_compat_l_rev", "kind": "Theorem", "begin": 244, "end": 249}, {"name": "Zmult_ge_compat_l_rev", "kind": "Theorem", "begin": 250, "end": 253}, {"name": "Zmult_ge_neg_compat_l_rev", "kind": "Theorem", "begin": 254, "end": 257}, {"name": "Zmult_gt_compat_l_rev", "kind": "Theorem", "begin": 258, "end": 261}, {"name": "Zmult_gt_neg_compat_l_rev", "kind": "Theorem", "begin": 262, "end": 265}]}